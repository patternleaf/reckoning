/*!
 * jQuery JavaScript Library v2.1.3
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-12-18T15:11Z
 */

(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//

var arr = [];

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,

	version = "2.1.3",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {
		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		return !jQuery.isArray( obj ) && (obj - parseFloat( obj ) + 1) >= 0;
	},

	isPlainObject: function( obj ) {
		// Not plain objects:
		// - Any object or value whose internal [[Class]] property is not "[object Object]"
		// - DOM nodes
		// - window
		if ( jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		if ( obj.constructor &&
				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
			return false;
		}

		// If the function hasn't returned already, we're confident that
		// |obj| is a plain object, created by {} or constructed with new Object
		return true;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		// Support: Android<4.0, iOS<6 (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call(obj) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		var script,
			indirect = eval;

		code = jQuery.trim( code );

		if ( code ) {
			// If the code includes a valid, prologue position
			// strict mode pragma, execute code by injecting a
			// script tag into the document.
			if ( code.indexOf("use strict") === 1 ) {
				script = document.createElement("script");
				script.text = code;
				document.head.appendChild( script ).parentNode.removeChild( script );
			} else {
			// Otherwise, avoid the DOM node creation, insertion
			// and removal by using an indirect global eval
				indirect( code );
			}
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE9-11+
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {
	var length = obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.0-pre
 * http://sizzlejs.com/
 *
 * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-12-16
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + characterEncoding + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];
	nodeType = context.nodeType;

	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	if ( !seed && documentIsHTML ) {

		// Try to shortcut find operations when possible (e.g., not under DocumentFragment)
		if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document (jQuery #6963)
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType !== 1 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;
	parent = doc.defaultView;

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent !== parent.top ) {
		// IE11 does not have attachEvent, so all must suffer
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Support tests
	---------------------------------------------------------------------- */
	documentIsHTML = !isXML( doc );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( doc.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\f]' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (oldCache = outerCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							outerCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context !== document && context;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is no seed and only one group
	if ( match.length === 1 ) {

		// Take a shortcut and set the context if the root selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) >= 0 ) !== not;
	});
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		}));
};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			len = this.length,
			ret = [],
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},
	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
});


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[0] === "<" && selector[ selector.length - 1 ] === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Support: Blackberry 4.6
					// gEBID returns nodes no longer in the document (#6963)
					if ( elem && elem.parentNode ) {
						// Inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof rootjQuery.ready !== "undefined" ?
				rootjQuery.ready( selector ) :
				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.extend({
	dir: function( elem, dir, until ) {
		var matched = [],
			truncate = until !== undefined;

		while ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {
			if ( elem.nodeType === 1 ) {
				if ( truncate && jQuery( elem ).is( until ) ) {
					break;
				}
				matched.push( elem );
			}
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var matched = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				matched.push( n );
			}
		}

		return matched;
	}
});

jQuery.fn.extend({
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter(function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.unique(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	while ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.unique( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
});
var rnotwhite = (/\S+/g);



// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// Flag to know if list is currently firing
		firing,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );
					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// Add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// If we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {
	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend({
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
});

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed, false );
	window.removeEventListener( "load", completed, false );
	jQuery.ready();
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// We once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		} else {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {
			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			len ? fn( elems[0], key ) : emptyGet;
};


/**
 * Determines whether an object can have data
 */
jQuery.acceptData = function( owner ) {
	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	/* jshint -W018 */
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};


function Data() {
	// Support: Android<4,
	// Old WebKit does not have Object.preventExtensions/freeze method,
	// return new empty object instead with no [[set]] accessor
	Object.defineProperty( this.cache = {}, 0, {
		get: function() {
			return {};
		}
	});

	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;
Data.accepts = jQuery.acceptData;

Data.prototype = {
	key: function( owner ) {
		// We can accept data for non-element nodes in modern browsers,
		// but we should not, see #8335.
		// Always return the key for a frozen object.
		if ( !Data.accepts( owner ) ) {
			return 0;
		}

		var descriptor = {},
			// Check if the owner object already has a cache key
			unlock = owner[ this.expando ];

		// If not, create one
		if ( !unlock ) {
			unlock = Data.uid++;

			// Secure it in a non-enumerable, non-writable property
			try {
				descriptor[ this.expando ] = { value: unlock };
				Object.defineProperties( owner, descriptor );

			// Support: Android<4
			// Fallback to a less secure definition
			} catch ( e ) {
				descriptor[ this.expando ] = unlock;
				jQuery.extend( owner, descriptor );
			}
		}

		// Ensure the cache object
		if ( !this.cache[ unlock ] ) {
			this.cache[ unlock ] = {};
		}

		return unlock;
	},
	set: function( owner, data, value ) {
		var prop,
			// There may be an unlock assigned to this node,
			// if there is no entry for this "owner", create one inline
			// and set the unlock as though an owner entry had always existed
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		// Handle: [ owner, key, value ] args
		if ( typeof data === "string" ) {
			cache[ data ] = value;

		// Handle: [ owner, { properties } ] args
		} else {
			// Fresh assignments by object are shallow copied
			if ( jQuery.isEmptyObject( cache ) ) {
				jQuery.extend( this.cache[ unlock ], data );
			// Otherwise, copy the properties one-by-one to the cache object
			} else {
				for ( prop in data ) {
					cache[ prop ] = data[ prop ];
				}
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		// Either a valid cache is found, or will be created.
		// New caches will be created and the unlock returned,
		// allowing direct access to the newly created
		// empty data object. A valid owner object must be provided.
		var cache = this.cache[ this.key( owner ) ];

		return key === undefined ?
			cache : cache[ key ];
	},
	access: function( owner, key, value ) {
		var stored;
		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				((key && typeof key === "string") && value === undefined) ) {

			stored = this.get( owner, key );

			return stored !== undefined ?
				stored : this.get( owner, jQuery.camelCase(key) );
		}

		// [*]When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i, name, camel,
			unlock = this.key( owner ),
			cache = this.cache[ unlock ];

		if ( key === undefined ) {
			this.cache[ unlock ] = {};

		} else {
			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = key.concat( key.map( jQuery.camelCase ) );
			} else {
				camel = jQuery.camelCase( key );
				// Try the string as a key before any manipulation
				if ( key in cache ) {
					name = [ key, camel ];
				} else {
					// If a key with the spaces exists, use it.
					// Otherwise, create an array by matching non-whitespace
					name = camel;
					name = name in cache ?
						[ name ] : ( name.match( rnotwhite ) || [] );
				}
			}

			i = name.length;
			while ( i-- ) {
				delete cache[ name[ i ] ];
			}
		}
	},
	hasData: function( owner ) {
		return !jQuery.isEmptyObject(
			this.cache[ owner[ this.expando ] ] || {}
		);
	},
	discard: function( owner ) {
		if ( owner[ this.expando ] ) {
			delete this.cache[ owner[ this.expando ] ];
		}
	}
};
var data_priv = new Data();

var data_user = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			data_user.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend({
	hasData: function( elem ) {
		return data_user.hasData( elem ) || data_priv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return data_user.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		data_user.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to data_priv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return data_priv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		data_priv.remove( elem, name );
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = data_user.get( elem );

				if ( elem.nodeType === 1 && !data_priv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice(5) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					data_priv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				data_user.set( this, key );
			});
		}

		return access( this, function( value ) {
			var data,
				camelKey = jQuery.camelCase( key );

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {
				// Attempt to get data from the cache
				// with the key as-is
				data = data_user.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to get data from the cache
				// with the key camelized
				data = data_user.get( elem, camelKey );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, camelKey, undefined );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each(function() {
				// First, attempt to store a copy or reference of any
				// data that might've been store with a camelCased key.
				var data = data_user.get( this, camelKey );

				// For HTML5 data-* attribute interop, we have to
				// store property names with dashes in a camelCase form.
				// This might not apply to all properties...*
				data_user.set( this, camelKey, value );

				// *... In the case of properties that might _actually_
				// have dashes, we need to also store a copy of that
				// unchanged property.
				if ( key.indexOf("-") !== -1 && data !== undefined ) {
					data_user.set( this, key, value );
				}
			});
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each(function() {
			data_user.remove( this, key );
		});
	}
});


jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = data_priv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = data_priv.access( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return data_priv.get( elem, key ) || data_priv.access( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				data_priv.remove( elem, [ type + "queue", key ] );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = data_priv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {
		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
	};

var rcheckableType = (/^(?:checkbox|radio)$/i);



(function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Safari<=5.1
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari<=5.1, Android<4.2
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<=11+
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
})();
var strundefined = typeof undefined;



support.focusinBubbles = "onfocusin" in window;


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = data_priv.hasData( elem ) && data_priv.get( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;
			data_priv.remove( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( data_priv.get( cur, "events" ) || {} )[ event.type ] && data_priv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( data_priv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.disabled !== true || event.type !== "click" ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var eventDoc, doc, body,
				button = original.button;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: Cordova 2.5 (WebKit) (#13255)
		// All events should have a target; Cordova deviceready doesn't
		if ( !event.target ) {
			event.target = document;
		}

		// Support: Safari 6.0+, Chrome<28
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle, false );
	}
};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&
				// Support: Android<4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && e.preventDefault ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && e.stopPropagation ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// Support: Chrome 15+
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// Support: Firefox, Chrome, Safari
// Create "bubbling" focus and blur events
if ( !support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = data_priv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				data_priv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = data_priv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					data_priv.remove( doc, fix );

				} else {
					data_priv.access( doc, fix, attaches );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var origFn, type;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});


var
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {

		// Support: IE9
		option: [ 1, "<select multiple='multiple'>", "</select>" ],

		thead: [ 1, "<table>", "</table>" ],
		col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		_default: [ 0, "", "" ]
	};

// Support: IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: 1.x compatibility
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute("type");
	}

	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		data_priv.set(
			elems[ i ], "globalEval", !refElements || data_priv.get( refElements[ i ], "globalEval" )
		);
	}
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( data_priv.hasData( src ) ) {
		pdataOld = data_priv.access( src );
		pdataCur = data_priv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( data_user.hasData( src ) ) {
		udataOld = data_user.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		data_user.set( dest, udataCur );
	}
}

function getAll( context, tag ) {
	var ret = context.getElementsByTagName ? context.getElementsByTagName( tag || "*" ) :
			context.querySelectorAll ? context.querySelectorAll( tag || "*" ) :
			[];

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], ret ) :
		ret;
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var elem, tmp, tag, wrap, contains, j,
			fragment = context.createDocumentFragment(),
			nodes = [],
			i = 0,
			l = elems.length;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					// Support: QtWebKit, PhantomJS
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || fragment.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;
					tmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[ 2 ];

					// Descend through wrappers to the right content
					j = wrap[ 0 ];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Support: QtWebKit, PhantomJS
					// push.apply(_, arraylike) throws on ancient WebKit
					jQuery.merge( nodes, tmp.childNodes );

					// Remember the top-level container
					tmp = fragment.firstChild;

					// Ensure the created nodes are orphaned (#12392)
					tmp.textContent = "";
				}
			}
		}

		// Remove wrapper from fragment
		fragment.textContent = "";

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( fragment.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		return fragment;
	},

	cleanData: function( elems ) {
		var data, elem, type, key,
			special = jQuery.event.special,
			i = 0;

		for ( ; (elem = elems[ i ]) !== undefined; i++ ) {
			if ( jQuery.acceptData( elem ) ) {
				key = elem[ data_priv.expando ];

				if ( key && (data = data_priv.cache[ key ]) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}
					if ( data_priv.cache[ key ] ) {
						// Discard any remaining `private` data
						delete data_priv.cache[ key ];
					}
				}
			}
			// Discard any remaining `user` data
			delete data_user.cache[ elem[ data_user.expando ] ];
		}
	}
});

jQuery.fn.extend({
	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each(function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				});
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	remove: function( selector, keepData /* Internal Use Only */ ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {
			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map(function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var arg = arguments[ 0 ];

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			arg = this.parentNode;

			jQuery.cleanData( getAll( this ) );

			if ( arg ) {
				arg.replaceChild( elem, this );
			}
		});

		// Force removal if there was no new content (e.g., from empty arguments)
		return arg && (arg.length || arg.nodeType) ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var fragment, first, scripts, hasScripts, node, doc,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[ 0 ],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[ 0 ] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							// Support: QtWebKit
							// jQuery.merge because push.apply(_, arraylike) throws
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[ i ], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!data_priv.access( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( node.textContent.replace( rcleanScript, "" ) );
							}
						}
					}
				}
			}
		}

		return this;
	}
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: QtWebKit
			// .get() because push.apply(_, arraylike) throws
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});


var iframe,
	elemdisplay = {};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */
// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var style,
		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		// getDefaultComputedStyle might be reliably used only on attached element
		display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

			// Use of this method is a temporary fix (more like optimization) until something better comes along,
			// since it was removed from specification and supported only in FF
			style.display : jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = iframe[ 0 ].contentDocument;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = (/^margin/);

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {
		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		if ( elem.ownerDocument.defaultView.opener ) {
			return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
		}

		return window.getComputedStyle( elem, null );
	};



function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE9
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];
	}

	if ( computed ) {

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// Support: iOS < 6
		// A tribute to the "awesome hack by Dean Edwards"
		// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
		// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
		if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?
		// Support: IE
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {
	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {
				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return (this.get = hookFn).apply( this, arguments );
		}
	};
}


(function() {
	var pixelPositionVal, boxSizingReliableVal,
		docElem = document.documentElement,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	if ( !div.style ) {
		return;
	}

	// Support: IE9-11+
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;" +
		"position:absolute";
	container.appendChild( div );

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computePixelPositionAndBoxSizingReliable() {
		div.style.cssText =
			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
			"border:1px;padding:1px;width:4px;position:absolute";
		div.innerHTML = "";
		docElem.appendChild( container );

		var divStyle = window.getComputedStyle( div, null );
		pixelPositionVal = divStyle.top !== "1%";
		boxSizingReliableVal = divStyle.width === "4px";

		docElem.removeChild( container );
	}

	// Support: node.js jsdom
	// Don't assume that getComputedStyle is a property of the global object
	if ( window.getComputedStyle ) {
		jQuery.extend( support, {
			pixelPosition: function() {

				// This test is executed only once but we still do memoizing
				// since we can use the boxSizingReliable pre-computing.
				// No need to check if the test was already performed, though.
				computePixelPositionAndBoxSizingReliable();
				return pixelPositionVal;
			},
			boxSizingReliable: function() {
				if ( boxSizingReliableVal == null ) {
					computePixelPositionAndBoxSizingReliable();
				}
				return boxSizingReliableVal;
			},
			reliableMarginRight: function() {

				// Support: Android 2.3
				// Check if div with explicit width and no margin-right incorrectly
				// gets computed margin-right based on width of container. (#3333)
				// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
				// This support function is only executed once so no memoizing is needed.
				var ret,
					marginDiv = div.appendChild( document.createElement( "div" ) );

				// Reset CSS: box-sizing; display; margin; border; padding
				marginDiv.style.cssText = div.style.cssText =
					// Support: Firefox<29, Android 2.3
					// Vendor-prefix box-sizing
					"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
					"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
				marginDiv.style.marginRight = marginDiv.style.width = "0";
				div.style.width = "1px";
				docElem.appendChild( container );

				ret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );

				docElem.removeChild( container );
				div.removeChild( marginDiv );

				return ret;
			}
		});
	}
})();


// A method for quickly swapping in/out CSS properties to get correct calculations.
jQuery.swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var
	// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[0].toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = data_priv.get( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = data_priv.access( elem, "olddisplay", defaultDisplay(elem.nodeName) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display !== "none" || !hidden ) {
				data_priv.set( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

jQuery.extend({

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Support: IE9-11+
			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {
				style[ name ] = value;
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

// Support: Android 2.3
jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return jQuery.swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});

jQuery.fn.extend({
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE9
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	}
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*.
					// Use string for doubling so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur(),
				// break the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		} ]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = data_priv.get( elem, "fxshow" );

	// Handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// Ensure the complete handler is called before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// Height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE9-10 do not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			data_priv.get( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {
			style.display = "inline-block";
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always(function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		});
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = data_priv.access( elem, "fxshow", {} );
		}

		// Store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;

			data_priv.remove( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// Don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || data_priv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = data_priv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = data_priv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		});
	}
});

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = setTimeout( next, time );
		hooks.stop = function() {
			clearTimeout( timeout );
		};
	});
};


(function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: iOS<=5.1, Android<=4.2+
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE<=11+
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: Android<=2.3
	// Options inside disabled selects are incorrectly marked as disabled
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE<=11+
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
})();


var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	}
});

jQuery.extend({
	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					elem[ propName ] = false;
				}

				elem.removeAttribute( name );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	}
});

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle;
		if ( !isXML ) {
			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ name ];
			attrHandle[ name ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				name.toLowerCase() :
				null;
			attrHandle[ name ] = handle;
		}
		return ret;
	};
});




var rfocusable = /^(?:input|select|textarea|button)$/i;

jQuery.fn.extend({
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each(function() {
			delete this[ jQuery.propFix[ name ] || name ];
		});
	}
});

jQuery.extend({
	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				return elem.hasAttribute( "tabindex" ) || rfocusable.test( elem.nodeName ) || elem.href ?
					elem.tabIndex :
					-1;
			}
		}
	}
});

if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});




var rclass = /[\t\r\n\f]/g;

jQuery.fn.extend({
	addClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			proceed = typeof value === "string" && value,
			i = 0,
			len = this.length;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			proceed = arguments.length === 0 || typeof value === "string" && value,
			i = 0,
			len = this.length;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = value ? jQuery.trim( cur ) : "";
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// Toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					data_priv.set( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : data_priv.get( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	}
});




var rreturn = /\r/g;

jQuery.fn.extend({
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// Handle most common string cases
					ret.replace(rreturn, "") :
					// Handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					jQuery.trim( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// IE6-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ? !option.disabled : option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];
					if ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {
						optionSet = true;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
});

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});




// Return jQuery for attributes-only inclusion


jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});


var nonce = jQuery.now();

var rquery = (/\?/);



// Support: Android 2.3
// Workaround failure to string-cast null input
jQuery.parseJSON = function( data ) {
	return JSON.parse( data + "" );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE9
	try {
		tmp = new DOMParser();
		xml = tmp.parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Document location
	ajaxLocation = window.location.href,

	// Segment location into parts
	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType[0] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

		// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,
			// URL without anti-cache param
			cacheURL,
			// Response headers
			responseHeadersString,
			responseHeaders,
			// timeout handle
			timeoutTimer,
			// Cross-domain detection vars
			parts,
			// To know if global events are to be dispatched
			fireGlobals,
			// Loop variable
			i,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});


jQuery._evalUrl = function( url ) {
	return jQuery.ajax({
		url: url,
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	});
};


jQuery.fn.extend({
	wrapAll: function( html ) {
		var wrap;

		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapAll( html.call(this, i) );
			});
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function( i ) {
				jQuery( this ).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});


jQuery.expr.filters.hidden = function( elem ) {
	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;
};
jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function() {
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		})
		.map(function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});


jQuery.ajaxSettings.xhr = function() {
	try {
		return new XMLHttpRequest();
	} catch( e ) {}
};

var xhrId = 0,
	xhrCallbacks = {},
	xhrSuccessStatus = {
		// file protocol always yields status code 0, assume 200
		0: 200,
		// Support: IE9
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE9
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]();
		}
	});
}

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport(function( options ) {
	var callback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr(),
					id = ++xhrId;

				xhr.open( options.type, options.url, options.async, options.username, options.password );

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers["X-Requested-With"] ) {
					headers["X-Requested-With"] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							delete xhrCallbacks[ id ];
							callback = xhr.onload = xhr.onerror = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {
								complete(
									// file: protocol always yields status 0; see #8605, #14207
									xhr.status,
									xhr.statusText
								);
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,
									// Support: IE9
									// Accessing binary-data responseText throws an exception
									// (#11426)
									typeof xhr.responseText === "string" ? {
										text: xhr.responseText
									} : undefined,
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				xhr.onerror = callback("error");

				// Create the abort callback
				callback = xhrCallbacks[ id ] = callback("abort");

				try {
					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {
					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {
	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery("<script>").prop({
					async: true,
					charset: s.scriptCharset,
					src: s.url
				}).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
});




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});




// data: string of html
// context (optional): If specified, the fragment will be created in this context, defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[1] ) ];
	}

	parsed = jQuery.buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = jQuery.trim( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
});




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep(jQuery.timers, function( fn ) {
		return elem === fn.elem;
	}).length;
};




var docElem = window.document.documentElement;

/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf("auto") > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend({
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each(function( i ) {
					jQuery.offset.setOffset( this, options, i );
				});
		}

		var docElem, win,
			elem = this[ 0 ],
			box = { top: 0, left: 0 },
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// Support: BlackBerry 5, iOS 3 (original iPhone)
		// If we don't have gBCR, just use 0,0 rather than error
		if ( typeof elem.getBoundingClientRect !== strundefined ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top + win.pageYOffset - docElem.clientTop,
			left: box.left + win.pageXOffset - docElem.clientLeft
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || docElem;
		});
	}
});

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : window.pageXOffset,
					top ? val : window.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

// Support: Safari<7+, Chrome<37+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );
				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
});


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});


// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	});
}




var
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === strundefined ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;

}));

/*! jQuery UI - v1.11.4 - 2015-03-11
* http://jqueryui.com
* Includes: core.js, widget.js, mouse.js, position.js, accordion.js, autocomplete.js, button.js, datepicker.js, dialog.js, draggable.js, droppable.js, effect.js, effect-blind.js, effect-bounce.js, effect-clip.js, effect-drop.js, effect-explode.js, effect-fade.js, effect-fold.js, effect-highlight.js, effect-puff.js, effect-pulsate.js, effect-scale.js, effect-shake.js, effect-size.js, effect-slide.js, effect-transfer.js, menu.js, progressbar.js, resizable.js, selectable.js, selectmenu.js, slider.js, sortable.js, spinner.js, tabs.js, tooltip.js
* Copyright 2015 jQuery Foundation and other contributors; Licensed MIT */

(function( factory ) {
	if ( typeof define === "function" && define.amd ) {

		// AMD. Register as an anonymous module.
		define([ "jquery" ], factory );
	} else {

		// Browser globals
		factory( jQuery );
	}
}(function( $ ) {
/*!
 * jQuery UI Core 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */


// $.ui might exist from components with no dependencies, e.g., $.ui.position
$.ui = $.ui || {};

$.extend( $.ui, {
	version: "1.11.4",

	keyCode: {
		BACKSPACE: 8,
		COMMA: 188,
		DELETE: 46,
		DOWN: 40,
		END: 35,
		ENTER: 13,
		ESCAPE: 27,
		HOME: 36,
		LEFT: 37,
		PAGE_DOWN: 34,
		PAGE_UP: 33,
		PERIOD: 190,
		RIGHT: 39,
		SPACE: 32,
		TAB: 9,
		UP: 38
	}
});

// plugins
$.fn.extend({
	scrollParent: function( includeHidden ) {
		var position = this.css( "position" ),
			excludeStaticParent = position === "absolute",
			overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
			scrollParent = this.parents().filter( function() {
				var parent = $( this );
				if ( excludeStaticParent && parent.css( "position" ) === "static" ) {
					return false;
				}
				return overflowRegex.test( parent.css( "overflow" ) + parent.css( "overflow-y" ) + parent.css( "overflow-x" ) );
			}).eq( 0 );

		return position === "fixed" || !scrollParent.length ? $( this[ 0 ].ownerDocument || document ) : scrollParent;
	},

	uniqueId: (function() {
		var uuid = 0;

		return function() {
			return this.each(function() {
				if ( !this.id ) {
					this.id = "ui-id-" + ( ++uuid );
				}
			});
		};
	})(),

	removeUniqueId: function() {
		return this.each(function() {
			if ( /^ui-id-\d+$/.test( this.id ) ) {
				$( this ).removeAttr( "id" );
			}
		});
	}
});

// selectors
function focusable( element, isTabIndexNotNaN ) {
	var map, mapName, img,
		nodeName = element.nodeName.toLowerCase();
	if ( "area" === nodeName ) {
		map = element.parentNode;
		mapName = map.name;
		if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
			return false;
		}
		img = $( "img[usemap='#" + mapName + "']" )[ 0 ];
		return !!img && visible( img );
	}
	return ( /^(input|select|textarea|button|object)$/.test( nodeName ) ?
		!element.disabled :
		"a" === nodeName ?
			element.href || isTabIndexNotNaN :
			isTabIndexNotNaN) &&
		// the element and all of its ancestors must be visible
		visible( element );
}

function visible( element ) {
	return $.expr.filters.visible( element ) &&
		!$( element ).parents().addBack().filter(function() {
			return $.css( this, "visibility" ) === "hidden";
		}).length;
}

$.extend( $.expr[ ":" ], {
	data: $.expr.createPseudo ?
		$.expr.createPseudo(function( dataName ) {
			return function( elem ) {
				return !!$.data( elem, dataName );
			};
		}) :
		// support: jQuery <1.8
		function( elem, i, match ) {
			return !!$.data( elem, match[ 3 ] );
		},

	focusable: function( element ) {
		return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );
	},

	tabbable: function( element ) {
		var tabIndex = $.attr( element, "tabindex" ),
			isTabIndexNaN = isNaN( tabIndex );
		return ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );
	}
});

// support: jQuery <1.8
if ( !$( "<a>" ).outerWidth( 1 ).jquery ) {
	$.each( [ "Width", "Height" ], function( i, name ) {
		var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],
			type = name.toLowerCase(),
			orig = {
				innerWidth: $.fn.innerWidth,
				innerHeight: $.fn.innerHeight,
				outerWidth: $.fn.outerWidth,
				outerHeight: $.fn.outerHeight
			};

		function reduce( elem, size, border, margin ) {
			$.each( side, function() {
				size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;
				if ( border ) {
					size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;
				}
				if ( margin ) {
					size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;
				}
			});
			return size;
		}

		$.fn[ "inner" + name ] = function( size ) {
			if ( size === undefined ) {
				return orig[ "inner" + name ].call( this );
			}

			return this.each(function() {
				$( this ).css( type, reduce( this, size ) + "px" );
			});
		};

		$.fn[ "outer" + name] = function( size, margin ) {
			if ( typeof size !== "number" ) {
				return orig[ "outer" + name ].call( this, size );
			}

			return this.each(function() {
				$( this).css( type, reduce( this, size, true, margin ) + "px" );
			});
		};
	});
}

// support: jQuery <1.8
if ( !$.fn.addBack ) {
	$.fn.addBack = function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	};
}

// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)
if ( $( "<a>" ).data( "a-b", "a" ).removeData( "a-b" ).data( "a-b" ) ) {
	$.fn.removeData = (function( removeData ) {
		return function( key ) {
			if ( arguments.length ) {
				return removeData.call( this, $.camelCase( key ) );
			} else {
				return removeData.call( this );
			}
		};
	})( $.fn.removeData );
}

// deprecated
$.ui.ie = !!/msie [\w.]+/.exec( navigator.userAgent.toLowerCase() );

$.fn.extend({
	focus: (function( orig ) {
		return function( delay, fn ) {
			return typeof delay === "number" ?
				this.each(function() {
					var elem = this;
					setTimeout(function() {
						$( elem ).focus();
						if ( fn ) {
							fn.call( elem );
						}
					}, delay );
				}) :
				orig.apply( this, arguments );
		};
	})( $.fn.focus ),

	disableSelection: (function() {
		var eventType = "onselectstart" in document.createElement( "div" ) ?
			"selectstart" :
			"mousedown";

		return function() {
			return this.bind( eventType + ".ui-disableSelection", function( event ) {
				event.preventDefault();
			});
		};
	})(),

	enableSelection: function() {
		return this.unbind( ".ui-disableSelection" );
	},

	zIndex: function( zIndex ) {
		if ( zIndex !== undefined ) {
			return this.css( "zIndex", zIndex );
		}

		if ( this.length ) {
			var elem = $( this[ 0 ] ), position, value;
			while ( elem.length && elem[ 0 ] !== document ) {
				// Ignore z-index if position is set to a value where z-index is ignored by the browser
				// This makes behavior of this function consistent across browsers
				// WebKit always returns auto if the element is positioned
				position = elem.css( "position" );
				if ( position === "absolute" || position === "relative" || position === "fixed" ) {
					// IE returns 0 when zIndex is not specified
					// other browsers return a string
					// we ignore the case of nested elements with an explicit value of 0
					// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
					value = parseInt( elem.css( "zIndex" ), 10 );
					if ( !isNaN( value ) && value !== 0 ) {
						return value;
					}
				}
				elem = elem.parent();
			}
		}

		return 0;
	}
});

// $.ui.plugin is deprecated. Use $.widget() extensions instead.
$.ui.plugin = {
	add: function( module, option, set ) {
		var i,
			proto = $.ui[ module ].prototype;
		for ( i in set ) {
			proto.plugins[ i ] = proto.plugins[ i ] || [];
			proto.plugins[ i ].push( [ option, set[ i ] ] );
		}
	},
	call: function( instance, name, args, allowDisconnected ) {
		var i,
			set = instance.plugins[ name ];

		if ( !set ) {
			return;
		}

		if ( !allowDisconnected && ( !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) ) {
			return;
		}

		for ( i = 0; i < set.length; i++ ) {
			if ( instance.options[ set[ i ][ 0 ] ] ) {
				set[ i ][ 1 ].apply( instance.element, args );
			}
		}
	}
};


/*!
 * jQuery UI Widget 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/jQuery.widget/
 */


var widget_uuid = 0,
	widget_slice = Array.prototype.slice;

$.cleanData = (function( orig ) {
	return function( elems ) {
		var events, elem, i;
		for ( i = 0; (elem = elems[i]) != null; i++ ) {
			try {

				// Only trigger remove when necessary to save time
				events = $._data( elem, "events" );
				if ( events && events.remove ) {
					$( elem ).triggerHandler( "remove" );
				}

			// http://bugs.jquery.com/ticket/8235
			} catch ( e ) {}
		}
		orig( elems );
	};
})( $.cleanData );

$.widget = function( name, base, prototype ) {
	var fullName, existingConstructor, constructor, basePrototype,
		// proxiedPrototype allows the provided prototype to remain unmodified
		// so that it can be used as a mixin for multiple widgets (#8876)
		proxiedPrototype = {},
		namespace = name.split( "." )[ 0 ];

	name = name.split( "." )[ 1 ];
	fullName = namespace + "-" + name;

	if ( !prototype ) {
		prototype = base;
		base = $.Widget;
	}

	// create selector for plugin
	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {
		return !!$.data( elem, fullName );
	};

	$[ namespace ] = $[ namespace ] || {};
	existingConstructor = $[ namespace ][ name ];
	constructor = $[ namespace ][ name ] = function( options, element ) {
		// allow instantiation without "new" keyword
		if ( !this._createWidget ) {
			return new constructor( options, element );
		}

		// allow instantiation without initializing for simple inheritance
		// must use "new" keyword (the code above always passes args)
		if ( arguments.length ) {
			this._createWidget( options, element );
		}
	};
	// extend with the existing constructor to carry over any static properties
	$.extend( constructor, existingConstructor, {
		version: prototype.version,
		// copy the object used to create the prototype in case we need to
		// redefine the widget later
		_proto: $.extend( {}, prototype ),
		// track widgets that inherit from this widget in case this widget is
		// redefined after a widget inherits from it
		_childConstructors: []
	});

	basePrototype = new base();
	// we need to make the options hash a property directly on the new instance
	// otherwise we'll modify the options hash on the prototype that we're
	// inheriting from
	basePrototype.options = $.widget.extend( {}, basePrototype.options );
	$.each( prototype, function( prop, value ) {
		if ( !$.isFunction( value ) ) {
			proxiedPrototype[ prop ] = value;
			return;
		}
		proxiedPrototype[ prop ] = (function() {
			var _super = function() {
					return base.prototype[ prop ].apply( this, arguments );
				},
				_superApply = function( args ) {
					return base.prototype[ prop ].apply( this, args );
				};
			return function() {
				var __super = this._super,
					__superApply = this._superApply,
					returnValue;

				this._super = _super;
				this._superApply = _superApply;

				returnValue = value.apply( this, arguments );

				this._super = __super;
				this._superApply = __superApply;

				return returnValue;
			};
		})();
	});
	constructor.prototype = $.widget.extend( basePrototype, {
		// TODO: remove support for widgetEventPrefix
		// always use the name + a colon as the prefix, e.g., draggable:start
		// don't prefix for widgets that aren't DOM-based
		widgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name
	}, proxiedPrototype, {
		constructor: constructor,
		namespace: namespace,
		widgetName: name,
		widgetFullName: fullName
	});

	// If this widget is being redefined then we need to find all widgets that
	// are inheriting from it and redefine all of them so that they inherit from
	// the new version of this widget. We're essentially trying to replace one
	// level in the prototype chain.
	if ( existingConstructor ) {
		$.each( existingConstructor._childConstructors, function( i, child ) {
			var childPrototype = child.prototype;

			// redefine the child widget using the same prototype that was
			// originally used, but inherit from the new version of the base
			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );
		});
		// remove the list of existing child constructors from the old constructor
		// so the old child constructors can be garbage collected
		delete existingConstructor._childConstructors;
	} else {
		base._childConstructors.push( constructor );
	}

	$.widget.bridge( name, constructor );

	return constructor;
};

$.widget.extend = function( target ) {
	var input = widget_slice.call( arguments, 1 ),
		inputIndex = 0,
		inputLength = input.length,
		key,
		value;
	for ( ; inputIndex < inputLength; inputIndex++ ) {
		for ( key in input[ inputIndex ] ) {
			value = input[ inputIndex ][ key ];
			if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {
				// Clone objects
				if ( $.isPlainObject( value ) ) {
					target[ key ] = $.isPlainObject( target[ key ] ) ?
						$.widget.extend( {}, target[ key ], value ) :
						// Don't extend strings, arrays, etc. with objects
						$.widget.extend( {}, value );
				// Copy everything else by reference
				} else {
					target[ key ] = value;
				}
			}
		}
	}
	return target;
};

$.widget.bridge = function( name, object ) {
	var fullName = object.prototype.widgetFullName || name;
	$.fn[ name ] = function( options ) {
		var isMethodCall = typeof options === "string",
			args = widget_slice.call( arguments, 1 ),
			returnValue = this;

		if ( isMethodCall ) {
			this.each(function() {
				var methodValue,
					instance = $.data( this, fullName );
				if ( options === "instance" ) {
					returnValue = instance;
					return false;
				}
				if ( !instance ) {
					return $.error( "cannot call methods on " + name + " prior to initialization; " +
						"attempted to call method '" + options + "'" );
				}
				if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {
					return $.error( "no such method '" + options + "' for " + name + " widget instance" );
				}
				methodValue = instance[ options ].apply( instance, args );
				if ( methodValue !== instance && methodValue !== undefined ) {
					returnValue = methodValue && methodValue.jquery ?
						returnValue.pushStack( methodValue.get() ) :
						methodValue;
					return false;
				}
			});
		} else {

			// Allow multiple hashes to be passed on init
			if ( args.length ) {
				options = $.widget.extend.apply( null, [ options ].concat(args) );
			}

			this.each(function() {
				var instance = $.data( this, fullName );
				if ( instance ) {
					instance.option( options || {} );
					if ( instance._init ) {
						instance._init();
					}
				} else {
					$.data( this, fullName, new object( options, this ) );
				}
			});
		}

		return returnValue;
	};
};

$.Widget = function( /* options, element */ ) {};
$.Widget._childConstructors = [];

$.Widget.prototype = {
	widgetName: "widget",
	widgetEventPrefix: "",
	defaultElement: "<div>",
	options: {
		disabled: false,

		// callbacks
		create: null
	},
	_createWidget: function( options, element ) {
		element = $( element || this.defaultElement || this )[ 0 ];
		this.element = $( element );
		this.uuid = widget_uuid++;
		this.eventNamespace = "." + this.widgetName + this.uuid;

		this.bindings = $();
		this.hoverable = $();
		this.focusable = $();

		if ( element !== this ) {
			$.data( element, this.widgetFullName, this );
			this._on( true, this.element, {
				remove: function( event ) {
					if ( event.target === element ) {
						this.destroy();
					}
				}
			});
			this.document = $( element.style ?
				// element within the document
				element.ownerDocument :
				// element is window or document
				element.document || element );
			this.window = $( this.document[0].defaultView || this.document[0].parentWindow );
		}

		this.options = $.widget.extend( {},
			this.options,
			this._getCreateOptions(),
			options );

		this._create();
		this._trigger( "create", null, this._getCreateEventData() );
		this._init();
	},
	_getCreateOptions: $.noop,
	_getCreateEventData: $.noop,
	_create: $.noop,
	_init: $.noop,

	destroy: function() {
		this._destroy();
		// we can probably remove the unbind calls in 2.0
		// all event bindings should go through this._on()
		this.element
			.unbind( this.eventNamespace )
			.removeData( this.widgetFullName )
			// support: jquery <1.6.3
			// http://bugs.jquery.com/ticket/9413
			.removeData( $.camelCase( this.widgetFullName ) );
		this.widget()
			.unbind( this.eventNamespace )
			.removeAttr( "aria-disabled" )
			.removeClass(
				this.widgetFullName + "-disabled " +
				"ui-state-disabled" );

		// clean up events and states
		this.bindings.unbind( this.eventNamespace );
		this.hoverable.removeClass( "ui-state-hover" );
		this.focusable.removeClass( "ui-state-focus" );
	},
	_destroy: $.noop,

	widget: function() {
		return this.element;
	},

	option: function( key, value ) {
		var options = key,
			parts,
			curOption,
			i;

		if ( arguments.length === 0 ) {
			// don't return a reference to the internal hash
			return $.widget.extend( {}, this.options );
		}

		if ( typeof key === "string" ) {
			// handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }
			options = {};
			parts = key.split( "." );
			key = parts.shift();
			if ( parts.length ) {
				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );
				for ( i = 0; i < parts.length - 1; i++ ) {
					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};
					curOption = curOption[ parts[ i ] ];
				}
				key = parts.pop();
				if ( arguments.length === 1 ) {
					return curOption[ key ] === undefined ? null : curOption[ key ];
				}
				curOption[ key ] = value;
			} else {
				if ( arguments.length === 1 ) {
					return this.options[ key ] === undefined ? null : this.options[ key ];
				}
				options[ key ] = value;
			}
		}

		this._setOptions( options );

		return this;
	},
	_setOptions: function( options ) {
		var key;

		for ( key in options ) {
			this._setOption( key, options[ key ] );
		}

		return this;
	},
	_setOption: function( key, value ) {
		this.options[ key ] = value;

		if ( key === "disabled" ) {
			this.widget()
				.toggleClass( this.widgetFullName + "-disabled", !!value );

			// If the widget is becoming disabled, then nothing is interactive
			if ( value ) {
				this.hoverable.removeClass( "ui-state-hover" );
				this.focusable.removeClass( "ui-state-focus" );
			}
		}

		return this;
	},

	enable: function() {
		return this._setOptions({ disabled: false });
	},
	disable: function() {
		return this._setOptions({ disabled: true });
	},

	_on: function( suppressDisabledCheck, element, handlers ) {
		var delegateElement,
			instance = this;

		// no suppressDisabledCheck flag, shuffle arguments
		if ( typeof suppressDisabledCheck !== "boolean" ) {
			handlers = element;
			element = suppressDisabledCheck;
			suppressDisabledCheck = false;
		}

		// no element argument, shuffle and use this.element
		if ( !handlers ) {
			handlers = element;
			element = this.element;
			delegateElement = this.widget();
		} else {
			element = delegateElement = $( element );
			this.bindings = this.bindings.add( element );
		}

		$.each( handlers, function( event, handler ) {
			function handlerProxy() {
				// allow widgets to customize the disabled handling
				// - disabled as an array instead of boolean
				// - disabled class as method for disabling individual parts
				if ( !suppressDisabledCheck &&
						( instance.options.disabled === true ||
							$( this ).hasClass( "ui-state-disabled" ) ) ) {
					return;
				}
				return ( typeof handler === "string" ? instance[ handler ] : handler )
					.apply( instance, arguments );
			}

			// copy the guid so direct unbinding works
			if ( typeof handler !== "string" ) {
				handlerProxy.guid = handler.guid =
					handler.guid || handlerProxy.guid || $.guid++;
			}

			var match = event.match( /^([\w:-]*)\s*(.*)$/ ),
				eventName = match[1] + instance.eventNamespace,
				selector = match[2];
			if ( selector ) {
				delegateElement.delegate( selector, eventName, handlerProxy );
			} else {
				element.bind( eventName, handlerProxy );
			}
		});
	},

	_off: function( element, eventName ) {
		eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) +
			this.eventNamespace;
		element.unbind( eventName ).undelegate( eventName );

		// Clear the stack to avoid memory leaks (#10056)
		this.bindings = $( this.bindings.not( element ).get() );
		this.focusable = $( this.focusable.not( element ).get() );
		this.hoverable = $( this.hoverable.not( element ).get() );
	},

	_delay: function( handler, delay ) {
		function handlerProxy() {
			return ( typeof handler === "string" ? instance[ handler ] : handler )
				.apply( instance, arguments );
		}
		var instance = this;
		return setTimeout( handlerProxy, delay || 0 );
	},

	_hoverable: function( element ) {
		this.hoverable = this.hoverable.add( element );
		this._on( element, {
			mouseenter: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-hover" );
			},
			mouseleave: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-hover" );
			}
		});
	},

	_focusable: function( element ) {
		this.focusable = this.focusable.add( element );
		this._on( element, {
			focusin: function( event ) {
				$( event.currentTarget ).addClass( "ui-state-focus" );
			},
			focusout: function( event ) {
				$( event.currentTarget ).removeClass( "ui-state-focus" );
			}
		});
	},

	_trigger: function( type, event, data ) {
		var prop, orig,
			callback = this.options[ type ];

		data = data || {};
		event = $.Event( event );
		event.type = ( type === this.widgetEventPrefix ?
			type :
			this.widgetEventPrefix + type ).toLowerCase();
		// the original event may come from any element
		// so we need to reset the target on the new event
		event.target = this.element[ 0 ];

		// copy original event properties over to the new event
		orig = event.originalEvent;
		if ( orig ) {
			for ( prop in orig ) {
				if ( !( prop in event ) ) {
					event[ prop ] = orig[ prop ];
				}
			}
		}

		this.element.trigger( event, data );
		return !( $.isFunction( callback ) &&
			callback.apply( this.element[0], [ event ].concat( data ) ) === false ||
			event.isDefaultPrevented() );
	}
};

$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {
	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {
		if ( typeof options === "string" ) {
			options = { effect: options };
		}
		var hasOptions,
			effectName = !options ?
				method :
				options === true || typeof options === "number" ?
					defaultEffect :
					options.effect || defaultEffect;
		options = options || {};
		if ( typeof options === "number" ) {
			options = { duration: options };
		}
		hasOptions = !$.isEmptyObject( options );
		options.complete = callback;
		if ( options.delay ) {
			element.delay( options.delay );
		}
		if ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {
			element[ method ]( options );
		} else if ( effectName !== method && element[ effectName ] ) {
			element[ effectName ]( options.duration, options.easing, callback );
		} else {
			element.queue(function( next ) {
				$( this )[ method ]();
				if ( callback ) {
					callback.call( element[ 0 ] );
				}
				next();
			});
		}
	};
});

var widget = $.widget;


/*!
 * jQuery UI Mouse 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/mouse/
 */


var mouseHandled = false;
$( document ).mouseup( function() {
	mouseHandled = false;
});

var mouse = $.widget("ui.mouse", {
	version: "1.11.4",
	options: {
		cancel: "input,textarea,button,select,option",
		distance: 1,
		delay: 0
	},
	_mouseInit: function() {
		var that = this;

		this.element
			.bind("mousedown." + this.widgetName, function(event) {
				return that._mouseDown(event);
			})
			.bind("click." + this.widgetName, function(event) {
				if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {
					$.removeData(event.target, that.widgetName + ".preventClickEvent");
					event.stopImmediatePropagation();
					return false;
				}
			});

		this.started = false;
	},

	// TODO: make sure destroying one instance of mouse doesn't mess with
	// other instances of mouse
	_mouseDestroy: function() {
		this.element.unbind("." + this.widgetName);
		if ( this._mouseMoveDelegate ) {
			this.document
				.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate)
				.unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
		}
	},

	_mouseDown: function(event) {
		// don't let more than one widget handle mouseStart
		if ( mouseHandled ) {
			return;
		}

		this._mouseMoved = false;

		// we may have missed mouseup (out of window)
		(this._mouseStarted && this._mouseUp(event));

		this._mouseDownEvent = event;

		var that = this,
			btnIsLeft = (event.which === 1),
			// event.target.nodeName works around a bug in IE 8 with
			// disabled inputs (#7620)
			elIsCancel = (typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);
		if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {
			return true;
		}

		this.mouseDelayMet = !this.options.delay;
		if (!this.mouseDelayMet) {
			this._mouseDelayTimer = setTimeout(function() {
				that.mouseDelayMet = true;
			}, this.options.delay);
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted = (this._mouseStart(event) !== false);
			if (!this._mouseStarted) {
				event.preventDefault();
				return true;
			}
		}

		// Click event may never have fired (Gecko & Opera)
		if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {
			$.removeData(event.target, this.widgetName + ".preventClickEvent");
		}

		// these delegates are required to keep context
		this._mouseMoveDelegate = function(event) {
			return that._mouseMove(event);
		};
		this._mouseUpDelegate = function(event) {
			return that._mouseUp(event);
		};

		this.document
			.bind( "mousemove." + this.widgetName, this._mouseMoveDelegate )
			.bind( "mouseup." + this.widgetName, this._mouseUpDelegate );

		event.preventDefault();

		mouseHandled = true;
		return true;
	},

	_mouseMove: function(event) {
		// Only check for mouseups outside the document if you've moved inside the document
		// at least once. This prevents the firing of mouseup in the case of IE<9, which will
		// fire a mousemove event if content is placed under the cursor. See #7778
		// Support: IE <9
		if ( this._mouseMoved ) {
			// IE mouseup check - mouseup happened when mouse was out of window
			if ($.ui.ie && ( !document.documentMode || document.documentMode < 9 ) && !event.button) {
				return this._mouseUp(event);

			// Iframe mouseup check - mouseup occurred in another document
			} else if ( !event.which ) {
				return this._mouseUp( event );
			}
		}

		if ( event.which || event.button ) {
			this._mouseMoved = true;
		}

		if (this._mouseStarted) {
			this._mouseDrag(event);
			return event.preventDefault();
		}

		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {
			this._mouseStarted =
				(this._mouseStart(this._mouseDownEvent, event) !== false);
			(this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));
		}

		return !this._mouseStarted;
	},

	_mouseUp: function(event) {
		this.document
			.unbind( "mousemove." + this.widgetName, this._mouseMoveDelegate )
			.unbind( "mouseup." + this.widgetName, this._mouseUpDelegate );

		if (this._mouseStarted) {
			this._mouseStarted = false;

			if (event.target === this._mouseDownEvent.target) {
				$.data(event.target, this.widgetName + ".preventClickEvent", true);
			}

			this._mouseStop(event);
		}

		mouseHandled = false;
		return false;
	},

	_mouseDistanceMet: function(event) {
		return (Math.max(
				Math.abs(this._mouseDownEvent.pageX - event.pageX),
				Math.abs(this._mouseDownEvent.pageY - event.pageY)
			) >= this.options.distance
		);
	},

	_mouseDelayMet: function(/* event */) {
		return this.mouseDelayMet;
	},

	// These are placeholder methods, to be overriden by extending plugin
	_mouseStart: function(/* event */) {},
	_mouseDrag: function(/* event */) {},
	_mouseStop: function(/* event */) {},
	_mouseCapture: function(/* event */) { return true; }
});


/*!
 * jQuery UI Position 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/position/
 */

(function() {

$.ui = $.ui || {};

var cachedScrollbarWidth, supportsOffsetFractions,
	max = Math.max,
	abs = Math.abs,
	round = Math.round,
	rhorizontal = /left|center|right/,
	rvertical = /top|center|bottom/,
	roffset = /[\+\-]\d+(\.[\d]+)?%?/,
	rposition = /^\w+/,
	rpercent = /%$/,
	_position = $.fn.position;

function getOffsets( offsets, width, height ) {
	return [
		parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),
		parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )
	];
}

function parseCss( element, property ) {
	return parseInt( $.css( element, property ), 10 ) || 0;
}

function getDimensions( elem ) {
	var raw = elem[0];
	if ( raw.nodeType === 9 ) {
		return {
			width: elem.width(),
			height: elem.height(),
			offset: { top: 0, left: 0 }
		};
	}
	if ( $.isWindow( raw ) ) {
		return {
			width: elem.width(),
			height: elem.height(),
			offset: { top: elem.scrollTop(), left: elem.scrollLeft() }
		};
	}
	if ( raw.preventDefault ) {
		return {
			width: 0,
			height: 0,
			offset: { top: raw.pageY, left: raw.pageX }
		};
	}
	return {
		width: elem.outerWidth(),
		height: elem.outerHeight(),
		offset: elem.offset()
	};
}

$.position = {
	scrollbarWidth: function() {
		if ( cachedScrollbarWidth !== undefined ) {
			return cachedScrollbarWidth;
		}
		var w1, w2,
			div = $( "<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>" ),
			innerDiv = div.children()[0];

		$( "body" ).append( div );
		w1 = innerDiv.offsetWidth;
		div.css( "overflow", "scroll" );

		w2 = innerDiv.offsetWidth;

		if ( w1 === w2 ) {
			w2 = div[0].clientWidth;
		}

		div.remove();

		return (cachedScrollbarWidth = w1 - w2);
	},
	getScrollInfo: function( within ) {
		var overflowX = within.isWindow || within.isDocument ? "" :
				within.element.css( "overflow-x" ),
			overflowY = within.isWindow || within.isDocument ? "" :
				within.element.css( "overflow-y" ),
			hasOverflowX = overflowX === "scroll" ||
				( overflowX === "auto" && within.width < within.element[0].scrollWidth ),
			hasOverflowY = overflowY === "scroll" ||
				( overflowY === "auto" && within.height < within.element[0].scrollHeight );
		return {
			width: hasOverflowY ? $.position.scrollbarWidth() : 0,
			height: hasOverflowX ? $.position.scrollbarWidth() : 0
		};
	},
	getWithinInfo: function( element ) {
		var withinElement = $( element || window ),
			isWindow = $.isWindow( withinElement[0] ),
			isDocument = !!withinElement[ 0 ] && withinElement[ 0 ].nodeType === 9;
		return {
			element: withinElement,
			isWindow: isWindow,
			isDocument: isDocument,
			offset: withinElement.offset() || { left: 0, top: 0 },
			scrollLeft: withinElement.scrollLeft(),
			scrollTop: withinElement.scrollTop(),

			// support: jQuery 1.6.x
			// jQuery 1.6 doesn't support .outerWidth/Height() on documents or windows
			width: isWindow || isDocument ? withinElement.width() : withinElement.outerWidth(),
			height: isWindow || isDocument ? withinElement.height() : withinElement.outerHeight()
		};
	}
};

$.fn.position = function( options ) {
	if ( !options || !options.of ) {
		return _position.apply( this, arguments );
	}

	// make a copy, we don't want to modify arguments
	options = $.extend( {}, options );

	var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,
		target = $( options.of ),
		within = $.position.getWithinInfo( options.within ),
		scrollInfo = $.position.getScrollInfo( within ),
		collision = ( options.collision || "flip" ).split( " " ),
		offsets = {};

	dimensions = getDimensions( target );
	if ( target[0].preventDefault ) {
		// force left top to allow flipping
		options.at = "left top";
	}
	targetWidth = dimensions.width;
	targetHeight = dimensions.height;
	targetOffset = dimensions.offset;
	// clone to reuse original targetOffset later
	basePosition = $.extend( {}, targetOffset );

	// force my and at to have valid horizontal and vertical positions
	// if a value is missing or invalid, it will be converted to center
	$.each( [ "my", "at" ], function() {
		var pos = ( options[ this ] || "" ).split( " " ),
			horizontalOffset,
			verticalOffset;

		if ( pos.length === 1) {
			pos = rhorizontal.test( pos[ 0 ] ) ?
				pos.concat( [ "center" ] ) :
				rvertical.test( pos[ 0 ] ) ?
					[ "center" ].concat( pos ) :
					[ "center", "center" ];
		}
		pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : "center";
		pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : "center";

		// calculate offsets
		horizontalOffset = roffset.exec( pos[ 0 ] );
		verticalOffset = roffset.exec( pos[ 1 ] );
		offsets[ this ] = [
			horizontalOffset ? horizontalOffset[ 0 ] : 0,
			verticalOffset ? verticalOffset[ 0 ] : 0
		];

		// reduce to just the positions without the offsets
		options[ this ] = [
			rposition.exec( pos[ 0 ] )[ 0 ],
			rposition.exec( pos[ 1 ] )[ 0 ]
		];
	});

	// normalize collision option
	if ( collision.length === 1 ) {
		collision[ 1 ] = collision[ 0 ];
	}

	if ( options.at[ 0 ] === "right" ) {
		basePosition.left += targetWidth;
	} else if ( options.at[ 0 ] === "center" ) {
		basePosition.left += targetWidth / 2;
	}

	if ( options.at[ 1 ] === "bottom" ) {
		basePosition.top += targetHeight;
	} else if ( options.at[ 1 ] === "center" ) {
		basePosition.top += targetHeight / 2;
	}

	atOffset = getOffsets( offsets.at, targetWidth, targetHeight );
	basePosition.left += atOffset[ 0 ];
	basePosition.top += atOffset[ 1 ];

	return this.each(function() {
		var collisionPosition, using,
			elem = $( this ),
			elemWidth = elem.outerWidth(),
			elemHeight = elem.outerHeight(),
			marginLeft = parseCss( this, "marginLeft" ),
			marginTop = parseCss( this, "marginTop" ),
			collisionWidth = elemWidth + marginLeft + parseCss( this, "marginRight" ) + scrollInfo.width,
			collisionHeight = elemHeight + marginTop + parseCss( this, "marginBottom" ) + scrollInfo.height,
			position = $.extend( {}, basePosition ),
			myOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );

		if ( options.my[ 0 ] === "right" ) {
			position.left -= elemWidth;
		} else if ( options.my[ 0 ] === "center" ) {
			position.left -= elemWidth / 2;
		}

		if ( options.my[ 1 ] === "bottom" ) {
			position.top -= elemHeight;
		} else if ( options.my[ 1 ] === "center" ) {
			position.top -= elemHeight / 2;
		}

		position.left += myOffset[ 0 ];
		position.top += myOffset[ 1 ];

		// if the browser doesn't support fractions, then round for consistent results
		if ( !supportsOffsetFractions ) {
			position.left = round( position.left );
			position.top = round( position.top );
		}

		collisionPosition = {
			marginLeft: marginLeft,
			marginTop: marginTop
		};

		$.each( [ "left", "top" ], function( i, dir ) {
			if ( $.ui.position[ collision[ i ] ] ) {
				$.ui.position[ collision[ i ] ][ dir ]( position, {
					targetWidth: targetWidth,
					targetHeight: targetHeight,
					elemWidth: elemWidth,
					elemHeight: elemHeight,
					collisionPosition: collisionPosition,
					collisionWidth: collisionWidth,
					collisionHeight: collisionHeight,
					offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],
					my: options.my,
					at: options.at,
					within: within,
					elem: elem
				});
			}
		});

		if ( options.using ) {
			// adds feedback as second argument to using callback, if present
			using = function( props ) {
				var left = targetOffset.left - position.left,
					right = left + targetWidth - elemWidth,
					top = targetOffset.top - position.top,
					bottom = top + targetHeight - elemHeight,
					feedback = {
						target: {
							element: target,
							left: targetOffset.left,
							top: targetOffset.top,
							width: targetWidth,
							height: targetHeight
						},
						element: {
							element: elem,
							left: position.left,
							top: position.top,
							width: elemWidth,
							height: elemHeight
						},
						horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",
						vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"
					};
				if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {
					feedback.horizontal = "center";
				}
				if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {
					feedback.vertical = "middle";
				}
				if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {
					feedback.important = "horizontal";
				} else {
					feedback.important = "vertical";
				}
				options.using.call( this, props, feedback );
			};
		}

		elem.offset( $.extend( position, { using: using } ) );
	});
};

$.ui.position = {
	fit: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,
				outerWidth = within.width,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = withinOffset - collisionPosLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,
				newOverRight;

			// element is wider than within
			if ( data.collisionWidth > outerWidth ) {
				// element is initially over the left side of within
				if ( overLeft > 0 && overRight <= 0 ) {
					newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;
					position.left += overLeft - newOverRight;
				// element is initially over right side of within
				} else if ( overRight > 0 && overLeft <= 0 ) {
					position.left = withinOffset;
				// element is initially over both left and right sides of within
				} else {
					if ( overLeft > overRight ) {
						position.left = withinOffset + outerWidth - data.collisionWidth;
					} else {
						position.left = withinOffset;
					}
				}
			// too far left -> align with left edge
			} else if ( overLeft > 0 ) {
				position.left += overLeft;
			// too far right -> align with right edge
			} else if ( overRight > 0 ) {
				position.left -= overRight;
			// adjust based on position and margin
			} else {
				position.left = max( position.left - collisionPosLeft, position.left );
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.isWindow ? within.scrollTop : within.offset.top,
				outerHeight = data.within.height,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = withinOffset - collisionPosTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,
				newOverBottom;

			// element is taller than within
			if ( data.collisionHeight > outerHeight ) {
				// element is initially over the top of within
				if ( overTop > 0 && overBottom <= 0 ) {
					newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;
					position.top += overTop - newOverBottom;
				// element is initially over bottom of within
				} else if ( overBottom > 0 && overTop <= 0 ) {
					position.top = withinOffset;
				// element is initially over both top and bottom of within
				} else {
					if ( overTop > overBottom ) {
						position.top = withinOffset + outerHeight - data.collisionHeight;
					} else {
						position.top = withinOffset;
					}
				}
			// too far up -> align with top
			} else if ( overTop > 0 ) {
				position.top += overTop;
			// too far down -> align with bottom edge
			} else if ( overBottom > 0 ) {
				position.top -= overBottom;
			// adjust based on position and margin
			} else {
				position.top = max( position.top - collisionPosTop, position.top );
			}
		}
	},
	flip: {
		left: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.left + within.scrollLeft,
				outerWidth = within.width,
				offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,
				collisionPosLeft = position.left - data.collisionPosition.marginLeft,
				overLeft = collisionPosLeft - offsetLeft,
				overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,
				myOffset = data.my[ 0 ] === "left" ?
					-data.elemWidth :
					data.my[ 0 ] === "right" ?
						data.elemWidth :
						0,
				atOffset = data.at[ 0 ] === "left" ?
					data.targetWidth :
					data.at[ 0 ] === "right" ?
						-data.targetWidth :
						0,
				offset = -2 * data.offset[ 0 ],
				newOverRight,
				newOverLeft;

			if ( overLeft < 0 ) {
				newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;
				if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {
					position.left += myOffset + atOffset + offset;
				}
			} else if ( overRight > 0 ) {
				newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;
				if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {
					position.left += myOffset + atOffset + offset;
				}
			}
		},
		top: function( position, data ) {
			var within = data.within,
				withinOffset = within.offset.top + within.scrollTop,
				outerHeight = within.height,
				offsetTop = within.isWindow ? within.scrollTop : within.offset.top,
				collisionPosTop = position.top - data.collisionPosition.marginTop,
				overTop = collisionPosTop - offsetTop,
				overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,
				top = data.my[ 1 ] === "top",
				myOffset = top ?
					-data.elemHeight :
					data.my[ 1 ] === "bottom" ?
						data.elemHeight :
						0,
				atOffset = data.at[ 1 ] === "top" ?
					data.targetHeight :
					data.at[ 1 ] === "bottom" ?
						-data.targetHeight :
						0,
				offset = -2 * data.offset[ 1 ],
				newOverTop,
				newOverBottom;
			if ( overTop < 0 ) {
				newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;
				if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {
					position.top += myOffset + atOffset + offset;
				}
			} else if ( overBottom > 0 ) {
				newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;
				if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {
					position.top += myOffset + atOffset + offset;
				}
			}
		}
	},
	flipfit: {
		left: function() {
			$.ui.position.flip.left.apply( this, arguments );
			$.ui.position.fit.left.apply( this, arguments );
		},
		top: function() {
			$.ui.position.flip.top.apply( this, arguments );
			$.ui.position.fit.top.apply( this, arguments );
		}
	}
};

// fraction support test
(function() {
	var testElement, testElementParent, testElementStyle, offsetLeft, i,
		body = document.getElementsByTagName( "body" )[ 0 ],
		div = document.createElement( "div" );

	//Create a "fake body" for testing based on method used in jQuery.support
	testElement = document.createElement( body ? "div" : "body" );
	testElementStyle = {
		visibility: "hidden",
		width: 0,
		height: 0,
		border: 0,
		margin: 0,
		background: "none"
	};
	if ( body ) {
		$.extend( testElementStyle, {
			position: "absolute",
			left: "-1000px",
			top: "-1000px"
		});
	}
	for ( i in testElementStyle ) {
		testElement.style[ i ] = testElementStyle[ i ];
	}
	testElement.appendChild( div );
	testElementParent = body || document.documentElement;
	testElementParent.insertBefore( testElement, testElementParent.firstChild );

	div.style.cssText = "position: absolute; left: 10.7432222px;";

	offsetLeft = $( div ).offset().left;
	supportsOffsetFractions = offsetLeft > 10 && offsetLeft < 11;

	testElement.innerHTML = "";
	testElementParent.removeChild( testElement );
})();

})();

var position = $.ui.position;


/*!
 * jQuery UI Accordion 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/accordion/
 */


var accordion = $.widget( "ui.accordion", {
	version: "1.11.4",
	options: {
		active: 0,
		animate: {},
		collapsible: false,
		event: "click",
		header: "> li > :first-child,> :not(li):even",
		heightStyle: "auto",
		icons: {
			activeHeader: "ui-icon-triangle-1-s",
			header: "ui-icon-triangle-1-e"
		},

		// callbacks
		activate: null,
		beforeActivate: null
	},

	hideProps: {
		borderTopWidth: "hide",
		borderBottomWidth: "hide",
		paddingTop: "hide",
		paddingBottom: "hide",
		height: "hide"
	},

	showProps: {
		borderTopWidth: "show",
		borderBottomWidth: "show",
		paddingTop: "show",
		paddingBottom: "show",
		height: "show"
	},

	_create: function() {
		var options = this.options;
		this.prevShow = this.prevHide = $();
		this.element.addClass( "ui-accordion ui-widget ui-helper-reset" )
			// ARIA
			.attr( "role", "tablist" );

		// don't allow collapsible: false and active: false / null
		if ( !options.collapsible && (options.active === false || options.active == null) ) {
			options.active = 0;
		}

		this._processPanels();
		// handle negative values
		if ( options.active < 0 ) {
			options.active += this.headers.length;
		}
		this._refresh();
	},

	_getCreateEventData: function() {
		return {
			header: this.active,
			panel: !this.active.length ? $() : this.active.next()
		};
	},

	_createIcons: function() {
		var icons = this.options.icons;
		if ( icons ) {
			$( "<span>" )
				.addClass( "ui-accordion-header-icon ui-icon " + icons.header )
				.prependTo( this.headers );
			this.active.children( ".ui-accordion-header-icon" )
				.removeClass( icons.header )
				.addClass( icons.activeHeader );
			this.headers.addClass( "ui-accordion-icons" );
		}
	},

	_destroyIcons: function() {
		this.headers
			.removeClass( "ui-accordion-icons" )
			.children( ".ui-accordion-header-icon" )
				.remove();
	},

	_destroy: function() {
		var contents;

		// clean up main element
		this.element
			.removeClass( "ui-accordion ui-widget ui-helper-reset" )
			.removeAttr( "role" );

		// clean up headers
		this.headers
			.removeClass( "ui-accordion-header ui-accordion-header-active ui-state-default " +
				"ui-corner-all ui-state-active ui-state-disabled ui-corner-top" )
			.removeAttr( "role" )
			.removeAttr( "aria-expanded" )
			.removeAttr( "aria-selected" )
			.removeAttr( "aria-controls" )
			.removeAttr( "tabIndex" )
			.removeUniqueId();

		this._destroyIcons();

		// clean up content panels
		contents = this.headers.next()
			.removeClass( "ui-helper-reset ui-widget-content ui-corner-bottom " +
				"ui-accordion-content ui-accordion-content-active ui-state-disabled" )
			.css( "display", "" )
			.removeAttr( "role" )
			.removeAttr( "aria-hidden" )
			.removeAttr( "aria-labelledby" )
			.removeUniqueId();

		if ( this.options.heightStyle !== "content" ) {
			contents.css( "height", "" );
		}
	},

	_setOption: function( key, value ) {
		if ( key === "active" ) {
			// _activate() will handle invalid values and update this.options
			this._activate( value );
			return;
		}

		if ( key === "event" ) {
			if ( this.options.event ) {
				this._off( this.headers, this.options.event );
			}
			this._setupEvents( value );
		}

		this._super( key, value );

		// setting collapsible: false while collapsed; open first panel
		if ( key === "collapsible" && !value && this.options.active === false ) {
			this._activate( 0 );
		}

		if ( key === "icons" ) {
			this._destroyIcons();
			if ( value ) {
				this._createIcons();
			}
		}

		// #5332 - opacity doesn't cascade to positioned elements in IE
		// so we need to add the disabled class to the headers and panels
		if ( key === "disabled" ) {
			this.element
				.toggleClass( "ui-state-disabled", !!value )
				.attr( "aria-disabled", value );
			this.headers.add( this.headers.next() )
				.toggleClass( "ui-state-disabled", !!value );
		}
	},

	_keydown: function( event ) {
		if ( event.altKey || event.ctrlKey ) {
			return;
		}

		var keyCode = $.ui.keyCode,
			length = this.headers.length,
			currentIndex = this.headers.index( event.target ),
			toFocus = false;

		switch ( event.keyCode ) {
			case keyCode.RIGHT:
			case keyCode.DOWN:
				toFocus = this.headers[ ( currentIndex + 1 ) % length ];
				break;
			case keyCode.LEFT:
			case keyCode.UP:
				toFocus = this.headers[ ( currentIndex - 1 + length ) % length ];
				break;
			case keyCode.SPACE:
			case keyCode.ENTER:
				this._eventHandler( event );
				break;
			case keyCode.HOME:
				toFocus = this.headers[ 0 ];
				break;
			case keyCode.END:
				toFocus = this.headers[ length - 1 ];
				break;
		}

		if ( toFocus ) {
			$( event.target ).attr( "tabIndex", -1 );
			$( toFocus ).attr( "tabIndex", 0 );
			toFocus.focus();
			event.preventDefault();
		}
	},

	_panelKeyDown: function( event ) {
		if ( event.keyCode === $.ui.keyCode.UP && event.ctrlKey ) {
			$( event.currentTarget ).prev().focus();
		}
	},

	refresh: function() {
		var options = this.options;
		this._processPanels();

		// was collapsed or no panel
		if ( ( options.active === false && options.collapsible === true ) || !this.headers.length ) {
			options.active = false;
			this.active = $();
		// active false only when collapsible is true
		} else if ( options.active === false ) {
			this._activate( 0 );
		// was active, but active panel is gone
		} else if ( this.active.length && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {
			// all remaining panel are disabled
			if ( this.headers.length === this.headers.find(".ui-state-disabled").length ) {
				options.active = false;
				this.active = $();
			// activate previous panel
			} else {
				this._activate( Math.max( 0, options.active - 1 ) );
			}
		// was active, active panel still exists
		} else {
			// make sure active index is correct
			options.active = this.headers.index( this.active );
		}

		this._destroyIcons();

		this._refresh();
	},

	_processPanels: function() {
		var prevHeaders = this.headers,
			prevPanels = this.panels;

		this.headers = this.element.find( this.options.header )
			.addClass( "ui-accordion-header ui-state-default ui-corner-all" );

		this.panels = this.headers.next()
			.addClass( "ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom" )
			.filter( ":not(.ui-accordion-content-active)" )
			.hide();

		// Avoid memory leaks (#10056)
		if ( prevPanels ) {
			this._off( prevHeaders.not( this.headers ) );
			this._off( prevPanels.not( this.panels ) );
		}
	},

	_refresh: function() {
		var maxHeight,
			options = this.options,
			heightStyle = options.heightStyle,
			parent = this.element.parent();

		this.active = this._findActive( options.active )
			.addClass( "ui-accordion-header-active ui-state-active ui-corner-top" )
			.removeClass( "ui-corner-all" );
		this.active.next()
			.addClass( "ui-accordion-content-active" )
			.show();

		this.headers
			.attr( "role", "tab" )
			.each(function() {
				var header = $( this ),
					headerId = header.uniqueId().attr( "id" ),
					panel = header.next(),
					panelId = panel.uniqueId().attr( "id" );
				header.attr( "aria-controls", panelId );
				panel.attr( "aria-labelledby", headerId );
			})
			.next()
				.attr( "role", "tabpanel" );

		this.headers
			.not( this.active )
			.attr({
				"aria-selected": "false",
				"aria-expanded": "false",
				tabIndex: -1
			})
			.next()
				.attr({
					"aria-hidden": "true"
				})
				.hide();

		// make sure at least one header is in the tab order
		if ( !this.active.length ) {
			this.headers.eq( 0 ).attr( "tabIndex", 0 );
		} else {
			this.active.attr({
				"aria-selected": "true",
				"aria-expanded": "true",
				tabIndex: 0
			})
			.next()
				.attr({
					"aria-hidden": "false"
				});
		}

		this._createIcons();

		this._setupEvents( options.event );

		if ( heightStyle === "fill" ) {
			maxHeight = parent.height();
			this.element.siblings( ":visible" ).each(function() {
				var elem = $( this ),
					position = elem.css( "position" );

				if ( position === "absolute" || position === "fixed" ) {
					return;
				}
				maxHeight -= elem.outerHeight( true );
			});

			this.headers.each(function() {
				maxHeight -= $( this ).outerHeight( true );
			});

			this.headers.next()
				.each(function() {
					$( this ).height( Math.max( 0, maxHeight -
						$( this ).innerHeight() + $( this ).height() ) );
				})
				.css( "overflow", "auto" );
		} else if ( heightStyle === "auto" ) {
			maxHeight = 0;
			this.headers.next()
				.each(function() {
					maxHeight = Math.max( maxHeight, $( this ).css( "height", "" ).height() );
				})
				.height( maxHeight );
		}
	},

	_activate: function( index ) {
		var active = this._findActive( index )[ 0 ];

		// trying to activate the already active panel
		if ( active === this.active[ 0 ] ) {
			return;
		}

		// trying to collapse, simulate a click on the currently active header
		active = active || this.active[ 0 ];

		this._eventHandler({
			target: active,
			currentTarget: active,
			preventDefault: $.noop
		});
	},

	_findActive: function( selector ) {
		return typeof selector === "number" ? this.headers.eq( selector ) : $();
	},

	_setupEvents: function( event ) {
		var events = {
			keydown: "_keydown"
		};
		if ( event ) {
			$.each( event.split( " " ), function( index, eventName ) {
				events[ eventName ] = "_eventHandler";
			});
		}

		this._off( this.headers.add( this.headers.next() ) );
		this._on( this.headers, events );
		this._on( this.headers.next(), { keydown: "_panelKeyDown" });
		this._hoverable( this.headers );
		this._focusable( this.headers );
	},

	_eventHandler: function( event ) {
		var options = this.options,
			active = this.active,
			clicked = $( event.currentTarget ),
			clickedIsActive = clicked[ 0 ] === active[ 0 ],
			collapsing = clickedIsActive && options.collapsible,
			toShow = collapsing ? $() : clicked.next(),
			toHide = active.next(),
			eventData = {
				oldHeader: active,
				oldPanel: toHide,
				newHeader: collapsing ? $() : clicked,
				newPanel: toShow
			};

		event.preventDefault();

		if (
				// click on active header, but not collapsible
				( clickedIsActive && !options.collapsible ) ||
				// allow canceling activation
				( this._trigger( "beforeActivate", event, eventData ) === false ) ) {
			return;
		}

		options.active = collapsing ? false : this.headers.index( clicked );

		// when the call to ._toggle() comes after the class changes
		// it causes a very odd bug in IE 8 (see #6720)
		this.active = clickedIsActive ? $() : clicked;
		this._toggle( eventData );

		// switch classes
		// corner classes on the previously active header stay after the animation
		active.removeClass( "ui-accordion-header-active ui-state-active" );
		if ( options.icons ) {
			active.children( ".ui-accordion-header-icon" )
				.removeClass( options.icons.activeHeader )
				.addClass( options.icons.header );
		}

		if ( !clickedIsActive ) {
			clicked
				.removeClass( "ui-corner-all" )
				.addClass( "ui-accordion-header-active ui-state-active ui-corner-top" );
			if ( options.icons ) {
				clicked.children( ".ui-accordion-header-icon" )
					.removeClass( options.icons.header )
					.addClass( options.icons.activeHeader );
			}

			clicked
				.next()
				.addClass( "ui-accordion-content-active" );
		}
	},

	_toggle: function( data ) {
		var toShow = data.newPanel,
			toHide = this.prevShow.length ? this.prevShow : data.oldPanel;

		// handle activating a panel during the animation for another activation
		this.prevShow.add( this.prevHide ).stop( true, true );
		this.prevShow = toShow;
		this.prevHide = toHide;

		if ( this.options.animate ) {
			this._animate( toShow, toHide, data );
		} else {
			toHide.hide();
			toShow.show();
			this._toggleComplete( data );
		}

		toHide.attr({
			"aria-hidden": "true"
		});
		toHide.prev().attr({
			"aria-selected": "false",
			"aria-expanded": "false"
		});
		// if we're switching panels, remove the old header from the tab order
		// if we're opening from collapsed state, remove the previous header from the tab order
		// if we're collapsing, then keep the collapsing header in the tab order
		if ( toShow.length && toHide.length ) {
			toHide.prev().attr({
				"tabIndex": -1,
				"aria-expanded": "false"
			});
		} else if ( toShow.length ) {
			this.headers.filter(function() {
				return parseInt( $( this ).attr( "tabIndex" ), 10 ) === 0;
			})
			.attr( "tabIndex", -1 );
		}

		toShow
			.attr( "aria-hidden", "false" )
			.prev()
				.attr({
					"aria-selected": "true",
					"aria-expanded": "true",
					tabIndex: 0
				});
	},

	_animate: function( toShow, toHide, data ) {
		var total, easing, duration,
			that = this,
			adjust = 0,
			boxSizing = toShow.css( "box-sizing" ),
			down = toShow.length &&
				( !toHide.length || ( toShow.index() < toHide.index() ) ),
			animate = this.options.animate || {},
			options = down && animate.down || animate,
			complete = function() {
				that._toggleComplete( data );
			};

		if ( typeof options === "number" ) {
			duration = options;
		}
		if ( typeof options === "string" ) {
			easing = options;
		}
		// fall back from options to animation in case of partial down settings
		easing = easing || options.easing || animate.easing;
		duration = duration || options.duration || animate.duration;

		if ( !toHide.length ) {
			return toShow.animate( this.showProps, duration, easing, complete );
		}
		if ( !toShow.length ) {
			return toHide.animate( this.hideProps, duration, easing, complete );
		}

		total = toShow.show().outerHeight();
		toHide.animate( this.hideProps, {
			duration: duration,
			easing: easing,
			step: function( now, fx ) {
				fx.now = Math.round( now );
			}
		});
		toShow
			.hide()
			.animate( this.showProps, {
				duration: duration,
				easing: easing,
				complete: complete,
				step: function( now, fx ) {
					fx.now = Math.round( now );
					if ( fx.prop !== "height" ) {
						if ( boxSizing === "content-box" ) {
							adjust += fx.now;
						}
					} else if ( that.options.heightStyle !== "content" ) {
						fx.now = Math.round( total - toHide.outerHeight() - adjust );
						adjust = 0;
					}
				}
			});
	},

	_toggleComplete: function( data ) {
		var toHide = data.oldPanel;

		toHide
			.removeClass( "ui-accordion-content-active" )
			.prev()
				.removeClass( "ui-corner-top" )
				.addClass( "ui-corner-all" );

		// Work around for rendering bug in IE (#5421)
		if ( toHide.length ) {
			toHide.parent()[ 0 ].className = toHide.parent()[ 0 ].className;
		}
		this._trigger( "activate", null, data );
	}
});


/*!
 * jQuery UI Menu 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/menu/
 */


var menu = $.widget( "ui.menu", {
	version: "1.11.4",
	defaultElement: "<ul>",
	delay: 300,
	options: {
		icons: {
			submenu: "ui-icon-carat-1-e"
		},
		items: "> *",
		menus: "ul",
		position: {
			my: "left-1 top",
			at: "right top"
		},
		role: "menu",

		// callbacks
		blur: null,
		focus: null,
		select: null
	},

	_create: function() {
		this.activeMenu = this.element;

		// Flag used to prevent firing of the click handler
		// as the event bubbles up through nested menus
		this.mouseHandled = false;
		this.element
			.uniqueId()
			.addClass( "ui-menu ui-widget ui-widget-content" )
			.toggleClass( "ui-menu-icons", !!this.element.find( ".ui-icon" ).length )
			.attr({
				role: this.options.role,
				tabIndex: 0
			});

		if ( this.options.disabled ) {
			this.element
				.addClass( "ui-state-disabled" )
				.attr( "aria-disabled", "true" );
		}

		this._on({
			// Prevent focus from sticking to links inside menu after clicking
			// them (focus should always stay on UL during navigation).
			"mousedown .ui-menu-item": function( event ) {
				event.preventDefault();
			},
			"click .ui-menu-item": function( event ) {
				var target = $( event.target );
				if ( !this.mouseHandled && target.not( ".ui-state-disabled" ).length ) {
					this.select( event );

					// Only set the mouseHandled flag if the event will bubble, see #9469.
					if ( !event.isPropagationStopped() ) {
						this.mouseHandled = true;
					}

					// Open submenu on click
					if ( target.has( ".ui-menu" ).length ) {
						this.expand( event );
					} else if ( !this.element.is( ":focus" ) && $( this.document[ 0 ].activeElement ).closest( ".ui-menu" ).length ) {

						// Redirect focus to the menu
						this.element.trigger( "focus", [ true ] );

						// If the active item is on the top level, let it stay active.
						// Otherwise, blur the active item since it is no longer visible.
						if ( this.active && this.active.parents( ".ui-menu" ).length === 1 ) {
							clearTimeout( this.timer );
						}
					}
				}
			},
			"mouseenter .ui-menu-item": function( event ) {
				// Ignore mouse events while typeahead is active, see #10458.
				// Prevents focusing the wrong item when typeahead causes a scroll while the mouse
				// is over an item in the menu
				if ( this.previousFilter ) {
					return;
				}
				var target = $( event.currentTarget );
				// Remove ui-state-active class from siblings of the newly focused menu item
				// to avoid a jump caused by adjacent elements both having a class with a border
				target.siblings( ".ui-state-active" ).removeClass( "ui-state-active" );
				this.focus( event, target );
			},
			mouseleave: "collapseAll",
			"mouseleave .ui-menu": "collapseAll",
			focus: function( event, keepActiveItem ) {
				// If there's already an active item, keep it active
				// If not, activate the first item
				var item = this.active || this.element.find( this.options.items ).eq( 0 );

				if ( !keepActiveItem ) {
					this.focus( event, item );
				}
			},
			blur: function( event ) {
				this._delay(function() {
					if ( !$.contains( this.element[0], this.document[0].activeElement ) ) {
						this.collapseAll( event );
					}
				});
			},
			keydown: "_keydown"
		});

		this.refresh();

		// Clicks outside of a menu collapse any open menus
		this._on( this.document, {
			click: function( event ) {
				if ( this._closeOnDocumentClick( event ) ) {
					this.collapseAll( event );
				}

				// Reset the mouseHandled flag
				this.mouseHandled = false;
			}
		});
	},

	_destroy: function() {
		// Destroy (sub)menus
		this.element
			.removeAttr( "aria-activedescendant" )
			.find( ".ui-menu" ).addBack()
				.removeClass( "ui-menu ui-widget ui-widget-content ui-menu-icons ui-front" )
				.removeAttr( "role" )
				.removeAttr( "tabIndex" )
				.removeAttr( "aria-labelledby" )
				.removeAttr( "aria-expanded" )
				.removeAttr( "aria-hidden" )
				.removeAttr( "aria-disabled" )
				.removeUniqueId()
				.show();

		// Destroy menu items
		this.element.find( ".ui-menu-item" )
			.removeClass( "ui-menu-item" )
			.removeAttr( "role" )
			.removeAttr( "aria-disabled" )
			.removeUniqueId()
			.removeClass( "ui-state-hover" )
			.removeAttr( "tabIndex" )
			.removeAttr( "role" )
			.removeAttr( "aria-haspopup" )
			.children().each( function() {
				var elem = $( this );
				if ( elem.data( "ui-menu-submenu-carat" ) ) {
					elem.remove();
				}
			});

		// Destroy menu dividers
		this.element.find( ".ui-menu-divider" ).removeClass( "ui-menu-divider ui-widget-content" );
	},

	_keydown: function( event ) {
		var match, prev, character, skip,
			preventDefault = true;

		switch ( event.keyCode ) {
		case $.ui.keyCode.PAGE_UP:
			this.previousPage( event );
			break;
		case $.ui.keyCode.PAGE_DOWN:
			this.nextPage( event );
			break;
		case $.ui.keyCode.HOME:
			this._move( "first", "first", event );
			break;
		case $.ui.keyCode.END:
			this._move( "last", "last", event );
			break;
		case $.ui.keyCode.UP:
			this.previous( event );
			break;
		case $.ui.keyCode.DOWN:
			this.next( event );
			break;
		case $.ui.keyCode.LEFT:
			this.collapse( event );
			break;
		case $.ui.keyCode.RIGHT:
			if ( this.active && !this.active.is( ".ui-state-disabled" ) ) {
				this.expand( event );
			}
			break;
		case $.ui.keyCode.ENTER:
		case $.ui.keyCode.SPACE:
			this._activate( event );
			break;
		case $.ui.keyCode.ESCAPE:
			this.collapse( event );
			break;
		default:
			preventDefault = false;
			prev = this.previousFilter || "";
			character = String.fromCharCode( event.keyCode );
			skip = false;

			clearTimeout( this.filterTimer );

			if ( character === prev ) {
				skip = true;
			} else {
				character = prev + character;
			}

			match = this._filterMenuItems( character );
			match = skip && match.index( this.active.next() ) !== -1 ?
				this.active.nextAll( ".ui-menu-item" ) :
				match;

			// If no matches on the current filter, reset to the last character pressed
			// to move down the menu to the first item that starts with that character
			if ( !match.length ) {
				character = String.fromCharCode( event.keyCode );
				match = this._filterMenuItems( character );
			}

			if ( match.length ) {
				this.focus( event, match );
				this.previousFilter = character;
				this.filterTimer = this._delay(function() {
					delete this.previousFilter;
				}, 1000 );
			} else {
				delete this.previousFilter;
			}
		}

		if ( preventDefault ) {
			event.preventDefault();
		}
	},

	_activate: function( event ) {
		if ( !this.active.is( ".ui-state-disabled" ) ) {
			if ( this.active.is( "[aria-haspopup='true']" ) ) {
				this.expand( event );
			} else {
				this.select( event );
			}
		}
	},

	refresh: function() {
		var menus, items,
			that = this,
			icon = this.options.icons.submenu,
			submenus = this.element.find( this.options.menus );

		this.element.toggleClass( "ui-menu-icons", !!this.element.find( ".ui-icon" ).length );

		// Initialize nested menus
		submenus.filter( ":not(.ui-menu)" )
			.addClass( "ui-menu ui-widget ui-widget-content ui-front" )
			.hide()
			.attr({
				role: this.options.role,
				"aria-hidden": "true",
				"aria-expanded": "false"
			})
			.each(function() {
				var menu = $( this ),
					item = menu.parent(),
					submenuCarat = $( "<span>" )
						.addClass( "ui-menu-icon ui-icon " + icon )
						.data( "ui-menu-submenu-carat", true );

				item
					.attr( "aria-haspopup", "true" )
					.prepend( submenuCarat );
				menu.attr( "aria-labelledby", item.attr( "id" ) );
			});

		menus = submenus.add( this.element );
		items = menus.find( this.options.items );

		// Initialize menu-items containing spaces and/or dashes only as dividers
		items.not( ".ui-menu-item" ).each(function() {
			var item = $( this );
			if ( that._isDivider( item ) ) {
				item.addClass( "ui-widget-content ui-menu-divider" );
			}
		});

		// Don't refresh list items that are already adapted
		items.not( ".ui-menu-item, .ui-menu-divider" )
			.addClass( "ui-menu-item" )
			.uniqueId()
			.attr({
				tabIndex: -1,
				role: this._itemRole()
			});

		// Add aria-disabled attribute to any disabled menu item
		items.filter( ".ui-state-disabled" ).attr( "aria-disabled", "true" );

		// If the active item has been removed, blur the menu
		if ( this.active && !$.contains( this.element[ 0 ], this.active[ 0 ] ) ) {
			this.blur();
		}
	},

	_itemRole: function() {
		return {
			menu: "menuitem",
			listbox: "option"
		}[ this.options.role ];
	},

	_setOption: function( key, value ) {
		if ( key === "icons" ) {
			this.element.find( ".ui-menu-icon" )
				.removeClass( this.options.icons.submenu )
				.addClass( value.submenu );
		}
		if ( key === "disabled" ) {
			this.element
				.toggleClass( "ui-state-disabled", !!value )
				.attr( "aria-disabled", value );
		}
		this._super( key, value );
	},

	focus: function( event, item ) {
		var nested, focused;
		this.blur( event, event && event.type === "focus" );

		this._scrollIntoView( item );

		this.active = item.first();
		focused = this.active.addClass( "ui-state-focus" ).removeClass( "ui-state-active" );
		// Only update aria-activedescendant if there's a role
		// otherwise we assume focus is managed elsewhere
		if ( this.options.role ) {
			this.element.attr( "aria-activedescendant", focused.attr( "id" ) );
		}

		// Highlight active parent menu item, if any
		this.active
			.parent()
			.closest( ".ui-menu-item" )
			.addClass( "ui-state-active" );

		if ( event && event.type === "keydown" ) {
			this._close();
		} else {
			this.timer = this._delay(function() {
				this._close();
			}, this.delay );
		}

		nested = item.children( ".ui-menu" );
		if ( nested.length && event && ( /^mouse/.test( event.type ) ) ) {
			this._startOpening(nested);
		}
		this.activeMenu = item.parent();

		this._trigger( "focus", event, { item: item } );
	},

	_scrollIntoView: function( item ) {
		var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
		if ( this._hasScroll() ) {
			borderTop = parseFloat( $.css( this.activeMenu[0], "borderTopWidth" ) ) || 0;
			paddingTop = parseFloat( $.css( this.activeMenu[0], "paddingTop" ) ) || 0;
			offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
			scroll = this.activeMenu.scrollTop();
			elementHeight = this.activeMenu.height();
			itemHeight = item.outerHeight();

			if ( offset < 0 ) {
				this.activeMenu.scrollTop( scroll + offset );
			} else if ( offset + itemHeight > elementHeight ) {
				this.activeMenu.scrollTop( scroll + offset - elementHeight + itemHeight );
			}
		}
	},

	blur: function( event, fromFocus ) {
		if ( !fromFocus ) {
			clearTimeout( this.timer );
		}

		if ( !this.active ) {
			return;
		}

		this.active.removeClass( "ui-state-focus" );
		this.active = null;

		this._trigger( "blur", event, { item: this.active } );
	},

	_startOpening: function( submenu ) {
		clearTimeout( this.timer );

		// Don't open if already open fixes a Firefox bug that caused a .5 pixel
		// shift in the submenu position when mousing over the carat icon
		if ( submenu.attr( "aria-hidden" ) !== "true" ) {
			return;
		}

		this.timer = this._delay(function() {
			this._close();
			this._open( submenu );
		}, this.delay );
	},

	_open: function( submenu ) {
		var position = $.extend({
			of: this.active
		}, this.options.position );

		clearTimeout( this.timer );
		this.element.find( ".ui-menu" ).not( submenu.parents( ".ui-menu" ) )
			.hide()
			.attr( "aria-hidden", "true" );

		submenu
			.show()
			.removeAttr( "aria-hidden" )
			.attr( "aria-expanded", "true" )
			.position( position );
	},

	collapseAll: function( event, all ) {
		clearTimeout( this.timer );
		this.timer = this._delay(function() {
			// If we were passed an event, look for the submenu that contains the event
			var currentMenu = all ? this.element :
				$( event && event.target ).closest( this.element.find( ".ui-menu" ) );

			// If we found no valid submenu ancestor, use the main menu to close all sub menus anyway
			if ( !currentMenu.length ) {
				currentMenu = this.element;
			}

			this._close( currentMenu );

			this.blur( event );
			this.activeMenu = currentMenu;
		}, this.delay );
	},

	// With no arguments, closes the currently active menu - if nothing is active
	// it closes all menus.  If passed an argument, it will search for menus BELOW
	_close: function( startMenu ) {
		if ( !startMenu ) {
			startMenu = this.active ? this.active.parent() : this.element;
		}

		startMenu
			.find( ".ui-menu" )
				.hide()
				.attr( "aria-hidden", "true" )
				.attr( "aria-expanded", "false" )
			.end()
			.find( ".ui-state-active" ).not( ".ui-state-focus" )
				.removeClass( "ui-state-active" );
	},

	_closeOnDocumentClick: function( event ) {
		return !$( event.target ).closest( ".ui-menu" ).length;
	},

	_isDivider: function( item ) {

		// Match hyphen, em dash, en dash
		return !/[^\-\u2014\u2013\s]/.test( item.text() );
	},

	collapse: function( event ) {
		var newItem = this.active &&
			this.active.parent().closest( ".ui-menu-item", this.element );
		if ( newItem && newItem.length ) {
			this._close();
			this.focus( event, newItem );
		}
	},

	expand: function( event ) {
		var newItem = this.active &&
			this.active
				.children( ".ui-menu " )
				.find( this.options.items )
				.first();

		if ( newItem && newItem.length ) {
			this._open( newItem.parent() );

			// Delay so Firefox will not hide activedescendant change in expanding submenu from AT
			this._delay(function() {
				this.focus( event, newItem );
			});
		}
	},

	next: function( event ) {
		this._move( "next", "first", event );
	},

	previous: function( event ) {
		this._move( "prev", "last", event );
	},

	isFirstItem: function() {
		return this.active && !this.active.prevAll( ".ui-menu-item" ).length;
	},

	isLastItem: function() {
		return this.active && !this.active.nextAll( ".ui-menu-item" ).length;
	},

	_move: function( direction, filter, event ) {
		var next;
		if ( this.active ) {
			if ( direction === "first" || direction === "last" ) {
				next = this.active
					[ direction === "first" ? "prevAll" : "nextAll" ]( ".ui-menu-item" )
					.eq( -1 );
			} else {
				next = this.active
					[ direction + "All" ]( ".ui-menu-item" )
					.eq( 0 );
			}
		}
		if ( !next || !next.length || !this.active ) {
			next = this.activeMenu.find( this.options.items )[ filter ]();
		}

		this.focus( event, next );
	},

	nextPage: function( event ) {
		var item, base, height;

		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isLastItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.nextAll( ".ui-menu-item" ).each(function() {
				item = $( this );
				return item.offset().top - base - height < 0;
			});

			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.find( this.options.items )
				[ !this.active ? "first" : "last" ]() );
		}
	},

	previousPage: function( event ) {
		var item, base, height;
		if ( !this.active ) {
			this.next( event );
			return;
		}
		if ( this.isFirstItem() ) {
			return;
		}
		if ( this._hasScroll() ) {
			base = this.active.offset().top;
			height = this.element.height();
			this.active.prevAll( ".ui-menu-item" ).each(function() {
				item = $( this );
				return item.offset().top - base + height > 0;
			});

			this.focus( event, item );
		} else {
			this.focus( event, this.activeMenu.find( this.options.items ).first() );
		}
	},

	_hasScroll: function() {
		return this.element.outerHeight() < this.element.prop( "scrollHeight" );
	},

	select: function( event ) {
		// TODO: It should never be possible to not have an active item at this
		// point, but the tests don't trigger mouseenter before click.
		this.active = this.active || $( event.target ).closest( ".ui-menu-item" );
		var ui = { item: this.active };
		if ( !this.active.has( ".ui-menu" ).length ) {
			this.collapseAll( event, true );
		}
		this._trigger( "select", event, ui );
	},

	_filterMenuItems: function(character) {
		var escapedCharacter = character.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" ),
			regex = new RegExp( "^" + escapedCharacter, "i" );

		return this.activeMenu
			.find( this.options.items )

			// Only match on items, not dividers or other content (#10571)
			.filter( ".ui-menu-item" )
			.filter(function() {
				return regex.test( $.trim( $( this ).text() ) );
			});
	}
});


/*!
 * jQuery UI Autocomplete 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/autocomplete/
 */


$.widget( "ui.autocomplete", {
	version: "1.11.4",
	defaultElement: "<input>",
	options: {
		appendTo: null,
		autoFocus: false,
		delay: 300,
		minLength: 1,
		position: {
			my: "left top",
			at: "left bottom",
			collision: "none"
		},
		source: null,

		// callbacks
		change: null,
		close: null,
		focus: null,
		open: null,
		response: null,
		search: null,
		select: null
	},

	requestIndex: 0,
	pending: 0,

	_create: function() {
		// Some browsers only repeat keydown events, not keypress events,
		// so we use the suppressKeyPress flag to determine if we've already
		// handled the keydown event. #7269
		// Unfortunately the code for & in keypress is the same as the up arrow,
		// so we use the suppressKeyPressRepeat flag to avoid handling keypress
		// events when we know the keydown event was used to modify the
		// search term. #7799
		var suppressKeyPress, suppressKeyPressRepeat, suppressInput,
			nodeName = this.element[ 0 ].nodeName.toLowerCase(),
			isTextarea = nodeName === "textarea",
			isInput = nodeName === "input";

		this.isMultiLine =
			// Textareas are always multi-line
			isTextarea ? true :
			// Inputs are always single-line, even if inside a contentEditable element
			// IE also treats inputs as contentEditable
			isInput ? false :
			// All other element types are determined by whether or not they're contentEditable
			this.element.prop( "isContentEditable" );

		this.valueMethod = this.element[ isTextarea || isInput ? "val" : "text" ];
		this.isNewMenu = true;

		this.element
			.addClass( "ui-autocomplete-input" )
			.attr( "autocomplete", "off" );

		this._on( this.element, {
			keydown: function( event ) {
				if ( this.element.prop( "readOnly" ) ) {
					suppressKeyPress = true;
					suppressInput = true;
					suppressKeyPressRepeat = true;
					return;
				}

				suppressKeyPress = false;
				suppressInput = false;
				suppressKeyPressRepeat = false;
				var keyCode = $.ui.keyCode;
				switch ( event.keyCode ) {
				case keyCode.PAGE_UP:
					suppressKeyPress = true;
					this._move( "previousPage", event );
					break;
				case keyCode.PAGE_DOWN:
					suppressKeyPress = true;
					this._move( "nextPage", event );
					break;
				case keyCode.UP:
					suppressKeyPress = true;
					this._keyEvent( "previous", event );
					break;
				case keyCode.DOWN:
					suppressKeyPress = true;
					this._keyEvent( "next", event );
					break;
				case keyCode.ENTER:
					// when menu is open and has focus
					if ( this.menu.active ) {
						// #6055 - Opera still allows the keypress to occur
						// which causes forms to submit
						suppressKeyPress = true;
						event.preventDefault();
						this.menu.select( event );
					}
					break;
				case keyCode.TAB:
					if ( this.menu.active ) {
						this.menu.select( event );
					}
					break;
				case keyCode.ESCAPE:
					if ( this.menu.element.is( ":visible" ) ) {
						if ( !this.isMultiLine ) {
							this._value( this.term );
						}
						this.close( event );
						// Different browsers have different default behavior for escape
						// Single press can mean undo or clear
						// Double press in IE means clear the whole form
						event.preventDefault();
					}
					break;
				default:
					suppressKeyPressRepeat = true;
					// search timeout should be triggered before the input value is changed
					this._searchTimeout( event );
					break;
				}
			},
			keypress: function( event ) {
				if ( suppressKeyPress ) {
					suppressKeyPress = false;
					if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {
						event.preventDefault();
					}
					return;
				}
				if ( suppressKeyPressRepeat ) {
					return;
				}

				// replicate some key handlers to allow them to repeat in Firefox and Opera
				var keyCode = $.ui.keyCode;
				switch ( event.keyCode ) {
				case keyCode.PAGE_UP:
					this._move( "previousPage", event );
					break;
				case keyCode.PAGE_DOWN:
					this._move( "nextPage", event );
					break;
				case keyCode.UP:
					this._keyEvent( "previous", event );
					break;
				case keyCode.DOWN:
					this._keyEvent( "next", event );
					break;
				}
			},
			input: function( event ) {
				if ( suppressInput ) {
					suppressInput = false;
					event.preventDefault();
					return;
				}
				this._searchTimeout( event );
			},
			focus: function() {
				this.selectedItem = null;
				this.previous = this._value();
			},
			blur: function( event ) {
				if ( this.cancelBlur ) {
					delete this.cancelBlur;
					return;
				}

				clearTimeout( this.searching );
				this.close( event );
				this._change( event );
			}
		});

		this._initSource();
		this.menu = $( "<ul>" )
			.addClass( "ui-autocomplete ui-front" )
			.appendTo( this._appendTo() )
			.menu({
				// disable ARIA support, the live region takes care of that
				role: null
			})
			.hide()
			.menu( "instance" );

		this._on( this.menu.element, {
			mousedown: function( event ) {
				// prevent moving focus out of the text field
				event.preventDefault();

				// IE doesn't prevent moving focus even with event.preventDefault()
				// so we set a flag to know when we should ignore the blur event
				this.cancelBlur = true;
				this._delay(function() {
					delete this.cancelBlur;
				});

				// clicking on the scrollbar causes focus to shift to the body
				// but we can't detect a mouseup or a click immediately afterward
				// so we have to track the next mousedown and close the menu if
				// the user clicks somewhere outside of the autocomplete
				var menuElement = this.menu.element[ 0 ];
				if ( !$( event.target ).closest( ".ui-menu-item" ).length ) {
					this._delay(function() {
						var that = this;
						this.document.one( "mousedown", function( event ) {
							if ( event.target !== that.element[ 0 ] &&
									event.target !== menuElement &&
									!$.contains( menuElement, event.target ) ) {
								that.close();
							}
						});
					});
				}
			},
			menufocus: function( event, ui ) {
				var label, item;
				// support: Firefox
				// Prevent accidental activation of menu items in Firefox (#7024 #9118)
				if ( this.isNewMenu ) {
					this.isNewMenu = false;
					if ( event.originalEvent && /^mouse/.test( event.originalEvent.type ) ) {
						this.menu.blur();

						this.document.one( "mousemove", function() {
							$( event.target ).trigger( event.originalEvent );
						});

						return;
					}
				}

				item = ui.item.data( "ui-autocomplete-item" );
				if ( false !== this._trigger( "focus", event, { item: item } ) ) {
					// use value to match what will end up in the input, if it was a key event
					if ( event.originalEvent && /^key/.test( event.originalEvent.type ) ) {
						this._value( item.value );
					}
				}

				// Announce the value in the liveRegion
				label = ui.item.attr( "aria-label" ) || item.value;
				if ( label && $.trim( label ).length ) {
					this.liveRegion.children().hide();
					$( "<div>" ).text( label ).appendTo( this.liveRegion );
				}
			},
			menuselect: function( event, ui ) {
				var item = ui.item.data( "ui-autocomplete-item" ),
					previous = this.previous;

				// only trigger when focus was lost (click on menu)
				if ( this.element[ 0 ] !== this.document[ 0 ].activeElement ) {
					this.element.focus();
					this.previous = previous;
					// #6109 - IE triggers two focus events and the second
					// is asynchronous, so we need to reset the previous
					// term synchronously and asynchronously :-(
					this._delay(function() {
						this.previous = previous;
						this.selectedItem = item;
					});
				}

				if ( false !== this._trigger( "select", event, { item: item } ) ) {
					this._value( item.value );
				}
				// reset the term after the select event
				// this allows custom select handling to work properly
				this.term = this._value();

				this.close( event );
				this.selectedItem = item;
			}
		});

		this.liveRegion = $( "<span>", {
				role: "status",
				"aria-live": "assertive",
				"aria-relevant": "additions"
			})
			.addClass( "ui-helper-hidden-accessible" )
			.appendTo( this.document[ 0 ].body );

		// turning off autocomplete prevents the browser from remembering the
		// value when navigating through history, so we re-enable autocomplete
		// if the page is unloaded before the widget is destroyed. #7790
		this._on( this.window, {
			beforeunload: function() {
				this.element.removeAttr( "autocomplete" );
			}
		});
	},

	_destroy: function() {
		clearTimeout( this.searching );
		this.element
			.removeClass( "ui-autocomplete-input" )
			.removeAttr( "autocomplete" );
		this.menu.element.remove();
		this.liveRegion.remove();
	},

	_setOption: function( key, value ) {
		this._super( key, value );
		if ( key === "source" ) {
			this._initSource();
		}
		if ( key === "appendTo" ) {
			this.menu.element.appendTo( this._appendTo() );
		}
		if ( key === "disabled" && value && this.xhr ) {
			this.xhr.abort();
		}
	},

	_appendTo: function() {
		var element = this.options.appendTo;

		if ( element ) {
			element = element.jquery || element.nodeType ?
				$( element ) :
				this.document.find( element ).eq( 0 );
		}

		if ( !element || !element[ 0 ] ) {
			element = this.element.closest( ".ui-front" );
		}

		if ( !element.length ) {
			element = this.document[ 0 ].body;
		}

		return element;
	},

	_initSource: function() {
		var array, url,
			that = this;
		if ( $.isArray( this.options.source ) ) {
			array = this.options.source;
			this.source = function( request, response ) {
				response( $.ui.autocomplete.filter( array, request.term ) );
			};
		} else if ( typeof this.options.source === "string" ) {
			url = this.options.source;
			this.source = function( request, response ) {
				if ( that.xhr ) {
					that.xhr.abort();
				}
				that.xhr = $.ajax({
					url: url,
					data: request,
					dataType: "json",
					success: function( data ) {
						response( data );
					},
					error: function() {
						response([]);
					}
				});
			};
		} else {
			this.source = this.options.source;
		}
	},

	_searchTimeout: function( event ) {
		clearTimeout( this.searching );
		this.searching = this._delay(function() {

			// Search if the value has changed, or if the user retypes the same value (see #7434)
			var equalValues = this.term === this._value(),
				menuVisible = this.menu.element.is( ":visible" ),
				modifierKey = event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;

			if ( !equalValues || ( equalValues && !menuVisible && !modifierKey ) ) {
				this.selectedItem = null;
				this.search( null, event );
			}
		}, this.options.delay );
	},

	search: function( value, event ) {
		value = value != null ? value : this._value();

		// always save the actual value, not the one passed as an argument
		this.term = this._value();

		if ( value.length < this.options.minLength ) {
			return this.close( event );
		}

		if ( this._trigger( "search", event ) === false ) {
			return;
		}

		return this._search( value );
	},

	_search: function( value ) {
		this.pending++;
		this.element.addClass( "ui-autocomplete-loading" );
		this.cancelSearch = false;

		this.source( { term: value }, this._response() );
	},

	_response: function() {
		var index = ++this.requestIndex;

		return $.proxy(function( content ) {
			if ( index === this.requestIndex ) {
				this.__response( content );
			}

			this.pending--;
			if ( !this.pending ) {
				this.element.removeClass( "ui-autocomplete-loading" );
			}
		}, this );
	},

	__response: function( content ) {
		if ( content ) {
			content = this._normalize( content );
		}
		this._trigger( "response", null, { content: content } );
		if ( !this.options.disabled && content && content.length && !this.cancelSearch ) {
			this._suggest( content );
			this._trigger( "open" );
		} else {
			// use ._close() instead of .close() so we don't cancel future searches
			this._close();
		}
	},

	close: function( event ) {
		this.cancelSearch = true;
		this._close( event );
	},

	_close: function( event ) {
		if ( this.menu.element.is( ":visible" ) ) {
			this.menu.element.hide();
			this.menu.blur();
			this.isNewMenu = true;
			this._trigger( "close", event );
		}
	},

	_change: function( event ) {
		if ( this.previous !== this._value() ) {
			this._trigger( "change", event, { item: this.selectedItem } );
		}
	},

	_normalize: function( items ) {
		// assume all items have the right format when the first item is complete
		if ( items.length && items[ 0 ].label && items[ 0 ].value ) {
			return items;
		}
		return $.map( items, function( item ) {
			if ( typeof item === "string" ) {
				return {
					label: item,
					value: item
				};
			}
			return $.extend( {}, item, {
				label: item.label || item.value,
				value: item.value || item.label
			});
		});
	},

	_suggest: function( items ) {
		var ul = this.menu.element.empty();
		this._renderMenu( ul, items );
		this.isNewMenu = true;
		this.menu.refresh();

		// size and position menu
		ul.show();
		this._resizeMenu();
		ul.position( $.extend({
			of: this.element
		}, this.options.position ) );

		if ( this.options.autoFocus ) {
			this.menu.next();
		}
	},

	_resizeMenu: function() {
		var ul = this.menu.element;
		ul.outerWidth( Math.max(
			// Firefox wraps long text (possibly a rounding bug)
			// so we add 1px to avoid the wrapping (#7513)
			ul.width( "" ).outerWidth() + 1,
			this.element.outerWidth()
		) );
	},

	_renderMenu: function( ul, items ) {
		var that = this;
		$.each( items, function( index, item ) {
			that._renderItemData( ul, item );
		});
	},

	_renderItemData: function( ul, item ) {
		return this._renderItem( ul, item ).data( "ui-autocomplete-item", item );
	},

	_renderItem: function( ul, item ) {
		return $( "<li>" ).text( item.label ).appendTo( ul );
	},

	_move: function( direction, event ) {
		if ( !this.menu.element.is( ":visible" ) ) {
			this.search( null, event );
			return;
		}
		if ( this.menu.isFirstItem() && /^previous/.test( direction ) ||
				this.menu.isLastItem() && /^next/.test( direction ) ) {

			if ( !this.isMultiLine ) {
				this._value( this.term );
			}

			this.menu.blur();
			return;
		}
		this.menu[ direction ]( event );
	},

	widget: function() {
		return this.menu.element;
	},

	_value: function() {
		return this.valueMethod.apply( this.element, arguments );
	},

	_keyEvent: function( keyEvent, event ) {
		if ( !this.isMultiLine || this.menu.element.is( ":visible" ) ) {
			this._move( keyEvent, event );

			// prevents moving cursor to beginning/end of the text field in some browsers
			event.preventDefault();
		}
	}
});

$.extend( $.ui.autocomplete, {
	escapeRegex: function( value ) {
		return value.replace( /[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&" );
	},
	filter: function( array, term ) {
		var matcher = new RegExp( $.ui.autocomplete.escapeRegex( term ), "i" );
		return $.grep( array, function( value ) {
			return matcher.test( value.label || value.value || value );
		});
	}
});

// live region extension, adding a `messages` option
// NOTE: This is an experimental API. We are still investigating
// a full solution for string manipulation and internationalization.
$.widget( "ui.autocomplete", $.ui.autocomplete, {
	options: {
		messages: {
			noResults: "No search results.",
			results: function( amount ) {
				return amount + ( amount > 1 ? " results are" : " result is" ) +
					" available, use up and down arrow keys to navigate.";
			}
		}
	},

	__response: function( content ) {
		var message;
		this._superApply( arguments );
		if ( this.options.disabled || this.cancelSearch ) {
			return;
		}
		if ( content && content.length ) {
			message = this.options.messages.results( content.length );
		} else {
			message = this.options.messages.noResults;
		}
		this.liveRegion.children().hide();
		$( "<div>" ).text( message ).appendTo( this.liveRegion );
	}
});

var autocomplete = $.ui.autocomplete;


/*!
 * jQuery UI Button 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/button/
 */


var lastActive,
	baseClasses = "ui-button ui-widget ui-state-default ui-corner-all",
	typeClasses = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
	formResetHandler = function() {
		var form = $( this );
		setTimeout(function() {
			form.find( ":ui-button" ).button( "refresh" );
		}, 1 );
	},
	radioGroup = function( radio ) {
		var name = radio.name,
			form = radio.form,
			radios = $( [] );
		if ( name ) {
			name = name.replace( /'/g, "\\'" );
			if ( form ) {
				radios = $( form ).find( "[name='" + name + "'][type=radio]" );
			} else {
				radios = $( "[name='" + name + "'][type=radio]", radio.ownerDocument )
					.filter(function() {
						return !this.form;
					});
			}
		}
		return radios;
	};

$.widget( "ui.button", {
	version: "1.11.4",
	defaultElement: "<button>",
	options: {
		disabled: null,
		text: true,
		label: null,
		icons: {
			primary: null,
			secondary: null
		}
	},
	_create: function() {
		this.element.closest( "form" )
			.unbind( "reset" + this.eventNamespace )
			.bind( "reset" + this.eventNamespace, formResetHandler );

		if ( typeof this.options.disabled !== "boolean" ) {
			this.options.disabled = !!this.element.prop( "disabled" );
		} else {
			this.element.prop( "disabled", this.options.disabled );
		}

		this._determineButtonType();
		this.hasTitle = !!this.buttonElement.attr( "title" );

		var that = this,
			options = this.options,
			toggleButton = this.type === "checkbox" || this.type === "radio",
			activeClass = !toggleButton ? "ui-state-active" : "";

		if ( options.label === null ) {
			options.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html());
		}

		this._hoverable( this.buttonElement );

		this.buttonElement
			.addClass( baseClasses )
			.attr( "role", "button" )
			.bind( "mouseenter" + this.eventNamespace, function() {
				if ( options.disabled ) {
					return;
				}
				if ( this === lastActive ) {
					$( this ).addClass( "ui-state-active" );
				}
			})
			.bind( "mouseleave" + this.eventNamespace, function() {
				if ( options.disabled ) {
					return;
				}
				$( this ).removeClass( activeClass );
			})
			.bind( "click" + this.eventNamespace, function( event ) {
				if ( options.disabled ) {
					event.preventDefault();
					event.stopImmediatePropagation();
				}
			});

		// Can't use _focusable() because the element that receives focus
		// and the element that gets the ui-state-focus class are different
		this._on({
			focus: function() {
				this.buttonElement.addClass( "ui-state-focus" );
			},
			blur: function() {
				this.buttonElement.removeClass( "ui-state-focus" );
			}
		});

		if ( toggleButton ) {
			this.element.bind( "change" + this.eventNamespace, function() {
				that.refresh();
			});
		}

		if ( this.type === "checkbox" ) {
			this.buttonElement.bind( "click" + this.eventNamespace, function() {
				if ( options.disabled ) {
					return false;
				}
			});
		} else if ( this.type === "radio" ) {
			this.buttonElement.bind( "click" + this.eventNamespace, function() {
				if ( options.disabled ) {
					return false;
				}
				$( this ).addClass( "ui-state-active" );
				that.buttonElement.attr( "aria-pressed", "true" );

				var radio = that.element[ 0 ];
				radioGroup( radio )
					.not( radio )
					.map(function() {
						return $( this ).button( "widget" )[ 0 ];
					})
					.removeClass( "ui-state-active" )
					.attr( "aria-pressed", "false" );
			});
		} else {
			this.buttonElement
				.bind( "mousedown" + this.eventNamespace, function() {
					if ( options.disabled ) {
						return false;
					}
					$( this ).addClass( "ui-state-active" );
					lastActive = this;
					that.document.one( "mouseup", function() {
						lastActive = null;
					});
				})
				.bind( "mouseup" + this.eventNamespace, function() {
					if ( options.disabled ) {
						return false;
					}
					$( this ).removeClass( "ui-state-active" );
				})
				.bind( "keydown" + this.eventNamespace, function(event) {
					if ( options.disabled ) {
						return false;
					}
					if ( event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER ) {
						$( this ).addClass( "ui-state-active" );
					}
				})
				// see #8559, we bind to blur here in case the button element loses
				// focus between keydown and keyup, it would be left in an "active" state
				.bind( "keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
					$( this ).removeClass( "ui-state-active" );
				});

			if ( this.buttonElement.is("a") ) {
				this.buttonElement.keyup(function(event) {
					if ( event.keyCode === $.ui.keyCode.SPACE ) {
						// TODO pass through original event correctly (just as 2nd argument doesn't work)
						$( this ).click();
					}
				});
			}
		}

		this._setOption( "disabled", options.disabled );
		this._resetButton();
	},

	_determineButtonType: function() {
		var ancestor, labelSelector, checked;

		if ( this.element.is("[type=checkbox]") ) {
			this.type = "checkbox";
		} else if ( this.element.is("[type=radio]") ) {
			this.type = "radio";
		} else if ( this.element.is("input") ) {
			this.type = "input";
		} else {
			this.type = "button";
		}

		if ( this.type === "checkbox" || this.type === "radio" ) {
			// we don't search against the document in case the element
			// is disconnected from the DOM
			ancestor = this.element.parents().last();
			labelSelector = "label[for='" + this.element.attr("id") + "']";
			this.buttonElement = ancestor.find( labelSelector );
			if ( !this.buttonElement.length ) {
				ancestor = ancestor.length ? ancestor.siblings() : this.element.siblings();
				this.buttonElement = ancestor.filter( labelSelector );
				if ( !this.buttonElement.length ) {
					this.buttonElement = ancestor.find( labelSelector );
				}
			}
			this.element.addClass( "ui-helper-hidden-accessible" );

			checked = this.element.is( ":checked" );
			if ( checked ) {
				this.buttonElement.addClass( "ui-state-active" );
			}
			this.buttonElement.prop( "aria-pressed", checked );
		} else {
			this.buttonElement = this.element;
		}
	},

	widget: function() {
		return this.buttonElement;
	},

	_destroy: function() {
		this.element
			.removeClass( "ui-helper-hidden-accessible" );
		this.buttonElement
			.removeClass( baseClasses + " ui-state-active " + typeClasses )
			.removeAttr( "role" )
			.removeAttr( "aria-pressed" )
			.html( this.buttonElement.find(".ui-button-text").html() );

		if ( !this.hasTitle ) {
			this.buttonElement.removeAttr( "title" );
		}
	},

	_setOption: function( key, value ) {
		this._super( key, value );
		if ( key === "disabled" ) {
			this.widget().toggleClass( "ui-state-disabled", !!value );
			this.element.prop( "disabled", !!value );
			if ( value ) {
				if ( this.type === "checkbox" || this.type === "radio" ) {
					this.buttonElement.removeClass( "ui-state-focus" );
				} else {
					this.buttonElement.removeClass( "ui-state-focus ui-state-active" );
				}
			}
			return;
		}
		this._resetButton();
	},

	refresh: function() {
		//See #8237 & #8828
		var isDisabled = this.element.is( "input, button" ) ? this.element.is( ":disabled" ) : this.element.hasClass( "ui-button-disabled" );

		if ( isDisabled !== this.options.disabled ) {
			this._setOption( "disabled", isDisabled );
		}
		if ( this.type === "radio" ) {
			radioGroup( this.element[0] ).each(function() {
				if ( $( this ).is( ":checked" ) ) {
					$( this ).button( "widget" )
						.addClass( "ui-state-active" )
						.attr( "aria-pressed", "true" );
				} else {
					$( this ).button( "widget" )
						.removeClass( "ui-state-active" )
						.attr( "aria-pressed", "false" );
				}
			});
		} else if ( this.type === "checkbox" ) {
			if ( this.element.is( ":checked" ) ) {
				this.buttonElement
					.addClass( "ui-state-active" )
					.attr( "aria-pressed", "true" );
			} else {
				this.buttonElement
					.removeClass( "ui-state-active" )
					.attr( "aria-pressed", "false" );
			}
		}
	},

	_resetButton: function() {
		if ( this.type === "input" ) {
			if ( this.options.label ) {
				this.element.val( this.options.label );
			}
			return;
		}
		var buttonElement = this.buttonElement.removeClass( typeClasses ),
			buttonText = $( "<span></span>", this.document[0] )
				.addClass( "ui-button-text" )
				.html( this.options.label )
				.appendTo( buttonElement.empty() )
				.text(),
			icons = this.options.icons,
			multipleIcons = icons.primary && icons.secondary,
			buttonClasses = [];

		if ( icons.primary || icons.secondary ) {
			if ( this.options.text ) {
				buttonClasses.push( "ui-button-text-icon" + ( multipleIcons ? "s" : ( icons.primary ? "-primary" : "-secondary" ) ) );
			}

			if ( icons.primary ) {
				buttonElement.prepend( "<span class='ui-button-icon-primary ui-icon " + icons.primary + "'></span>" );
			}

			if ( icons.secondary ) {
				buttonElement.append( "<span class='ui-button-icon-secondary ui-icon " + icons.secondary + "'></span>" );
			}

			if ( !this.options.text ) {
				buttonClasses.push( multipleIcons ? "ui-button-icons-only" : "ui-button-icon-only" );

				if ( !this.hasTitle ) {
					buttonElement.attr( "title", $.trim( buttonText ) );
				}
			}
		} else {
			buttonClasses.push( "ui-button-text-only" );
		}
		buttonElement.addClass( buttonClasses.join( " " ) );
	}
});

$.widget( "ui.buttonset", {
	version: "1.11.4",
	options: {
		items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"
	},

	_create: function() {
		this.element.addClass( "ui-buttonset" );
	},

	_init: function() {
		this.refresh();
	},

	_setOption: function( key, value ) {
		if ( key === "disabled" ) {
			this.buttons.button( "option", key, value );
		}

		this._super( key, value );
	},

	refresh: function() {
		var rtl = this.element.css( "direction" ) === "rtl",
			allButtons = this.element.find( this.options.items ),
			existingButtons = allButtons.filter( ":ui-button" );

		// Initialize new buttons
		allButtons.not( ":ui-button" ).button();

		// Refresh existing buttons
		existingButtons.button( "refresh" );

		this.buttons = allButtons
			.map(function() {
				return $( this ).button( "widget" )[ 0 ];
			})
				.removeClass( "ui-corner-all ui-corner-left ui-corner-right" )
				.filter( ":first" )
					.addClass( rtl ? "ui-corner-right" : "ui-corner-left" )
				.end()
				.filter( ":last" )
					.addClass( rtl ? "ui-corner-left" : "ui-corner-right" )
				.end()
			.end();
	},

	_destroy: function() {
		this.element.removeClass( "ui-buttonset" );
		this.buttons
			.map(function() {
				return $( this ).button( "widget" )[ 0 ];
			})
				.removeClass( "ui-corner-left ui-corner-right" )
			.end()
			.button( "destroy" );
	}
});

var button = $.ui.button;


/*!
 * jQuery UI Datepicker 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/datepicker/
 */


$.extend($.ui, { datepicker: { version: "1.11.4" } });

var datepicker_instActive;

function datepicker_getZindex( elem ) {
	var position, value;
	while ( elem.length && elem[ 0 ] !== document ) {
		// Ignore z-index if position is set to a value where z-index is ignored by the browser
		// This makes behavior of this function consistent across browsers
		// WebKit always returns auto if the element is positioned
		position = elem.css( "position" );
		if ( position === "absolute" || position === "relative" || position === "fixed" ) {
			// IE returns 0 when zIndex is not specified
			// other browsers return a string
			// we ignore the case of nested elements with an explicit value of 0
			// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>
			value = parseInt( elem.css( "zIndex" ), 10 );
			if ( !isNaN( value ) && value !== 0 ) {
				return value;
			}
		}
		elem = elem.parent();
	}

	return 0;
}
/* Date picker manager.
   Use the singleton instance of this class, $.datepicker, to interact with the date picker.
   Settings for (groups of) date pickers are maintained in an instance object,
   allowing multiple different settings on the same page. */

function Datepicker() {
	this._curInst = null; // The current instance in use
	this._keyEvent = false; // If the last event was a key event
	this._disabledInputs = []; // List of date picker inputs that have been disabled
	this._datepickerShowing = false; // True if the popup picker is showing , false if not
	this._inDialog = false; // True if showing within a "dialog", false if not
	this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division
	this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class
	this._appendClass = "ui-datepicker-append"; // The name of the append marker class
	this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class
	this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class
	this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class
	this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class
	this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class
	this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class
	this.regional = []; // Available regional settings, indexed by language code
	this.regional[""] = { // Default regional settings
		closeText: "Done", // Display text for close link
		prevText: "Prev", // Display text for previous month link
		nextText: "Next", // Display text for next month link
		currentText: "Today", // Display text for current month link
		monthNames: ["January","February","March","April","May","June",
			"July","August","September","October","November","December"], // Names of months for drop-down and formatting
		monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // For formatting
		dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], // For formatting
		dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], // For formatting
		dayNamesMin: ["Su","Mo","Tu","We","Th","Fr","Sa"], // Column headings for days starting at Sunday
		weekHeader: "Wk", // Column header for week of the year
		dateFormat: "mm/dd/yy", // See format options on parseDate
		firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
		isRTL: false, // True if right-to-left language, false if left-to-right
		showMonthAfterYear: false, // True if the year select precedes month, false for month then year
		yearSuffix: "" // Additional text to append to the year in the month headers
	};
	this._defaults = { // Global defaults for all the date picker instances
		showOn: "focus", // "focus" for popup on focus,
			// "button" for trigger button, or "both" for either
		showAnim: "fadeIn", // Name of jQuery animation for popup
		showOptions: {}, // Options for enhanced animations
		defaultDate: null, // Used when field is blank: actual date,
			// +/-number for offset from today, null for today
		appendText: "", // Display text following the input box, e.g. showing the format
		buttonText: "...", // Text for trigger button
		buttonImage: "", // URL for trigger button image
		buttonImageOnly: false, // True if the image appears alone, false if it appears on a button
		hideIfNoPrevNext: false, // True to hide next/previous month links
			// if not applicable, false to just disable them
		navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links
		gotoCurrent: false, // True if today link goes back to current selection instead
		changeMonth: false, // True if month can be selected directly, false if only prev/next
		changeYear: false, // True if year can be selected directly, false if only prev/next
		yearRange: "c-10:c+10", // Range of years to display in drop-down,
			// either relative to today's year (-nn:+nn), relative to currently displayed year
			// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)
		showOtherMonths: false, // True to show dates in other months, false to leave blank
		selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable
		showWeek: false, // True to show week of the year, false to not show it
		calculateWeek: this.iso8601Week, // How to calculate the week of the year,
			// takes a Date and returns the number of the week for it
		shortYearCutoff: "+10", // Short year values < this are in the current century,
			// > this are in the previous century,
			// string value starting with "+" for current year + value
		minDate: null, // The earliest selectable date, or null for no limit
		maxDate: null, // The latest selectable date, or null for no limit
		duration: "fast", // Duration of display/closure
		beforeShowDay: null, // Function that takes a date and returns an array with
			// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",
			// [2] = cell title (optional), e.g. $.datepicker.noWeekends
		beforeShow: null, // Function that takes an input field and
			// returns a set of custom settings for the date picker
		onSelect: null, // Define a callback function when a date is selected
		onChangeMonthYear: null, // Define a callback function when the month or year is changed
		onClose: null, // Define a callback function when the datepicker is closed
		numberOfMonths: 1, // Number of months to show at a time
		showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)
		stepMonths: 1, // Number of months to step back/forward
		stepBigMonths: 12, // Number of months to step back/forward for the big links
		altField: "", // Selector for an alternate field to store selected dates into
		altFormat: "", // The date format to use for the alternate field
		constrainInput: true, // The input is constrained by the current date format
		showButtonPanel: false, // True to show button panel, false to not show it
		autoSize: false, // True to size the input for the date format, false to leave as is
		disabled: false // The initial disabled state
	};
	$.extend(this._defaults, this.regional[""]);
	this.regional.en = $.extend( true, {}, this.regional[ "" ]);
	this.regional[ "en-US" ] = $.extend( true, {}, this.regional.en );
	this.dpDiv = datepicker_bindHover($("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
}

$.extend(Datepicker.prototype, {
	/* Class name added to elements to indicate already configured with a date picker. */
	markerClassName: "hasDatepicker",

	//Keep track of the maximum number of rows displayed (see #7043)
	maxRows: 4,

	// TODO rename to "widget" when switching to widget factory
	_widgetDatepicker: function() {
		return this.dpDiv;
	},

	/* Override the default settings for all instances of the date picker.
	 * @param  settings  object - the new settings to use as defaults (anonymous object)
	 * @return the manager object
	 */
	setDefaults: function(settings) {
		datepicker_extendRemove(this._defaults, settings || {});
		return this;
	},

	/* Attach the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 * @param  settings  object - the new settings to use for this date picker instance (anonymous)
	 */
	_attachDatepicker: function(target, settings) {
		var nodeName, inline, inst;
		nodeName = target.nodeName.toLowerCase();
		inline = (nodeName === "div" || nodeName === "span");
		if (!target.id) {
			this.uuid += 1;
			target.id = "dp" + this.uuid;
		}
		inst = this._newInst($(target), inline);
		inst.settings = $.extend({}, settings || {});
		if (nodeName === "input") {
			this._connectDatepicker(target, inst);
		} else if (inline) {
			this._inlineDatepicker(target, inst);
		}
	},

	/* Create a new instance object. */
	_newInst: function(target, inline) {
		var id = target[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1"); // escape jQuery meta chars
		return {id: id, input: target, // associated target
			selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection
			drawMonth: 0, drawYear: 0, // month being drawn
			inline: inline, // is datepicker inline or not
			dpDiv: (!inline ? this.dpDiv : // presentation div
			datepicker_bindHover($("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")))};
	},

	/* Attach the date picker to an input field. */
	_connectDatepicker: function(target, inst) {
		var input = $(target);
		inst.append = $([]);
		inst.trigger = $([]);
		if (input.hasClass(this.markerClassName)) {
			return;
		}
		this._attachments(input, inst);
		input.addClass(this.markerClassName).keydown(this._doKeyDown).
			keypress(this._doKeyPress).keyup(this._doKeyUp);
		this._autoSize(inst);
		$.data(target, "datepicker", inst);
		//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)
		if( inst.settings.disabled ) {
			this._disableDatepicker( target );
		}
	},

	/* Make attachments based on settings. */
	_attachments: function(input, inst) {
		var showOn, buttonText, buttonImage,
			appendText = this._get(inst, "appendText"),
			isRTL = this._get(inst, "isRTL");

		if (inst.append) {
			inst.append.remove();
		}
		if (appendText) {
			inst.append = $("<span class='" + this._appendClass + "'>" + appendText + "</span>");
			input[isRTL ? "before" : "after"](inst.append);
		}

		input.unbind("focus", this._showDatepicker);

		if (inst.trigger) {
			inst.trigger.remove();
		}

		showOn = this._get(inst, "showOn");
		if (showOn === "focus" || showOn === "both") { // pop-up date picker when in the marked field
			input.focus(this._showDatepicker);
		}
		if (showOn === "button" || showOn === "both") { // pop-up date picker when button clicked
			buttonText = this._get(inst, "buttonText");
			buttonImage = this._get(inst, "buttonImage");
			inst.trigger = $(this._get(inst, "buttonImageOnly") ?
				$("<img/>").addClass(this._triggerClass).
					attr({ src: buttonImage, alt: buttonText, title: buttonText }) :
				$("<button type='button'></button>").addClass(this._triggerClass).
					html(!buttonImage ? buttonText : $("<img/>").attr(
					{ src:buttonImage, alt:buttonText, title:buttonText })));
			input[isRTL ? "before" : "after"](inst.trigger);
			inst.trigger.click(function() {
				if ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) {
					$.datepicker._hideDatepicker();
				} else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {
					$.datepicker._hideDatepicker();
					$.datepicker._showDatepicker(input[0]);
				} else {
					$.datepicker._showDatepicker(input[0]);
				}
				return false;
			});
		}
	},

	/* Apply the maximum length for the date format. */
	_autoSize: function(inst) {
		if (this._get(inst, "autoSize") && !inst.inline) {
			var findMax, max, maxI, i,
				date = new Date(2009, 12 - 1, 20), // Ensure double digits
				dateFormat = this._get(inst, "dateFormat");

			if (dateFormat.match(/[DM]/)) {
				findMax = function(names) {
					max = 0;
					maxI = 0;
					for (i = 0; i < names.length; i++) {
						if (names[i].length > max) {
							max = names[i].length;
							maxI = i;
						}
					}
					return maxI;
				};
				date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?
					"monthNames" : "monthNamesShort"))));
				date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?
					"dayNames" : "dayNamesShort"))) + 20 - date.getDay());
			}
			inst.input.attr("size", this._formatDate(inst, date).length);
		}
	},

	/* Attach an inline date picker to a div. */
	_inlineDatepicker: function(target, inst) {
		var divSpan = $(target);
		if (divSpan.hasClass(this.markerClassName)) {
			return;
		}
		divSpan.addClass(this.markerClassName).append(inst.dpDiv);
		$.data(target, "datepicker", inst);
		this._setDate(inst, this._getDefaultDate(inst), true);
		this._updateDatepicker(inst);
		this._updateAlternate(inst);
		//If disabled option is true, disable the datepicker before showing it (see ticket #5665)
		if( inst.settings.disabled ) {
			this._disableDatepicker( target );
		}
		// Set display:block in place of inst.dpDiv.show() which won't work on disconnected elements
		// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height
		inst.dpDiv.css( "display", "block" );
	},

	/* Pop-up the date picker in a "dialog" box.
	 * @param  input element - ignored
	 * @param  date	string or Date - the initial date to display
	 * @param  onSelect  function - the function to call when a date is selected
	 * @param  settings  object - update the dialog date picker instance's settings (anonymous object)
	 * @param  pos int[2] - coordinates for the dialog's position within the screen or
	 *					event - with x/y coordinates or
	 *					leave empty for default (screen centre)
	 * @return the manager object
	 */
	_dialogDatepicker: function(input, date, onSelect, settings, pos) {
		var id, browserWidth, browserHeight, scrollX, scrollY,
			inst = this._dialogInst; // internal instance

		if (!inst) {
			this.uuid += 1;
			id = "dp" + this.uuid;
			this._dialogInput = $("<input type='text' id='" + id +
				"' style='position: absolute; top: -100px; width: 0px;'/>");
			this._dialogInput.keydown(this._doKeyDown);
			$("body").append(this._dialogInput);
			inst = this._dialogInst = this._newInst(this._dialogInput, false);
			inst.settings = {};
			$.data(this._dialogInput[0], "datepicker", inst);
		}
		datepicker_extendRemove(inst.settings, settings || {});
		date = (date && date.constructor === Date ? this._formatDate(inst, date) : date);
		this._dialogInput.val(date);

		this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
		if (!this._pos) {
			browserWidth = document.documentElement.clientWidth;
			browserHeight = document.documentElement.clientHeight;
			scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
			scrollY = document.documentElement.scrollTop || document.body.scrollTop;
			this._pos = // should use actual width/height below
				[(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];
		}

		// move input on screen for focus, but hidden behind dialog
		this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");
		inst.settings.onSelect = onSelect;
		this._inDialog = true;
		this.dpDiv.addClass(this._dialogClass);
		this._showDatepicker(this._dialogInput[0]);
		if ($.blockUI) {
			$.blockUI(this.dpDiv);
		}
		$.data(this._dialogInput[0], "datepicker", inst);
		return this;
	},

	/* Detach a datepicker from its control.
	 * @param  target	element - the target input field or division or span
	 */
	_destroyDatepicker: function(target) {
		var nodeName,
			$target = $(target),
			inst = $.data(target, "datepicker");

		if (!$target.hasClass(this.markerClassName)) {
			return;
		}

		nodeName = target.nodeName.toLowerCase();
		$.removeData(target, "datepicker");
		if (nodeName === "input") {
			inst.append.remove();
			inst.trigger.remove();
			$target.removeClass(this.markerClassName).
				unbind("focus", this._showDatepicker).
				unbind("keydown", this._doKeyDown).
				unbind("keypress", this._doKeyPress).
				unbind("keyup", this._doKeyUp);
		} else if (nodeName === "div" || nodeName === "span") {
			$target.removeClass(this.markerClassName).empty();
		}

		if ( datepicker_instActive === inst ) {
			datepicker_instActive = null;
		}
	},

	/* Enable the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 */
	_enableDatepicker: function(target) {
		var nodeName, inline,
			$target = $(target),
			inst = $.data(target, "datepicker");

		if (!$target.hasClass(this.markerClassName)) {
			return;
		}

		nodeName = target.nodeName.toLowerCase();
		if (nodeName === "input") {
			target.disabled = false;
			inst.trigger.filter("button").
				each(function() { this.disabled = false; }).end().
				filter("img").css({opacity: "1.0", cursor: ""});
		} else if (nodeName === "div" || nodeName === "span") {
			inline = $target.children("." + this._inlineClass);
			inline.children().removeClass("ui-state-disabled");
			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
				prop("disabled", false);
		}
		this._disabledInputs = $.map(this._disabledInputs,
			function(value) { return (value === target ? null : value); }); // delete entry
	},

	/* Disable the date picker to a jQuery selection.
	 * @param  target	element - the target input field or division or span
	 */
	_disableDatepicker: function(target) {
		var nodeName, inline,
			$target = $(target),
			inst = $.data(target, "datepicker");

		if (!$target.hasClass(this.markerClassName)) {
			return;
		}

		nodeName = target.nodeName.toLowerCase();
		if (nodeName === "input") {
			target.disabled = true;
			inst.trigger.filter("button").
				each(function() { this.disabled = true; }).end().
				filter("img").css({opacity: "0.5", cursor: "default"});
		} else if (nodeName === "div" || nodeName === "span") {
			inline = $target.children("." + this._inlineClass);
			inline.children().addClass("ui-state-disabled");
			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").
				prop("disabled", true);
		}
		this._disabledInputs = $.map(this._disabledInputs,
			function(value) { return (value === target ? null : value); }); // delete entry
		this._disabledInputs[this._disabledInputs.length] = target;
	},

	/* Is the first field in a jQuery collection disabled as a datepicker?
	 * @param  target	element - the target input field or division or span
	 * @return boolean - true if disabled, false if enabled
	 */
	_isDisabledDatepicker: function(target) {
		if (!target) {
			return false;
		}
		for (var i = 0; i < this._disabledInputs.length; i++) {
			if (this._disabledInputs[i] === target) {
				return true;
			}
		}
		return false;
	},

	/* Retrieve the instance data for the target control.
	 * @param  target  element - the target input field or division or span
	 * @return  object - the associated instance data
	 * @throws  error if a jQuery problem getting data
	 */
	_getInst: function(target) {
		try {
			return $.data(target, "datepicker");
		}
		catch (err) {
			throw "Missing instance data for this datepicker";
		}
	},

	/* Update or retrieve the settings for a date picker attached to an input field or division.
	 * @param  target  element - the target input field or division or span
	 * @param  name	object - the new settings to update or
	 *				string - the name of the setting to change or retrieve,
	 *				when retrieving also "all" for all instance settings or
	 *				"defaults" for all global defaults
	 * @param  value   any - the new value for the setting
	 *				(omit if above is an object or to retrieve a value)
	 */
	_optionDatepicker: function(target, name, value) {
		var settings, date, minDate, maxDate,
			inst = this._getInst(target);

		if (arguments.length === 2 && typeof name === "string") {
			return (name === "defaults" ? $.extend({}, $.datepicker._defaults) :
				(inst ? (name === "all" ? $.extend({}, inst.settings) :
				this._get(inst, name)) : null));
		}

		settings = name || {};
		if (typeof name === "string") {
			settings = {};
			settings[name] = value;
		}

		if (inst) {
			if (this._curInst === inst) {
				this._hideDatepicker();
			}

			date = this._getDateDatepicker(target, true);
			minDate = this._getMinMaxDate(inst, "min");
			maxDate = this._getMinMaxDate(inst, "max");
			datepicker_extendRemove(inst.settings, settings);
			// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn't provided
			if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {
				inst.settings.minDate = this._formatDate(inst, minDate);
			}
			if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {
				inst.settings.maxDate = this._formatDate(inst, maxDate);
			}
			if ( "disabled" in settings ) {
				if ( settings.disabled ) {
					this._disableDatepicker(target);
				} else {
					this._enableDatepicker(target);
				}
			}
			this._attachments($(target), inst);
			this._autoSize(inst);
			this._setDate(inst, date);
			this._updateAlternate(inst);
			this._updateDatepicker(inst);
		}
	},

	// change method deprecated
	_changeDatepicker: function(target, name, value) {
		this._optionDatepicker(target, name, value);
	},

	/* Redraw the date picker attached to an input field or division.
	 * @param  target  element - the target input field or division or span
	 */
	_refreshDatepicker: function(target) {
		var inst = this._getInst(target);
		if (inst) {
			this._updateDatepicker(inst);
		}
	},

	/* Set the dates for a jQuery selection.
	 * @param  target element - the target input field or division or span
	 * @param  date	Date - the new date
	 */
	_setDateDatepicker: function(target, date) {
		var inst = this._getInst(target);
		if (inst) {
			this._setDate(inst, date);
			this._updateDatepicker(inst);
			this._updateAlternate(inst);
		}
	},

	/* Get the date(s) for the first entry in a jQuery selection.
	 * @param  target element - the target input field or division or span
	 * @param  noDefault boolean - true if no default date is to be used
	 * @return Date - the current date
	 */
	_getDateDatepicker: function(target, noDefault) {
		var inst = this._getInst(target);
		if (inst && !inst.inline) {
			this._setDateFromField(inst, noDefault);
		}
		return (inst ? this._getDate(inst) : null);
	},

	/* Handle keystrokes. */
	_doKeyDown: function(event) {
		var onSelect, dateStr, sel,
			inst = $.datepicker._getInst(event.target),
			handled = true,
			isRTL = inst.dpDiv.is(".ui-datepicker-rtl");

		inst._keyEvent = true;
		if ($.datepicker._datepickerShowing) {
			switch (event.keyCode) {
				case 9: $.datepicker._hideDatepicker();
						handled = false;
						break; // hide on tab out
				case 13: sel = $("td." + $.datepicker._dayOverClass + ":not(." +
									$.datepicker._currentClass + ")", inst.dpDiv);
						if (sel[0]) {
							$.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);
						}

						onSelect = $.datepicker._get(inst, "onSelect");
						if (onSelect) {
							dateStr = $.datepicker._formatDate(inst);

							// trigger custom callback
							onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);
						} else {
							$.datepicker._hideDatepicker();
						}

						return false; // don't submit the form
				case 27: $.datepicker._hideDatepicker();
						break; // hide on escape
				case 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
							-$.datepicker._get(inst, "stepBigMonths") :
							-$.datepicker._get(inst, "stepMonths")), "M");
						break; // previous month/year on page up/+ ctrl
				case 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ?
							+$.datepicker._get(inst, "stepBigMonths") :
							+$.datepicker._get(inst, "stepMonths")), "M");
						break; // next month/year on page down/+ ctrl
				case 35: if (event.ctrlKey || event.metaKey) {
							$.datepicker._clearDate(event.target);
						}
						handled = event.ctrlKey || event.metaKey;
						break; // clear on ctrl or command +end
				case 36: if (event.ctrlKey || event.metaKey) {
							$.datepicker._gotoToday(event.target);
						}
						handled = event.ctrlKey || event.metaKey;
						break; // current on ctrl or command +home
				case 37: if (event.ctrlKey || event.metaKey) {
							$.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D");
						}
						handled = event.ctrlKey || event.metaKey;
						// -1 day on ctrl or command +left
						if (event.originalEvent.altKey) {
							$.datepicker._adjustDate(event.target, (event.ctrlKey ?
								-$.datepicker._get(inst, "stepBigMonths") :
								-$.datepicker._get(inst, "stepMonths")), "M");
						}
						// next month/year on alt +left on Mac
						break;
				case 38: if (event.ctrlKey || event.metaKey) {
							$.datepicker._adjustDate(event.target, -7, "D");
						}
						handled = event.ctrlKey || event.metaKey;
						break; // -1 week on ctrl or command +up
				case 39: if (event.ctrlKey || event.metaKey) {
							$.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D");
						}
						handled = event.ctrlKey || event.metaKey;
						// +1 day on ctrl or command +right
						if (event.originalEvent.altKey) {
							$.datepicker._adjustDate(event.target, (event.ctrlKey ?
								+$.datepicker._get(inst, "stepBigMonths") :
								+$.datepicker._get(inst, "stepMonths")), "M");
						}
						// next month/year on alt +right
						break;
				case 40: if (event.ctrlKey || event.metaKey) {
							$.datepicker._adjustDate(event.target, +7, "D");
						}
						handled = event.ctrlKey || event.metaKey;
						break; // +1 week on ctrl or command +down
				default: handled = false;
			}
		} else if (event.keyCode === 36 && event.ctrlKey) { // display the date picker on ctrl+home
			$.datepicker._showDatepicker(this);
		} else {
			handled = false;
		}

		if (handled) {
			event.preventDefault();
			event.stopPropagation();
		}
	},

	/* Filter entered characters - based on date format. */
	_doKeyPress: function(event) {
		var chars, chr,
			inst = $.datepicker._getInst(event.target);

		if ($.datepicker._get(inst, "constrainInput")) {
			chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
			chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);
			return event.ctrlKey || event.metaKey || (chr < " " || !chars || chars.indexOf(chr) > -1);
		}
	},

	/* Synchronise manual entry and field/alternate field. */
	_doKeyUp: function(event) {
		var date,
			inst = $.datepicker._getInst(event.target);

		if (inst.input.val() !== inst.lastVal) {
			try {
				date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),
					(inst.input ? inst.input.val() : null),
					$.datepicker._getFormatConfig(inst));

				if (date) { // only if valid
					$.datepicker._setDateFromField(inst);
					$.datepicker._updateAlternate(inst);
					$.datepicker._updateDatepicker(inst);
				}
			}
			catch (err) {
			}
		}
		return true;
	},

	/* Pop-up the date picker for a given input field.
	 * If false returned from beforeShow event handler do not show.
	 * @param  input  element - the input field attached to the date picker or
	 *					event - if triggered by focus
	 */
	_showDatepicker: function(input) {
		input = input.target || input;
		if (input.nodeName.toLowerCase() !== "input") { // find from button/image trigger
			input = $("input", input.parentNode)[0];
		}

		if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) { // already here
			return;
		}

		var inst, beforeShow, beforeShowSettings, isFixed,
			offset, showAnim, duration;

		inst = $.datepicker._getInst(input);
		if ($.datepicker._curInst && $.datepicker._curInst !== inst) {
			$.datepicker._curInst.dpDiv.stop(true, true);
			if ( inst && $.datepicker._datepickerShowing ) {
				$.datepicker._hideDatepicker( $.datepicker._curInst.input[0] );
			}
		}

		beforeShow = $.datepicker._get(inst, "beforeShow");
		beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};
		if(beforeShowSettings === false){
			return;
		}
		datepicker_extendRemove(inst.settings, beforeShowSettings);

		inst.lastVal = null;
		$.datepicker._lastInput = input;
		$.datepicker._setDateFromField(inst);

		if ($.datepicker._inDialog) { // hide cursor
			input.value = "";
		}
		if (!$.datepicker._pos) { // position below input
			$.datepicker._pos = $.datepicker._findPos(input);
			$.datepicker._pos[1] += input.offsetHeight; // add the height
		}

		isFixed = false;
		$(input).parents().each(function() {
			isFixed |= $(this).css("position") === "fixed";
			return !isFixed;
		});

		offset = {left: $.datepicker._pos[0], top: $.datepicker._pos[1]};
		$.datepicker._pos = null;
		//to avoid flashes on Firefox
		inst.dpDiv.empty();
		// determine sizing offscreen
		inst.dpDiv.css({position: "absolute", display: "block", top: "-1000px"});
		$.datepicker._updateDatepicker(inst);
		// fix width for dynamic number of date pickers
		// and adjust position before showing
		offset = $.datepicker._checkOffset(inst, offset, isFixed);
		inst.dpDiv.css({position: ($.datepicker._inDialog && $.blockUI ?
			"static" : (isFixed ? "fixed" : "absolute")), display: "none",
			left: offset.left + "px", top: offset.top + "px"});

		if (!inst.inline) {
			showAnim = $.datepicker._get(inst, "showAnim");
			duration = $.datepicker._get(inst, "duration");
			inst.dpDiv.css( "z-index", datepicker_getZindex( $( input ) ) + 1 );
			$.datepicker._datepickerShowing = true;

			if ( $.effects && $.effects.effect[ showAnim ] ) {
				inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration);
			} else {
				inst.dpDiv[showAnim || "show"](showAnim ? duration : null);
			}

			if ( $.datepicker._shouldFocusInput( inst ) ) {
				inst.input.focus();
			}

			$.datepicker._curInst = inst;
		}
	},

	/* Generate the date picker content. */
	_updateDatepicker: function(inst) {
		this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)
		datepicker_instActive = inst; // for delegate hover events
		inst.dpDiv.empty().append(this._generateHTML(inst));
		this._attachHandlers(inst);

		var origyearshtml,
			numMonths = this._getNumberOfMonths(inst),
			cols = numMonths[1],
			width = 17,
			activeCell = inst.dpDiv.find( "." + this._dayOverClass + " a" );

		if ( activeCell.length > 0 ) {
			datepicker_handleMouseover.apply( activeCell.get( 0 ) );
		}

		inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");
		if (cols > 1) {
			inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em");
		}
		inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? "add" : "remove") +
			"Class"]("ui-datepicker-multi");
		inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") +
			"Class"]("ui-datepicker-rtl");

		if (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput( inst ) ) {
			inst.input.focus();
		}

		// deffered render of the years select (to avoid flashes on Firefox)
		if( inst.yearshtml ){
			origyearshtml = inst.yearshtml;
			setTimeout(function(){
				//assure that inst.yearshtml didn't change.
				if( origyearshtml === inst.yearshtml && inst.yearshtml ){
					inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml);
				}
				origyearshtml = inst.yearshtml = null;
			}, 0);
		}
	},

	// #6694 - don't focus the input if it's already focused
	// this breaks the change event in IE
	// Support: IE and jQuery <1.9
	_shouldFocusInput: function( inst ) {
		return inst.input && inst.input.is( ":visible" ) && !inst.input.is( ":disabled" ) && !inst.input.is( ":focus" );
	},

	/* Check positioning to remain on screen. */
	_checkOffset: function(inst, offset, isFixed) {
		var dpWidth = inst.dpDiv.outerWidth(),
			dpHeight = inst.dpDiv.outerHeight(),
			inputWidth = inst.input ? inst.input.outerWidth() : 0,
			inputHeight = inst.input ? inst.input.outerHeight() : 0,
			viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),
			viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());

		offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);
		offset.left -= (isFixed && offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;
		offset.top -= (isFixed && offset.top === (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;

		// now check if datepicker is showing outside window viewport - move to a better place if so.
		offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?
			Math.abs(offset.left + dpWidth - viewWidth) : 0);
		offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?
			Math.abs(dpHeight + inputHeight) : 0);

		return offset;
	},

	/* Find an object's position on the screen. */
	_findPos: function(obj) {
		var position,
			inst = this._getInst(obj),
			isRTL = this._get(inst, "isRTL");

		while (obj && (obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden(obj))) {
			obj = obj[isRTL ? "previousSibling" : "nextSibling"];
		}

		position = $(obj).offset();
		return [position.left, position.top];
	},

	/* Hide the date picker from view.
	 * @param  input  element - the input field attached to the date picker
	 */
	_hideDatepicker: function(input) {
		var showAnim, duration, postProcess, onClose,
			inst = this._curInst;

		if (!inst || (input && inst !== $.data(input, "datepicker"))) {
			return;
		}

		if (this._datepickerShowing) {
			showAnim = this._get(inst, "showAnim");
			duration = this._get(inst, "duration");
			postProcess = function() {
				$.datepicker._tidyDialog(inst);
			};

			// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed
			if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) ) {
				inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess);
			} else {
				inst.dpDiv[(showAnim === "slideDown" ? "slideUp" :
					(showAnim === "fadeIn" ? "fadeOut" : "hide"))]((showAnim ? duration : null), postProcess);
			}

			if (!showAnim) {
				postProcess();
			}
			this._datepickerShowing = false;

			onClose = this._get(inst, "onClose");
			if (onClose) {
				onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst]);
			}

			this._lastInput = null;
			if (this._inDialog) {
				this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" });
				if ($.blockUI) {
					$.unblockUI();
					$("body").append(this.dpDiv);
				}
			}
			this._inDialog = false;
		}
	},

	/* Tidy up after a dialog display. */
	_tidyDialog: function(inst) {
		inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar");
	},

	/* Close date picker if clicked elsewhere. */
	_checkExternalClick: function(event) {
		if (!$.datepicker._curInst) {
			return;
		}

		var $target = $(event.target),
			inst = $.datepicker._getInst($target[0]);

		if ( ( ( $target[0].id !== $.datepicker._mainDivId &&
				$target.parents("#" + $.datepicker._mainDivId).length === 0 &&
				!$target.hasClass($.datepicker.markerClassName) &&
				!$target.closest("." + $.datepicker._triggerClass).length &&
				$.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI) ) ) ||
			( $target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst ) ) {
				$.datepicker._hideDatepicker();
		}
	},

	/* Adjust one of the date sub-fields. */
	_adjustDate: function(id, offset, period) {
		var target = $(id),
			inst = this._getInst(target[0]);

		if (this._isDisabledDatepicker(target[0])) {
			return;
		}
		this._adjustInstDate(inst, offset +
			(period === "M" ? this._get(inst, "showCurrentAtPos") : 0), // undo positioning
			period);
		this._updateDatepicker(inst);
	},

	/* Action for current link. */
	_gotoToday: function(id) {
		var date,
			target = $(id),
			inst = this._getInst(target[0]);

		if (this._get(inst, "gotoCurrent") && inst.currentDay) {
			inst.selectedDay = inst.currentDay;
			inst.drawMonth = inst.selectedMonth = inst.currentMonth;
			inst.drawYear = inst.selectedYear = inst.currentYear;
		} else {
			date = new Date();
			inst.selectedDay = date.getDate();
			inst.drawMonth = inst.selectedMonth = date.getMonth();
			inst.drawYear = inst.selectedYear = date.getFullYear();
		}
		this._notifyChange(inst);
		this._adjustDate(target);
	},

	/* Action for selecting a new month/year. */
	_selectMonthYear: function(id, select, period) {
		var target = $(id),
			inst = this._getInst(target[0]);

		inst["selected" + (period === "M" ? "Month" : "Year")] =
		inst["draw" + (period === "M" ? "Month" : "Year")] =
			parseInt(select.options[select.selectedIndex].value,10);

		this._notifyChange(inst);
		this._adjustDate(target);
	},

	/* Action for selecting a day. */
	_selectDay: function(id, month, year, td) {
		var inst,
			target = $(id);

		if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
			return;
		}

		inst = this._getInst(target[0]);
		inst.selectedDay = inst.currentDay = $("a", td).html();
		inst.selectedMonth = inst.currentMonth = month;
		inst.selectedYear = inst.currentYear = year;
		this._selectDate(id, this._formatDate(inst,
			inst.currentDay, inst.currentMonth, inst.currentYear));
	},

	/* Erase the input field and hide the date picker. */
	_clearDate: function(id) {
		var target = $(id);
		this._selectDate(target, "");
	},

	/* Update the input field with the selected date. */
	_selectDate: function(id, dateStr) {
		var onSelect,
			target = $(id),
			inst = this._getInst(target[0]);

		dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
		if (inst.input) {
			inst.input.val(dateStr);
		}
		this._updateAlternate(inst);

		onSelect = this._get(inst, "onSelect");
		if (onSelect) {
			onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback
		} else if (inst.input) {
			inst.input.trigger("change"); // fire the change event
		}

		if (inst.inline){
			this._updateDatepicker(inst);
		} else {
			this._hideDatepicker();
			this._lastInput = inst.input[0];
			if (typeof(inst.input[0]) !== "object") {
				inst.input.focus(); // restore focus
			}
			this._lastInput = null;
		}
	},

	/* Update any alternate field to synchronise with the main field. */
	_updateAlternate: function(inst) {
		var altFormat, date, dateStr,
			altField = this._get(inst, "altField");

		if (altField) { // update alternate field too
			altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
			date = this._getDate(inst);
			dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
			$(altField).each(function() { $(this).val(dateStr); });
		}
	},

	/* Set as beforeShowDay function to prevent selection of weekends.
	 * @param  date  Date - the date to customise
	 * @return [boolean, string] - is this date selectable?, what is its CSS class?
	 */
	noWeekends: function(date) {
		var day = date.getDay();
		return [(day > 0 && day < 6), ""];
	},

	/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.
	 * @param  date  Date - the date to get the week for
	 * @return  number - the number of the week within the year that contains this date
	 */
	iso8601Week: function(date) {
		var time,
			checkDate = new Date(date.getTime());

		// Find Thursday of this week starting on Monday
		checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));

		time = checkDate.getTime();
		checkDate.setMonth(0); // Compare with Jan 1
		checkDate.setDate(1);
		return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;
	},

	/* Parse a string value into a date object.
	 * See formatDate below for the possible formats.
	 *
	 * @param  format string - the expected format of the date
	 * @param  value string - the date in the above format
	 * @param  settings Object - attributes include:
	 *					shortYearCutoff  number - the cutoff year for determining the century (optional)
	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
	 *					dayNames		string[7] - names of the days from Sunday (optional)
	 *					monthNamesShort string[12] - abbreviated names of the months (optional)
	 *					monthNames		string[12] - names of the months (optional)
	 * @return  Date - the extracted date value or null if value is blank
	 */
	parseDate: function (format, value, settings) {
		if (format == null || value == null) {
			throw "Invalid arguments";
		}

		value = (typeof value === "object" ? value.toString() : value + "");
		if (value === "") {
			return null;
		}

		var iFormat, dim, extra,
			iValue = 0,
			shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,
			shortYearCutoff = (typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp :
				new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10)),
			dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
			dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
			monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
			monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,
			year = -1,
			month = -1,
			day = -1,
			doy = -1,
			literal = false,
			date,
			// Check whether a format character is doubled
			lookAhead = function(match) {
				var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
				if (matches) {
					iFormat++;
				}
				return matches;
			},
			// Extract a number from the string value
			getNumber = function(match) {
				var isDoubled = lookAhead(match),
					size = (match === "@" ? 14 : (match === "!" ? 20 :
					(match === "y" && isDoubled ? 4 : (match === "o" ? 3 : 2)))),
					minSize = (match === "y" ? size : 1),
					digits = new RegExp("^\\d{" + minSize + "," + size + "}"),
					num = value.substring(iValue).match(digits);
				if (!num) {
					throw "Missing number at position " + iValue;
				}
				iValue += num[0].length;
				return parseInt(num[0], 10);
			},
			// Extract a name from the string value and convert to an index
			getName = function(match, shortNames, longNames) {
				var index = -1,
					names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {
						return [ [k, v] ];
					}).sort(function (a, b) {
						return -(a[1].length - b[1].length);
					});

				$.each(names, function (i, pair) {
					var name = pair[1];
					if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
						index = pair[0];
						iValue += name.length;
						return false;
					}
				});
				if (index !== -1) {
					return index + 1;
				} else {
					throw "Unknown name at position " + iValue;
				}
			},
			// Confirm that a literal character matches the string value
			checkLiteral = function() {
				if (value.charAt(iValue) !== format.charAt(iFormat)) {
					throw "Unexpected literal at position " + iValue;
				}
				iValue++;
			};

		for (iFormat = 0; iFormat < format.length; iFormat++) {
			if (literal) {
				if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
					literal = false;
				} else {
					checkLiteral();
				}
			} else {
				switch (format.charAt(iFormat)) {
					case "d":
						day = getNumber("d");
						break;
					case "D":
						getName("D", dayNamesShort, dayNames);
						break;
					case "o":
						doy = getNumber("o");
						break;
					case "m":
						month = getNumber("m");
						break;
					case "M":
						month = getName("M", monthNamesShort, monthNames);
						break;
					case "y":
						year = getNumber("y");
						break;
					case "@":
						date = new Date(getNumber("@"));
						year = date.getFullYear();
						month = date.getMonth() + 1;
						day = date.getDate();
						break;
					case "!":
						date = new Date((getNumber("!") - this._ticksTo1970) / 10000);
						year = date.getFullYear();
						month = date.getMonth() + 1;
						day = date.getDate();
						break;
					case "'":
						if (lookAhead("'")){
							checkLiteral();
						} else {
							literal = true;
						}
						break;
					default:
						checkLiteral();
				}
			}
		}

		if (iValue < value.length){
			extra = value.substr(iValue);
			if (!/^\s+/.test(extra)) {
				throw "Extra/unparsed characters found in date: " + extra;
			}
		}

		if (year === -1) {
			year = new Date().getFullYear();
		} else if (year < 100) {
			year += new Date().getFullYear() - new Date().getFullYear() % 100 +
				(year <= shortYearCutoff ? 0 : -100);
		}

		if (doy > -1) {
			month = 1;
			day = doy;
			do {
				dim = this._getDaysInMonth(year, month - 1);
				if (day <= dim) {
					break;
				}
				month++;
				day -= dim;
			} while (true);
		}

		date = this._daylightSavingAdjust(new Date(year, month - 1, day));
		if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {
			throw "Invalid date"; // E.g. 31/02/00
		}
		return date;
	},

	/* Standard date formats. */
	ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)
	COOKIE: "D, dd M yy",
	ISO_8601: "yy-mm-dd",
	RFC_822: "D, d M y",
	RFC_850: "DD, dd-M-y",
	RFC_1036: "D, d M y",
	RFC_1123: "D, d M yy",
	RFC_2822: "D, d M yy",
	RSS: "D, d M y", // RFC 822
	TICKS: "!",
	TIMESTAMP: "@",
	W3C: "yy-mm-dd", // ISO 8601

	_ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +
		Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),

	/* Format a date object into a string value.
	 * The format can be combinations of the following:
	 * d  - day of month (no leading zero)
	 * dd - day of month (two digit)
	 * o  - day of year (no leading zeros)
	 * oo - day of year (three digit)
	 * D  - day name short
	 * DD - day name long
	 * m  - month of year (no leading zero)
	 * mm - month of year (two digit)
	 * M  - month name short
	 * MM - month name long
	 * y  - year (two digit)
	 * yy - year (four digit)
	 * @ - Unix timestamp (ms since 01/01/1970)
	 * ! - Windows ticks (100ns since 01/01/0001)
	 * "..." - literal text
	 * '' - single quote
	 *
	 * @param  format string - the desired format of the date
	 * @param  date Date - the date value to format
	 * @param  settings Object - attributes include:
	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)
	 *					dayNames		string[7] - names of the days from Sunday (optional)
	 *					monthNamesShort string[12] - abbreviated names of the months (optional)
	 *					monthNames		string[12] - names of the months (optional)
	 * @return  string - the date in the above format
	 */
	formatDate: function (format, date, settings) {
		if (!date) {
			return "";
		}

		var iFormat,
			dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,
			dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,
			monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,
			monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,
			// Check whether a format character is doubled
			lookAhead = function(match) {
				var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
				if (matches) {
					iFormat++;
				}
				return matches;
			},
			// Format a number, with leading zero if necessary
			formatNumber = function(match, value, len) {
				var num = "" + value;
				if (lookAhead(match)) {
					while (num.length < len) {
						num = "0" + num;
					}
				}
				return num;
			},
			// Format a name, short or long as requested
			formatName = function(match, value, shortNames, longNames) {
				return (lookAhead(match) ? longNames[value] : shortNames[value]);
			},
			output = "",
			literal = false;

		if (date) {
			for (iFormat = 0; iFormat < format.length; iFormat++) {
				if (literal) {
					if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
						literal = false;
					} else {
						output += format.charAt(iFormat);
					}
				} else {
					switch (format.charAt(iFormat)) {
						case "d":
							output += formatNumber("d", date.getDate(), 2);
							break;
						case "D":
							output += formatName("D", date.getDay(), dayNamesShort, dayNames);
							break;
						case "o":
							output += formatNumber("o",
								Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
							break;
						case "m":
							output += formatNumber("m", date.getMonth() + 1, 2);
							break;
						case "M":
							output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
							break;
						case "y":
							output += (lookAhead("y") ? date.getFullYear() :
								(date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100);
							break;
						case "@":
							output += date.getTime();
							break;
						case "!":
							output += date.getTime() * 10000 + this._ticksTo1970;
							break;
						case "'":
							if (lookAhead("'")) {
								output += "'";
							} else {
								literal = true;
							}
							break;
						default:
							output += format.charAt(iFormat);
					}
				}
			}
		}
		return output;
	},

	/* Extract all possible characters from the date format. */
	_possibleChars: function (format) {
		var iFormat,
			chars = "",
			literal = false,
			// Check whether a format character is doubled
			lookAhead = function(match) {
				var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);
				if (matches) {
					iFormat++;
				}
				return matches;
			};

		for (iFormat = 0; iFormat < format.length; iFormat++) {
			if (literal) {
				if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
					literal = false;
				} else {
					chars += format.charAt(iFormat);
				}
			} else {
				switch (format.charAt(iFormat)) {
					case "d": case "m": case "y": case "@":
						chars += "0123456789";
						break;
					case "D": case "M":
						return null; // Accept anything
					case "'":
						if (lookAhead("'")) {
							chars += "'";
						} else {
							literal = true;
						}
						break;
					default:
						chars += format.charAt(iFormat);
				}
			}
		}
		return chars;
	},

	/* Get a setting value, defaulting if necessary. */
	_get: function(inst, name) {
		return inst.settings[name] !== undefined ?
			inst.settings[name] : this._defaults[name];
	},

	/* Parse existing date and initialise date picker. */
	_setDateFromField: function(inst, noDefault) {
		if (inst.input.val() === inst.lastVal) {
			return;
		}

		var dateFormat = this._get(inst, "dateFormat"),
			dates = inst.lastVal = inst.input ? inst.input.val() : null,
			defaultDate = this._getDefaultDate(inst),
			date = defaultDate,
			settings = this._getFormatConfig(inst);

		try {
			date = this.parseDate(dateFormat, dates, settings) || defaultDate;
		} catch (event) {
			dates = (noDefault ? "" : dates);
		}
		inst.selectedDay = date.getDate();
		inst.drawMonth = inst.selectedMonth = date.getMonth();
		inst.drawYear = inst.selectedYear = date.getFullYear();
		inst.currentDay = (dates ? date.getDate() : 0);
		inst.currentMonth = (dates ? date.getMonth() : 0);
		inst.currentYear = (dates ? date.getFullYear() : 0);
		this._adjustInstDate(inst);
	},

	/* Retrieve the default date shown on opening. */
	_getDefaultDate: function(inst) {
		return this._restrictMinMax(inst,
			this._determineDate(inst, this._get(inst, "defaultDate"), new Date()));
	},

	/* A date may be specified as an exact value or a relative one. */
	_determineDate: function(inst, date, defaultDate) {
		var offsetNumeric = function(offset) {
				var date = new Date();
				date.setDate(date.getDate() + offset);
				return date;
			},
			offsetString = function(offset) {
				try {
					return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),
						offset, $.datepicker._getFormatConfig(inst));
				}
				catch (e) {
					// Ignore
				}

				var date = (offset.toLowerCase().match(/^c/) ?
					$.datepicker._getDate(inst) : null) || new Date(),
					year = date.getFullYear(),
					month = date.getMonth(),
					day = date.getDate(),
					pattern = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
					matches = pattern.exec(offset);

				while (matches) {
					switch (matches[2] || "d") {
						case "d" : case "D" :
							day += parseInt(matches[1],10); break;
						case "w" : case "W" :
							day += parseInt(matches[1],10) * 7; break;
						case "m" : case "M" :
							month += parseInt(matches[1],10);
							day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
							break;
						case "y": case "Y" :
							year += parseInt(matches[1],10);
							day = Math.min(day, $.datepicker._getDaysInMonth(year, month));
							break;
					}
					matches = pattern.exec(offset);
				}
				return new Date(year, month, day);
			},
			newDate = (date == null || date === "" ? defaultDate : (typeof date === "string" ? offsetString(date) :
				(typeof date === "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));

		newDate = (newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate);
		if (newDate) {
			newDate.setHours(0);
			newDate.setMinutes(0);
			newDate.setSeconds(0);
			newDate.setMilliseconds(0);
		}
		return this._daylightSavingAdjust(newDate);
	},

	/* Handle switch to/from daylight saving.
	 * Hours may be non-zero on daylight saving cut-over:
	 * > 12 when midnight changeover, but then cannot generate
	 * midnight datetime, so jump to 1AM, otherwise reset.
	 * @param  date  (Date) the date to check
	 * @return  (Date) the corrected date
	 */
	_daylightSavingAdjust: function(date) {
		if (!date) {
			return null;
		}
		date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
		return date;
	},

	/* Set the date(s) directly. */
	_setDate: function(inst, date, noChange) {
		var clear = !date,
			origMonth = inst.selectedMonth,
			origYear = inst.selectedYear,
			newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));

		inst.selectedDay = inst.currentDay = newDate.getDate();
		inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();
		inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();
		if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) {
			this._notifyChange(inst);
		}
		this._adjustInstDate(inst);
		if (inst.input) {
			inst.input.val(clear ? "" : this._formatDate(inst));
		}
	},

	/* Retrieve the date(s) directly. */
	_getDate: function(inst) {
		var startDate = (!inst.currentYear || (inst.input && inst.input.val() === "") ? null :
			this._daylightSavingAdjust(new Date(
			inst.currentYear, inst.currentMonth, inst.currentDay)));
			return startDate;
	},

	/* Attach the onxxx handlers.  These are declared statically so
	 * they work with static code transformers like Caja.
	 */
	_attachHandlers: function(inst) {
		var stepMonths = this._get(inst, "stepMonths"),
			id = "#" + inst.id.replace( /\\\\/g, "\\" );
		inst.dpDiv.find("[data-handler]").map(function () {
			var handler = {
				prev: function () {
					$.datepicker._adjustDate(id, -stepMonths, "M");
				},
				next: function () {
					$.datepicker._adjustDate(id, +stepMonths, "M");
				},
				hide: function () {
					$.datepicker._hideDatepicker();
				},
				today: function () {
					$.datepicker._gotoToday(id);
				},
				selectDay: function () {
					$.datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);
					return false;
				},
				selectMonth: function () {
					$.datepicker._selectMonthYear(id, this, "M");
					return false;
				},
				selectYear: function () {
					$.datepicker._selectMonthYear(id, this, "Y");
					return false;
				}
			};
			$(this).bind(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")]);
		});
	},

	/* Generate the HTML for the current state of the date picker. */
	_generateHTML: function(inst) {
		var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,
			controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,
			monthNames, monthNamesShort, beforeShowDay, showOtherMonths,
			selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,
			cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,
			printDate, dRow, tbody, daySettings, otherMonth, unselectable,
			tempDate = new Date(),
			today = this._daylightSavingAdjust(
				new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), // clear time
			isRTL = this._get(inst, "isRTL"),
			showButtonPanel = this._get(inst, "showButtonPanel"),
			hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"),
			navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"),
			numMonths = this._getNumberOfMonths(inst),
			showCurrentAtPos = this._get(inst, "showCurrentAtPos"),
			stepMonths = this._get(inst, "stepMonths"),
			isMultiMonth = (numMonths[0] !== 1 || numMonths[1] !== 1),
			currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :
				new Date(inst.currentYear, inst.currentMonth, inst.currentDay))),
			minDate = this._getMinMaxDate(inst, "min"),
			maxDate = this._getMinMaxDate(inst, "max"),
			drawMonth = inst.drawMonth - showCurrentAtPos,
			drawYear = inst.drawYear;

		if (drawMonth < 0) {
			drawMonth += 12;
			drawYear--;
		}
		if (maxDate) {
			maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),
				maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));
			maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
			while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
				drawMonth--;
				if (drawMonth < 0) {
					drawMonth = 11;
					drawYear--;
				}
			}
		}
		inst.drawMonth = drawMonth;
		inst.drawYear = drawYear;

		prevText = this._get(inst, "prevText");
		prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,
			this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),
			this._getFormatConfig(inst)));

		prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?
			"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click'" +
			" title='" + prevText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w") + "'>" + prevText + "</span></a>" :
			(hideIfNoPrevNext ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+ prevText +"'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w") + "'>" + prevText + "</span></a>"));

		nextText = this._get(inst, "nextText");
		nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,
			this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),
			this._getFormatConfig(inst)));

		next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?
			"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click'" +
			" title='" + nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e") + "'>" + nextText + "</span></a>" :
			(hideIfNoPrevNext ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+ nextText + "'><span class='ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e") + "'>" + nextText + "</span></a>"));

		currentText = this._get(inst, "currentText");
		gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today);
		currentText = (!navigationAsDateFormat ? currentText :
			this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));

		controls = (!inst.inline ? "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" +
			this._get(inst, "closeText") + "</button>" : "");

		buttonPanel = (showButtonPanel) ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (isRTL ? controls : "") +
			(this._isInRange(inst, gotoDate) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'" +
			">" + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";

		firstDay = parseInt(this._get(inst, "firstDay"),10);
		firstDay = (isNaN(firstDay) ? 0 : firstDay);

		showWeek = this._get(inst, "showWeek");
		dayNames = this._get(inst, "dayNames");
		dayNamesMin = this._get(inst, "dayNamesMin");
		monthNames = this._get(inst, "monthNames");
		monthNamesShort = this._get(inst, "monthNamesShort");
		beforeShowDay = this._get(inst, "beforeShowDay");
		showOtherMonths = this._get(inst, "showOtherMonths");
		selectOtherMonths = this._get(inst, "selectOtherMonths");
		defaultDate = this._getDefaultDate(inst);
		html = "";
		dow;
		for (row = 0; row < numMonths[0]; row++) {
			group = "";
			this.maxRows = 4;
			for (col = 0; col < numMonths[1]; col++) {
				selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
				cornerClass = " ui-corner-all";
				calender = "";
				if (isMultiMonth) {
					calender += "<div class='ui-datepicker-group";
					if (numMonths[1] > 1) {
						switch (col) {
							case 0: calender += " ui-datepicker-group-first";
								cornerClass = " ui-corner-" + (isRTL ? "right" : "left"); break;
							case numMonths[1]-1: calender += " ui-datepicker-group-last";
								cornerClass = " ui-corner-" + (isRTL ? "left" : "right"); break;
							default: calender += " ui-datepicker-group-middle"; cornerClass = ""; break;
						}
					}
					calender += "'>";
				}
				calender += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "'>" +
					(/all|left/.test(cornerClass) && row === 0 ? (isRTL ? next : prev) : "") +
					(/all|right/.test(cornerClass) && row === 0 ? (isRTL ? prev : next) : "") +
					this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,
					row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers
					"</div><table class='ui-datepicker-calendar'><thead>" +
					"<tr>";
				thead = (showWeek ? "<th class='ui-datepicker-week-col'>" + this._get(inst, "weekHeader") + "</th>" : "");
				for (dow = 0; dow < 7; dow++) { // days of the week
					day = (dow + firstDay) % 7;
					thead += "<th scope='col'" + ((dow + firstDay + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" +
						"<span title='" + dayNames[day] + "'>" + dayNamesMin[day] + "</span></th>";
				}
				calender += thead + "</tr></thead><tbody>";
				daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
				if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {
					inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);
				}
				leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
				curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate
				numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)
				this.maxRows = numRows;
				printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
				for (dRow = 0; dRow < numRows; dRow++) { // create date picker rows
					calender += "<tr>";
					tbody = (!showWeek ? "" : "<td class='ui-datepicker-week-col'>" +
						this._get(inst, "calculateWeek")(printDate) + "</td>");
					for (dow = 0; dow < 7; dow++) { // create date picker days
						daySettings = (beforeShowDay ?
							beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);
						otherMonth = (printDate.getMonth() !== drawMonth);
						unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||
							(minDate && printDate < minDate) || (maxDate && printDate > maxDate);
						tbody += "<td class='" +
							((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + // highlight weekends
							(otherMonth ? " ui-datepicker-other-month" : "") + // highlight days from other months
							((printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent) || // user pressed key
							(defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime()) ?
							// or defaultDate is current printedDate and defaultDate is selectedDate
							" " + this._dayOverClass : "") + // highlight selected day
							(unselectable ? " " + this._unselectableClass + " ui-state-disabled": "") +  // highlight unselectable days
							(otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + // highlight custom dates
							(printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "") + // highlight selected day
							(printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "")) + "'" + // highlight today (if different)
							((!otherMonth || showOtherMonths) && daySettings[2] ? " title='" + daySettings[2].replace(/'/g, "&#39;") + "'" : "") + // cell title
							(unselectable ? "" : " data-handler='selectDay' data-event='click' data-month='" + printDate.getMonth() + "' data-year='" + printDate.getFullYear() + "'") + ">" + // actions
							(otherMonth && !showOtherMonths ? "&#xa0;" : // display for other months
							(unselectable ? "<span class='ui-state-default'>" + printDate.getDate() + "</span>" : "<a class='ui-state-default" +
							(printDate.getTime() === today.getTime() ? " ui-state-highlight" : "") +
							(printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "") + // highlight selected day
							(otherMonth ? " ui-priority-secondary" : "") + // distinguish dates from other months
							"' href='#'>" + printDate.getDate() + "</a>")) + "</td>"; // display selectable date
						printDate.setDate(printDate.getDate() + 1);
						printDate = this._daylightSavingAdjust(printDate);
					}
					calender += tbody + "</tr>";
				}
				drawMonth++;
				if (drawMonth > 11) {
					drawMonth = 0;
					drawYear++;
				}
				calender += "</tbody></table>" + (isMultiMonth ? "</div>" +
							((numMonths[0] > 0 && col === numMonths[1]-1) ? "<div class='ui-datepicker-row-break'></div>" : "") : "");
				group += calender;
			}
			html += group;
		}
		html += buttonPanel;
		inst._keyEvent = false;
		return html;
	},

	/* Generate the month and year header. */
	_generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate,
			secondary, monthNames, monthNamesShort) {

		var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,
			changeMonth = this._get(inst, "changeMonth"),
			changeYear = this._get(inst, "changeYear"),
			showMonthAfterYear = this._get(inst, "showMonthAfterYear"),
			html = "<div class='ui-datepicker-title'>",
			monthHtml = "";

		// month selection
		if (secondary || !changeMonth) {
			monthHtml += "<span class='ui-datepicker-month'>" + monthNames[drawMonth] + "</span>";
		} else {
			inMinYear = (minDate && minDate.getFullYear() === drawYear);
			inMaxYear = (maxDate && maxDate.getFullYear() === drawYear);
			monthHtml += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>";
			for ( month = 0; month < 12; month++) {
				if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {
					monthHtml += "<option value='" + month + "'" +
						(month === drawMonth ? " selected='selected'" : "") +
						">" + monthNamesShort[month] + "</option>";
				}
			}
			monthHtml += "</select>";
		}

		if (!showMonthAfterYear) {
			html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "");
		}

		// year selection
		if ( !inst.yearshtml ) {
			inst.yearshtml = "";
			if (secondary || !changeYear) {
				html += "<span class='ui-datepicker-year'>" + drawYear + "</span>";
			} else {
				// determine range of years to display
				years = this._get(inst, "yearRange").split(":");
				thisYear = new Date().getFullYear();
				determineYear = function(value) {
					var year = (value.match(/c[+\-].*/) ? drawYear + parseInt(value.substring(1), 10) :
						(value.match(/[+\-].*/) ? thisYear + parseInt(value, 10) :
						parseInt(value, 10)));
					return (isNaN(year) ? thisYear : year);
				};
				year = determineYear(years[0]);
				endYear = Math.max(year, determineYear(years[1] || ""));
				year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
				endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
				inst.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";
				for (; year <= endYear; year++) {
					inst.yearshtml += "<option value='" + year + "'" +
						(year === drawYear ? " selected='selected'" : "") +
						">" + year + "</option>";
				}
				inst.yearshtml += "</select>";

				html += inst.yearshtml;
				inst.yearshtml = null;
			}
		}

		html += this._get(inst, "yearSuffix");
		if (showMonthAfterYear) {
			html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml;
		}
		html += "</div>"; // Close datepicker_header
		return html;
	},

	/* Adjust one of the date sub-fields. */
	_adjustInstDate: function(inst, offset, period) {
		var year = inst.drawYear + (period === "Y" ? offset : 0),
			month = inst.drawMonth + (period === "M" ? offset : 0),
			day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === "D" ? offset : 0),
			date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));

		inst.selectedDay = date.getDate();
		inst.drawMonth = inst.selectedMonth = date.getMonth();
		inst.drawYear = inst.selectedYear = date.getFullYear();
		if (period === "M" || period === "Y") {
			this._notifyChange(inst);
		}
	},

	/* Ensure a date is within any min/max bounds. */
	_restrictMinMax: function(inst, date) {
		var minDate = this._getMinMaxDate(inst, "min"),
			maxDate = this._getMinMaxDate(inst, "max"),
			newDate = (minDate && date < minDate ? minDate : date);
		return (maxDate && newDate > maxDate ? maxDate : newDate);
	},

	/* Notify change of month/year. */
	_notifyChange: function(inst) {
		var onChange = this._get(inst, "onChangeMonthYear");
		if (onChange) {
			onChange.apply((inst.input ? inst.input[0] : null),
				[inst.selectedYear, inst.selectedMonth + 1, inst]);
		}
	},

	/* Determine the number of months to show. */
	_getNumberOfMonths: function(inst) {
		var numMonths = this._get(inst, "numberOfMonths");
		return (numMonths == null ? [1, 1] : (typeof numMonths === "number" ? [1, numMonths] : numMonths));
	},

	/* Determine the current maximum date - ensure no time components are set. */
	_getMinMaxDate: function(inst, minMax) {
		return this._determineDate(inst, this._get(inst, minMax + "Date"), null);
	},

	/* Find the number of days in a given month. */
	_getDaysInMonth: function(year, month) {
		return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();
	},

	/* Find the day of the week of the first of a month. */
	_getFirstDayOfMonth: function(year, month) {
		return new Date(year, month, 1).getDay();
	},

	/* Determines if we should allow a "next/prev" month display change. */
	_canAdjustMonth: function(inst, offset, curYear, curMonth) {
		var numMonths = this._getNumberOfMonths(inst),
			date = this._daylightSavingAdjust(new Date(curYear,
			curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));

		if (offset < 0) {
			date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));
		}
		return this._isInRange(inst, date);
	},

	/* Is the given date in the accepted range? */
	_isInRange: function(inst, date) {
		var yearSplit, currentYear,
			minDate = this._getMinMaxDate(inst, "min"),
			maxDate = this._getMinMaxDate(inst, "max"),
			minYear = null,
			maxYear = null,
			years = this._get(inst, "yearRange");
			if (years){
				yearSplit = years.split(":");
				currentYear = new Date().getFullYear();
				minYear = parseInt(yearSplit[0], 10);
				maxYear = parseInt(yearSplit[1], 10);
				if ( yearSplit[0].match(/[+\-].*/) ) {
					minYear += currentYear;
				}
				if ( yearSplit[1].match(/[+\-].*/) ) {
					maxYear += currentYear;
				}
			}

		return ((!minDate || date.getTime() >= minDate.getTime()) &&
			(!maxDate || date.getTime() <= maxDate.getTime()) &&
			(!minYear || date.getFullYear() >= minYear) &&
			(!maxYear || date.getFullYear() <= maxYear));
	},

	/* Provide the configuration settings for formatting/parsing. */
	_getFormatConfig: function(inst) {
		var shortYearCutoff = this._get(inst, "shortYearCutoff");
		shortYearCutoff = (typeof shortYearCutoff !== "string" ? shortYearCutoff :
			new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
		return {shortYearCutoff: shortYearCutoff,
			dayNamesShort: this._get(inst, "dayNamesShort"), dayNames: this._get(inst, "dayNames"),
			monthNamesShort: this._get(inst, "monthNamesShort"), monthNames: this._get(inst, "monthNames")};
	},

	/* Format the given date for display. */
	_formatDate: function(inst, day, month, year) {
		if (!day) {
			inst.currentDay = inst.selectedDay;
			inst.currentMonth = inst.selectedMonth;
			inst.currentYear = inst.selectedYear;
		}
		var date = (day ? (typeof day === "object" ? day :
			this._daylightSavingAdjust(new Date(year, month, day))) :
			this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
		return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst));
	}
});

/*
 * Bind hover events for datepicker elements.
 * Done via delegate so the binding only occurs once in the lifetime of the parent div.
 * Global datepicker_instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.
 */
function datepicker_bindHover(dpDiv) {
	var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
	return dpDiv.delegate(selector, "mouseout", function() {
			$(this).removeClass("ui-state-hover");
			if (this.className.indexOf("ui-datepicker-prev") !== -1) {
				$(this).removeClass("ui-datepicker-prev-hover");
			}
			if (this.className.indexOf("ui-datepicker-next") !== -1) {
				$(this).removeClass("ui-datepicker-next-hover");
			}
		})
		.delegate( selector, "mouseover", datepicker_handleMouseover );
}

function datepicker_handleMouseover() {
	if (!$.datepicker._isDisabledDatepicker( datepicker_instActive.inline? datepicker_instActive.dpDiv.parent()[0] : datepicker_instActive.input[0])) {
		$(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
		$(this).addClass("ui-state-hover");
		if (this.className.indexOf("ui-datepicker-prev") !== -1) {
			$(this).addClass("ui-datepicker-prev-hover");
		}
		if (this.className.indexOf("ui-datepicker-next") !== -1) {
			$(this).addClass("ui-datepicker-next-hover");
		}
	}
}

/* jQuery extend now ignores nulls! */
function datepicker_extendRemove(target, props) {
	$.extend(target, props);
	for (var name in props) {
		if (props[name] == null) {
			target[name] = props[name];
		}
	}
	return target;
}

/* Invoke the datepicker functionality.
   @param  options  string - a command, optionally followed by additional parameters or
					Object - settings for attaching new datepicker functionality
   @return  jQuery object */
$.fn.datepicker = function(options){

	/* Verify an empty collection wasn't passed - Fixes #6976 */
	if ( !this.length ) {
		return this;
	}

	/* Initialise the date picker. */
	if (!$.datepicker.initialized) {
		$(document).mousedown($.datepicker._checkExternalClick);
		$.datepicker.initialized = true;
	}

	/* Append datepicker main container to body if not exist. */
	if ($("#"+$.datepicker._mainDivId).length === 0) {
		$("body").append($.datepicker.dpDiv);
	}

	var otherArgs = Array.prototype.slice.call(arguments, 1);
	if (typeof options === "string" && (options === "isDisabled" || options === "getDate" || options === "widget")) {
		return $.datepicker["_" + options + "Datepicker"].
			apply($.datepicker, [this[0]].concat(otherArgs));
	}
	if (options === "option" && arguments.length === 2 && typeof arguments[1] === "string") {
		return $.datepicker["_" + options + "Datepicker"].
			apply($.datepicker, [this[0]].concat(otherArgs));
	}
	return this.each(function() {
		typeof options === "string" ?
			$.datepicker["_" + options + "Datepicker"].
				apply($.datepicker, [this].concat(otherArgs)) :
			$.datepicker._attachDatepicker(this, options);
	});
};

$.datepicker = new Datepicker(); // singleton instance
$.datepicker.initialized = false;
$.datepicker.uuid = new Date().getTime();
$.datepicker.version = "1.11.4";

var datepicker = $.datepicker;


/*!
 * jQuery UI Draggable 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/draggable/
 */


$.widget("ui.draggable", $.ui.mouse, {
	version: "1.11.4",
	widgetEventPrefix: "drag",
	options: {
		addClasses: true,
		appendTo: "parent",
		axis: false,
		connectToSortable: false,
		containment: false,
		cursor: "auto",
		cursorAt: false,
		grid: false,
		handle: false,
		helper: "original",
		iframeFix: false,
		opacity: false,
		refreshPositions: false,
		revert: false,
		revertDuration: 500,
		scope: "default",
		scroll: true,
		scrollSensitivity: 20,
		scrollSpeed: 20,
		snap: false,
		snapMode: "both",
		snapTolerance: 20,
		stack: false,
		zIndex: false,

		// callbacks
		drag: null,
		start: null,
		stop: null
	},
	_create: function() {

		if ( this.options.helper === "original" ) {
			this._setPositionRelative();
		}
		if (this.options.addClasses){
			this.element.addClass("ui-draggable");
		}
		if (this.options.disabled){
			this.element.addClass("ui-draggable-disabled");
		}
		this._setHandleClassName();

		this._mouseInit();
	},

	_setOption: function( key, value ) {
		this._super( key, value );
		if ( key === "handle" ) {
			this._removeHandleClassName();
			this._setHandleClassName();
		}
	},

	_destroy: function() {
		if ( ( this.helper || this.element ).is( ".ui-draggable-dragging" ) ) {
			this.destroyOnClear = true;
			return;
		}
		this.element.removeClass( "ui-draggable ui-draggable-dragging ui-draggable-disabled" );
		this._removeHandleClassName();
		this._mouseDestroy();
	},

	_mouseCapture: function(event) {
		var o = this.options;

		this._blurActiveElement( event );

		// among others, prevent a drag on a resizable-handle
		if (this.helper || o.disabled || $(event.target).closest(".ui-resizable-handle").length > 0) {
			return false;
		}

		//Quit if we're not on a valid handle
		this.handle = this._getHandle(event);
		if (!this.handle) {
			return false;
		}

		this._blockFrames( o.iframeFix === true ? "iframe" : o.iframeFix );

		return true;

	},

	_blockFrames: function( selector ) {
		this.iframeBlocks = this.document.find( selector ).map(function() {
			var iframe = $( this );

			return $( "<div>" )
				.css( "position", "absolute" )
				.appendTo( iframe.parent() )
				.outerWidth( iframe.outerWidth() )
				.outerHeight( iframe.outerHeight() )
				.offset( iframe.offset() )[ 0 ];
		});
	},

	_unblockFrames: function() {
		if ( this.iframeBlocks ) {
			this.iframeBlocks.remove();
			delete this.iframeBlocks;
		}
	},

	_blurActiveElement: function( event ) {
		var document = this.document[ 0 ];

		// Only need to blur if the event occurred on the draggable itself, see #10527
		if ( !this.handleElement.is( event.target ) ) {
			return;
		}

		// support: IE9
		// IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
		try {

			// Support: IE9, IE10
			// If the <body> is blurred, IE will switch windows, see #9520
			if ( document.activeElement && document.activeElement.nodeName.toLowerCase() !== "body" ) {

				// Blur any element that currently has focus, see #4261
				$( document.activeElement ).blur();
			}
		} catch ( error ) {}
	},

	_mouseStart: function(event) {

		var o = this.options;

		//Create and append the visible helper
		this.helper = this._createHelper(event);

		this.helper.addClass("ui-draggable-dragging");

		//Cache the helper size
		this._cacheHelperProportions();

		//If ddmanager is used for droppables, set the global draggable
		if ($.ui.ddmanager) {
			$.ui.ddmanager.current = this;
		}

		/*
		 * - Position generation -
		 * This block generates everything position related - it's the core of draggables.
		 */

		//Cache the margins of the original element
		this._cacheMargins();

		//Store the helper's css position
		this.cssPosition = this.helper.css( "position" );
		this.scrollParent = this.helper.scrollParent( true );
		this.offsetParent = this.helper.offsetParent();
		this.hasFixedAncestor = this.helper.parents().filter(function() {
				return $( this ).css( "position" ) === "fixed";
			}).length > 0;

		//The element's absolute position on the page minus margins
		this.positionAbs = this.element.offset();
		this._refreshOffsets( event );

		//Generate the original position
		this.originalPosition = this.position = this._generatePosition( event, false );
		this.originalPageX = event.pageX;
		this.originalPageY = event.pageY;

		//Adjust the mouse offset relative to the helper if "cursorAt" is supplied
		(o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));

		//Set a containment if given in the options
		this._setContainment();

		//Trigger event + callbacks
		if (this._trigger("start", event) === false) {
			this._clear();
			return false;
		}

		//Recache the helper size
		this._cacheHelperProportions();

		//Prepare the droppable offsets
		if ($.ui.ddmanager && !o.dropBehaviour) {
			$.ui.ddmanager.prepareOffsets(this, event);
		}

		// Reset helper's right/bottom css if they're set and set explicit width/height instead
		// as this prevents resizing of elements with right/bottom set (see #7772)
		this._normalizeRightBottom();

		this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position

		//If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)
		if ( $.ui.ddmanager ) {
			$.ui.ddmanager.dragStart(this, event);
		}

		return true;
	},

	_refreshOffsets: function( event ) {
		this.offset = {
			top: this.positionAbs.top - this.margins.top,
			left: this.positionAbs.left - this.margins.left,
			scroll: false,
			parent: this._getParentOffset(),
			relative: this._getRelativeOffset()
		};

		this.offset.click = {
			left: event.pageX - this.offset.left,
			top: event.pageY - this.offset.top
		};
	},

	_mouseDrag: function(event, noPropagation) {
		// reset any necessary cached properties (see #5009)
		if ( this.hasFixedAncestor ) {
			this.offset.parent = this._getParentOffset();
		}

		//Compute the helpers position
		this.position = this._generatePosition( event, true );
		this.positionAbs = this._convertPositionTo("absolute");

		//Call plugins and callbacks and use the resulting position if something is returned
		if (!noPropagation) {
			var ui = this._uiHash();
			if (this._trigger("drag", event, ui) === false) {
				this._mouseUp({});
				return false;
			}
			this.position = ui.position;
		}

		this.helper[ 0 ].style.left = this.position.left + "px";
		this.helper[ 0 ].style.top = this.position.top + "px";

		if ($.ui.ddmanager) {
			$.ui.ddmanager.drag(this, event);
		}

		return false;
	},

	_mouseStop: function(event) {

		//If we are using droppables, inform the manager about the drop
		var that = this,
			dropped = false;
		if ($.ui.ddmanager && !this.options.dropBehaviour) {
			dropped = $.ui.ddmanager.drop(this, event);
		}

		//if a drop comes from outside (a sortable)
		if (this.dropped) {
			dropped = this.dropped;
			this.dropped = false;
		}

		if ((this.options.revert === "invalid" && !dropped) || (this.options.revert === "valid" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {
			$(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
				if (that._trigger("stop", event) !== false) {
					that._clear();
				}
			});
		} else {
			if (this._trigger("stop", event) !== false) {
				this._clear();
			}
		}

		return false;
	},

	_mouseUp: function( event ) {
		this._unblockFrames();

		//If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)
		if ( $.ui.ddmanager ) {
			$.ui.ddmanager.dragStop(this, event);
		}

		// Only need to focus if the event occurred on the draggable itself, see #10527
		if ( this.handleElement.is( event.target ) ) {
			// The interaction is over; whether or not the click resulted in a drag, focus the element
			this.element.focus();
		}

		return $.ui.mouse.prototype._mouseUp.call(this, event);
	},

	cancel: function() {

		if (this.helper.is(".ui-draggable-dragging")) {
			this._mouseUp({});
		} else {
			this._clear();
		}

		return this;

	},

	_getHandle: function(event) {
		return this.options.handle ?
			!!$( event.target ).closest( this.element.find( this.options.handle ) ).length :
			true;
	},

	_setHandleClassName: function() {
		this.handleElement = this.options.handle ?
			this.element.find( this.options.handle ) : this.element;
		this.handleElement.addClass( "ui-draggable-handle" );
	},

	_removeHandleClassName: function() {
		this.handleElement.removeClass( "ui-draggable-handle" );
	},

	_createHelper: function(event) {

		var o = this.options,
			helperIsFunction = $.isFunction( o.helper ),
			helper = helperIsFunction ?
				$( o.helper.apply( this.element[ 0 ], [ event ] ) ) :
				( o.helper === "clone" ?
					this.element.clone().removeAttr( "id" ) :
					this.element );

		if (!helper.parents("body").length) {
			helper.appendTo((o.appendTo === "parent" ? this.element[0].parentNode : o.appendTo));
		}

		// http://bugs.jqueryui.com/ticket/9446
		// a helper function can return the original element
		// which wouldn't have been set to relative in _create
		if ( helperIsFunction && helper[ 0 ] === this.element[ 0 ] ) {
			this._setPositionRelative();
		}

		if (helper[0] !== this.element[0] && !(/(fixed|absolute)/).test(helper.css("position"))) {
			helper.css("position", "absolute");
		}

		return helper;

	},

	_setPositionRelative: function() {
		if ( !( /^(?:r|a|f)/ ).test( this.element.css( "position" ) ) ) {
			this.element[ 0 ].style.position = "relative";
		}
	},

	_adjustOffsetFromHelper: function(obj) {
		if (typeof obj === "string") {
			obj = obj.split(" ");
		}
		if ($.isArray(obj)) {
			obj = { left: +obj[0], top: +obj[1] || 0 };
		}
		if ("left" in obj) {
			this.offset.click.left = obj.left + this.margins.left;
		}
		if ("right" in obj) {
			this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
		}
		if ("top" in obj) {
			this.offset.click.top = obj.top + this.margins.top;
		}
		if ("bottom" in obj) {
			this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
		}
	},

	_isRootNode: function( element ) {
		return ( /(html|body)/i ).test( element.tagName ) || element === this.document[ 0 ];
	},

	_getParentOffset: function() {

		//Get the offsetParent and cache its position
		var po = this.offsetParent.offset(),
			document = this.document[ 0 ];

		// This is a special case where we need to modify a offset calculated on start, since the following happened:
		// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
		if (this.cssPosition === "absolute" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {
			po.left += this.scrollParent.scrollLeft();
			po.top += this.scrollParent.scrollTop();
		}

		if ( this._isRootNode( this.offsetParent[ 0 ] ) ) {
			po = { top: 0, left: 0 };
		}

		return {
			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
		};

	},

	_getRelativeOffset: function() {
		if ( this.cssPosition !== "relative" ) {
			return { top: 0, left: 0 };
		}

		var p = this.element.position(),
			scrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );

		return {
			top: p.top - ( parseInt(this.helper.css( "top" ), 10) || 0 ) + ( !scrollIsRootNode ? this.scrollParent.scrollTop() : 0 ),
			left: p.left - ( parseInt(this.helper.css( "left" ), 10) || 0 ) + ( !scrollIsRootNode ? this.scrollParent.scrollLeft() : 0 )
		};

	},

	_cacheMargins: function() {
		this.margins = {
			left: (parseInt(this.element.css("marginLeft"), 10) || 0),
			top: (parseInt(this.element.css("marginTop"), 10) || 0),
			right: (parseInt(this.element.css("marginRight"), 10) || 0),
			bottom: (parseInt(this.element.css("marginBottom"), 10) || 0)
		};
	},

	_cacheHelperProportions: function() {
		this.helperProportions = {
			width: this.helper.outerWidth(),
			height: this.helper.outerHeight()
		};
	},

	_setContainment: function() {

		var isUserScrollable, c, ce,
			o = this.options,
			document = this.document[ 0 ];

		this.relativeContainer = null;

		if ( !o.containment ) {
			this.containment = null;
			return;
		}

		if ( o.containment === "window" ) {
			this.containment = [
				$( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,
				$( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,
				$( window ).scrollLeft() + $( window ).width() - this.helperProportions.width - this.margins.left,
				$( window ).scrollTop() + ( $( window ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top
			];
			return;
		}

		if ( o.containment === "document") {
			this.containment = [
				0,
				0,
				$( document ).width() - this.helperProportions.width - this.margins.left,
				( $( document ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top
			];
			return;
		}

		if ( o.containment.constructor === Array ) {
			this.containment = o.containment;
			return;
		}

		if ( o.containment === "parent" ) {
			o.containment = this.helper[ 0 ].parentNode;
		}

		c = $( o.containment );
		ce = c[ 0 ];

		if ( !ce ) {
			return;
		}

		isUserScrollable = /(scroll|auto)/.test( c.css( "overflow" ) );

		this.containment = [
			( parseInt( c.css( "borderLeftWidth" ), 10 ) || 0 ) + ( parseInt( c.css( "paddingLeft" ), 10 ) || 0 ),
			( parseInt( c.css( "borderTopWidth" ), 10 ) || 0 ) + ( parseInt( c.css( "paddingTop" ), 10 ) || 0 ),
			( isUserScrollable ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) -
				( parseInt( c.css( "borderRightWidth" ), 10 ) || 0 ) -
				( parseInt( c.css( "paddingRight" ), 10 ) || 0 ) -
				this.helperProportions.width -
				this.margins.left -
				this.margins.right,
			( isUserScrollable ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) -
				( parseInt( c.css( "borderBottomWidth" ), 10 ) || 0 ) -
				( parseInt( c.css( "paddingBottom" ), 10 ) || 0 ) -
				this.helperProportions.height -
				this.margins.top -
				this.margins.bottom
		];
		this.relativeContainer = c;
	},

	_convertPositionTo: function(d, pos) {

		if (!pos) {
			pos = this.position;
		}

		var mod = d === "absolute" ? 1 : -1,
			scrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] );

		return {
			top: (
				pos.top	+																// The absolute mouse position
				this.offset.relative.top * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.top * mod -										// The offsetParent's offset without borders (offset + border)
				( ( this.cssPosition === "fixed" ? -this.offset.scroll.top : ( scrollIsRootNode ? 0 : this.offset.scroll.top ) ) * mod)
			),
			left: (
				pos.left +																// The absolute mouse position
				this.offset.relative.left * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.left * mod	-										// The offsetParent's offset without borders (offset + border)
				( ( this.cssPosition === "fixed" ? -this.offset.scroll.left : ( scrollIsRootNode ? 0 : this.offset.scroll.left ) ) * mod)
			)
		};

	},

	_generatePosition: function( event, constrainPosition ) {

		var containment, co, top, left,
			o = this.options,
			scrollIsRootNode = this._isRootNode( this.scrollParent[ 0 ] ),
			pageX = event.pageX,
			pageY = event.pageY;

		// Cache the scroll
		if ( !scrollIsRootNode || !this.offset.scroll ) {
			this.offset.scroll = {
				top: this.scrollParent.scrollTop(),
				left: this.scrollParent.scrollLeft()
			};
		}

		/*
		 * - Position constraining -
		 * Constrain the position to a mix of grid, containment.
		 */

		// If we are not dragging yet, we won't check for options
		if ( constrainPosition ) {
			if ( this.containment ) {
				if ( this.relativeContainer ){
					co = this.relativeContainer.offset();
					containment = [
						this.containment[ 0 ] + co.left,
						this.containment[ 1 ] + co.top,
						this.containment[ 2 ] + co.left,
						this.containment[ 3 ] + co.top
					];
				} else {
					containment = this.containment;
				}

				if (event.pageX - this.offset.click.left < containment[0]) {
					pageX = containment[0] + this.offset.click.left;
				}
				if (event.pageY - this.offset.click.top < containment[1]) {
					pageY = containment[1] + this.offset.click.top;
				}
				if (event.pageX - this.offset.click.left > containment[2]) {
					pageX = containment[2] + this.offset.click.left;
				}
				if (event.pageY - this.offset.click.top > containment[3]) {
					pageY = containment[3] + this.offset.click.top;
				}
			}

			if (o.grid) {
				//Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)
				top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;
				pageY = containment ? ((top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3]) ? top : ((top - this.offset.click.top >= containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

				left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;
				pageX = containment ? ((left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2]) ? left : ((left - this.offset.click.left >= containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
			}

			if ( o.axis === "y" ) {
				pageX = this.originalPageX;
			}

			if ( o.axis === "x" ) {
				pageY = this.originalPageY;
			}
		}

		return {
			top: (
				pageY -																	// The absolute mouse position
				this.offset.click.top	-												// Click offset (relative to the element)
				this.offset.relative.top -												// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.top +												// The offsetParent's offset without borders (offset + border)
				( this.cssPosition === "fixed" ? -this.offset.scroll.top : ( scrollIsRootNode ? 0 : this.offset.scroll.top ) )
			),
			left: (
				pageX -																	// The absolute mouse position
				this.offset.click.left -												// Click offset (relative to the element)
				this.offset.relative.left -												// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.left +												// The offsetParent's offset without borders (offset + border)
				( this.cssPosition === "fixed" ? -this.offset.scroll.left : ( scrollIsRootNode ? 0 : this.offset.scroll.left ) )
			)
		};

	},

	_clear: function() {
		this.helper.removeClass("ui-draggable-dragging");
		if (this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {
			this.helper.remove();
		}
		this.helper = null;
		this.cancelHelperRemoval = false;
		if ( this.destroyOnClear ) {
			this.destroy();
		}
	},

	_normalizeRightBottom: function() {
		if ( this.options.axis !== "y" && this.helper.css( "right" ) !== "auto" ) {
			this.helper.width( this.helper.width() );
			this.helper.css( "right", "auto" );
		}
		if ( this.options.axis !== "x" && this.helper.css( "bottom" ) !== "auto" ) {
			this.helper.height( this.helper.height() );
			this.helper.css( "bottom", "auto" );
		}
	},

	// From now on bulk stuff - mainly helpers

	_trigger: function( type, event, ui ) {
		ui = ui || this._uiHash();
		$.ui.plugin.call( this, type, [ event, ui, this ], true );

		// Absolute position and offset (see #6884 ) have to be recalculated after plugins
		if ( /^(drag|start|stop)/.test( type ) ) {
			this.positionAbs = this._convertPositionTo( "absolute" );
			ui.offset = this.positionAbs;
		}
		return $.Widget.prototype._trigger.call( this, type, event, ui );
	},

	plugins: {},

	_uiHash: function() {
		return {
			helper: this.helper,
			position: this.position,
			originalPosition: this.originalPosition,
			offset: this.positionAbs
		};
	}

});

$.ui.plugin.add( "draggable", "connectToSortable", {
	start: function( event, ui, draggable ) {
		var uiSortable = $.extend( {}, ui, {
			item: draggable.element
		});

		draggable.sortables = [];
		$( draggable.options.connectToSortable ).each(function() {
			var sortable = $( this ).sortable( "instance" );

			if ( sortable && !sortable.options.disabled ) {
				draggable.sortables.push( sortable );

				// refreshPositions is called at drag start to refresh the containerCache
				// which is used in drag. This ensures it's initialized and synchronized
				// with any changes that might have happened on the page since initialization.
				sortable.refreshPositions();
				sortable._trigger("activate", event, uiSortable);
			}
		});
	},
	stop: function( event, ui, draggable ) {
		var uiSortable = $.extend( {}, ui, {
			item: draggable.element
		});

		draggable.cancelHelperRemoval = false;

		$.each( draggable.sortables, function() {
			var sortable = this;

			if ( sortable.isOver ) {
				sortable.isOver = 0;

				// Allow this sortable to handle removing the helper
				draggable.cancelHelperRemoval = true;
				sortable.cancelHelperRemoval = false;

				// Use _storedCSS To restore properties in the sortable,
				// as this also handles revert (#9675) since the draggable
				// may have modified them in unexpected ways (#8809)
				sortable._storedCSS = {
					position: sortable.placeholder.css( "position" ),
					top: sortable.placeholder.css( "top" ),
					left: sortable.placeholder.css( "left" )
				};

				sortable._mouseStop(event);

				// Once drag has ended, the sortable should return to using
				// its original helper, not the shared helper from draggable
				sortable.options.helper = sortable.options._helper;
			} else {
				// Prevent this Sortable from removing the helper.
				// However, don't set the draggable to remove the helper
				// either as another connected Sortable may yet handle the removal.
				sortable.cancelHelperRemoval = true;

				sortable._trigger( "deactivate", event, uiSortable );
			}
		});
	},
	drag: function( event, ui, draggable ) {
		$.each( draggable.sortables, function() {
			var innermostIntersecting = false,
				sortable = this;

			// Copy over variables that sortable's _intersectsWith uses
			sortable.positionAbs = draggable.positionAbs;
			sortable.helperProportions = draggable.helperProportions;
			sortable.offset.click = draggable.offset.click;

			if ( sortable._intersectsWith( sortable.containerCache ) ) {
				innermostIntersecting = true;

				$.each( draggable.sortables, function() {
					// Copy over variables that sortable's _intersectsWith uses
					this.positionAbs = draggable.positionAbs;
					this.helperProportions = draggable.helperProportions;
					this.offset.click = draggable.offset.click;

					if ( this !== sortable &&
							this._intersectsWith( this.containerCache ) &&
							$.contains( sortable.element[ 0 ], this.element[ 0 ] ) ) {
						innermostIntersecting = false;
					}

					return innermostIntersecting;
				});
			}

			if ( innermostIntersecting ) {
				// If it intersects, we use a little isOver variable and set it once,
				// so that the move-in stuff gets fired only once.
				if ( !sortable.isOver ) {
					sortable.isOver = 1;

					// Store draggable's parent in case we need to reappend to it later.
					draggable._parent = ui.helper.parent();

					sortable.currentItem = ui.helper
						.appendTo( sortable.element )
						.data( "ui-sortable-item", true );

					// Store helper option to later restore it
					sortable.options._helper = sortable.options.helper;

					sortable.options.helper = function() {
						return ui.helper[ 0 ];
					};

					// Fire the start events of the sortable with our passed browser event,
					// and our own helper (so it doesn't create a new one)
					event.target = sortable.currentItem[ 0 ];
					sortable._mouseCapture( event, true );
					sortable._mouseStart( event, true, true );

					// Because the browser event is way off the new appended portlet,
					// modify necessary variables to reflect the changes
					sortable.offset.click.top = draggable.offset.click.top;
					sortable.offset.click.left = draggable.offset.click.left;
					sortable.offset.parent.left -= draggable.offset.parent.left -
						sortable.offset.parent.left;
					sortable.offset.parent.top -= draggable.offset.parent.top -
						sortable.offset.parent.top;

					draggable._trigger( "toSortable", event );

					// Inform draggable that the helper is in a valid drop zone,
					// used solely in the revert option to handle "valid/invalid".
					draggable.dropped = sortable.element;

					// Need to refreshPositions of all sortables in the case that
					// adding to one sortable changes the location of the other sortables (#9675)
					$.each( draggable.sortables, function() {
						this.refreshPositions();
					});

					// hack so receive/update callbacks work (mostly)
					draggable.currentItem = draggable.element;
					sortable.fromOutside = draggable;
				}

				if ( sortable.currentItem ) {
					sortable._mouseDrag( event );
					// Copy the sortable's position because the draggable's can potentially reflect
					// a relative position, while sortable is always absolute, which the dragged
					// element has now become. (#8809)
					ui.position = sortable.position;
				}
			} else {
				// If it doesn't intersect with the sortable, and it intersected before,
				// we fake the drag stop of the sortable, but make sure it doesn't remove
				// the helper by using cancelHelperRemoval.
				if ( sortable.isOver ) {

					sortable.isOver = 0;
					sortable.cancelHelperRemoval = true;

					// Calling sortable's mouseStop would trigger a revert,
					// so revert must be temporarily false until after mouseStop is called.
					sortable.options._revert = sortable.options.revert;
					sortable.options.revert = false;

					sortable._trigger( "out", event, sortable._uiHash( sortable ) );
					sortable._mouseStop( event, true );

					// restore sortable behaviors that were modfied
					// when the draggable entered the sortable area (#9481)
					sortable.options.revert = sortable.options._revert;
					sortable.options.helper = sortable.options._helper;

					if ( sortable.placeholder ) {
						sortable.placeholder.remove();
					}

					// Restore and recalculate the draggable's offset considering the sortable
					// may have modified them in unexpected ways. (#8809, #10669)
					ui.helper.appendTo( draggable._parent );
					draggable._refreshOffsets( event );
					ui.position = draggable._generatePosition( event, true );

					draggable._trigger( "fromSortable", event );

					// Inform draggable that the helper is no longer in a valid drop zone
					draggable.dropped = false;

					// Need to refreshPositions of all sortables just in case removing
					// from one sortable changes the location of other sortables (#9675)
					$.each( draggable.sortables, function() {
						this.refreshPositions();
					});
				}
			}
		});
	}
});

$.ui.plugin.add("draggable", "cursor", {
	start: function( event, ui, instance ) {
		var t = $( "body" ),
			o = instance.options;

		if (t.css("cursor")) {
			o._cursor = t.css("cursor");
		}
		t.css("cursor", o.cursor);
	},
	stop: function( event, ui, instance ) {
		var o = instance.options;
		if (o._cursor) {
			$("body").css("cursor", o._cursor);
		}
	}
});

$.ui.plugin.add("draggable", "opacity", {
	start: function( event, ui, instance ) {
		var t = $( ui.helper ),
			o = instance.options;
		if (t.css("opacity")) {
			o._opacity = t.css("opacity");
		}
		t.css("opacity", o.opacity);
	},
	stop: function( event, ui, instance ) {
		var o = instance.options;
		if (o._opacity) {
			$(ui.helper).css("opacity", o._opacity);
		}
	}
});

$.ui.plugin.add("draggable", "scroll", {
	start: function( event, ui, i ) {
		if ( !i.scrollParentNotHidden ) {
			i.scrollParentNotHidden = i.helper.scrollParent( false );
		}

		if ( i.scrollParentNotHidden[ 0 ] !== i.document[ 0 ] && i.scrollParentNotHidden[ 0 ].tagName !== "HTML" ) {
			i.overflowOffset = i.scrollParentNotHidden.offset();
		}
	},
	drag: function( event, ui, i  ) {

		var o = i.options,
			scrolled = false,
			scrollParent = i.scrollParentNotHidden[ 0 ],
			document = i.document[ 0 ];

		if ( scrollParent !== document && scrollParent.tagName !== "HTML" ) {
			if ( !o.axis || o.axis !== "x" ) {
				if ( ( i.overflowOffset.top + scrollParent.offsetHeight ) - event.pageY < o.scrollSensitivity ) {
					scrollParent.scrollTop = scrolled = scrollParent.scrollTop + o.scrollSpeed;
				} else if ( event.pageY - i.overflowOffset.top < o.scrollSensitivity ) {
					scrollParent.scrollTop = scrolled = scrollParent.scrollTop - o.scrollSpeed;
				}
			}

			if ( !o.axis || o.axis !== "y" ) {
				if ( ( i.overflowOffset.left + scrollParent.offsetWidth ) - event.pageX < o.scrollSensitivity ) {
					scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft + o.scrollSpeed;
				} else if ( event.pageX - i.overflowOffset.left < o.scrollSensitivity ) {
					scrollParent.scrollLeft = scrolled = scrollParent.scrollLeft - o.scrollSpeed;
				}
			}

		} else {

			if (!o.axis || o.axis !== "x") {
				if (event.pageY - $(document).scrollTop() < o.scrollSensitivity) {
					scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);
				} else if ($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {
					scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);
				}
			}

			if (!o.axis || o.axis !== "y") {
				if (event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {
					scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);
				} else if ($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {
					scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);
				}
			}

		}

		if (scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
			$.ui.ddmanager.prepareOffsets(i, event);
		}

	}
});

$.ui.plugin.add("draggable", "snap", {
	start: function( event, ui, i ) {

		var o = i.options;

		i.snapElements = [];

		$(o.snap.constructor !== String ? ( o.snap.items || ":data(ui-draggable)" ) : o.snap).each(function() {
			var $t = $(this),
				$o = $t.offset();
			if (this !== i.element[0]) {
				i.snapElements.push({
					item: this,
					width: $t.outerWidth(), height: $t.outerHeight(),
					top: $o.top, left: $o.left
				});
			}
		});

	},
	drag: function( event, ui, inst ) {

		var ts, bs, ls, rs, l, r, t, b, i, first,
			o = inst.options,
			d = o.snapTolerance,
			x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,
			y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;

		for (i = inst.snapElements.length - 1; i >= 0; i--){

			l = inst.snapElements[i].left - inst.margins.left;
			r = l + inst.snapElements[i].width;
			t = inst.snapElements[i].top - inst.margins.top;
			b = t + inst.snapElements[i].height;

			if ( x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d || !$.contains( inst.snapElements[ i ].item.ownerDocument, inst.snapElements[ i ].item ) ) {
				if (inst.snapElements[i].snapping) {
					(inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
				}
				inst.snapElements[i].snapping = false;
				continue;
			}

			if (o.snapMode !== "inner") {
				ts = Math.abs(t - y2) <= d;
				bs = Math.abs(b - y1) <= d;
				ls = Math.abs(l - x2) <= d;
				rs = Math.abs(r - x1) <= d;
				if (ts) {
					ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top;
				}
				if (bs) {
					ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top;
				}
				if (ls) {
					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left;
				}
				if (rs) {
					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left;
				}
			}

			first = (ts || bs || ls || rs);

			if (o.snapMode !== "outer") {
				ts = Math.abs(t - y1) <= d;
				bs = Math.abs(b - y2) <= d;
				ls = Math.abs(l - x1) <= d;
				rs = Math.abs(r - x2) <= d;
				if (ts) {
					ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top;
				}
				if (bs) {
					ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top;
				}
				if (ls) {
					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left;
				}
				if (rs) {
					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left;
				}
			}

			if (!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {
				(inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));
			}
			inst.snapElements[i].snapping = (ts || bs || ls || rs || first);

		}

	}
});

$.ui.plugin.add("draggable", "stack", {
	start: function( event, ui, instance ) {
		var min,
			o = instance.options,
			group = $.makeArray($(o.stack)).sort(function(a, b) {
				return (parseInt($(a).css("zIndex"), 10) || 0) - (parseInt($(b).css("zIndex"), 10) || 0);
			});

		if (!group.length) { return; }

		min = parseInt($(group[0]).css("zIndex"), 10) || 0;
		$(group).each(function(i) {
			$(this).css("zIndex", min + i);
		});
		this.css("zIndex", (min + group.length));
	}
});

$.ui.plugin.add("draggable", "zIndex", {
	start: function( event, ui, instance ) {
		var t = $( ui.helper ),
			o = instance.options;

		if (t.css("zIndex")) {
			o._zIndex = t.css("zIndex");
		}
		t.css("zIndex", o.zIndex);
	},
	stop: function( event, ui, instance ) {
		var o = instance.options;

		if (o._zIndex) {
			$(ui.helper).css("zIndex", o._zIndex);
		}
	}
});

var draggable = $.ui.draggable;


/*!
 * jQuery UI Resizable 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/resizable/
 */


$.widget("ui.resizable", $.ui.mouse, {
	version: "1.11.4",
	widgetEventPrefix: "resize",
	options: {
		alsoResize: false,
		animate: false,
		animateDuration: "slow",
		animateEasing: "swing",
		aspectRatio: false,
		autoHide: false,
		containment: false,
		ghost: false,
		grid: false,
		handles: "e,s,se",
		helper: false,
		maxHeight: null,
		maxWidth: null,
		minHeight: 10,
		minWidth: 10,
		// See #7960
		zIndex: 90,

		// callbacks
		resize: null,
		start: null,
		stop: null
	},

	_num: function( value ) {
		return parseInt( value, 10 ) || 0;
	},

	_isNumber: function( value ) {
		return !isNaN( parseInt( value, 10 ) );
	},

	_hasScroll: function( el, a ) {

		if ( $( el ).css( "overflow" ) === "hidden") {
			return false;
		}

		var scroll = ( a && a === "left" ) ? "scrollLeft" : "scrollTop",
			has = false;

		if ( el[ scroll ] > 0 ) {
			return true;
		}

		// TODO: determine which cases actually cause this to happen
		// if the element doesn't have the scroll set, see if it's possible to
		// set the scroll
		el[ scroll ] = 1;
		has = ( el[ scroll ] > 0 );
		el[ scroll ] = 0;
		return has;
	},

	_create: function() {

		var n, i, handle, axis, hname,
			that = this,
			o = this.options;
		this.element.addClass("ui-resizable");

		$.extend(this, {
			_aspectRatio: !!(o.aspectRatio),
			aspectRatio: o.aspectRatio,
			originalElement: this.element,
			_proportionallyResizeElements: [],
			_helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null
		});

		// Wrap the element if it cannot hold child nodes
		if (this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)) {

			this.element.wrap(
				$("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
					position: this.element.css("position"),
					width: this.element.outerWidth(),
					height: this.element.outerHeight(),
					top: this.element.css("top"),
					left: this.element.css("left")
				})
			);

			this.element = this.element.parent().data(
				"ui-resizable", this.element.resizable( "instance" )
			);

			this.elementIsWrapper = true;

			this.element.css({
				marginLeft: this.originalElement.css("marginLeft"),
				marginTop: this.originalElement.css("marginTop"),
				marginRight: this.originalElement.css("marginRight"),
				marginBottom: this.originalElement.css("marginBottom")
			});
			this.originalElement.css({
				marginLeft: 0,
				marginTop: 0,
				marginRight: 0,
				marginBottom: 0
			});
			// support: Safari
			// Prevent Safari textarea resize
			this.originalResizeStyle = this.originalElement.css("resize");
			this.originalElement.css("resize", "none");

			this._proportionallyResizeElements.push( this.originalElement.css({
				position: "static",
				zoom: 1,
				display: "block"
			}) );

			// support: IE9
			// avoid IE jump (hard set the margin)
			this.originalElement.css({ margin: this.originalElement.css("margin") });

			this._proportionallyResize();
		}

		this.handles = o.handles ||
			( !$(".ui-resizable-handle", this.element).length ?
				"e,s,se" : {
					n: ".ui-resizable-n",
					e: ".ui-resizable-e",
					s: ".ui-resizable-s",
					w: ".ui-resizable-w",
					se: ".ui-resizable-se",
					sw: ".ui-resizable-sw",
					ne: ".ui-resizable-ne",
					nw: ".ui-resizable-nw"
				} );

		this._handles = $();
		if ( this.handles.constructor === String ) {

			if ( this.handles === "all") {
				this.handles = "n,e,s,w,se,sw,ne,nw";
			}

			n = this.handles.split(",");
			this.handles = {};

			for (i = 0; i < n.length; i++) {

				handle = $.trim(n[i]);
				hname = "ui-resizable-" + handle;
				axis = $("<div class='ui-resizable-handle " + hname + "'></div>");

				axis.css({ zIndex: o.zIndex });

				// TODO : What's going on here?
				if ("se" === handle) {
					axis.addClass("ui-icon ui-icon-gripsmall-diagonal-se");
				}

				this.handles[handle] = ".ui-resizable-" + handle;
				this.element.append(axis);
			}

		}

		this._renderAxis = function(target) {

			var i, axis, padPos, padWrapper;

			target = target || this.element;

			for (i in this.handles) {

				if (this.handles[i].constructor === String) {
					this.handles[i] = this.element.children( this.handles[ i ] ).first().show();
				} else if ( this.handles[ i ].jquery || this.handles[ i ].nodeType ) {
					this.handles[ i ] = $( this.handles[ i ] );
					this._on( this.handles[ i ], { "mousedown": that._mouseDown });
				}

				if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)) {

					axis = $(this.handles[i], this.element);

					padWrapper = /sw|ne|nw|se|n|s/.test(i) ? axis.outerHeight() : axis.outerWidth();

					padPos = [ "padding",
						/ne|nw|n/.test(i) ? "Top" :
						/se|sw|s/.test(i) ? "Bottom" :
						/^e$/.test(i) ? "Right" : "Left" ].join("");

					target.css(padPos, padWrapper);

					this._proportionallyResize();
				}

				this._handles = this._handles.add( this.handles[ i ] );
			}
		};

		// TODO: make renderAxis a prototype function
		this._renderAxis(this.element);

		this._handles = this._handles.add( this.element.find( ".ui-resizable-handle" ) );
		this._handles.disableSelection();

		this._handles.mouseover(function() {
			if (!that.resizing) {
				if (this.className) {
					axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);
				}
				that.axis = axis && axis[1] ? axis[1] : "se";
			}
		});

		if (o.autoHide) {
			this._handles.hide();
			$(this.element)
				.addClass("ui-resizable-autohide")
				.mouseenter(function() {
					if (o.disabled) {
						return;
					}
					$(this).removeClass("ui-resizable-autohide");
					that._handles.show();
				})
				.mouseleave(function() {
					if (o.disabled) {
						return;
					}
					if (!that.resizing) {
						$(this).addClass("ui-resizable-autohide");
						that._handles.hide();
					}
				});
		}

		this._mouseInit();
	},

	_destroy: function() {

		this._mouseDestroy();

		var wrapper,
			_destroy = function(exp) {
				$(exp)
					.removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing")
					.removeData("resizable")
					.removeData("ui-resizable")
					.unbind(".resizable")
					.find(".ui-resizable-handle")
						.remove();
			};

		// TODO: Unwrap at same DOM position
		if (this.elementIsWrapper) {
			_destroy(this.element);
			wrapper = this.element;
			this.originalElement.css({
				position: wrapper.css("position"),
				width: wrapper.outerWidth(),
				height: wrapper.outerHeight(),
				top: wrapper.css("top"),
				left: wrapper.css("left")
			}).insertAfter( wrapper );
			wrapper.remove();
		}

		this.originalElement.css("resize", this.originalResizeStyle);
		_destroy(this.originalElement);

		return this;
	},

	_mouseCapture: function(event) {
		var i, handle,
			capture = false;

		for (i in this.handles) {
			handle = $(this.handles[i])[0];
			if (handle === event.target || $.contains(handle, event.target)) {
				capture = true;
			}
		}

		return !this.options.disabled && capture;
	},

	_mouseStart: function(event) {

		var curleft, curtop, cursor,
			o = this.options,
			el = this.element;

		this.resizing = true;

		this._renderProxy();

		curleft = this._num(this.helper.css("left"));
		curtop = this._num(this.helper.css("top"));

		if (o.containment) {
			curleft += $(o.containment).scrollLeft() || 0;
			curtop += $(o.containment).scrollTop() || 0;
		}

		this.offset = this.helper.offset();
		this.position = { left: curleft, top: curtop };

		this.size = this._helper ? {
				width: this.helper.width(),
				height: this.helper.height()
			} : {
				width: el.width(),
				height: el.height()
			};

		this.originalSize = this._helper ? {
				width: el.outerWidth(),
				height: el.outerHeight()
			} : {
				width: el.width(),
				height: el.height()
			};

		this.sizeDiff = {
			width: el.outerWidth() - el.width(),
			height: el.outerHeight() - el.height()
		};

		this.originalPosition = { left: curleft, top: curtop };
		this.originalMousePosition = { left: event.pageX, top: event.pageY };

		this.aspectRatio = (typeof o.aspectRatio === "number") ?
			o.aspectRatio :
			((this.originalSize.width / this.originalSize.height) || 1);

		cursor = $(".ui-resizable-" + this.axis).css("cursor");
		$("body").css("cursor", cursor === "auto" ? this.axis + "-resize" : cursor);

		el.addClass("ui-resizable-resizing");
		this._propagate("start", event);
		return true;
	},

	_mouseDrag: function(event) {

		var data, props,
			smp = this.originalMousePosition,
			a = this.axis,
			dx = (event.pageX - smp.left) || 0,
			dy = (event.pageY - smp.top) || 0,
			trigger = this._change[a];

		this._updatePrevProperties();

		if (!trigger) {
			return false;
		}

		data = trigger.apply(this, [ event, dx, dy ]);

		this._updateVirtualBoundaries(event.shiftKey);
		if (this._aspectRatio || event.shiftKey) {
			data = this._updateRatio(data, event);
		}

		data = this._respectSize(data, event);

		this._updateCache(data);

		this._propagate("resize", event);

		props = this._applyChanges();

		if ( !this._helper && this._proportionallyResizeElements.length ) {
			this._proportionallyResize();
		}

		if ( !$.isEmptyObject( props ) ) {
			this._updatePrevProperties();
			this._trigger( "resize", event, this.ui() );
			this._applyChanges();
		}

		return false;
	},

	_mouseStop: function(event) {

		this.resizing = false;
		var pr, ista, soffseth, soffsetw, s, left, top,
			o = this.options, that = this;

		if (this._helper) {

			pr = this._proportionallyResizeElements;
			ista = pr.length && (/textarea/i).test(pr[0].nodeName);
			soffseth = ista && this._hasScroll(pr[0], "left") ? 0 : that.sizeDiff.height;
			soffsetw = ista ? 0 : that.sizeDiff.width;

			s = {
				width: (that.helper.width()  - soffsetw),
				height: (that.helper.height() - soffseth)
			};
			left = (parseInt(that.element.css("left"), 10) +
				(that.position.left - that.originalPosition.left)) || null;
			top = (parseInt(that.element.css("top"), 10) +
				(that.position.top - that.originalPosition.top)) || null;

			if (!o.animate) {
				this.element.css($.extend(s, { top: top, left: left }));
			}

			that.helper.height(that.size.height);
			that.helper.width(that.size.width);

			if (this._helper && !o.animate) {
				this._proportionallyResize();
			}
		}

		$("body").css("cursor", "auto");

		this.element.removeClass("ui-resizable-resizing");

		this._propagate("stop", event);

		if (this._helper) {
			this.helper.remove();
		}

		return false;

	},

	_updatePrevProperties: function() {
		this.prevPosition = {
			top: this.position.top,
			left: this.position.left
		};
		this.prevSize = {
			width: this.size.width,
			height: this.size.height
		};
	},

	_applyChanges: function() {
		var props = {};

		if ( this.position.top !== this.prevPosition.top ) {
			props.top = this.position.top + "px";
		}
		if ( this.position.left !== this.prevPosition.left ) {
			props.left = this.position.left + "px";
		}
		if ( this.size.width !== this.prevSize.width ) {
			props.width = this.size.width + "px";
		}
		if ( this.size.height !== this.prevSize.height ) {
			props.height = this.size.height + "px";
		}

		this.helper.css( props );

		return props;
	},

	_updateVirtualBoundaries: function(forceAspectRatio) {
		var pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,
			o = this.options;

		b = {
			minWidth: this._isNumber(o.minWidth) ? o.minWidth : 0,
			maxWidth: this._isNumber(o.maxWidth) ? o.maxWidth : Infinity,
			minHeight: this._isNumber(o.minHeight) ? o.minHeight : 0,
			maxHeight: this._isNumber(o.maxHeight) ? o.maxHeight : Infinity
		};

		if (this._aspectRatio || forceAspectRatio) {
			pMinWidth = b.minHeight * this.aspectRatio;
			pMinHeight = b.minWidth / this.aspectRatio;
			pMaxWidth = b.maxHeight * this.aspectRatio;
			pMaxHeight = b.maxWidth / this.aspectRatio;

			if (pMinWidth > b.minWidth) {
				b.minWidth = pMinWidth;
			}
			if (pMinHeight > b.minHeight) {
				b.minHeight = pMinHeight;
			}
			if (pMaxWidth < b.maxWidth) {
				b.maxWidth = pMaxWidth;
			}
			if (pMaxHeight < b.maxHeight) {
				b.maxHeight = pMaxHeight;
			}
		}
		this._vBoundaries = b;
	},

	_updateCache: function(data) {
		this.offset = this.helper.offset();
		if (this._isNumber(data.left)) {
			this.position.left = data.left;
		}
		if (this._isNumber(data.top)) {
			this.position.top = data.top;
		}
		if (this._isNumber(data.height)) {
			this.size.height = data.height;
		}
		if (this._isNumber(data.width)) {
			this.size.width = data.width;
		}
	},

	_updateRatio: function( data ) {

		var cpos = this.position,
			csize = this.size,
			a = this.axis;

		if (this._isNumber(data.height)) {
			data.width = (data.height * this.aspectRatio);
		} else if (this._isNumber(data.width)) {
			data.height = (data.width / this.aspectRatio);
		}

		if (a === "sw") {
			data.left = cpos.left + (csize.width - data.width);
			data.top = null;
		}
		if (a === "nw") {
			data.top = cpos.top + (csize.height - data.height);
			data.left = cpos.left + (csize.width - data.width);
		}

		return data;
	},

	_respectSize: function( data ) {

		var o = this._vBoundaries,
			a = this.axis,
			ismaxw = this._isNumber(data.width) && o.maxWidth && (o.maxWidth < data.width),
			ismaxh = this._isNumber(data.height) && o.maxHeight && (o.maxHeight < data.height),
			isminw = this._isNumber(data.width) && o.minWidth && (o.minWidth > data.width),
			isminh = this._isNumber(data.height) && o.minHeight && (o.minHeight > data.height),
			dw = this.originalPosition.left + this.originalSize.width,
			dh = this.position.top + this.size.height,
			cw = /sw|nw|w/.test(a), ch = /nw|ne|n/.test(a);
		if (isminw) {
			data.width = o.minWidth;
		}
		if (isminh) {
			data.height = o.minHeight;
		}
		if (ismaxw) {
			data.width = o.maxWidth;
		}
		if (ismaxh) {
			data.height = o.maxHeight;
		}

		if (isminw && cw) {
			data.left = dw - o.minWidth;
		}
		if (ismaxw && cw) {
			data.left = dw - o.maxWidth;
		}
		if (isminh && ch) {
			data.top = dh - o.minHeight;
		}
		if (ismaxh && ch) {
			data.top = dh - o.maxHeight;
		}

		// Fixing jump error on top/left - bug #2330
		if (!data.width && !data.height && !data.left && data.top) {
			data.top = null;
		} else if (!data.width && !data.height && !data.top && data.left) {
			data.left = null;
		}

		return data;
	},

	_getPaddingPlusBorderDimensions: function( element ) {
		var i = 0,
			widths = [],
			borders = [
				element.css( "borderTopWidth" ),
				element.css( "borderRightWidth" ),
				element.css( "borderBottomWidth" ),
				element.css( "borderLeftWidth" )
			],
			paddings = [
				element.css( "paddingTop" ),
				element.css( "paddingRight" ),
				element.css( "paddingBottom" ),
				element.css( "paddingLeft" )
			];

		for ( ; i < 4; i++ ) {
			widths[ i ] = ( parseInt( borders[ i ], 10 ) || 0 );
			widths[ i ] += ( parseInt( paddings[ i ], 10 ) || 0 );
		}

		return {
			height: widths[ 0 ] + widths[ 2 ],
			width: widths[ 1 ] + widths[ 3 ]
		};
	},

	_proportionallyResize: function() {

		if (!this._proportionallyResizeElements.length) {
			return;
		}

		var prel,
			i = 0,
			element = this.helper || this.element;

		for ( ; i < this._proportionallyResizeElements.length; i++) {

			prel = this._proportionallyResizeElements[i];

			// TODO: Seems like a bug to cache this.outerDimensions
			// considering that we are in a loop.
			if (!this.outerDimensions) {
				this.outerDimensions = this._getPaddingPlusBorderDimensions( prel );
			}

			prel.css({
				height: (element.height() - this.outerDimensions.height) || 0,
				width: (element.width() - this.outerDimensions.width) || 0
			});

		}

	},

	_renderProxy: function() {

		var el = this.element, o = this.options;
		this.elementOffset = el.offset();

		if (this._helper) {

			this.helper = this.helper || $("<div style='overflow:hidden;'></div>");

			this.helper.addClass(this._helper).css({
				width: this.element.outerWidth() - 1,
				height: this.element.outerHeight() - 1,
				position: "absolute",
				left: this.elementOffset.left + "px",
				top: this.elementOffset.top + "px",
				zIndex: ++o.zIndex //TODO: Don't modify option
			});

			this.helper
				.appendTo("body")
				.disableSelection();

		} else {
			this.helper = this.element;
		}

	},

	_change: {
		e: function(event, dx) {
			return { width: this.originalSize.width + dx };
		},
		w: function(event, dx) {
			var cs = this.originalSize, sp = this.originalPosition;
			return { left: sp.left + dx, width: cs.width - dx };
		},
		n: function(event, dx, dy) {
			var cs = this.originalSize, sp = this.originalPosition;
			return { top: sp.top + dy, height: cs.height - dy };
		},
		s: function(event, dx, dy) {
			return { height: this.originalSize.height + dy };
		},
		se: function(event, dx, dy) {
			return $.extend(this._change.s.apply(this, arguments),
				this._change.e.apply(this, [ event, dx, dy ]));
		},
		sw: function(event, dx, dy) {
			return $.extend(this._change.s.apply(this, arguments),
				this._change.w.apply(this, [ event, dx, dy ]));
		},
		ne: function(event, dx, dy) {
			return $.extend(this._change.n.apply(this, arguments),
				this._change.e.apply(this, [ event, dx, dy ]));
		},
		nw: function(event, dx, dy) {
			return $.extend(this._change.n.apply(this, arguments),
				this._change.w.apply(this, [ event, dx, dy ]));
		}
	},

	_propagate: function(n, event) {
		$.ui.plugin.call(this, n, [ event, this.ui() ]);
		(n !== "resize" && this._trigger(n, event, this.ui()));
	},

	plugins: {},

	ui: function() {
		return {
			originalElement: this.originalElement,
			element: this.element,
			helper: this.helper,
			position: this.position,
			size: this.size,
			originalSize: this.originalSize,
			originalPosition: this.originalPosition
		};
	}

});

/*
 * Resizable Extensions
 */

$.ui.plugin.add("resizable", "animate", {

	stop: function( event ) {
		var that = $(this).resizable( "instance" ),
			o = that.options,
			pr = that._proportionallyResizeElements,
			ista = pr.length && (/textarea/i).test(pr[0].nodeName),
			soffseth = ista && that._hasScroll(pr[0], "left") ? 0 : that.sizeDiff.height,
			soffsetw = ista ? 0 : that.sizeDiff.width,
			style = { width: (that.size.width - soffsetw), height: (that.size.height - soffseth) },
			left = (parseInt(that.element.css("left"), 10) +
				(that.position.left - that.originalPosition.left)) || null,
			top = (parseInt(that.element.css("top"), 10) +
				(that.position.top - that.originalPosition.top)) || null;

		that.element.animate(
			$.extend(style, top && left ? { top: top, left: left } : {}), {
				duration: o.animateDuration,
				easing: o.animateEasing,
				step: function() {

					var data = {
						width: parseInt(that.element.css("width"), 10),
						height: parseInt(that.element.css("height"), 10),
						top: parseInt(that.element.css("top"), 10),
						left: parseInt(that.element.css("left"), 10)
					};

					if (pr && pr.length) {
						$(pr[0]).css({ width: data.width, height: data.height });
					}

					// propagating resize, and updating values for each animation step
					that._updateCache(data);
					that._propagate("resize", event);

				}
			}
		);
	}

});

$.ui.plugin.add( "resizable", "containment", {

	start: function() {
		var element, p, co, ch, cw, width, height,
			that = $( this ).resizable( "instance" ),
			o = that.options,
			el = that.element,
			oc = o.containment,
			ce = ( oc instanceof $ ) ? oc.get( 0 ) : ( /parent/.test( oc ) ) ? el.parent().get( 0 ) : oc;

		if ( !ce ) {
			return;
		}

		that.containerElement = $( ce );

		if ( /document/.test( oc ) || oc === document ) {
			that.containerOffset = {
				left: 0,
				top: 0
			};
			that.containerPosition = {
				left: 0,
				top: 0
			};

			that.parentData = {
				element: $( document ),
				left: 0,
				top: 0,
				width: $( document ).width(),
				height: $( document ).height() || document.body.parentNode.scrollHeight
			};
		} else {
			element = $( ce );
			p = [];
			$([ "Top", "Right", "Left", "Bottom" ]).each(function( i, name ) {
				p[ i ] = that._num( element.css( "padding" + name ) );
			});

			that.containerOffset = element.offset();
			that.containerPosition = element.position();
			that.containerSize = {
				height: ( element.innerHeight() - p[ 3 ] ),
				width: ( element.innerWidth() - p[ 1 ] )
			};

			co = that.containerOffset;
			ch = that.containerSize.height;
			cw = that.containerSize.width;
			width = ( that._hasScroll ( ce, "left" ) ? ce.scrollWidth : cw );
			height = ( that._hasScroll ( ce ) ? ce.scrollHeight : ch ) ;

			that.parentData = {
				element: ce,
				left: co.left,
				top: co.top,
				width: width,
				height: height
			};
		}
	},

	resize: function( event ) {
		var woset, hoset, isParent, isOffsetRelative,
			that = $( this ).resizable( "instance" ),
			o = that.options,
			co = that.containerOffset,
			cp = that.position,
			pRatio = that._aspectRatio || event.shiftKey,
			cop = {
				top: 0,
				left: 0
			},
			ce = that.containerElement,
			continueResize = true;

		if ( ce[ 0 ] !== document && ( /static/ ).test( ce.css( "position" ) ) ) {
			cop = co;
		}

		if ( cp.left < ( that._helper ? co.left : 0 ) ) {
			that.size.width = that.size.width +
				( that._helper ?
					( that.position.left - co.left ) :
					( that.position.left - cop.left ) );

			if ( pRatio ) {
				that.size.height = that.size.width / that.aspectRatio;
				continueResize = false;
			}
			that.position.left = o.helper ? co.left : 0;
		}

		if ( cp.top < ( that._helper ? co.top : 0 ) ) {
			that.size.height = that.size.height +
				( that._helper ?
					( that.position.top - co.top ) :
					that.position.top );

			if ( pRatio ) {
				that.size.width = that.size.height * that.aspectRatio;
				continueResize = false;
			}
			that.position.top = that._helper ? co.top : 0;
		}

		isParent = that.containerElement.get( 0 ) === that.element.parent().get( 0 );
		isOffsetRelative = /relative|absolute/.test( that.containerElement.css( "position" ) );

		if ( isParent && isOffsetRelative ) {
			that.offset.left = that.parentData.left + that.position.left;
			that.offset.top = that.parentData.top + that.position.top;
		} else {
			that.offset.left = that.element.offset().left;
			that.offset.top = that.element.offset().top;
		}

		woset = Math.abs( that.sizeDiff.width +
			(that._helper ?
				that.offset.left - cop.left :
				(that.offset.left - co.left)) );

		hoset = Math.abs( that.sizeDiff.height +
			(that._helper ?
				that.offset.top - cop.top :
				(that.offset.top - co.top)) );

		if ( woset + that.size.width >= that.parentData.width ) {
			that.size.width = that.parentData.width - woset;
			if ( pRatio ) {
				that.size.height = that.size.width / that.aspectRatio;
				continueResize = false;
			}
		}

		if ( hoset + that.size.height >= that.parentData.height ) {
			that.size.height = that.parentData.height - hoset;
			if ( pRatio ) {
				that.size.width = that.size.height * that.aspectRatio;
				continueResize = false;
			}
		}

		if ( !continueResize ) {
			that.position.left = that.prevPosition.left;
			that.position.top = that.prevPosition.top;
			that.size.width = that.prevSize.width;
			that.size.height = that.prevSize.height;
		}
	},

	stop: function() {
		var that = $( this ).resizable( "instance" ),
			o = that.options,
			co = that.containerOffset,
			cop = that.containerPosition,
			ce = that.containerElement,
			helper = $( that.helper ),
			ho = helper.offset(),
			w = helper.outerWidth() - that.sizeDiff.width,
			h = helper.outerHeight() - that.sizeDiff.height;

		if ( that._helper && !o.animate && ( /relative/ ).test( ce.css( "position" ) ) ) {
			$( this ).css({
				left: ho.left - cop.left - co.left,
				width: w,
				height: h
			});
		}

		if ( that._helper && !o.animate && ( /static/ ).test( ce.css( "position" ) ) ) {
			$( this ).css({
				left: ho.left - cop.left - co.left,
				width: w,
				height: h
			});
		}
	}
});

$.ui.plugin.add("resizable", "alsoResize", {

	start: function() {
		var that = $(this).resizable( "instance" ),
			o = that.options;

		$(o.alsoResize).each(function() {
			var el = $(this);
			el.data("ui-resizable-alsoresize", {
				width: parseInt(el.width(), 10), height: parseInt(el.height(), 10),
				left: parseInt(el.css("left"), 10), top: parseInt(el.css("top"), 10)
			});
		});
	},

	resize: function(event, ui) {
		var that = $(this).resizable( "instance" ),
			o = that.options,
			os = that.originalSize,
			op = that.originalPosition,
			delta = {
				height: (that.size.height - os.height) || 0,
				width: (that.size.width - os.width) || 0,
				top: (that.position.top - op.top) || 0,
				left: (that.position.left - op.left) || 0
			};

			$(o.alsoResize).each(function() {
				var el = $(this), start = $(this).data("ui-resizable-alsoresize"), style = {},
					css = el.parents(ui.originalElement[0]).length ?
							[ "width", "height" ] :
							[ "width", "height", "top", "left" ];

				$.each(css, function(i, prop) {
					var sum = (start[prop] || 0) + (delta[prop] || 0);
					if (sum && sum >= 0) {
						style[prop] = sum || null;
					}
				});

				el.css(style);
			});
	},

	stop: function() {
		$(this).removeData("resizable-alsoresize");
	}
});

$.ui.plugin.add("resizable", "ghost", {

	start: function() {

		var that = $(this).resizable( "instance" ), o = that.options, cs = that.size;

		that.ghost = that.originalElement.clone();
		that.ghost
			.css({
				opacity: 0.25,
				display: "block",
				position: "relative",
				height: cs.height,
				width: cs.width,
				margin: 0,
				left: 0,
				top: 0
			})
			.addClass("ui-resizable-ghost")
			.addClass(typeof o.ghost === "string" ? o.ghost : "");

		that.ghost.appendTo(that.helper);

	},

	resize: function() {
		var that = $(this).resizable( "instance" );
		if (that.ghost) {
			that.ghost.css({
				position: "relative",
				height: that.size.height,
				width: that.size.width
			});
		}
	},

	stop: function() {
		var that = $(this).resizable( "instance" );
		if (that.ghost && that.helper) {
			that.helper.get(0).removeChild(that.ghost.get(0));
		}
	}

});

$.ui.plugin.add("resizable", "grid", {

	resize: function() {
		var outerDimensions,
			that = $(this).resizable( "instance" ),
			o = that.options,
			cs = that.size,
			os = that.originalSize,
			op = that.originalPosition,
			a = that.axis,
			grid = typeof o.grid === "number" ? [ o.grid, o.grid ] : o.grid,
			gridX = (grid[0] || 1),
			gridY = (grid[1] || 1),
			ox = Math.round((cs.width - os.width) / gridX) * gridX,
			oy = Math.round((cs.height - os.height) / gridY) * gridY,
			newWidth = os.width + ox,
			newHeight = os.height + oy,
			isMaxWidth = o.maxWidth && (o.maxWidth < newWidth),
			isMaxHeight = o.maxHeight && (o.maxHeight < newHeight),
			isMinWidth = o.minWidth && (o.minWidth > newWidth),
			isMinHeight = o.minHeight && (o.minHeight > newHeight);

		o.grid = grid;

		if (isMinWidth) {
			newWidth += gridX;
		}
		if (isMinHeight) {
			newHeight += gridY;
		}
		if (isMaxWidth) {
			newWidth -= gridX;
		}
		if (isMaxHeight) {
			newHeight -= gridY;
		}

		if (/^(se|s|e)$/.test(a)) {
			that.size.width = newWidth;
			that.size.height = newHeight;
		} else if (/^(ne)$/.test(a)) {
			that.size.width = newWidth;
			that.size.height = newHeight;
			that.position.top = op.top - oy;
		} else if (/^(sw)$/.test(a)) {
			that.size.width = newWidth;
			that.size.height = newHeight;
			that.position.left = op.left - ox;
		} else {
			if ( newHeight - gridY <= 0 || newWidth - gridX <= 0) {
				outerDimensions = that._getPaddingPlusBorderDimensions( this );
			}

			if ( newHeight - gridY > 0 ) {
				that.size.height = newHeight;
				that.position.top = op.top - oy;
			} else {
				newHeight = gridY - outerDimensions.height;
				that.size.height = newHeight;
				that.position.top = op.top + os.height - newHeight;
			}
			if ( newWidth - gridX > 0 ) {
				that.size.width = newWidth;
				that.position.left = op.left - ox;
			} else {
				newWidth = gridX - outerDimensions.width;
				that.size.width = newWidth;
				that.position.left = op.left + os.width - newWidth;
			}
		}
	}

});

var resizable = $.ui.resizable;


/*!
 * jQuery UI Dialog 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/dialog/
 */


var dialog = $.widget( "ui.dialog", {
	version: "1.11.4",
	options: {
		appendTo: "body",
		autoOpen: true,
		buttons: [],
		closeOnEscape: true,
		closeText: "Close",
		dialogClass: "",
		draggable: true,
		hide: null,
		height: "auto",
		maxHeight: null,
		maxWidth: null,
		minHeight: 150,
		minWidth: 150,
		modal: false,
		position: {
			my: "center",
			at: "center",
			of: window,
			collision: "fit",
			// Ensure the titlebar is always visible
			using: function( pos ) {
				var topOffset = $( this ).css( pos ).offset().top;
				if ( topOffset < 0 ) {
					$( this ).css( "top", pos.top - topOffset );
				}
			}
		},
		resizable: true,
		show: null,
		title: null,
		width: 300,

		// callbacks
		beforeClose: null,
		close: null,
		drag: null,
		dragStart: null,
		dragStop: null,
		focus: null,
		open: null,
		resize: null,
		resizeStart: null,
		resizeStop: null
	},

	sizeRelatedOptions: {
		buttons: true,
		height: true,
		maxHeight: true,
		maxWidth: true,
		minHeight: true,
		minWidth: true,
		width: true
	},

	resizableRelatedOptions: {
		maxHeight: true,
		maxWidth: true,
		minHeight: true,
		minWidth: true
	},

	_create: function() {
		this.originalCss = {
			display: this.element[ 0 ].style.display,
			width: this.element[ 0 ].style.width,
			minHeight: this.element[ 0 ].style.minHeight,
			maxHeight: this.element[ 0 ].style.maxHeight,
			height: this.element[ 0 ].style.height
		};
		this.originalPosition = {
			parent: this.element.parent(),
			index: this.element.parent().children().index( this.element )
		};
		this.originalTitle = this.element.attr( "title" );
		this.options.title = this.options.title || this.originalTitle;

		this._createWrapper();

		this.element
			.show()
			.removeAttr( "title" )
			.addClass( "ui-dialog-content ui-widget-content" )
			.appendTo( this.uiDialog );

		this._createTitlebar();
		this._createButtonPane();

		if ( this.options.draggable && $.fn.draggable ) {
			this._makeDraggable();
		}
		if ( this.options.resizable && $.fn.resizable ) {
			this._makeResizable();
		}

		this._isOpen = false;

		this._trackFocus();
	},

	_init: function() {
		if ( this.options.autoOpen ) {
			this.open();
		}
	},

	_appendTo: function() {
		var element = this.options.appendTo;
		if ( element && (element.jquery || element.nodeType) ) {
			return $( element );
		}
		return this.document.find( element || "body" ).eq( 0 );
	},

	_destroy: function() {
		var next,
			originalPosition = this.originalPosition;

		this._untrackInstance();
		this._destroyOverlay();

		this.element
			.removeUniqueId()
			.removeClass( "ui-dialog-content ui-widget-content" )
			.css( this.originalCss )
			// Without detaching first, the following becomes really slow
			.detach();

		this.uiDialog.stop( true, true ).remove();

		if ( this.originalTitle ) {
			this.element.attr( "title", this.originalTitle );
		}

		next = originalPosition.parent.children().eq( originalPosition.index );
		// Don't try to place the dialog next to itself (#8613)
		if ( next.length && next[ 0 ] !== this.element[ 0 ] ) {
			next.before( this.element );
		} else {
			originalPosition.parent.append( this.element );
		}
	},

	widget: function() {
		return this.uiDialog;
	},

	disable: $.noop,
	enable: $.noop,

	close: function( event ) {
		var activeElement,
			that = this;

		if ( !this._isOpen || this._trigger( "beforeClose", event ) === false ) {
			return;
		}

		this._isOpen = false;
		this._focusedElement = null;
		this._destroyOverlay();
		this._untrackInstance();

		if ( !this.opener.filter( ":focusable" ).focus().length ) {

			// support: IE9
			// IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>
			try {
				activeElement = this.document[ 0 ].activeElement;

				// Support: IE9, IE10
				// If the <body> is blurred, IE will switch windows, see #4520
				if ( activeElement && activeElement.nodeName.toLowerCase() !== "body" ) {

					// Hiding a focused element doesn't trigger blur in WebKit
					// so in case we have nothing to focus on, explicitly blur the active element
					// https://bugs.webkit.org/show_bug.cgi?id=47182
					$( activeElement ).blur();
				}
			} catch ( error ) {}
		}

		this._hide( this.uiDialog, this.options.hide, function() {
			that._trigger( "close", event );
		});
	},

	isOpen: function() {
		return this._isOpen;
	},

	moveToTop: function() {
		this._moveToTop();
	},

	_moveToTop: function( event, silent ) {
		var moved = false,
			zIndices = this.uiDialog.siblings( ".ui-front:visible" ).map(function() {
				return +$( this ).css( "z-index" );
			}).get(),
			zIndexMax = Math.max.apply( null, zIndices );

		if ( zIndexMax >= +this.uiDialog.css( "z-index" ) ) {
			this.uiDialog.css( "z-index", zIndexMax + 1 );
			moved = true;
		}

		if ( moved && !silent ) {
			this._trigger( "focus", event );
		}
		return moved;
	},

	open: function() {
		var that = this;
		if ( this._isOpen ) {
			if ( this._moveToTop() ) {
				this._focusTabbable();
			}
			return;
		}

		this._isOpen = true;
		this.opener = $( this.document[ 0 ].activeElement );

		this._size();
		this._position();
		this._createOverlay();
		this._moveToTop( null, true );

		// Ensure the overlay is moved to the top with the dialog, but only when
		// opening. The overlay shouldn't move after the dialog is open so that
		// modeless dialogs opened after the modal dialog stack properly.
		if ( this.overlay ) {
			this.overlay.css( "z-index", this.uiDialog.css( "z-index" ) - 1 );
		}

		this._show( this.uiDialog, this.options.show, function() {
			that._focusTabbable();
			that._trigger( "focus" );
		});

		// Track the dialog immediately upon openening in case a focus event
		// somehow occurs outside of the dialog before an element inside the
		// dialog is focused (#10152)
		this._makeFocusTarget();

		this._trigger( "open" );
	},

	_focusTabbable: function() {
		// Set focus to the first match:
		// 1. An element that was focused previously
		// 2. First element inside the dialog matching [autofocus]
		// 3. Tabbable element inside the content element
		// 4. Tabbable element inside the buttonpane
		// 5. The close button
		// 6. The dialog itself
		var hasFocus = this._focusedElement;
		if ( !hasFocus ) {
			hasFocus = this.element.find( "[autofocus]" );
		}
		if ( !hasFocus.length ) {
			hasFocus = this.element.find( ":tabbable" );
		}
		if ( !hasFocus.length ) {
			hasFocus = this.uiDialogButtonPane.find( ":tabbable" );
		}
		if ( !hasFocus.length ) {
			hasFocus = this.uiDialogTitlebarClose.filter( ":tabbable" );
		}
		if ( !hasFocus.length ) {
			hasFocus = this.uiDialog;
		}
		hasFocus.eq( 0 ).focus();
	},

	_keepFocus: function( event ) {
		function checkFocus() {
			var activeElement = this.document[0].activeElement,
				isActive = this.uiDialog[0] === activeElement ||
					$.contains( this.uiDialog[0], activeElement );
			if ( !isActive ) {
				this._focusTabbable();
			}
		}
		event.preventDefault();
		checkFocus.call( this );
		// support: IE
		// IE <= 8 doesn't prevent moving focus even with event.preventDefault()
		// so we check again later
		this._delay( checkFocus );
	},

	_createWrapper: function() {
		this.uiDialog = $("<div>")
			.addClass( "ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " +
				this.options.dialogClass )
			.hide()
			.attr({
				// Setting tabIndex makes the div focusable
				tabIndex: -1,
				role: "dialog"
			})
			.appendTo( this._appendTo() );

		this._on( this.uiDialog, {
			keydown: function( event ) {
				if ( this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&
						event.keyCode === $.ui.keyCode.ESCAPE ) {
					event.preventDefault();
					this.close( event );
					return;
				}

				// prevent tabbing out of dialogs
				if ( event.keyCode !== $.ui.keyCode.TAB || event.isDefaultPrevented() ) {
					return;
				}
				var tabbables = this.uiDialog.find( ":tabbable" ),
					first = tabbables.filter( ":first" ),
					last = tabbables.filter( ":last" );

				if ( ( event.target === last[0] || event.target === this.uiDialog[0] ) && !event.shiftKey ) {
					this._delay(function() {
						first.focus();
					});
					event.preventDefault();
				} else if ( ( event.target === first[0] || event.target === this.uiDialog[0] ) && event.shiftKey ) {
					this._delay(function() {
						last.focus();
					});
					event.preventDefault();
				}
			},
			mousedown: function( event ) {
				if ( this._moveToTop( event ) ) {
					this._focusTabbable();
				}
			}
		});

		// We assume that any existing aria-describedby attribute means
		// that the dialog content is marked up properly
		// otherwise we brute force the content as the description
		if ( !this.element.find( "[aria-describedby]" ).length ) {
			this.uiDialog.attr({
				"aria-describedby": this.element.uniqueId().attr( "id" )
			});
		}
	},

	_createTitlebar: function() {
		var uiDialogTitle;

		this.uiDialogTitlebar = $( "<div>" )
			.addClass( "ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix" )
			.prependTo( this.uiDialog );
		this._on( this.uiDialogTitlebar, {
			mousedown: function( event ) {
				// Don't prevent click on close button (#8838)
				// Focusing a dialog that is partially scrolled out of view
				// causes the browser to scroll it into view, preventing the click event
				if ( !$( event.target ).closest( ".ui-dialog-titlebar-close" ) ) {
					// Dialog isn't getting focus when dragging (#8063)
					this.uiDialog.focus();
				}
			}
		});

		// support: IE
		// Use type="button" to prevent enter keypresses in textboxes from closing the
		// dialog in IE (#9312)
		this.uiDialogTitlebarClose = $( "<button type='button'></button>" )
			.button({
				label: this.options.closeText,
				icons: {
					primary: "ui-icon-closethick"
				},
				text: false
			})
			.addClass( "ui-dialog-titlebar-close" )
			.appendTo( this.uiDialogTitlebar );
		this._on( this.uiDialogTitlebarClose, {
			click: function( event ) {
				event.preventDefault();
				this.close( event );
			}
		});

		uiDialogTitle = $( "<span>" )
			.uniqueId()
			.addClass( "ui-dialog-title" )
			.prependTo( this.uiDialogTitlebar );
		this._title( uiDialogTitle );

		this.uiDialog.attr({
			"aria-labelledby": uiDialogTitle.attr( "id" )
		});
	},

	_title: function( title ) {
		if ( !this.options.title ) {
			title.html( "&#160;" );
		}
		title.text( this.options.title );
	},

	_createButtonPane: function() {
		this.uiDialogButtonPane = $( "<div>" )
			.addClass( "ui-dialog-buttonpane ui-widget-content ui-helper-clearfix" );

		this.uiButtonSet = $( "<div>" )
			.addClass( "ui-dialog-buttonset" )
			.appendTo( this.uiDialogButtonPane );

		this._createButtons();
	},

	_createButtons: function() {
		var that = this,
			buttons = this.options.buttons;

		// if we already have a button pane, remove it
		this.uiDialogButtonPane.remove();
		this.uiButtonSet.empty();

		if ( $.isEmptyObject( buttons ) || ($.isArray( buttons ) && !buttons.length) ) {
			this.uiDialog.removeClass( "ui-dialog-buttons" );
			return;
		}

		$.each( buttons, function( name, props ) {
			var click, buttonOptions;
			props = $.isFunction( props ) ?
				{ click: props, text: name } :
				props;
			// Default to a non-submitting button
			props = $.extend( { type: "button" }, props );
			// Change the context for the click callback to be the main element
			click = props.click;
			props.click = function() {
				click.apply( that.element[ 0 ], arguments );
			};
			buttonOptions = {
				icons: props.icons,
				text: props.showText
			};
			delete props.icons;
			delete props.showText;
			$( "<button></button>", props )
				.button( buttonOptions )
				.appendTo( that.uiButtonSet );
		});
		this.uiDialog.addClass( "ui-dialog-buttons" );
		this.uiDialogButtonPane.appendTo( this.uiDialog );
	},

	_makeDraggable: function() {
		var that = this,
			options = this.options;

		function filteredUi( ui ) {
			return {
				position: ui.position,
				offset: ui.offset
			};
		}

		this.uiDialog.draggable({
			cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
			handle: ".ui-dialog-titlebar",
			containment: "document",
			start: function( event, ui ) {
				$( this ).addClass( "ui-dialog-dragging" );
				that._blockFrames();
				that._trigger( "dragStart", event, filteredUi( ui ) );
			},
			drag: function( event, ui ) {
				that._trigger( "drag", event, filteredUi( ui ) );
			},
			stop: function( event, ui ) {
				var left = ui.offset.left - that.document.scrollLeft(),
					top = ui.offset.top - that.document.scrollTop();

				options.position = {
					my: "left top",
					at: "left" + (left >= 0 ? "+" : "") + left + " " +
						"top" + (top >= 0 ? "+" : "") + top,
					of: that.window
				};
				$( this ).removeClass( "ui-dialog-dragging" );
				that._unblockFrames();
				that._trigger( "dragStop", event, filteredUi( ui ) );
			}
		});
	},

	_makeResizable: function() {
		var that = this,
			options = this.options,
			handles = options.resizable,
			// .ui-resizable has position: relative defined in the stylesheet
			// but dialogs have to use absolute or fixed positioning
			position = this.uiDialog.css("position"),
			resizeHandles = typeof handles === "string" ?
				handles	:
				"n,e,s,w,se,sw,ne,nw";

		function filteredUi( ui ) {
			return {
				originalPosition: ui.originalPosition,
				originalSize: ui.originalSize,
				position: ui.position,
				size: ui.size
			};
		}

		this.uiDialog.resizable({
			cancel: ".ui-dialog-content",
			containment: "document",
			alsoResize: this.element,
			maxWidth: options.maxWidth,
			maxHeight: options.maxHeight,
			minWidth: options.minWidth,
			minHeight: this._minHeight(),
			handles: resizeHandles,
			start: function( event, ui ) {
				$( this ).addClass( "ui-dialog-resizing" );
				that._blockFrames();
				that._trigger( "resizeStart", event, filteredUi( ui ) );
			},
			resize: function( event, ui ) {
				that._trigger( "resize", event, filteredUi( ui ) );
			},
			stop: function( event, ui ) {
				var offset = that.uiDialog.offset(),
					left = offset.left - that.document.scrollLeft(),
					top = offset.top - that.document.scrollTop();

				options.height = that.uiDialog.height();
				options.width = that.uiDialog.width();
				options.position = {
					my: "left top",
					at: "left" + (left >= 0 ? "+" : "") + left + " " +
						"top" + (top >= 0 ? "+" : "") + top,
					of: that.window
				};
				$( this ).removeClass( "ui-dialog-resizing" );
				that._unblockFrames();
				that._trigger( "resizeStop", event, filteredUi( ui ) );
			}
		})
		.css( "position", position );
	},

	_trackFocus: function() {
		this._on( this.widget(), {
			focusin: function( event ) {
				this._makeFocusTarget();
				this._focusedElement = $( event.target );
			}
		});
	},

	_makeFocusTarget: function() {
		this._untrackInstance();
		this._trackingInstances().unshift( this );
	},

	_untrackInstance: function() {
		var instances = this._trackingInstances(),
			exists = $.inArray( this, instances );
		if ( exists !== -1 ) {
			instances.splice( exists, 1 );
		}
	},

	_trackingInstances: function() {
		var instances = this.document.data( "ui-dialog-instances" );
		if ( !instances ) {
			instances = [];
			this.document.data( "ui-dialog-instances", instances );
		}
		return instances;
	},

	_minHeight: function() {
		var options = this.options;

		return options.height === "auto" ?
			options.minHeight :
			Math.min( options.minHeight, options.height );
	},

	_position: function() {
		// Need to show the dialog to get the actual offset in the position plugin
		var isVisible = this.uiDialog.is( ":visible" );
		if ( !isVisible ) {
			this.uiDialog.show();
		}
		this.uiDialog.position( this.options.position );
		if ( !isVisible ) {
			this.uiDialog.hide();
		}
	},

	_setOptions: function( options ) {
		var that = this,
			resize = false,
			resizableOptions = {};

		$.each( options, function( key, value ) {
			that._setOption( key, value );

			if ( key in that.sizeRelatedOptions ) {
				resize = true;
			}
			if ( key in that.resizableRelatedOptions ) {
				resizableOptions[ key ] = value;
			}
		});

		if ( resize ) {
			this._size();
			this._position();
		}
		if ( this.uiDialog.is( ":data(ui-resizable)" ) ) {
			this.uiDialog.resizable( "option", resizableOptions );
		}
	},

	_setOption: function( key, value ) {
		var isDraggable, isResizable,
			uiDialog = this.uiDialog;

		if ( key === "dialogClass" ) {
			uiDialog
				.removeClass( this.options.dialogClass )
				.addClass( value );
		}

		if ( key === "disabled" ) {
			return;
		}

		this._super( key, value );

		if ( key === "appendTo" ) {
			this.uiDialog.appendTo( this._appendTo() );
		}

		if ( key === "buttons" ) {
			this._createButtons();
		}

		if ( key === "closeText" ) {
			this.uiDialogTitlebarClose.button({
				// Ensure that we always pass a string
				label: "" + value
			});
		}

		if ( key === "draggable" ) {
			isDraggable = uiDialog.is( ":data(ui-draggable)" );
			if ( isDraggable && !value ) {
				uiDialog.draggable( "destroy" );
			}

			if ( !isDraggable && value ) {
				this._makeDraggable();
			}
		}

		if ( key === "position" ) {
			this._position();
		}

		if ( key === "resizable" ) {
			// currently resizable, becoming non-resizable
			isResizable = uiDialog.is( ":data(ui-resizable)" );
			if ( isResizable && !value ) {
				uiDialog.resizable( "destroy" );
			}

			// currently resizable, changing handles
			if ( isResizable && typeof value === "string" ) {
				uiDialog.resizable( "option", "handles", value );
			}

			// currently non-resizable, becoming resizable
			if ( !isResizable && value !== false ) {
				this._makeResizable();
			}
		}

		if ( key === "title" ) {
			this._title( this.uiDialogTitlebar.find( ".ui-dialog-title" ) );
		}
	},

	_size: function() {
		// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content
		// divs will both have width and height set, so we need to reset them
		var nonContentHeight, minContentHeight, maxContentHeight,
			options = this.options;

		// Reset content sizing
		this.element.show().css({
			width: "auto",
			minHeight: 0,
			maxHeight: "none",
			height: 0
		});

		if ( options.minWidth > options.width ) {
			options.width = options.minWidth;
		}

		// reset wrapper sizing
		// determine the height of all the non-content elements
		nonContentHeight = this.uiDialog.css({
				height: "auto",
				width: options.width
			})
			.outerHeight();
		minContentHeight = Math.max( 0, options.minHeight - nonContentHeight );
		maxContentHeight = typeof options.maxHeight === "number" ?
			Math.max( 0, options.maxHeight - nonContentHeight ) :
			"none";

		if ( options.height === "auto" ) {
			this.element.css({
				minHeight: minContentHeight,
				maxHeight: maxContentHeight,
				height: "auto"
			});
		} else {
			this.element.height( Math.max( 0, options.height - nonContentHeight ) );
		}

		if ( this.uiDialog.is( ":data(ui-resizable)" ) ) {
			this.uiDialog.resizable( "option", "minHeight", this._minHeight() );
		}
	},

	_blockFrames: function() {
		this.iframeBlocks = this.document.find( "iframe" ).map(function() {
			var iframe = $( this );

			return $( "<div>" )
				.css({
					position: "absolute",
					width: iframe.outerWidth(),
					height: iframe.outerHeight()
				})
				.appendTo( iframe.parent() )
				.offset( iframe.offset() )[0];
		});
	},

	_unblockFrames: function() {
		if ( this.iframeBlocks ) {
			this.iframeBlocks.remove();
			delete this.iframeBlocks;
		}
	},

	_allowInteraction: function( event ) {
		if ( $( event.target ).closest( ".ui-dialog" ).length ) {
			return true;
		}

		// TODO: Remove hack when datepicker implements
		// the .ui-front logic (#8989)
		return !!$( event.target ).closest( ".ui-datepicker" ).length;
	},

	_createOverlay: function() {
		if ( !this.options.modal ) {
			return;
		}

		// We use a delay in case the overlay is created from an
		// event that we're going to be cancelling (#2804)
		var isOpening = true;
		this._delay(function() {
			isOpening = false;
		});

		if ( !this.document.data( "ui-dialog-overlays" ) ) {

			// Prevent use of anchors and inputs
			// Using _on() for an event handler shared across many instances is
			// safe because the dialogs stack and must be closed in reverse order
			this._on( this.document, {
				focusin: function( event ) {
					if ( isOpening ) {
						return;
					}

					if ( !this._allowInteraction( event ) ) {
						event.preventDefault();
						this._trackingInstances()[ 0 ]._focusTabbable();
					}
				}
			});
		}

		this.overlay = $( "<div>" )
			.addClass( "ui-widget-overlay ui-front" )
			.appendTo( this._appendTo() );
		this._on( this.overlay, {
			mousedown: "_keepFocus"
		});
		this.document.data( "ui-dialog-overlays",
			(this.document.data( "ui-dialog-overlays" ) || 0) + 1 );
	},

	_destroyOverlay: function() {
		if ( !this.options.modal ) {
			return;
		}

		if ( this.overlay ) {
			var overlays = this.document.data( "ui-dialog-overlays" ) - 1;

			if ( !overlays ) {
				this.document
					.unbind( "focusin" )
					.removeData( "ui-dialog-overlays" );
			} else {
				this.document.data( "ui-dialog-overlays", overlays );
			}

			this.overlay.remove();
			this.overlay = null;
		}
	}
});


/*!
 * jQuery UI Droppable 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/droppable/
 */


$.widget( "ui.droppable", {
	version: "1.11.4",
	widgetEventPrefix: "drop",
	options: {
		accept: "*",
		activeClass: false,
		addClasses: true,
		greedy: false,
		hoverClass: false,
		scope: "default",
		tolerance: "intersect",

		// callbacks
		activate: null,
		deactivate: null,
		drop: null,
		out: null,
		over: null
	},
	_create: function() {

		var proportions,
			o = this.options,
			accept = o.accept;

		this.isover = false;
		this.isout = true;

		this.accept = $.isFunction( accept ) ? accept : function( d ) {
			return d.is( accept );
		};

		this.proportions = function( /* valueToWrite */ ) {
			if ( arguments.length ) {
				// Store the droppable's proportions
				proportions = arguments[ 0 ];
			} else {
				// Retrieve or derive the droppable's proportions
				return proportions ?
					proportions :
					proportions = {
						width: this.element[ 0 ].offsetWidth,
						height: this.element[ 0 ].offsetHeight
					};
			}
		};

		this._addToManager( o.scope );

		o.addClasses && this.element.addClass( "ui-droppable" );

	},

	_addToManager: function( scope ) {
		// Add the reference and positions to the manager
		$.ui.ddmanager.droppables[ scope ] = $.ui.ddmanager.droppables[ scope ] || [];
		$.ui.ddmanager.droppables[ scope ].push( this );
	},

	_splice: function( drop ) {
		var i = 0;
		for ( ; i < drop.length; i++ ) {
			if ( drop[ i ] === this ) {
				drop.splice( i, 1 );
			}
		}
	},

	_destroy: function() {
		var drop = $.ui.ddmanager.droppables[ this.options.scope ];

		this._splice( drop );

		this.element.removeClass( "ui-droppable ui-droppable-disabled" );
	},

	_setOption: function( key, value ) {

		if ( key === "accept" ) {
			this.accept = $.isFunction( value ) ? value : function( d ) {
				return d.is( value );
			};
		} else if ( key === "scope" ) {
			var drop = $.ui.ddmanager.droppables[ this.options.scope ];

			this._splice( drop );
			this._addToManager( value );
		}

		this._super( key, value );
	},

	_activate: function( event ) {
		var draggable = $.ui.ddmanager.current;
		if ( this.options.activeClass ) {
			this.element.addClass( this.options.activeClass );
		}
		if ( draggable ){
			this._trigger( "activate", event, this.ui( draggable ) );
		}
	},

	_deactivate: function( event ) {
		var draggable = $.ui.ddmanager.current;
		if ( this.options.activeClass ) {
			this.element.removeClass( this.options.activeClass );
		}
		if ( draggable ){
			this._trigger( "deactivate", event, this.ui( draggable ) );
		}
	},

	_over: function( event ) {

		var draggable = $.ui.ddmanager.current;

		// Bail if draggable and droppable are same element
		if ( !draggable || ( draggable.currentItem || draggable.element )[ 0 ] === this.element[ 0 ] ) {
			return;
		}

		if ( this.accept.call( this.element[ 0 ], ( draggable.currentItem || draggable.element ) ) ) {
			if ( this.options.hoverClass ) {
				this.element.addClass( this.options.hoverClass );
			}
			this._trigger( "over", event, this.ui( draggable ) );
		}

	},

	_out: function( event ) {

		var draggable = $.ui.ddmanager.current;

		// Bail if draggable and droppable are same element
		if ( !draggable || ( draggable.currentItem || draggable.element )[ 0 ] === this.element[ 0 ] ) {
			return;
		}

		if ( this.accept.call( this.element[ 0 ], ( draggable.currentItem || draggable.element ) ) ) {
			if ( this.options.hoverClass ) {
				this.element.removeClass( this.options.hoverClass );
			}
			this._trigger( "out", event, this.ui( draggable ) );
		}

	},

	_drop: function( event, custom ) {

		var draggable = custom || $.ui.ddmanager.current,
			childrenIntersection = false;

		// Bail if draggable and droppable are same element
		if ( !draggable || ( draggable.currentItem || draggable.element )[ 0 ] === this.element[ 0 ] ) {
			return false;
		}

		this.element.find( ":data(ui-droppable)" ).not( ".ui-draggable-dragging" ).each(function() {
			var inst = $( this ).droppable( "instance" );
			if (
				inst.options.greedy &&
				!inst.options.disabled &&
				inst.options.scope === draggable.options.scope &&
				inst.accept.call( inst.element[ 0 ], ( draggable.currentItem || draggable.element ) ) &&
				$.ui.intersect( draggable, $.extend( inst, { offset: inst.element.offset() } ), inst.options.tolerance, event )
			) { childrenIntersection = true; return false; }
		});
		if ( childrenIntersection ) {
			return false;
		}

		if ( this.accept.call( this.element[ 0 ], ( draggable.currentItem || draggable.element ) ) ) {
			if ( this.options.activeClass ) {
				this.element.removeClass( this.options.activeClass );
			}
			if ( this.options.hoverClass ) {
				this.element.removeClass( this.options.hoverClass );
			}
			this._trigger( "drop", event, this.ui( draggable ) );
			return this.element;
		}

		return false;

	},

	ui: function( c ) {
		return {
			draggable: ( c.currentItem || c.element ),
			helper: c.helper,
			position: c.position,
			offset: c.positionAbs
		};
	}

});

$.ui.intersect = (function() {
	function isOverAxis( x, reference, size ) {
		return ( x >= reference ) && ( x < ( reference + size ) );
	}

	return function( draggable, droppable, toleranceMode, event ) {

		if ( !droppable.offset ) {
			return false;
		}

		var x1 = ( draggable.positionAbs || draggable.position.absolute ).left + draggable.margins.left,
			y1 = ( draggable.positionAbs || draggable.position.absolute ).top + draggable.margins.top,
			x2 = x1 + draggable.helperProportions.width,
			y2 = y1 + draggable.helperProportions.height,
			l = droppable.offset.left,
			t = droppable.offset.top,
			r = l + droppable.proportions().width,
			b = t + droppable.proportions().height;

		switch ( toleranceMode ) {
		case "fit":
			return ( l <= x1 && x2 <= r && t <= y1 && y2 <= b );
		case "intersect":
			return ( l < x1 + ( draggable.helperProportions.width / 2 ) && // Right Half
				x2 - ( draggable.helperProportions.width / 2 ) < r && // Left Half
				t < y1 + ( draggable.helperProportions.height / 2 ) && // Bottom Half
				y2 - ( draggable.helperProportions.height / 2 ) < b ); // Top Half
		case "pointer":
			return isOverAxis( event.pageY, t, droppable.proportions().height ) && isOverAxis( event.pageX, l, droppable.proportions().width );
		case "touch":
			return (
				( y1 >= t && y1 <= b ) || // Top edge touching
				( y2 >= t && y2 <= b ) || // Bottom edge touching
				( y1 < t && y2 > b ) // Surrounded vertically
			) && (
				( x1 >= l && x1 <= r ) || // Left edge touching
				( x2 >= l && x2 <= r ) || // Right edge touching
				( x1 < l && x2 > r ) // Surrounded horizontally
			);
		default:
			return false;
		}
	};
})();

/*
	This manager tracks offsets of draggables and droppables
*/
$.ui.ddmanager = {
	current: null,
	droppables: { "default": [] },
	prepareOffsets: function( t, event ) {

		var i, j,
			m = $.ui.ddmanager.droppables[ t.options.scope ] || [],
			type = event ? event.type : null, // workaround for #2317
			list = ( t.currentItem || t.element ).find( ":data(ui-droppable)" ).addBack();

		droppablesLoop: for ( i = 0; i < m.length; i++ ) {

			// No disabled and non-accepted
			if ( m[ i ].options.disabled || ( t && !m[ i ].accept.call( m[ i ].element[ 0 ], ( t.currentItem || t.element ) ) ) ) {
				continue;
			}

			// Filter out elements in the current dragged item
			for ( j = 0; j < list.length; j++ ) {
				if ( list[ j ] === m[ i ].element[ 0 ] ) {
					m[ i ].proportions().height = 0;
					continue droppablesLoop;
				}
			}

			m[ i ].visible = m[ i ].element.css( "display" ) !== "none";
			if ( !m[ i ].visible ) {
				continue;
			}

			// Activate the droppable if used directly from draggables
			if ( type === "mousedown" ) {
				m[ i ]._activate.call( m[ i ], event );
			}

			m[ i ].offset = m[ i ].element.offset();
			m[ i ].proportions({ width: m[ i ].element[ 0 ].offsetWidth, height: m[ i ].element[ 0 ].offsetHeight });

		}

	},
	drop: function( draggable, event ) {

		var dropped = false;
		// Create a copy of the droppables in case the list changes during the drop (#9116)
		$.each( ( $.ui.ddmanager.droppables[ draggable.options.scope ] || [] ).slice(), function() {

			if ( !this.options ) {
				return;
			}
			if ( !this.options.disabled && this.visible && $.ui.intersect( draggable, this, this.options.tolerance, event ) ) {
				dropped = this._drop.call( this, event ) || dropped;
			}

			if ( !this.options.disabled && this.visible && this.accept.call( this.element[ 0 ], ( draggable.currentItem || draggable.element ) ) ) {
				this.isout = true;
				this.isover = false;
				this._deactivate.call( this, event );
			}

		});
		return dropped;

	},
	dragStart: function( draggable, event ) {
		// Listen for scrolling so that if the dragging causes scrolling the position of the droppables can be recalculated (see #5003)
		draggable.element.parentsUntil( "body" ).bind( "scroll.droppable", function() {
			if ( !draggable.options.refreshPositions ) {
				$.ui.ddmanager.prepareOffsets( draggable, event );
			}
		});
	},
	drag: function( draggable, event ) {

		// If you have a highly dynamic page, you might try this option. It renders positions every time you move the mouse.
		if ( draggable.options.refreshPositions ) {
			$.ui.ddmanager.prepareOffsets( draggable, event );
		}

		// Run through all droppables and check their positions based on specific tolerance options
		$.each( $.ui.ddmanager.droppables[ draggable.options.scope ] || [], function() {

			if ( this.options.disabled || this.greedyChild || !this.visible ) {
				return;
			}

			var parentInstance, scope, parent,
				intersects = $.ui.intersect( draggable, this, this.options.tolerance, event ),
				c = !intersects && this.isover ? "isout" : ( intersects && !this.isover ? "isover" : null );
			if ( !c ) {
				return;
			}

			if ( this.options.greedy ) {
				// find droppable parents with same scope
				scope = this.options.scope;
				parent = this.element.parents( ":data(ui-droppable)" ).filter(function() {
					return $( this ).droppable( "instance" ).options.scope === scope;
				});

				if ( parent.length ) {
					parentInstance = $( parent[ 0 ] ).droppable( "instance" );
					parentInstance.greedyChild = ( c === "isover" );
				}
			}

			// we just moved into a greedy child
			if ( parentInstance && c === "isover" ) {
				parentInstance.isover = false;
				parentInstance.isout = true;
				parentInstance._out.call( parentInstance, event );
			}

			this[ c ] = true;
			this[c === "isout" ? "isover" : "isout"] = false;
			this[c === "isover" ? "_over" : "_out"].call( this, event );

			// we just moved out of a greedy child
			if ( parentInstance && c === "isout" ) {
				parentInstance.isout = false;
				parentInstance.isover = true;
				parentInstance._over.call( parentInstance, event );
			}
		});

	},
	dragStop: function( draggable, event ) {
		draggable.element.parentsUntil( "body" ).unbind( "scroll.droppable" );
		// Call prepareOffsets one final time since IE does not fire return scroll events when overflow was caused by drag (see #5003)
		if ( !draggable.options.refreshPositions ) {
			$.ui.ddmanager.prepareOffsets( draggable, event );
		}
	}
};

var droppable = $.ui.droppable;


/*!
 * jQuery UI Effects 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/effects-core/
 */


var dataSpace = "ui-effects-",

	// Create a local jQuery because jQuery Color relies on it and the
	// global may not exist with AMD and a custom build (#10199)
	jQuery = $;

$.effects = {
	effect: {}
};

/*!
 * jQuery Color Animations v2.1.2
 * https://github.com/jquery/jquery-color
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * Date: Wed Jan 16 08:47:09 2013 -0600
 */
(function( jQuery, undefined ) {

	var stepHooks = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",

	// plusequals test for += 100 -= 100
	rplusequals = /^([\-+])=\s*(\d+\.?\d*)/,
	// a set of RE's that can match strings and generate color tuples.
	stringParsers = [ {
			re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ],
					execResult[ 3 ],
					execResult[ 4 ]
				];
			}
		}, {
			re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			parse: function( execResult ) {
				return [
					execResult[ 1 ] * 2.55,
					execResult[ 2 ] * 2.55,
					execResult[ 3 ] * 2.55,
					execResult[ 4 ]
				];
			}
		}, {
			// this regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ], 16 )
				];
			}
		}, {
			// this regex ignores A-F because it's compared against an already lowercased string
			re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
			parse: function( execResult ) {
				return [
					parseInt( execResult[ 1 ] + execResult[ 1 ], 16 ),
					parseInt( execResult[ 2 ] + execResult[ 2 ], 16 ),
					parseInt( execResult[ 3 ] + execResult[ 3 ], 16 )
				];
			}
		}, {
			re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
			space: "hsla",
			parse: function( execResult ) {
				return [
					execResult[ 1 ],
					execResult[ 2 ] / 100,
					execResult[ 3 ] / 100,
					execResult[ 4 ]
				];
			}
		} ],

	// jQuery.Color( )
	color = jQuery.Color = function( color, green, blue, alpha ) {
		return new jQuery.Color.fn.parse( color, green, blue, alpha );
	},
	spaces = {
		rgba: {
			props: {
				red: {
					idx: 0,
					type: "byte"
				},
				green: {
					idx: 1,
					type: "byte"
				},
				blue: {
					idx: 2,
					type: "byte"
				}
			}
		},

		hsla: {
			props: {
				hue: {
					idx: 0,
					type: "degrees"
				},
				saturation: {
					idx: 1,
					type: "percent"
				},
				lightness: {
					idx: 2,
					type: "percent"
				}
			}
		}
	},
	propTypes = {
		"byte": {
			floor: true,
			max: 255
		},
		"percent": {
			max: 1
		},
		"degrees": {
			mod: 360,
			floor: true
		}
	},
	support = color.support = {},

	// element for support tests
	supportElem = jQuery( "<p>" )[ 0 ],

	// colors = jQuery.Color.names
	colors,

	// local aliases of functions called often
	each = jQuery.each;

// determine rgba support immediately
supportElem.style.cssText = "background-color:rgba(1,1,1,.5)";
support.rgba = supportElem.style.backgroundColor.indexOf( "rgba" ) > -1;

// define cache name and alpha properties
// for rgba and hsla spaces
each( spaces, function( spaceName, space ) {
	space.cache = "_" + spaceName;
	space.props.alpha = {
		idx: 3,
		type: "percent",
		def: 1
	};
});

function clamp( value, prop, allowEmpty ) {
	var type = propTypes[ prop.type ] || {};

	if ( value == null ) {
		return (allowEmpty || !prop.def) ? null : prop.def;
	}

	// ~~ is an short way of doing floor for positive numbers
	value = type.floor ? ~~value : parseFloat( value );

	// IE will pass in empty strings as value for alpha,
	// which will hit this case
	if ( isNaN( value ) ) {
		return prop.def;
	}

	if ( type.mod ) {
		// we add mod before modding to make sure that negatives values
		// get converted properly: -10 -> 350
		return (value + type.mod) % type.mod;
	}

	// for now all property types without mod have min and max
	return 0 > value ? 0 : type.max < value ? type.max : value;
}

function stringParse( string ) {
	var inst = color(),
		rgba = inst._rgba = [];

	string = string.toLowerCase();

	each( stringParsers, function( i, parser ) {
		var parsed,
			match = parser.re.exec( string ),
			values = match && parser.parse( match ),
			spaceName = parser.space || "rgba";

		if ( values ) {
			parsed = inst[ spaceName ]( values );

			// if this was an rgba parse the assignment might happen twice
			// oh well....
			inst[ spaces[ spaceName ].cache ] = parsed[ spaces[ spaceName ].cache ];
			rgba = inst._rgba = parsed._rgba;

			// exit each( stringParsers ) here because we matched
			return false;
		}
	});

	// Found a stringParser that handled it
	if ( rgba.length ) {

		// if this came from a parsed string, force "transparent" when alpha is 0
		// chrome, (and maybe others) return "transparent" as rgba(0,0,0,0)
		if ( rgba.join() === "0,0,0,0" ) {
			jQuery.extend( rgba, colors.transparent );
		}
		return inst;
	}

	// named colors
	return colors[ string ];
}

color.fn = jQuery.extend( color.prototype, {
	parse: function( red, green, blue, alpha ) {
		if ( red === undefined ) {
			this._rgba = [ null, null, null, null ];
			return this;
		}
		if ( red.jquery || red.nodeType ) {
			red = jQuery( red ).css( green );
			green = undefined;
		}

		var inst = this,
			type = jQuery.type( red ),
			rgba = this._rgba = [];

		// more than 1 argument specified - assume ( red, green, blue, alpha )
		if ( green !== undefined ) {
			red = [ red, green, blue, alpha ];
			type = "array";
		}

		if ( type === "string" ) {
			return this.parse( stringParse( red ) || colors._default );
		}

		if ( type === "array" ) {
			each( spaces.rgba.props, function( key, prop ) {
				rgba[ prop.idx ] = clamp( red[ prop.idx ], prop );
			});
			return this;
		}

		if ( type === "object" ) {
			if ( red instanceof color ) {
				each( spaces, function( spaceName, space ) {
					if ( red[ space.cache ] ) {
						inst[ space.cache ] = red[ space.cache ].slice();
					}
				});
			} else {
				each( spaces, function( spaceName, space ) {
					var cache = space.cache;
					each( space.props, function( key, prop ) {

						// if the cache doesn't exist, and we know how to convert
						if ( !inst[ cache ] && space.to ) {

							// if the value was null, we don't need to copy it
							// if the key was alpha, we don't need to copy it either
							if ( key === "alpha" || red[ key ] == null ) {
								return;
							}
							inst[ cache ] = space.to( inst._rgba );
						}

						// this is the only case where we allow nulls for ALL properties.
						// call clamp with alwaysAllowEmpty
						inst[ cache ][ prop.idx ] = clamp( red[ key ], prop, true );
					});

					// everything defined but alpha?
					if ( inst[ cache ] && jQuery.inArray( null, inst[ cache ].slice( 0, 3 ) ) < 0 ) {
						// use the default of 1
						inst[ cache ][ 3 ] = 1;
						if ( space.from ) {
							inst._rgba = space.from( inst[ cache ] );
						}
					}
				});
			}
			return this;
		}
	},
	is: function( compare ) {
		var is = color( compare ),
			same = true,
			inst = this;

		each( spaces, function( _, space ) {
			var localCache,
				isCache = is[ space.cache ];
			if (isCache) {
				localCache = inst[ space.cache ] || space.to && space.to( inst._rgba ) || [];
				each( space.props, function( _, prop ) {
					if ( isCache[ prop.idx ] != null ) {
						same = ( isCache[ prop.idx ] === localCache[ prop.idx ] );
						return same;
					}
				});
			}
			return same;
		});
		return same;
	},
	_space: function() {
		var used = [],
			inst = this;
		each( spaces, function( spaceName, space ) {
			if ( inst[ space.cache ] ) {
				used.push( spaceName );
			}
		});
		return used.pop();
	},
	transition: function( other, distance ) {
		var end = color( other ),
			spaceName = end._space(),
			space = spaces[ spaceName ],
			startColor = this.alpha() === 0 ? color( "transparent" ) : this,
			start = startColor[ space.cache ] || space.to( startColor._rgba ),
			result = start.slice();

		end = end[ space.cache ];
		each( space.props, function( key, prop ) {
			var index = prop.idx,
				startValue = start[ index ],
				endValue = end[ index ],
				type = propTypes[ prop.type ] || {};

			// if null, don't override start value
			if ( endValue === null ) {
				return;
			}
			// if null - use end
			if ( startValue === null ) {
				result[ index ] = endValue;
			} else {
				if ( type.mod ) {
					if ( endValue - startValue > type.mod / 2 ) {
						startValue += type.mod;
					} else if ( startValue - endValue > type.mod / 2 ) {
						startValue -= type.mod;
					}
				}
				result[ index ] = clamp( ( endValue - startValue ) * distance + startValue, prop );
			}
		});
		return this[ spaceName ]( result );
	},
	blend: function( opaque ) {
		// if we are already opaque - return ourself
		if ( this._rgba[ 3 ] === 1 ) {
			return this;
		}

		var rgb = this._rgba.slice(),
			a = rgb.pop(),
			blend = color( opaque )._rgba;

		return color( jQuery.map( rgb, function( v, i ) {
			return ( 1 - a ) * blend[ i ] + a * v;
		}));
	},
	toRgbaString: function() {
		var prefix = "rgba(",
			rgba = jQuery.map( this._rgba, function( v, i ) {
				return v == null ? ( i > 2 ? 1 : 0 ) : v;
			});

		if ( rgba[ 3 ] === 1 ) {
			rgba.pop();
			prefix = "rgb(";
		}

		return prefix + rgba.join() + ")";
	},
	toHslaString: function() {
		var prefix = "hsla(",
			hsla = jQuery.map( this.hsla(), function( v, i ) {
				if ( v == null ) {
					v = i > 2 ? 1 : 0;
				}

				// catch 1 and 2
				if ( i && i < 3 ) {
					v = Math.round( v * 100 ) + "%";
				}
				return v;
			});

		if ( hsla[ 3 ] === 1 ) {
			hsla.pop();
			prefix = "hsl(";
		}
		return prefix + hsla.join() + ")";
	},
	toHexString: function( includeAlpha ) {
		var rgba = this._rgba.slice(),
			alpha = rgba.pop();

		if ( includeAlpha ) {
			rgba.push( ~~( alpha * 255 ) );
		}

		return "#" + jQuery.map( rgba, function( v ) {

			// default to 0 when nulls exist
			v = ( v || 0 ).toString( 16 );
			return v.length === 1 ? "0" + v : v;
		}).join("");
	},
	toString: function() {
		return this._rgba[ 3 ] === 0 ? "transparent" : this.toRgbaString();
	}
});
color.fn.parse.prototype = color.fn;

// hsla conversions adapted from:
// https://code.google.com/p/maashaack/source/browse/packages/graphics/trunk/src/graphics/colors/HUE2RGB.as?r=5021

function hue2rgb( p, q, h ) {
	h = ( h + 1 ) % 1;
	if ( h * 6 < 1 ) {
		return p + ( q - p ) * h * 6;
	}
	if ( h * 2 < 1) {
		return q;
	}
	if ( h * 3 < 2 ) {
		return p + ( q - p ) * ( ( 2 / 3 ) - h ) * 6;
	}
	return p;
}

spaces.hsla.to = function( rgba ) {
	if ( rgba[ 0 ] == null || rgba[ 1 ] == null || rgba[ 2 ] == null ) {
		return [ null, null, null, rgba[ 3 ] ];
	}
	var r = rgba[ 0 ] / 255,
		g = rgba[ 1 ] / 255,
		b = rgba[ 2 ] / 255,
		a = rgba[ 3 ],
		max = Math.max( r, g, b ),
		min = Math.min( r, g, b ),
		diff = max - min,
		add = max + min,
		l = add * 0.5,
		h, s;

	if ( min === max ) {
		h = 0;
	} else if ( r === max ) {
		h = ( 60 * ( g - b ) / diff ) + 360;
	} else if ( g === max ) {
		h = ( 60 * ( b - r ) / diff ) + 120;
	} else {
		h = ( 60 * ( r - g ) / diff ) + 240;
	}

	// chroma (diff) == 0 means greyscale which, by definition, saturation = 0%
	// otherwise, saturation is based on the ratio of chroma (diff) to lightness (add)
	if ( diff === 0 ) {
		s = 0;
	} else if ( l <= 0.5 ) {
		s = diff / add;
	} else {
		s = diff / ( 2 - add );
	}
	return [ Math.round(h) % 360, s, l, a == null ? 1 : a ];
};

spaces.hsla.from = function( hsla ) {
	if ( hsla[ 0 ] == null || hsla[ 1 ] == null || hsla[ 2 ] == null ) {
		return [ null, null, null, hsla[ 3 ] ];
	}
	var h = hsla[ 0 ] / 360,
		s = hsla[ 1 ],
		l = hsla[ 2 ],
		a = hsla[ 3 ],
		q = l <= 0.5 ? l * ( 1 + s ) : l + s - l * s,
		p = 2 * l - q;

	return [
		Math.round( hue2rgb( p, q, h + ( 1 / 3 ) ) * 255 ),
		Math.round( hue2rgb( p, q, h ) * 255 ),
		Math.round( hue2rgb( p, q, h - ( 1 / 3 ) ) * 255 ),
		a
	];
};

each( spaces, function( spaceName, space ) {
	var props = space.props,
		cache = space.cache,
		to = space.to,
		from = space.from;

	// makes rgba() and hsla()
	color.fn[ spaceName ] = function( value ) {

		// generate a cache for this space if it doesn't exist
		if ( to && !this[ cache ] ) {
			this[ cache ] = to( this._rgba );
		}
		if ( value === undefined ) {
			return this[ cache ].slice();
		}

		var ret,
			type = jQuery.type( value ),
			arr = ( type === "array" || type === "object" ) ? value : arguments,
			local = this[ cache ].slice();

		each( props, function( key, prop ) {
			var val = arr[ type === "object" ? key : prop.idx ];
			if ( val == null ) {
				val = local[ prop.idx ];
			}
			local[ prop.idx ] = clamp( val, prop );
		});

		if ( from ) {
			ret = color( from( local ) );
			ret[ cache ] = local;
			return ret;
		} else {
			return color( local );
		}
	};

	// makes red() green() blue() alpha() hue() saturation() lightness()
	each( props, function( key, prop ) {
		// alpha is included in more than one space
		if ( color.fn[ key ] ) {
			return;
		}
		color.fn[ key ] = function( value ) {
			var vtype = jQuery.type( value ),
				fn = ( key === "alpha" ? ( this._hsla ? "hsla" : "rgba" ) : spaceName ),
				local = this[ fn ](),
				cur = local[ prop.idx ],
				match;

			if ( vtype === "undefined" ) {
				return cur;
			}

			if ( vtype === "function" ) {
				value = value.call( this, cur );
				vtype = jQuery.type( value );
			}
			if ( value == null && prop.empty ) {
				return this;
			}
			if ( vtype === "string" ) {
				match = rplusequals.exec( value );
				if ( match ) {
					value = cur + parseFloat( match[ 2 ] ) * ( match[ 1 ] === "+" ? 1 : -1 );
				}
			}
			local[ prop.idx ] = value;
			return this[ fn ]( local );
		};
	});
});

// add cssHook and .fx.step function for each named hook.
// accept a space separated string of properties
color.hook = function( hook ) {
	var hooks = hook.split( " " );
	each( hooks, function( i, hook ) {
		jQuery.cssHooks[ hook ] = {
			set: function( elem, value ) {
				var parsed, curElem,
					backgroundColor = "";

				if ( value !== "transparent" && ( jQuery.type( value ) !== "string" || ( parsed = stringParse( value ) ) ) ) {
					value = color( parsed || value );
					if ( !support.rgba && value._rgba[ 3 ] !== 1 ) {
						curElem = hook === "backgroundColor" ? elem.parentNode : elem;
						while (
							(backgroundColor === "" || backgroundColor === "transparent") &&
							curElem && curElem.style
						) {
							try {
								backgroundColor = jQuery.css( curElem, "backgroundColor" );
								curElem = curElem.parentNode;
							} catch ( e ) {
							}
						}

						value = value.blend( backgroundColor && backgroundColor !== "transparent" ?
							backgroundColor :
							"_default" );
					}

					value = value.toRgbaString();
				}
				try {
					elem.style[ hook ] = value;
				} catch ( e ) {
					// wrapped to prevent IE from throwing errors on "invalid" values like 'auto' or 'inherit'
				}
			}
		};
		jQuery.fx.step[ hook ] = function( fx ) {
			if ( !fx.colorInit ) {
				fx.start = color( fx.elem, hook );
				fx.end = color( fx.end );
				fx.colorInit = true;
			}
			jQuery.cssHooks[ hook ].set( fx.elem, fx.start.transition( fx.end, fx.pos ) );
		};
	});

};

color.hook( stepHooks );

jQuery.cssHooks.borderColor = {
	expand: function( value ) {
		var expanded = {};

		each( [ "Top", "Right", "Bottom", "Left" ], function( i, part ) {
			expanded[ "border" + part + "Color" ] = value;
		});
		return expanded;
	}
};

// Basic color names only.
// Usage of any of the other color names requires adding yourself or including
// jquery.color.svg-names.js.
colors = jQuery.Color.names = {
	// 4.1. Basic color keywords
	aqua: "#00ffff",
	black: "#000000",
	blue: "#0000ff",
	fuchsia: "#ff00ff",
	gray: "#808080",
	green: "#008000",
	lime: "#00ff00",
	maroon: "#800000",
	navy: "#000080",
	olive: "#808000",
	purple: "#800080",
	red: "#ff0000",
	silver: "#c0c0c0",
	teal: "#008080",
	white: "#ffffff",
	yellow: "#ffff00",

	// 4.2.3. "transparent" color keyword
	transparent: [ null, null, null, 0 ],

	_default: "#ffffff"
};

})( jQuery );

/******************************************************************************/
/****************************** CLASS ANIMATIONS ******************************/
/******************************************************************************/
(function() {

var classAnimationActions = [ "add", "remove", "toggle" ],
	shorthandStyles = {
		border: 1,
		borderBottom: 1,
		borderColor: 1,
		borderLeft: 1,
		borderRight: 1,
		borderTop: 1,
		borderWidth: 1,
		margin: 1,
		padding: 1
	};

$.each([ "borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle" ], function( _, prop ) {
	$.fx.step[ prop ] = function( fx ) {
		if ( fx.end !== "none" && !fx.setAttr || fx.pos === 1 && !fx.setAttr ) {
			jQuery.style( fx.elem, prop, fx.end );
			fx.setAttr = true;
		}
	};
});

function getElementStyles( elem ) {
	var key, len,
		style = elem.ownerDocument.defaultView ?
			elem.ownerDocument.defaultView.getComputedStyle( elem, null ) :
			elem.currentStyle,
		styles = {};

	if ( style && style.length && style[ 0 ] && style[ style[ 0 ] ] ) {
		len = style.length;
		while ( len-- ) {
			key = style[ len ];
			if ( typeof style[ key ] === "string" ) {
				styles[ $.camelCase( key ) ] = style[ key ];
			}
		}
	// support: Opera, IE <9
	} else {
		for ( key in style ) {
			if ( typeof style[ key ] === "string" ) {
				styles[ key ] = style[ key ];
			}
		}
	}

	return styles;
}

function styleDifference( oldStyle, newStyle ) {
	var diff = {},
		name, value;

	for ( name in newStyle ) {
		value = newStyle[ name ];
		if ( oldStyle[ name ] !== value ) {
			if ( !shorthandStyles[ name ] ) {
				if ( $.fx.step[ name ] || !isNaN( parseFloat( value ) ) ) {
					diff[ name ] = value;
				}
			}
		}
	}

	return diff;
}

// support: jQuery <1.8
if ( !$.fn.addBack ) {
	$.fn.addBack = function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	};
}

$.effects.animateClass = function( value, duration, easing, callback ) {
	var o = $.speed( duration, easing, callback );

	return this.queue( function() {
		var animated = $( this ),
			baseClass = animated.attr( "class" ) || "",
			applyClassChange,
			allAnimations = o.children ? animated.find( "*" ).addBack() : animated;

		// map the animated objects to store the original styles.
		allAnimations = allAnimations.map(function() {
			var el = $( this );
			return {
				el: el,
				start: getElementStyles( this )
			};
		});

		// apply class change
		applyClassChange = function() {
			$.each( classAnimationActions, function(i, action) {
				if ( value[ action ] ) {
					animated[ action + "Class" ]( value[ action ] );
				}
			});
		};
		applyClassChange();

		// map all animated objects again - calculate new styles and diff
		allAnimations = allAnimations.map(function() {
			this.end = getElementStyles( this.el[ 0 ] );
			this.diff = styleDifference( this.start, this.end );
			return this;
		});

		// apply original class
		animated.attr( "class", baseClass );

		// map all animated objects again - this time collecting a promise
		allAnimations = allAnimations.map(function() {
			var styleInfo = this,
				dfd = $.Deferred(),
				opts = $.extend({}, o, {
					queue: false,
					complete: function() {
						dfd.resolve( styleInfo );
					}
				});

			this.el.animate( this.diff, opts );
			return dfd.promise();
		});

		// once all animations have completed:
		$.when.apply( $, allAnimations.get() ).done(function() {

			// set the final class
			applyClassChange();

			// for each animated element,
			// clear all css properties that were animated
			$.each( arguments, function() {
				var el = this.el;
				$.each( this.diff, function(key) {
					el.css( key, "" );
				});
			});

			// this is guarnteed to be there if you use jQuery.speed()
			// it also handles dequeuing the next anim...
			o.complete.call( animated[ 0 ] );
		});
	});
};

$.fn.extend({
	addClass: (function( orig ) {
		return function( classNames, speed, easing, callback ) {
			return speed ?
				$.effects.animateClass.call( this,
					{ add: classNames }, speed, easing, callback ) :
				orig.apply( this, arguments );
		};
	})( $.fn.addClass ),

	removeClass: (function( orig ) {
		return function( classNames, speed, easing, callback ) {
			return arguments.length > 1 ?
				$.effects.animateClass.call( this,
					{ remove: classNames }, speed, easing, callback ) :
				orig.apply( this, arguments );
		};
	})( $.fn.removeClass ),

	toggleClass: (function( orig ) {
		return function( classNames, force, speed, easing, callback ) {
			if ( typeof force === "boolean" || force === undefined ) {
				if ( !speed ) {
					// without speed parameter
					return orig.apply( this, arguments );
				} else {
					return $.effects.animateClass.call( this,
						(force ? { add: classNames } : { remove: classNames }),
						speed, easing, callback );
				}
			} else {
				// without force parameter
				return $.effects.animateClass.call( this,
					{ toggle: classNames }, force, speed, easing );
			}
		};
	})( $.fn.toggleClass ),

	switchClass: function( remove, add, speed, easing, callback) {
		return $.effects.animateClass.call( this, {
			add: add,
			remove: remove
		}, speed, easing, callback );
	}
});

})();

/******************************************************************************/
/*********************************** EFFECTS **********************************/
/******************************************************************************/

(function() {

$.extend( $.effects, {
	version: "1.11.4",

	// Saves a set of properties in a data storage
	save: function( element, set ) {
		for ( var i = 0; i < set.length; i++ ) {
			if ( set[ i ] !== null ) {
				element.data( dataSpace + set[ i ], element[ 0 ].style[ set[ i ] ] );
			}
		}
	},

	// Restores a set of previously saved properties from a data storage
	restore: function( element, set ) {
		var val, i;
		for ( i = 0; i < set.length; i++ ) {
			if ( set[ i ] !== null ) {
				val = element.data( dataSpace + set[ i ] );
				// support: jQuery 1.6.2
				// http://bugs.jquery.com/ticket/9917
				// jQuery 1.6.2 incorrectly returns undefined for any falsy value.
				// We can't differentiate between "" and 0 here, so we just assume
				// empty string since it's likely to be a more common value...
				if ( val === undefined ) {
					val = "";
				}
				element.css( set[ i ], val );
			}
		}
	},

	setMode: function( el, mode ) {
		if (mode === "toggle") {
			mode = el.is( ":hidden" ) ? "show" : "hide";
		}
		return mode;
	},

	// Translates a [top,left] array into a baseline value
	// this should be a little more flexible in the future to handle a string & hash
	getBaseline: function( origin, original ) {
		var y, x;
		switch ( origin[ 0 ] ) {
			case "top": y = 0; break;
			case "middle": y = 0.5; break;
			case "bottom": y = 1; break;
			default: y = origin[ 0 ] / original.height;
		}
		switch ( origin[ 1 ] ) {
			case "left": x = 0; break;
			case "center": x = 0.5; break;
			case "right": x = 1; break;
			default: x = origin[ 1 ] / original.width;
		}
		return {
			x: x,
			y: y
		};
	},

	// Wraps the element around a wrapper that copies position properties
	createWrapper: function( element ) {

		// if the element is already wrapped, return it
		if ( element.parent().is( ".ui-effects-wrapper" )) {
			return element.parent();
		}

		// wrap the element
		var props = {
				width: element.outerWidth(true),
				height: element.outerHeight(true),
				"float": element.css( "float" )
			},
			wrapper = $( "<div></div>" )
				.addClass( "ui-effects-wrapper" )
				.css({
					fontSize: "100%",
					background: "transparent",
					border: "none",
					margin: 0,
					padding: 0
				}),
			// Store the size in case width/height are defined in % - Fixes #5245
			size = {
				width: element.width(),
				height: element.height()
			},
			active = document.activeElement;

		// support: Firefox
		// Firefox incorrectly exposes anonymous content
		// https://bugzilla.mozilla.org/show_bug.cgi?id=561664
		try {
			active.id;
		} catch ( e ) {
			active = document.body;
		}

		element.wrap( wrapper );

		// Fixes #7595 - Elements lose focus when wrapped.
		if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
			$( active ).focus();
		}

		wrapper = element.parent(); //Hotfix for jQuery 1.4 since some change in wrap() seems to actually lose the reference to the wrapped element

		// transfer positioning properties to the wrapper
		if ( element.css( "position" ) === "static" ) {
			wrapper.css({ position: "relative" });
			element.css({ position: "relative" });
		} else {
			$.extend( props, {
				position: element.css( "position" ),
				zIndex: element.css( "z-index" )
			});
			$.each([ "top", "left", "bottom", "right" ], function(i, pos) {
				props[ pos ] = element.css( pos );
				if ( isNaN( parseInt( props[ pos ], 10 ) ) ) {
					props[ pos ] = "auto";
				}
			});
			element.css({
				position: "relative",
				top: 0,
				left: 0,
				right: "auto",
				bottom: "auto"
			});
		}
		element.css(size);

		return wrapper.css( props ).show();
	},

	removeWrapper: function( element ) {
		var active = document.activeElement;

		if ( element.parent().is( ".ui-effects-wrapper" ) ) {
			element.parent().replaceWith( element );

			// Fixes #7595 - Elements lose focus when wrapped.
			if ( element[ 0 ] === active || $.contains( element[ 0 ], active ) ) {
				$( active ).focus();
			}
		}

		return element;
	},

	setTransition: function( element, list, factor, value ) {
		value = value || {};
		$.each( list, function( i, x ) {
			var unit = element.cssUnit( x );
			if ( unit[ 0 ] > 0 ) {
				value[ x ] = unit[ 0 ] * factor + unit[ 1 ];
			}
		});
		return value;
	}
});

// return an effect options object for the given parameters:
function _normalizeArguments( effect, options, speed, callback ) {

	// allow passing all options as the first parameter
	if ( $.isPlainObject( effect ) ) {
		options = effect;
		effect = effect.effect;
	}

	// convert to an object
	effect = { effect: effect };

	// catch (effect, null, ...)
	if ( options == null ) {
		options = {};
	}

	// catch (effect, callback)
	if ( $.isFunction( options ) ) {
		callback = options;
		speed = null;
		options = {};
	}

	// catch (effect, speed, ?)
	if ( typeof options === "number" || $.fx.speeds[ options ] ) {
		callback = speed;
		speed = options;
		options = {};
	}

	// catch (effect, options, callback)
	if ( $.isFunction( speed ) ) {
		callback = speed;
		speed = null;
	}

	// add options to effect
	if ( options ) {
		$.extend( effect, options );
	}

	speed = speed || options.duration;
	effect.duration = $.fx.off ? 0 :
		typeof speed === "number" ? speed :
		speed in $.fx.speeds ? $.fx.speeds[ speed ] :
		$.fx.speeds._default;

	effect.complete = callback || options.complete;

	return effect;
}

function standardAnimationOption( option ) {
	// Valid standard speeds (nothing, number, named speed)
	if ( !option || typeof option === "number" || $.fx.speeds[ option ] ) {
		return true;
	}

	// Invalid strings - treat as "normal" speed
	if ( typeof option === "string" && !$.effects.effect[ option ] ) {
		return true;
	}

	// Complete callback
	if ( $.isFunction( option ) ) {
		return true;
	}

	// Options hash (but not naming an effect)
	if ( typeof option === "object" && !option.effect ) {
		return true;
	}

	// Didn't match any standard API
	return false;
}

$.fn.extend({
	effect: function( /* effect, options, speed, callback */ ) {
		var args = _normalizeArguments.apply( this, arguments ),
			mode = args.mode,
			queue = args.queue,
			effectMethod = $.effects.effect[ args.effect ];

		if ( $.fx.off || !effectMethod ) {
			// delegate to the original method (e.g., .show()) if possible
			if ( mode ) {
				return this[ mode ]( args.duration, args.complete );
			} else {
				return this.each( function() {
					if ( args.complete ) {
						args.complete.call( this );
					}
				});
			}
		}

		function run( next ) {
			var elem = $( this ),
				complete = args.complete,
				mode = args.mode;

			function done() {
				if ( $.isFunction( complete ) ) {
					complete.call( elem[0] );
				}
				if ( $.isFunction( next ) ) {
					next();
				}
			}

			// If the element already has the correct final state, delegate to
			// the core methods so the internal tracking of "olddisplay" works.
			if ( elem.is( ":hidden" ) ? mode === "hide" : mode === "show" ) {
				elem[ mode ]();
				done();
			} else {
				effectMethod.call( elem[0], args, done );
			}
		}

		return queue === false ? this.each( run ) : this.queue( queue || "fx", run );
	},

	show: (function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "show";
				return this.effect.call( this, args );
			}
		};
	})( $.fn.show ),

	hide: (function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "hide";
				return this.effect.call( this, args );
			}
		};
	})( $.fn.hide ),

	toggle: (function( orig ) {
		return function( option ) {
			if ( standardAnimationOption( option ) || typeof option === "boolean" ) {
				return orig.apply( this, arguments );
			} else {
				var args = _normalizeArguments.apply( this, arguments );
				args.mode = "toggle";
				return this.effect.call( this, args );
			}
		};
	})( $.fn.toggle ),

	// helper functions
	cssUnit: function(key) {
		var style = this.css( key ),
			val = [];

		$.each( [ "em", "px", "%", "pt" ], function( i, unit ) {
			if ( style.indexOf( unit ) > 0 ) {
				val = [ parseFloat( style ), unit ];
			}
		});
		return val;
	}
});

})();

/******************************************************************************/
/*********************************** EASING ***********************************/
/******************************************************************************/

(function() {

// based on easing equations from Robert Penner (http://www.robertpenner.com/easing)

var baseEasings = {};

$.each( [ "Quad", "Cubic", "Quart", "Quint", "Expo" ], function( i, name ) {
	baseEasings[ name ] = function( p ) {
		return Math.pow( p, i + 2 );
	};
});

$.extend( baseEasings, {
	Sine: function( p ) {
		return 1 - Math.cos( p * Math.PI / 2 );
	},
	Circ: function( p ) {
		return 1 - Math.sqrt( 1 - p * p );
	},
	Elastic: function( p ) {
		return p === 0 || p === 1 ? p :
			-Math.pow( 2, 8 * (p - 1) ) * Math.sin( ( (p - 1) * 80 - 7.5 ) * Math.PI / 15 );
	},
	Back: function( p ) {
		return p * p * ( 3 * p - 2 );
	},
	Bounce: function( p ) {
		var pow2,
			bounce = 4;

		while ( p < ( ( pow2 = Math.pow( 2, --bounce ) ) - 1 ) / 11 ) {}
		return 1 / Math.pow( 4, 3 - bounce ) - 7.5625 * Math.pow( ( pow2 * 3 - 2 ) / 22 - p, 2 );
	}
});

$.each( baseEasings, function( name, easeIn ) {
	$.easing[ "easeIn" + name ] = easeIn;
	$.easing[ "easeOut" + name ] = function( p ) {
		return 1 - easeIn( 1 - p );
	};
	$.easing[ "easeInOut" + name ] = function( p ) {
		return p < 0.5 ?
			easeIn( p * 2 ) / 2 :
			1 - easeIn( p * -2 + 2 ) / 2;
	};
});

})();

var effect = $.effects;


/*!
 * jQuery UI Effects Blind 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/blind-effect/
 */


var effectBlind = $.effects.effect.blind = function( o, done ) {
	// Create element
	var el = $( this ),
		rvertical = /up|down|vertical/,
		rpositivemotion = /up|left|vertical|horizontal/,
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		direction = o.direction || "up",
		vertical = rvertical.test( direction ),
		ref = vertical ? "height" : "width",
		ref2 = vertical ? "top" : "left",
		motion = rpositivemotion.test( direction ),
		animation = {},
		show = mode === "show",
		wrapper, distance, margin;

	// if already wrapped, the wrapper's properties are my property. #6245
	if ( el.parent().is( ".ui-effects-wrapper" ) ) {
		$.effects.save( el.parent(), props );
	} else {
		$.effects.save( el, props );
	}
	el.show();
	wrapper = $.effects.createWrapper( el ).css({
		overflow: "hidden"
	});

	distance = wrapper[ ref ]();
	margin = parseFloat( wrapper.css( ref2 ) ) || 0;

	animation[ ref ] = show ? distance : 0;
	if ( !motion ) {
		el
			.css( vertical ? "bottom" : "right", 0 )
			.css( vertical ? "top" : "left", "auto" )
			.css({ position: "absolute" });

		animation[ ref2 ] = show ? margin : distance + margin;
	}

	// start at 0 if we are showing
	if ( show ) {
		wrapper.css( ref, 0 );
		if ( !motion ) {
			wrapper.css( ref2, margin + distance );
		}
	}

	// Animate
	wrapper.animate( animation, {
		duration: o.duration,
		easing: o.easing,
		queue: false,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});
};


/*!
 * jQuery UI Effects Bounce 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/bounce-effect/
 */


var effectBounce = $.effects.effect.bounce = function( o, done ) {
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],

		// defaults:
		mode = $.effects.setMode( el, o.mode || "effect" ),
		hide = mode === "hide",
		show = mode === "show",
		direction = o.direction || "up",
		distance = o.distance,
		times = o.times || 5,

		// number of internal animations
		anims = times * 2 + ( show || hide ? 1 : 0 ),
		speed = o.duration / anims,
		easing = o.easing,

		// utility:
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		motion = ( direction === "up" || direction === "left" ),
		i,
		upAnim,
		downAnim,

		// we will need to re-assemble the queue to stack our animations in place
		queue = el.queue(),
		queuelen = queue.length;

	// Avoid touching opacity to prevent clearType and PNG issues in IE
	if ( show || hide ) {
		props.push( "opacity" );
	}

	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el ); // Create Wrapper

	// default distance for the BIGGEST bounce is the outer Distance / 3
	if ( !distance ) {
		distance = el[ ref === "top" ? "outerHeight" : "outerWidth" ]() / 3;
	}

	if ( show ) {
		downAnim = { opacity: 1 };
		downAnim[ ref ] = 0;

		// if we are showing, force opacity 0 and set the initial position
		// then do the "first" animation
		el.css( "opacity", 0 )
			.css( ref, motion ? -distance * 2 : distance * 2 )
			.animate( downAnim, speed, easing );
	}

	// start at the smallest distance if we are hiding
	if ( hide ) {
		distance = distance / Math.pow( 2, times - 1 );
	}

	downAnim = {};
	downAnim[ ref ] = 0;
	// Bounces up/down/left/right then back to 0 -- times * 2 animations happen here
	for ( i = 0; i < times; i++ ) {
		upAnim = {};
		upAnim[ ref ] = ( motion ? "-=" : "+=" ) + distance;

		el.animate( upAnim, speed, easing )
			.animate( downAnim, speed, easing );

		distance = hide ? distance * 2 : distance / 2;
	}

	// Last Bounce when Hiding
	if ( hide ) {
		upAnim = { opacity: 0 };
		upAnim[ ref ] = ( motion ? "-=" : "+=" ) + distance;

		el.animate( upAnim, speed, easing );
	}

	el.queue(function() {
		if ( hide ) {
			el.hide();
		}
		$.effects.restore( el, props );
		$.effects.removeWrapper( el );
		done();
	});

	// inject all the animations we just queued to be first in line (after "inprogress")
	if ( queuelen > 1) {
		queue.splice.apply( queue,
			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );
	}
	el.dequeue();

};


/*!
 * jQuery UI Effects Clip 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/clip-effect/
 */


var effectClip = $.effects.effect.clip = function( o, done ) {
	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",
		direction = o.direction || "vertical",
		vert = direction === "vertical",
		size = vert ? "height" : "width",
		position = vert ? "top" : "left",
		animation = {},
		wrapper, animate, distance;

	// Save & Show
	$.effects.save( el, props );
	el.show();

	// Create Wrapper
	wrapper = $.effects.createWrapper( el ).css({
		overflow: "hidden"
	});
	animate = ( el[0].tagName === "IMG" ) ? wrapper : el;
	distance = animate[ size ]();

	// Shift
	if ( show ) {
		animate.css( size, 0 );
		animate.css( position, distance / 2 );
	}

	// Create Animation Object:
	animation[ size ] = show ? distance : 0;
	animation[ position ] = show ? 0 : distance / 2;

	// Animate
	animate.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( !show ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});

};


/*!
 * jQuery UI Effects Drop 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/drop-effect/
 */


var effectDrop = $.effects.effect.drop = function( o, done ) {

	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "opacity", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",
		direction = o.direction || "left",
		ref = ( direction === "up" || direction === "down" ) ? "top" : "left",
		motion = ( direction === "up" || direction === "left" ) ? "pos" : "neg",
		animation = {
			opacity: show ? 1 : 0
		},
		distance;

	// Adjust
	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el );

	distance = o.distance || el[ ref === "top" ? "outerHeight" : "outerWidth" ]( true ) / 2;

	if ( show ) {
		el
			.css( "opacity", 0 )
			.css( ref, motion === "pos" ? -distance : distance );
	}

	// Animation
	animation[ ref ] = ( show ?
		( motion === "pos" ? "+=" : "-=" ) :
		( motion === "pos" ? "-=" : "+=" ) ) +
		distance;

	// Animate
	el.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});
};


/*!
 * jQuery UI Effects Explode 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/explode-effect/
 */


var effectExplode = $.effects.effect.explode = function( o, done ) {

	var rows = o.pieces ? Math.round( Math.sqrt( o.pieces ) ) : 3,
		cells = rows,
		el = $( this ),
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",

		// show and then visibility:hidden the element before calculating offset
		offset = el.show().css( "visibility", "hidden" ).offset(),

		// width and height of a piece
		width = Math.ceil( el.outerWidth() / cells ),
		height = Math.ceil( el.outerHeight() / rows ),
		pieces = [],

		// loop
		i, j, left, top, mx, my;

	// children animate complete:
	function childComplete() {
		pieces.push( this );
		if ( pieces.length === rows * cells ) {
			animComplete();
		}
	}

	// clone the element for each row and cell.
	for ( i = 0; i < rows ; i++ ) { // ===>
		top = offset.top + i * height;
		my = i - ( rows - 1 ) / 2 ;

		for ( j = 0; j < cells ; j++ ) { // |||
			left = offset.left + j * width;
			mx = j - ( cells - 1 ) / 2 ;

			// Create a clone of the now hidden main element that will be absolute positioned
			// within a wrapper div off the -left and -top equal to size of our pieces
			el
				.clone()
				.appendTo( "body" )
				.wrap( "<div></div>" )
				.css({
					position: "absolute",
					visibility: "visible",
					left: -j * width,
					top: -i * height
				})

			// select the wrapper - make it overflow: hidden and absolute positioned based on
			// where the original was located +left and +top equal to the size of pieces
				.parent()
				.addClass( "ui-effects-explode" )
				.css({
					position: "absolute",
					overflow: "hidden",
					width: width,
					height: height,
					left: left + ( show ? mx * width : 0 ),
					top: top + ( show ? my * height : 0 ),
					opacity: show ? 0 : 1
				}).animate({
					left: left + ( show ? 0 : mx * width ),
					top: top + ( show ? 0 : my * height ),
					opacity: show ? 1 : 0
				}, o.duration || 500, o.easing, childComplete );
		}
	}

	function animComplete() {
		el.css({
			visibility: "visible"
		});
		$( pieces ).remove();
		if ( !show ) {
			el.hide();
		}
		done();
	}
};


/*!
 * jQuery UI Effects Fade 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/fade-effect/
 */


var effectFade = $.effects.effect.fade = function( o, done ) {
	var el = $( this ),
		mode = $.effects.setMode( el, o.mode || "toggle" );

	el.animate({
		opacity: mode
	}, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: done
	});
};


/*!
 * jQuery UI Effects Fold 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/fold-effect/
 */


var effectFold = $.effects.effect.fold = function( o, done ) {

	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "hide" ),
		show = mode === "show",
		hide = mode === "hide",
		size = o.size || 15,
		percent = /([0-9]+)%/.exec( size ),
		horizFirst = !!o.horizFirst,
		widthFirst = show !== horizFirst,
		ref = widthFirst ? [ "width", "height" ] : [ "height", "width" ],
		duration = o.duration / 2,
		wrapper, distance,
		animation1 = {},
		animation2 = {};

	$.effects.save( el, props );
	el.show();

	// Create Wrapper
	wrapper = $.effects.createWrapper( el ).css({
		overflow: "hidden"
	});
	distance = widthFirst ?
		[ wrapper.width(), wrapper.height() ] :
		[ wrapper.height(), wrapper.width() ];

	if ( percent ) {
		size = parseInt( percent[ 1 ], 10 ) / 100 * distance[ hide ? 0 : 1 ];
	}
	if ( show ) {
		wrapper.css( horizFirst ? {
			height: 0,
			width: size
		} : {
			height: size,
			width: 0
		});
	}

	// Animation
	animation1[ ref[ 0 ] ] = show ? distance[ 0 ] : size;
	animation2[ ref[ 1 ] ] = show ? distance[ 1 ] : 0;

	// Animate
	wrapper
		.animate( animation1, duration, o.easing )
		.animate( animation2, duration, o.easing, function() {
			if ( hide ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		});

};


/*!
 * jQuery UI Effects Highlight 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/highlight-effect/
 */


var effectHighlight = $.effects.effect.highlight = function( o, done ) {
	var elem = $( this ),
		props = [ "backgroundImage", "backgroundColor", "opacity" ],
		mode = $.effects.setMode( elem, o.mode || "show" ),
		animation = {
			backgroundColor: elem.css( "backgroundColor" )
		};

	if (mode === "hide") {
		animation.opacity = 0;
	}

	$.effects.save( elem, props );

	elem
		.show()
		.css({
			backgroundImage: "none",
			backgroundColor: o.color || "#ffff99"
		})
		.animate( animation, {
			queue: false,
			duration: o.duration,
			easing: o.easing,
			complete: function() {
				if ( mode === "hide" ) {
					elem.hide();
				}
				$.effects.restore( elem, props );
				done();
			}
		});
};


/*!
 * jQuery UI Effects Size 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/size-effect/
 */


var effectSize = $.effects.effect.size = function( o, done ) {

	// Create element
	var original, baseline, factor,
		el = $( this ),
		props0 = [ "position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity" ],

		// Always restore
		props1 = [ "position", "top", "bottom", "left", "right", "overflow", "opacity" ],

		// Copy for children
		props2 = [ "width", "height", "overflow" ],
		cProps = [ "fontSize" ],
		vProps = [ "borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom" ],
		hProps = [ "borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight" ],

		// Set options
		mode = $.effects.setMode( el, o.mode || "effect" ),
		restore = o.restore || mode !== "effect",
		scale = o.scale || "both",
		origin = o.origin || [ "middle", "center" ],
		position = el.css( "position" ),
		props = restore ? props0 : props1,
		zero = {
			height: 0,
			width: 0,
			outerHeight: 0,
			outerWidth: 0
		};

	if ( mode === "show" ) {
		el.show();
	}
	original = {
		height: el.height(),
		width: el.width(),
		outerHeight: el.outerHeight(),
		outerWidth: el.outerWidth()
	};

	if ( o.mode === "toggle" && mode === "show" ) {
		el.from = o.to || zero;
		el.to = o.from || original;
	} else {
		el.from = o.from || ( mode === "show" ? zero : original );
		el.to = o.to || ( mode === "hide" ? zero : original );
	}

	// Set scaling factor
	factor = {
		from: {
			y: el.from.height / original.height,
			x: el.from.width / original.width
		},
		to: {
			y: el.to.height / original.height,
			x: el.to.width / original.width
		}
	};

	// Scale the css box
	if ( scale === "box" || scale === "both" ) {

		// Vertical props scaling
		if ( factor.from.y !== factor.to.y ) {
			props = props.concat( vProps );
			el.from = $.effects.setTransition( el, vProps, factor.from.y, el.from );
			el.to = $.effects.setTransition( el, vProps, factor.to.y, el.to );
		}

		// Horizontal props scaling
		if ( factor.from.x !== factor.to.x ) {
			props = props.concat( hProps );
			el.from = $.effects.setTransition( el, hProps, factor.from.x, el.from );
			el.to = $.effects.setTransition( el, hProps, factor.to.x, el.to );
		}
	}

	// Scale the content
	if ( scale === "content" || scale === "both" ) {

		// Vertical props scaling
		if ( factor.from.y !== factor.to.y ) {
			props = props.concat( cProps ).concat( props2 );
			el.from = $.effects.setTransition( el, cProps, factor.from.y, el.from );
			el.to = $.effects.setTransition( el, cProps, factor.to.y, el.to );
		}
	}

	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el );
	el.css( "overflow", "hidden" ).css( el.from );

	// Adjust
	if (origin) { // Calculate baseline shifts
		baseline = $.effects.getBaseline( origin, original );
		el.from.top = ( original.outerHeight - el.outerHeight() ) * baseline.y;
		el.from.left = ( original.outerWidth - el.outerWidth() ) * baseline.x;
		el.to.top = ( original.outerHeight - el.to.outerHeight ) * baseline.y;
		el.to.left = ( original.outerWidth - el.to.outerWidth ) * baseline.x;
	}
	el.css( el.from ); // set top & left

	// Animate
	if ( scale === "content" || scale === "both" ) { // Scale the children

		// Add margins/font-size
		vProps = vProps.concat([ "marginTop", "marginBottom" ]).concat(cProps);
		hProps = hProps.concat([ "marginLeft", "marginRight" ]);
		props2 = props0.concat(vProps).concat(hProps);

		el.find( "*[width]" ).each( function() {
			var child = $( this ),
				c_original = {
					height: child.height(),
					width: child.width(),
					outerHeight: child.outerHeight(),
					outerWidth: child.outerWidth()
				};
			if (restore) {
				$.effects.save(child, props2);
			}

			child.from = {
				height: c_original.height * factor.from.y,
				width: c_original.width * factor.from.x,
				outerHeight: c_original.outerHeight * factor.from.y,
				outerWidth: c_original.outerWidth * factor.from.x
			};
			child.to = {
				height: c_original.height * factor.to.y,
				width: c_original.width * factor.to.x,
				outerHeight: c_original.height * factor.to.y,
				outerWidth: c_original.width * factor.to.x
			};

			// Vertical props scaling
			if ( factor.from.y !== factor.to.y ) {
				child.from = $.effects.setTransition( child, vProps, factor.from.y, child.from );
				child.to = $.effects.setTransition( child, vProps, factor.to.y, child.to );
			}

			// Horizontal props scaling
			if ( factor.from.x !== factor.to.x ) {
				child.from = $.effects.setTransition( child, hProps, factor.from.x, child.from );
				child.to = $.effects.setTransition( child, hProps, factor.to.x, child.to );
			}

			// Animate children
			child.css( child.from );
			child.animate( child.to, o.duration, o.easing, function() {

				// Restore children
				if ( restore ) {
					$.effects.restore( child, props2 );
				}
			});
		});
	}

	// Animate
	el.animate( el.to, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( el.to.opacity === 0 ) {
				el.css( "opacity", el.from.opacity );
			}
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			if ( !restore ) {

				// we need to calculate our new positioning based on the scaling
				if ( position === "static" ) {
					el.css({
						position: "relative",
						top: el.to.top,
						left: el.to.left
					});
				} else {
					$.each([ "top", "left" ], function( idx, pos ) {
						el.css( pos, function( _, str ) {
							var val = parseInt( str, 10 ),
								toRef = idx ? el.to.left : el.to.top;

							// if original was "auto", recalculate the new value from wrapper
							if ( str === "auto" ) {
								return toRef + "px";
							}

							return val + toRef + "px";
						});
					});
				}
			}

			$.effects.removeWrapper( el );
			done();
		}
	});

};


/*!
 * jQuery UI Effects Scale 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/scale-effect/
 */


var effectScale = $.effects.effect.scale = function( o, done ) {

	// Create element
	var el = $( this ),
		options = $.extend( true, {}, o ),
		mode = $.effects.setMode( el, o.mode || "effect" ),
		percent = parseInt( o.percent, 10 ) ||
			( parseInt( o.percent, 10 ) === 0 ? 0 : ( mode === "hide" ? 0 : 100 ) ),
		direction = o.direction || "both",
		origin = o.origin,
		original = {
			height: el.height(),
			width: el.width(),
			outerHeight: el.outerHeight(),
			outerWidth: el.outerWidth()
		},
		factor = {
			y: direction !== "horizontal" ? (percent / 100) : 1,
			x: direction !== "vertical" ? (percent / 100) : 1
		};

	// We are going to pass this effect to the size effect:
	options.effect = "size";
	options.queue = false;
	options.complete = done;

	// Set default origin and restore for show/hide
	if ( mode !== "effect" ) {
		options.origin = origin || [ "middle", "center" ];
		options.restore = true;
	}

	options.from = o.from || ( mode === "show" ? {
		height: 0,
		width: 0,
		outerHeight: 0,
		outerWidth: 0
	} : original );
	options.to = {
		height: original.height * factor.y,
		width: original.width * factor.x,
		outerHeight: original.outerHeight * factor.y,
		outerWidth: original.outerWidth * factor.x
	};

	// Fade option to support puff
	if ( options.fade ) {
		if ( mode === "show" ) {
			options.from.opacity = 0;
			options.to.opacity = 1;
		}
		if ( mode === "hide" ) {
			options.from.opacity = 1;
			options.to.opacity = 0;
		}
	}

	// Animate
	el.effect( options );

};


/*!
 * jQuery UI Effects Puff 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/puff-effect/
 */


var effectPuff = $.effects.effect.puff = function( o, done ) {
	var elem = $( this ),
		mode = $.effects.setMode( elem, o.mode || "hide" ),
		hide = mode === "hide",
		percent = parseInt( o.percent, 10 ) || 150,
		factor = percent / 100,
		original = {
			height: elem.height(),
			width: elem.width(),
			outerHeight: elem.outerHeight(),
			outerWidth: elem.outerWidth()
		};

	$.extend( o, {
		effect: "scale",
		queue: false,
		fade: true,
		mode: mode,
		complete: done,
		percent: hide ? percent : 100,
		from: hide ?
			original :
			{
				height: original.height * factor,
				width: original.width * factor,
				outerHeight: original.outerHeight * factor,
				outerWidth: original.outerWidth * factor
			}
	});

	elem.effect( o );
};


/*!
 * jQuery UI Effects Pulsate 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/pulsate-effect/
 */


var effectPulsate = $.effects.effect.pulsate = function( o, done ) {
	var elem = $( this ),
		mode = $.effects.setMode( elem, o.mode || "show" ),
		show = mode === "show",
		hide = mode === "hide",
		showhide = ( show || mode === "hide" ),

		// showing or hiding leaves of the "last" animation
		anims = ( ( o.times || 5 ) * 2 ) + ( showhide ? 1 : 0 ),
		duration = o.duration / anims,
		animateTo = 0,
		queue = elem.queue(),
		queuelen = queue.length,
		i;

	if ( show || !elem.is(":visible")) {
		elem.css( "opacity", 0 ).show();
		animateTo = 1;
	}

	// anims - 1 opacity "toggles"
	for ( i = 1; i < anims; i++ ) {
		elem.animate({
			opacity: animateTo
		}, duration, o.easing );
		animateTo = 1 - animateTo;
	}

	elem.animate({
		opacity: animateTo
	}, duration, o.easing);

	elem.queue(function() {
		if ( hide ) {
			elem.hide();
		}
		done();
	});

	// We just queued up "anims" animations, we need to put them next in the queue
	if ( queuelen > 1 ) {
		queue.splice.apply( queue,
			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );
	}
	elem.dequeue();
};


/*!
 * jQuery UI Effects Shake 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/shake-effect/
 */


var effectShake = $.effects.effect.shake = function( o, done ) {

	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "height", "width" ],
		mode = $.effects.setMode( el, o.mode || "effect" ),
		direction = o.direction || "left",
		distance = o.distance || 20,
		times = o.times || 3,
		anims = times * 2 + 1,
		speed = Math.round( o.duration / anims ),
		ref = (direction === "up" || direction === "down") ? "top" : "left",
		positiveMotion = (direction === "up" || direction === "left"),
		animation = {},
		animation1 = {},
		animation2 = {},
		i,

		// we will need to re-assemble the queue to stack our animations in place
		queue = el.queue(),
		queuelen = queue.length;

	$.effects.save( el, props );
	el.show();
	$.effects.createWrapper( el );

	// Animation
	animation[ ref ] = ( positiveMotion ? "-=" : "+=" ) + distance;
	animation1[ ref ] = ( positiveMotion ? "+=" : "-=" ) + distance * 2;
	animation2[ ref ] = ( positiveMotion ? "-=" : "+=" ) + distance * 2;

	// Animate
	el.animate( animation, speed, o.easing );

	// Shakes
	for ( i = 1; i < times; i++ ) {
		el.animate( animation1, speed, o.easing ).animate( animation2, speed, o.easing );
	}
	el
		.animate( animation1, speed, o.easing )
		.animate( animation, speed / 2, o.easing )
		.queue(function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		});

	// inject all the animations we just queued to be first in line (after "inprogress")
	if ( queuelen > 1) {
		queue.splice.apply( queue,
			[ 1, 0 ].concat( queue.splice( queuelen, anims + 1 ) ) );
	}
	el.dequeue();

};


/*!
 * jQuery UI Effects Slide 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/slide-effect/
 */


var effectSlide = $.effects.effect.slide = function( o, done ) {

	// Create element
	var el = $( this ),
		props = [ "position", "top", "bottom", "left", "right", "width", "height" ],
		mode = $.effects.setMode( el, o.mode || "show" ),
		show = mode === "show",
		direction = o.direction || "left",
		ref = (direction === "up" || direction === "down") ? "top" : "left",
		positiveMotion = (direction === "up" || direction === "left"),
		distance,
		animation = {};

	// Adjust
	$.effects.save( el, props );
	el.show();
	distance = o.distance || el[ ref === "top" ? "outerHeight" : "outerWidth" ]( true );

	$.effects.createWrapper( el ).css({
		overflow: "hidden"
	});

	if ( show ) {
		el.css( ref, positiveMotion ? (isNaN(distance) ? "-" + distance : -distance) : distance );
	}

	// Animation
	animation[ ref ] = ( show ?
		( positiveMotion ? "+=" : "-=") :
		( positiveMotion ? "-=" : "+=")) +
		distance;

	// Animate
	el.animate( animation, {
		queue: false,
		duration: o.duration,
		easing: o.easing,
		complete: function() {
			if ( mode === "hide" ) {
				el.hide();
			}
			$.effects.restore( el, props );
			$.effects.removeWrapper( el );
			done();
		}
	});
};


/*!
 * jQuery UI Effects Transfer 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/transfer-effect/
 */


var effectTransfer = $.effects.effect.transfer = function( o, done ) {
	var elem = $( this ),
		target = $( o.to ),
		targetFixed = target.css( "position" ) === "fixed",
		body = $("body"),
		fixTop = targetFixed ? body.scrollTop() : 0,
		fixLeft = targetFixed ? body.scrollLeft() : 0,
		endPosition = target.offset(),
		animation = {
			top: endPosition.top - fixTop,
			left: endPosition.left - fixLeft,
			height: target.innerHeight(),
			width: target.innerWidth()
		},
		startPosition = elem.offset(),
		transfer = $( "<div class='ui-effects-transfer'></div>" )
			.appendTo( document.body )
			.addClass( o.className )
			.css({
				top: startPosition.top - fixTop,
				left: startPosition.left - fixLeft,
				height: elem.innerHeight(),
				width: elem.innerWidth(),
				position: targetFixed ? "fixed" : "absolute"
			})
			.animate( animation, o.duration, o.easing, function() {
				transfer.remove();
				done();
			});
};


/*!
 * jQuery UI Progressbar 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/progressbar/
 */


var progressbar = $.widget( "ui.progressbar", {
	version: "1.11.4",
	options: {
		max: 100,
		value: 0,

		change: null,
		complete: null
	},

	min: 0,

	_create: function() {
		// Constrain initial value
		this.oldValue = this.options.value = this._constrainedValue();

		this.element
			.addClass( "ui-progressbar ui-widget ui-widget-content ui-corner-all" )
			.attr({
				// Only set static values, aria-valuenow and aria-valuemax are
				// set inside _refreshValue()
				role: "progressbar",
				"aria-valuemin": this.min
			});

		this.valueDiv = $( "<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>" )
			.appendTo( this.element );

		this._refreshValue();
	},

	_destroy: function() {
		this.element
			.removeClass( "ui-progressbar ui-widget ui-widget-content ui-corner-all" )
			.removeAttr( "role" )
			.removeAttr( "aria-valuemin" )
			.removeAttr( "aria-valuemax" )
			.removeAttr( "aria-valuenow" );

		this.valueDiv.remove();
	},

	value: function( newValue ) {
		if ( newValue === undefined ) {
			return this.options.value;
		}

		this.options.value = this._constrainedValue( newValue );
		this._refreshValue();
	},

	_constrainedValue: function( newValue ) {
		if ( newValue === undefined ) {
			newValue = this.options.value;
		}

		this.indeterminate = newValue === false;

		// sanitize value
		if ( typeof newValue !== "number" ) {
			newValue = 0;
		}

		return this.indeterminate ? false :
			Math.min( this.options.max, Math.max( this.min, newValue ) );
	},

	_setOptions: function( options ) {
		// Ensure "value" option is set after other values (like max)
		var value = options.value;
		delete options.value;

		this._super( options );

		this.options.value = this._constrainedValue( value );
		this._refreshValue();
	},

	_setOption: function( key, value ) {
		if ( key === "max" ) {
			// Don't allow a max less than min
			value = Math.max( this.min, value );
		}
		if ( key === "disabled" ) {
			this.element
				.toggleClass( "ui-state-disabled", !!value )
				.attr( "aria-disabled", value );
		}
		this._super( key, value );
	},

	_percentage: function() {
		return this.indeterminate ? 100 : 100 * ( this.options.value - this.min ) / ( this.options.max - this.min );
	},

	_refreshValue: function() {
		var value = this.options.value,
			percentage = this._percentage();

		this.valueDiv
			.toggle( this.indeterminate || value > this.min )
			.toggleClass( "ui-corner-right", value === this.options.max )
			.width( percentage.toFixed(0) + "%" );

		this.element.toggleClass( "ui-progressbar-indeterminate", this.indeterminate );

		if ( this.indeterminate ) {
			this.element.removeAttr( "aria-valuenow" );
			if ( !this.overlayDiv ) {
				this.overlayDiv = $( "<div class='ui-progressbar-overlay'></div>" ).appendTo( this.valueDiv );
			}
		} else {
			this.element.attr({
				"aria-valuemax": this.options.max,
				"aria-valuenow": value
			});
			if ( this.overlayDiv ) {
				this.overlayDiv.remove();
				this.overlayDiv = null;
			}
		}

		if ( this.oldValue !== value ) {
			this.oldValue = value;
			this._trigger( "change" );
		}
		if ( value === this.options.max ) {
			this._trigger( "complete" );
		}
	}
});


/*!
 * jQuery UI Selectable 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/selectable/
 */


var selectable = $.widget("ui.selectable", $.ui.mouse, {
	version: "1.11.4",
	options: {
		appendTo: "body",
		autoRefresh: true,
		distance: 0,
		filter: "*",
		tolerance: "touch",

		// callbacks
		selected: null,
		selecting: null,
		start: null,
		stop: null,
		unselected: null,
		unselecting: null
	},
	_create: function() {
		var selectees,
			that = this;

		this.element.addClass("ui-selectable");

		this.dragged = false;

		// cache selectee children based on filter
		this.refresh = function() {
			selectees = $(that.options.filter, that.element[0]);
			selectees.addClass("ui-selectee");
			selectees.each(function() {
				var $this = $(this),
					pos = $this.offset();
				$.data(this, "selectable-item", {
					element: this,
					$element: $this,
					left: pos.left,
					top: pos.top,
					right: pos.left + $this.outerWidth(),
					bottom: pos.top + $this.outerHeight(),
					startselected: false,
					selected: $this.hasClass("ui-selected"),
					selecting: $this.hasClass("ui-selecting"),
					unselecting: $this.hasClass("ui-unselecting")
				});
			});
		};
		this.refresh();

		this.selectees = selectees.addClass("ui-selectee");

		this._mouseInit();

		this.helper = $("<div class='ui-selectable-helper'></div>");
	},

	_destroy: function() {
		this.selectees
			.removeClass("ui-selectee")
			.removeData("selectable-item");
		this.element
			.removeClass("ui-selectable ui-selectable-disabled");
		this._mouseDestroy();
	},

	_mouseStart: function(event) {
		var that = this,
			options = this.options;

		this.opos = [ event.pageX, event.pageY ];

		if (this.options.disabled) {
			return;
		}

		this.selectees = $(options.filter, this.element[0]);

		this._trigger("start", event);

		$(options.appendTo).append(this.helper);
		// position helper (lasso)
		this.helper.css({
			"left": event.pageX,
			"top": event.pageY,
			"width": 0,
			"height": 0
		});

		if (options.autoRefresh) {
			this.refresh();
		}

		this.selectees.filter(".ui-selected").each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.startselected = true;
			if (!event.metaKey && !event.ctrlKey) {
				selectee.$element.removeClass("ui-selected");
				selectee.selected = false;
				selectee.$element.addClass("ui-unselecting");
				selectee.unselecting = true;
				// selectable UNSELECTING callback
				that._trigger("unselecting", event, {
					unselecting: selectee.element
				});
			}
		});

		$(event.target).parents().addBack().each(function() {
			var doSelect,
				selectee = $.data(this, "selectable-item");
			if (selectee) {
				doSelect = (!event.metaKey && !event.ctrlKey) || !selectee.$element.hasClass("ui-selected");
				selectee.$element
					.removeClass(doSelect ? "ui-unselecting" : "ui-selected")
					.addClass(doSelect ? "ui-selecting" : "ui-unselecting");
				selectee.unselecting = !doSelect;
				selectee.selecting = doSelect;
				selectee.selected = doSelect;
				// selectable (UN)SELECTING callback
				if (doSelect) {
					that._trigger("selecting", event, {
						selecting: selectee.element
					});
				} else {
					that._trigger("unselecting", event, {
						unselecting: selectee.element
					});
				}
				return false;
			}
		});

	},

	_mouseDrag: function(event) {

		this.dragged = true;

		if (this.options.disabled) {
			return;
		}

		var tmp,
			that = this,
			options = this.options,
			x1 = this.opos[0],
			y1 = this.opos[1],
			x2 = event.pageX,
			y2 = event.pageY;

		if (x1 > x2) { tmp = x2; x2 = x1; x1 = tmp; }
		if (y1 > y2) { tmp = y2; y2 = y1; y1 = tmp; }
		this.helper.css({ left: x1, top: y1, width: x2 - x1, height: y2 - y1 });

		this.selectees.each(function() {
			var selectee = $.data(this, "selectable-item"),
				hit = false;

			//prevent helper from being selected if appendTo: selectable
			if (!selectee || selectee.element === that.element[0]) {
				return;
			}

			if (options.tolerance === "touch") {
				hit = ( !(selectee.left > x2 || selectee.right < x1 || selectee.top > y2 || selectee.bottom < y1) );
			} else if (options.tolerance === "fit") {
				hit = (selectee.left > x1 && selectee.right < x2 && selectee.top > y1 && selectee.bottom < y2);
			}

			if (hit) {
				// SELECT
				if (selectee.selected) {
					selectee.$element.removeClass("ui-selected");
					selectee.selected = false;
				}
				if (selectee.unselecting) {
					selectee.$element.removeClass("ui-unselecting");
					selectee.unselecting = false;
				}
				if (!selectee.selecting) {
					selectee.$element.addClass("ui-selecting");
					selectee.selecting = true;
					// selectable SELECTING callback
					that._trigger("selecting", event, {
						selecting: selectee.element
					});
				}
			} else {
				// UNSELECT
				if (selectee.selecting) {
					if ((event.metaKey || event.ctrlKey) && selectee.startselected) {
						selectee.$element.removeClass("ui-selecting");
						selectee.selecting = false;
						selectee.$element.addClass("ui-selected");
						selectee.selected = true;
					} else {
						selectee.$element.removeClass("ui-selecting");
						selectee.selecting = false;
						if (selectee.startselected) {
							selectee.$element.addClass("ui-unselecting");
							selectee.unselecting = true;
						}
						// selectable UNSELECTING callback
						that._trigger("unselecting", event, {
							unselecting: selectee.element
						});
					}
				}
				if (selectee.selected) {
					if (!event.metaKey && !event.ctrlKey && !selectee.startselected) {
						selectee.$element.removeClass("ui-selected");
						selectee.selected = false;

						selectee.$element.addClass("ui-unselecting");
						selectee.unselecting = true;
						// selectable UNSELECTING callback
						that._trigger("unselecting", event, {
							unselecting: selectee.element
						});
					}
				}
			}
		});

		return false;
	},

	_mouseStop: function(event) {
		var that = this;

		this.dragged = false;

		$(".ui-unselecting", this.element[0]).each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.$element.removeClass("ui-unselecting");
			selectee.unselecting = false;
			selectee.startselected = false;
			that._trigger("unselected", event, {
				unselected: selectee.element
			});
		});
		$(".ui-selecting", this.element[0]).each(function() {
			var selectee = $.data(this, "selectable-item");
			selectee.$element.removeClass("ui-selecting").addClass("ui-selected");
			selectee.selecting = false;
			selectee.selected = true;
			selectee.startselected = true;
			that._trigger("selected", event, {
				selected: selectee.element
			});
		});
		this._trigger("stop", event);

		this.helper.remove();

		return false;
	}

});


/*!
 * jQuery UI Selectmenu 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/selectmenu
 */


var selectmenu = $.widget( "ui.selectmenu", {
	version: "1.11.4",
	defaultElement: "<select>",
	options: {
		appendTo: null,
		disabled: null,
		icons: {
			button: "ui-icon-triangle-1-s"
		},
		position: {
			my: "left top",
			at: "left bottom",
			collision: "none"
		},
		width: null,

		// callbacks
		change: null,
		close: null,
		focus: null,
		open: null,
		select: null
	},

	_create: function() {
		var selectmenuId = this.element.uniqueId().attr( "id" );
		this.ids = {
			element: selectmenuId,
			button: selectmenuId + "-button",
			menu: selectmenuId + "-menu"
		};

		this._drawButton();
		this._drawMenu();

		if ( this.options.disabled ) {
			this.disable();
		}
	},

	_drawButton: function() {
		var that = this;

		// Associate existing label with the new button
		this.label = $( "label[for='" + this.ids.element + "']" ).attr( "for", this.ids.button );
		this._on( this.label, {
			click: function( event ) {
				this.button.focus();
				event.preventDefault();
			}
		});

		// Hide original select element
		this.element.hide();

		// Create button
		this.button = $( "<span>", {
			"class": "ui-selectmenu-button ui-widget ui-state-default ui-corner-all",
			tabindex: this.options.disabled ? -1 : 0,
			id: this.ids.button,
			role: "combobox",
			"aria-expanded": "false",
			"aria-autocomplete": "list",
			"aria-owns": this.ids.menu,
			"aria-haspopup": "true"
		})
			.insertAfter( this.element );

		$( "<span>", {
			"class": "ui-icon " + this.options.icons.button
		})
			.prependTo( this.button );

		this.buttonText = $( "<span>", {
			"class": "ui-selectmenu-text"
		})
			.appendTo( this.button );

		this._setText( this.buttonText, this.element.find( "option:selected" ).text() );
		this._resizeButton();

		this._on( this.button, this._buttonEvents );
		this.button.one( "focusin", function() {

			// Delay rendering the menu items until the button receives focus.
			// The menu may have already been rendered via a programmatic open.
			if ( !that.menuItems ) {
				that._refreshMenu();
			}
		});
		this._hoverable( this.button );
		this._focusable( this.button );
	},

	_drawMenu: function() {
		var that = this;

		// Create menu
		this.menu = $( "<ul>", {
			"aria-hidden": "true",
			"aria-labelledby": this.ids.button,
			id: this.ids.menu
		});

		// Wrap menu
		this.menuWrap = $( "<div>", {
			"class": "ui-selectmenu-menu ui-front"
		})
			.append( this.menu )
			.appendTo( this._appendTo() );

		// Initialize menu widget
		this.menuInstance = this.menu
			.menu({
				role: "listbox",
				select: function( event, ui ) {
					event.preventDefault();

					// support: IE8
					// If the item was selected via a click, the text selection
					// will be destroyed in IE
					that._setSelection();

					that._select( ui.item.data( "ui-selectmenu-item" ), event );
				},
				focus: function( event, ui ) {
					var item = ui.item.data( "ui-selectmenu-item" );

					// Prevent inital focus from firing and check if its a newly focused item
					if ( that.focusIndex != null && item.index !== that.focusIndex ) {
						that._trigger( "focus", event, { item: item } );
						if ( !that.isOpen ) {
							that._select( item, event );
						}
					}
					that.focusIndex = item.index;

					that.button.attr( "aria-activedescendant",
						that.menuItems.eq( item.index ).attr( "id" ) );
				}
			})
			.menu( "instance" );

		// Adjust menu styles to dropdown
		this.menu
			.addClass( "ui-corner-bottom" )
			.removeClass( "ui-corner-all" );

		// Don't close the menu on mouseleave
		this.menuInstance._off( this.menu, "mouseleave" );

		// Cancel the menu's collapseAll on document click
		this.menuInstance._closeOnDocumentClick = function() {
			return false;
		};

		// Selects often contain empty items, but never contain dividers
		this.menuInstance._isDivider = function() {
			return false;
		};
	},

	refresh: function() {
		this._refreshMenu();
		this._setText( this.buttonText, this._getSelectedItem().text() );
		if ( !this.options.width ) {
			this._resizeButton();
		}
	},

	_refreshMenu: function() {
		this.menu.empty();

		var item,
			options = this.element.find( "option" );

		if ( !options.length ) {
			return;
		}

		this._parseOptions( options );
		this._renderMenu( this.menu, this.items );

		this.menuInstance.refresh();
		this.menuItems = this.menu.find( "li" ).not( ".ui-selectmenu-optgroup" );

		item = this._getSelectedItem();

		// Update the menu to have the correct item focused
		this.menuInstance.focus( null, item );
		this._setAria( item.data( "ui-selectmenu-item" ) );

		// Set disabled state
		this._setOption( "disabled", this.element.prop( "disabled" ) );
	},

	open: function( event ) {
		if ( this.options.disabled ) {
			return;
		}

		// If this is the first time the menu is being opened, render the items
		if ( !this.menuItems ) {
			this._refreshMenu();
		} else {

			// Menu clears focus on close, reset focus to selected item
			this.menu.find( ".ui-state-focus" ).removeClass( "ui-state-focus" );
			this.menuInstance.focus( null, this._getSelectedItem() );
		}

		this.isOpen = true;
		this._toggleAttr();
		this._resizeMenu();
		this._position();

		this._on( this.document, this._documentClick );

		this._trigger( "open", event );
	},

	_position: function() {
		this.menuWrap.position( $.extend( { of: this.button }, this.options.position ) );
	},

	close: function( event ) {
		if ( !this.isOpen ) {
			return;
		}

		this.isOpen = false;
		this._toggleAttr();

		this.range = null;
		this._off( this.document );

		this._trigger( "close", event );
	},

	widget: function() {
		return this.button;
	},

	menuWidget: function() {
		return this.menu;
	},

	_renderMenu: function( ul, items ) {
		var that = this,
			currentOptgroup = "";

		$.each( items, function( index, item ) {
			if ( item.optgroup !== currentOptgroup ) {
				$( "<li>", {
					"class": "ui-selectmenu-optgroup ui-menu-divider" +
						( item.element.parent( "optgroup" ).prop( "disabled" ) ?
							" ui-state-disabled" :
							"" ),
					text: item.optgroup
				})
					.appendTo( ul );

				currentOptgroup = item.optgroup;
			}

			that._renderItemData( ul, item );
		});
	},

	_renderItemData: function( ul, item ) {
		return this._renderItem( ul, item ).data( "ui-selectmenu-item", item );
	},

	_renderItem: function( ul, item ) {
		var li = $( "<li>" );

		if ( item.disabled ) {
			li.addClass( "ui-state-disabled" );
		}
		this._setText( li, item.label );

		return li.appendTo( ul );
	},

	_setText: function( element, value ) {
		if ( value ) {
			element.text( value );
		} else {
			element.html( "&#160;" );
		}
	},

	_move: function( direction, event ) {
		var item, next,
			filter = ".ui-menu-item";

		if ( this.isOpen ) {
			item = this.menuItems.eq( this.focusIndex );
		} else {
			item = this.menuItems.eq( this.element[ 0 ].selectedIndex );
			filter += ":not(.ui-state-disabled)";
		}

		if ( direction === "first" || direction === "last" ) {
			next = item[ direction === "first" ? "prevAll" : "nextAll" ]( filter ).eq( -1 );
		} else {
			next = item[ direction + "All" ]( filter ).eq( 0 );
		}

		if ( next.length ) {
			this.menuInstance.focus( event, next );
		}
	},

	_getSelectedItem: function() {
		return this.menuItems.eq( this.element[ 0 ].selectedIndex );
	},

	_toggle: function( event ) {
		this[ this.isOpen ? "close" : "open" ]( event );
	},

	_setSelection: function() {
		var selection;

		if ( !this.range ) {
			return;
		}

		if ( window.getSelection ) {
			selection = window.getSelection();
			selection.removeAllRanges();
			selection.addRange( this.range );

		// support: IE8
		} else {
			this.range.select();
		}

		// support: IE
		// Setting the text selection kills the button focus in IE, but
		// restoring the focus doesn't kill the selection.
		this.button.focus();
	},

	_documentClick: {
		mousedown: function( event ) {
			if ( !this.isOpen ) {
				return;
			}

			if ( !$( event.target ).closest( ".ui-selectmenu-menu, #" + this.ids.button ).length ) {
				this.close( event );
			}
		}
	},

	_buttonEvents: {

		// Prevent text selection from being reset when interacting with the selectmenu (#10144)
		mousedown: function() {
			var selection;

			if ( window.getSelection ) {
				selection = window.getSelection();
				if ( selection.rangeCount ) {
					this.range = selection.getRangeAt( 0 );
				}

			// support: IE8
			} else {
				this.range = document.selection.createRange();
			}
		},

		click: function( event ) {
			this._setSelection();
			this._toggle( event );
		},

		keydown: function( event ) {
			var preventDefault = true;
			switch ( event.keyCode ) {
				case $.ui.keyCode.TAB:
				case $.ui.keyCode.ESCAPE:
					this.close( event );
					preventDefault = false;
					break;
				case $.ui.keyCode.ENTER:
					if ( this.isOpen ) {
						this._selectFocusedItem( event );
					}
					break;
				case $.ui.keyCode.UP:
					if ( event.altKey ) {
						this._toggle( event );
					} else {
						this._move( "prev", event );
					}
					break;
				case $.ui.keyCode.DOWN:
					if ( event.altKey ) {
						this._toggle( event );
					} else {
						this._move( "next", event );
					}
					break;
				case $.ui.keyCode.SPACE:
					if ( this.isOpen ) {
						this._selectFocusedItem( event );
					} else {
						this._toggle( event );
					}
					break;
				case $.ui.keyCode.LEFT:
					this._move( "prev", event );
					break;
				case $.ui.keyCode.RIGHT:
					this._move( "next", event );
					break;
				case $.ui.keyCode.HOME:
				case $.ui.keyCode.PAGE_UP:
					this._move( "first", event );
					break;
				case $.ui.keyCode.END:
				case $.ui.keyCode.PAGE_DOWN:
					this._move( "last", event );
					break;
				default:
					this.menu.trigger( event );
					preventDefault = false;
			}

			if ( preventDefault ) {
				event.preventDefault();
			}
		}
	},

	_selectFocusedItem: function( event ) {
		var item = this.menuItems.eq( this.focusIndex );
		if ( !item.hasClass( "ui-state-disabled" ) ) {
			this._select( item.data( "ui-selectmenu-item" ), event );
		}
	},

	_select: function( item, event ) {
		var oldIndex = this.element[ 0 ].selectedIndex;

		// Change native select element
		this.element[ 0 ].selectedIndex = item.index;
		this._setText( this.buttonText, item.label );
		this._setAria( item );
		this._trigger( "select", event, { item: item } );

		if ( item.index !== oldIndex ) {
			this._trigger( "change", event, { item: item } );
		}

		this.close( event );
	},

	_setAria: function( item ) {
		var id = this.menuItems.eq( item.index ).attr( "id" );

		this.button.attr({
			"aria-labelledby": id,
			"aria-activedescendant": id
		});
		this.menu.attr( "aria-activedescendant", id );
	},

	_setOption: function( key, value ) {
		if ( key === "icons" ) {
			this.button.find( "span.ui-icon" )
				.removeClass( this.options.icons.button )
				.addClass( value.button );
		}

		this._super( key, value );

		if ( key === "appendTo" ) {
			this.menuWrap.appendTo( this._appendTo() );
		}

		if ( key === "disabled" ) {
			this.menuInstance.option( "disabled", value );
			this.button
				.toggleClass( "ui-state-disabled", value )
				.attr( "aria-disabled", value );

			this.element.prop( "disabled", value );
			if ( value ) {
				this.button.attr( "tabindex", -1 );
				this.close();
			} else {
				this.button.attr( "tabindex", 0 );
			}
		}

		if ( key === "width" ) {
			this._resizeButton();
		}
	},

	_appendTo: function() {
		var element = this.options.appendTo;

		if ( element ) {
			element = element.jquery || element.nodeType ?
				$( element ) :
				this.document.find( element ).eq( 0 );
		}

		if ( !element || !element[ 0 ] ) {
			element = this.element.closest( ".ui-front" );
		}

		if ( !element.length ) {
			element = this.document[ 0 ].body;
		}

		return element;
	},

	_toggleAttr: function() {
		this.button
			.toggleClass( "ui-corner-top", this.isOpen )
			.toggleClass( "ui-corner-all", !this.isOpen )
			.attr( "aria-expanded", this.isOpen );
		this.menuWrap.toggleClass( "ui-selectmenu-open", this.isOpen );
		this.menu.attr( "aria-hidden", !this.isOpen );
	},

	_resizeButton: function() {
		var width = this.options.width;

		if ( !width ) {
			width = this.element.show().outerWidth();
			this.element.hide();
		}

		this.button.outerWidth( width );
	},

	_resizeMenu: function() {
		this.menu.outerWidth( Math.max(
			this.button.outerWidth(),

			// support: IE10
			// IE10 wraps long text (possibly a rounding bug)
			// so we add 1px to avoid the wrapping
			this.menu.width( "" ).outerWidth() + 1
		) );
	},

	_getCreateOptions: function() {
		return { disabled: this.element.prop( "disabled" ) };
	},

	_parseOptions: function( options ) {
		var data = [];
		options.each(function( index, item ) {
			var option = $( item ),
				optgroup = option.parent( "optgroup" );
			data.push({
				element: option,
				index: index,
				value: option.val(),
				label: option.text(),
				optgroup: optgroup.attr( "label" ) || "",
				disabled: optgroup.prop( "disabled" ) || option.prop( "disabled" )
			});
		});
		this.items = data;
	},

	_destroy: function() {
		this.menuWrap.remove();
		this.button.remove();
		this.element.show();
		this.element.removeUniqueId();
		this.label.attr( "for", this.ids.element );
	}
});


/*!
 * jQuery UI Slider 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/slider/
 */


var slider = $.widget( "ui.slider", $.ui.mouse, {
	version: "1.11.4",
	widgetEventPrefix: "slide",

	options: {
		animate: false,
		distance: 0,
		max: 100,
		min: 0,
		orientation: "horizontal",
		range: false,
		step: 1,
		value: 0,
		values: null,

		// callbacks
		change: null,
		slide: null,
		start: null,
		stop: null
	},

	// number of pages in a slider
	// (how many times can you page up/down to go through the whole range)
	numPages: 5,

	_create: function() {
		this._keySliding = false;
		this._mouseSliding = false;
		this._animateOff = true;
		this._handleIndex = null;
		this._detectOrientation();
		this._mouseInit();
		this._calculateNewMax();

		this.element
			.addClass( "ui-slider" +
				" ui-slider-" + this.orientation +
				" ui-widget" +
				" ui-widget-content" +
				" ui-corner-all");

		this._refresh();
		this._setOption( "disabled", this.options.disabled );

		this._animateOff = false;
	},

	_refresh: function() {
		this._createRange();
		this._createHandles();
		this._setupEvents();
		this._refreshValue();
	},

	_createHandles: function() {
		var i, handleCount,
			options = this.options,
			existingHandles = this.element.find( ".ui-slider-handle" ).addClass( "ui-state-default ui-corner-all" ),
			handle = "<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>",
			handles = [];

		handleCount = ( options.values && options.values.length ) || 1;

		if ( existingHandles.length > handleCount ) {
			existingHandles.slice( handleCount ).remove();
			existingHandles = existingHandles.slice( 0, handleCount );
		}

		for ( i = existingHandles.length; i < handleCount; i++ ) {
			handles.push( handle );
		}

		this.handles = existingHandles.add( $( handles.join( "" ) ).appendTo( this.element ) );

		this.handle = this.handles.eq( 0 );

		this.handles.each(function( i ) {
			$( this ).data( "ui-slider-handle-index", i );
		});
	},

	_createRange: function() {
		var options = this.options,
			classes = "";

		if ( options.range ) {
			if ( options.range === true ) {
				if ( !options.values ) {
					options.values = [ this._valueMin(), this._valueMin() ];
				} else if ( options.values.length && options.values.length !== 2 ) {
					options.values = [ options.values[0], options.values[0] ];
				} else if ( $.isArray( options.values ) ) {
					options.values = options.values.slice(0);
				}
			}

			if ( !this.range || !this.range.length ) {
				this.range = $( "<div></div>" )
					.appendTo( this.element );

				classes = "ui-slider-range" +
				// note: this isn't the most fittingly semantic framework class for this element,
				// but worked best visually with a variety of themes
				" ui-widget-header ui-corner-all";
			} else {
				this.range.removeClass( "ui-slider-range-min ui-slider-range-max" )
					// Handle range switching from true to min/max
					.css({
						"left": "",
						"bottom": ""
					});
			}

			this.range.addClass( classes +
				( ( options.range === "min" || options.range === "max" ) ? " ui-slider-range-" + options.range : "" ) );
		} else {
			if ( this.range ) {
				this.range.remove();
			}
			this.range = null;
		}
	},

	_setupEvents: function() {
		this._off( this.handles );
		this._on( this.handles, this._handleEvents );
		this._hoverable( this.handles );
		this._focusable( this.handles );
	},

	_destroy: function() {
		this.handles.remove();
		if ( this.range ) {
			this.range.remove();
		}

		this.element
			.removeClass( "ui-slider" +
				" ui-slider-horizontal" +
				" ui-slider-vertical" +
				" ui-widget" +
				" ui-widget-content" +
				" ui-corner-all" );

		this._mouseDestroy();
	},

	_mouseCapture: function( event ) {
		var position, normValue, distance, closestHandle, index, allowed, offset, mouseOverHandle,
			that = this,
			o = this.options;

		if ( o.disabled ) {
			return false;
		}

		this.elementSize = {
			width: this.element.outerWidth(),
			height: this.element.outerHeight()
		};
		this.elementOffset = this.element.offset();

		position = { x: event.pageX, y: event.pageY };
		normValue = this._normValueFromMouse( position );
		distance = this._valueMax() - this._valueMin() + 1;
		this.handles.each(function( i ) {
			var thisDistance = Math.abs( normValue - that.values(i) );
			if (( distance > thisDistance ) ||
				( distance === thisDistance &&
					(i === that._lastChangedValue || that.values(i) === o.min ))) {
				distance = thisDistance;
				closestHandle = $( this );
				index = i;
			}
		});

		allowed = this._start( event, index );
		if ( allowed === false ) {
			return false;
		}
		this._mouseSliding = true;

		this._handleIndex = index;

		closestHandle
			.addClass( "ui-state-active" )
			.focus();

		offset = closestHandle.offset();
		mouseOverHandle = !$( event.target ).parents().addBack().is( ".ui-slider-handle" );
		this._clickOffset = mouseOverHandle ? { left: 0, top: 0 } : {
			left: event.pageX - offset.left - ( closestHandle.width() / 2 ),
			top: event.pageY - offset.top -
				( closestHandle.height() / 2 ) -
				( parseInt( closestHandle.css("borderTopWidth"), 10 ) || 0 ) -
				( parseInt( closestHandle.css("borderBottomWidth"), 10 ) || 0) +
				( parseInt( closestHandle.css("marginTop"), 10 ) || 0)
		};

		if ( !this.handles.hasClass( "ui-state-hover" ) ) {
			this._slide( event, index, normValue );
		}
		this._animateOff = true;
		return true;
	},

	_mouseStart: function() {
		return true;
	},

	_mouseDrag: function( event ) {
		var position = { x: event.pageX, y: event.pageY },
			normValue = this._normValueFromMouse( position );

		this._slide( event, this._handleIndex, normValue );

		return false;
	},

	_mouseStop: function( event ) {
		this.handles.removeClass( "ui-state-active" );
		this._mouseSliding = false;

		this._stop( event, this._handleIndex );
		this._change( event, this._handleIndex );

		this._handleIndex = null;
		this._clickOffset = null;
		this._animateOff = false;

		return false;
	},

	_detectOrientation: function() {
		this.orientation = ( this.options.orientation === "vertical" ) ? "vertical" : "horizontal";
	},

	_normValueFromMouse: function( position ) {
		var pixelTotal,
			pixelMouse,
			percentMouse,
			valueTotal,
			valueMouse;

		if ( this.orientation === "horizontal" ) {
			pixelTotal = this.elementSize.width;
			pixelMouse = position.x - this.elementOffset.left - ( this._clickOffset ? this._clickOffset.left : 0 );
		} else {
			pixelTotal = this.elementSize.height;
			pixelMouse = position.y - this.elementOffset.top - ( this._clickOffset ? this._clickOffset.top : 0 );
		}

		percentMouse = ( pixelMouse / pixelTotal );
		if ( percentMouse > 1 ) {
			percentMouse = 1;
		}
		if ( percentMouse < 0 ) {
			percentMouse = 0;
		}
		if ( this.orientation === "vertical" ) {
			percentMouse = 1 - percentMouse;
		}

		valueTotal = this._valueMax() - this._valueMin();
		valueMouse = this._valueMin() + percentMouse * valueTotal;

		return this._trimAlignValue( valueMouse );
	},

	_start: function( event, index ) {
		var uiHash = {
			handle: this.handles[ index ],
			value: this.value()
		};
		if ( this.options.values && this.options.values.length ) {
			uiHash.value = this.values( index );
			uiHash.values = this.values();
		}
		return this._trigger( "start", event, uiHash );
	},

	_slide: function( event, index, newVal ) {
		var otherVal,
			newValues,
			allowed;

		if ( this.options.values && this.options.values.length ) {
			otherVal = this.values( index ? 0 : 1 );

			if ( ( this.options.values.length === 2 && this.options.range === true ) &&
					( ( index === 0 && newVal > otherVal) || ( index === 1 && newVal < otherVal ) )
				) {
				newVal = otherVal;
			}

			if ( newVal !== this.values( index ) ) {
				newValues = this.values();
				newValues[ index ] = newVal;
				// A slide can be canceled by returning false from the slide callback
				allowed = this._trigger( "slide", event, {
					handle: this.handles[ index ],
					value: newVal,
					values: newValues
				} );
				otherVal = this.values( index ? 0 : 1 );
				if ( allowed !== false ) {
					this.values( index, newVal );
				}
			}
		} else {
			if ( newVal !== this.value() ) {
				// A slide can be canceled by returning false from the slide callback
				allowed = this._trigger( "slide", event, {
					handle: this.handles[ index ],
					value: newVal
				} );
				if ( allowed !== false ) {
					this.value( newVal );
				}
			}
		}
	},

	_stop: function( event, index ) {
		var uiHash = {
			handle: this.handles[ index ],
			value: this.value()
		};
		if ( this.options.values && this.options.values.length ) {
			uiHash.value = this.values( index );
			uiHash.values = this.values();
		}

		this._trigger( "stop", event, uiHash );
	},

	_change: function( event, index ) {
		if ( !this._keySliding && !this._mouseSliding ) {
			var uiHash = {
				handle: this.handles[ index ],
				value: this.value()
			};
			if ( this.options.values && this.options.values.length ) {
				uiHash.value = this.values( index );
				uiHash.values = this.values();
			}

			//store the last changed value index for reference when handles overlap
			this._lastChangedValue = index;

			this._trigger( "change", event, uiHash );
		}
	},

	value: function( newValue ) {
		if ( arguments.length ) {
			this.options.value = this._trimAlignValue( newValue );
			this._refreshValue();
			this._change( null, 0 );
			return;
		}

		return this._value();
	},

	values: function( index, newValue ) {
		var vals,
			newValues,
			i;

		if ( arguments.length > 1 ) {
			this.options.values[ index ] = this._trimAlignValue( newValue );
			this._refreshValue();
			this._change( null, index );
			return;
		}

		if ( arguments.length ) {
			if ( $.isArray( arguments[ 0 ] ) ) {
				vals = this.options.values;
				newValues = arguments[ 0 ];
				for ( i = 0; i < vals.length; i += 1 ) {
					vals[ i ] = this._trimAlignValue( newValues[ i ] );
					this._change( null, i );
				}
				this._refreshValue();
			} else {
				if ( this.options.values && this.options.values.length ) {
					return this._values( index );
				} else {
					return this.value();
				}
			}
		} else {
			return this._values();
		}
	},

	_setOption: function( key, value ) {
		var i,
			valsLength = 0;

		if ( key === "range" && this.options.range === true ) {
			if ( value === "min" ) {
				this.options.value = this._values( 0 );
				this.options.values = null;
			} else if ( value === "max" ) {
				this.options.value = this._values( this.options.values.length - 1 );
				this.options.values = null;
			}
		}

		if ( $.isArray( this.options.values ) ) {
			valsLength = this.options.values.length;
		}

		if ( key === "disabled" ) {
			this.element.toggleClass( "ui-state-disabled", !!value );
		}

		this._super( key, value );

		switch ( key ) {
			case "orientation":
				this._detectOrientation();
				this.element
					.removeClass( "ui-slider-horizontal ui-slider-vertical" )
					.addClass( "ui-slider-" + this.orientation );
				this._refreshValue();

				// Reset positioning from previous orientation
				this.handles.css( value === "horizontal" ? "bottom" : "left", "" );
				break;
			case "value":
				this._animateOff = true;
				this._refreshValue();
				this._change( null, 0 );
				this._animateOff = false;
				break;
			case "values":
				this._animateOff = true;
				this._refreshValue();
				for ( i = 0; i < valsLength; i += 1 ) {
					this._change( null, i );
				}
				this._animateOff = false;
				break;
			case "step":
			case "min":
			case "max":
				this._animateOff = true;
				this._calculateNewMax();
				this._refreshValue();
				this._animateOff = false;
				break;
			case "range":
				this._animateOff = true;
				this._refresh();
				this._animateOff = false;
				break;
		}
	},

	//internal value getter
	// _value() returns value trimmed by min and max, aligned by step
	_value: function() {
		var val = this.options.value;
		val = this._trimAlignValue( val );

		return val;
	},

	//internal values getter
	// _values() returns array of values trimmed by min and max, aligned by step
	// _values( index ) returns single value trimmed by min and max, aligned by step
	_values: function( index ) {
		var val,
			vals,
			i;

		if ( arguments.length ) {
			val = this.options.values[ index ];
			val = this._trimAlignValue( val );

			return val;
		} else if ( this.options.values && this.options.values.length ) {
			// .slice() creates a copy of the array
			// this copy gets trimmed by min and max and then returned
			vals = this.options.values.slice();
			for ( i = 0; i < vals.length; i += 1) {
				vals[ i ] = this._trimAlignValue( vals[ i ] );
			}

			return vals;
		} else {
			return [];
		}
	},

	// returns the step-aligned value that val is closest to, between (inclusive) min and max
	_trimAlignValue: function( val ) {
		if ( val <= this._valueMin() ) {
			return this._valueMin();
		}
		if ( val >= this._valueMax() ) {
			return this._valueMax();
		}
		var step = ( this.options.step > 0 ) ? this.options.step : 1,
			valModStep = (val - this._valueMin()) % step,
			alignValue = val - valModStep;

		if ( Math.abs(valModStep) * 2 >= step ) {
			alignValue += ( valModStep > 0 ) ? step : ( -step );
		}

		// Since JavaScript has problems with large floats, round
		// the final value to 5 digits after the decimal point (see #4124)
		return parseFloat( alignValue.toFixed(5) );
	},

	_calculateNewMax: function() {
		var max = this.options.max,
			min = this._valueMin(),
			step = this.options.step,
			aboveMin = Math.floor( ( +( max - min ).toFixed( this._precision() ) ) / step ) * step;
		max = aboveMin + min;
		this.max = parseFloat( max.toFixed( this._precision() ) );
	},

	_precision: function() {
		var precision = this._precisionOf( this.options.step );
		if ( this.options.min !== null ) {
			precision = Math.max( precision, this._precisionOf( this.options.min ) );
		}
		return precision;
	},

	_precisionOf: function( num ) {
		var str = num.toString(),
			decimal = str.indexOf( "." );
		return decimal === -1 ? 0 : str.length - decimal - 1;
	},

	_valueMin: function() {
		return this.options.min;
	},

	_valueMax: function() {
		return this.max;
	},

	_refreshValue: function() {
		var lastValPercent, valPercent, value, valueMin, valueMax,
			oRange = this.options.range,
			o = this.options,
			that = this,
			animate = ( !this._animateOff ) ? o.animate : false,
			_set = {};

		if ( this.options.values && this.options.values.length ) {
			this.handles.each(function( i ) {
				valPercent = ( that.values(i) - that._valueMin() ) / ( that._valueMax() - that._valueMin() ) * 100;
				_set[ that.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
				$( this ).stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );
				if ( that.options.range === true ) {
					if ( that.orientation === "horizontal" ) {
						if ( i === 0 ) {
							that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { left: valPercent + "%" }, o.animate );
						}
						if ( i === 1 ) {
							that.range[ animate ? "animate" : "css" ]( { width: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );
						}
					} else {
						if ( i === 0 ) {
							that.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { bottom: ( valPercent ) + "%" }, o.animate );
						}
						if ( i === 1 ) {
							that.range[ animate ? "animate" : "css" ]( { height: ( valPercent - lastValPercent ) + "%" }, { queue: false, duration: o.animate } );
						}
					}
				}
				lastValPercent = valPercent;
			});
		} else {
			value = this.value();
			valueMin = this._valueMin();
			valueMax = this._valueMax();
			valPercent = ( valueMax !== valueMin ) ?
					( value - valueMin ) / ( valueMax - valueMin ) * 100 :
					0;
			_set[ this.orientation === "horizontal" ? "left" : "bottom" ] = valPercent + "%";
			this.handle.stop( 1, 1 )[ animate ? "animate" : "css" ]( _set, o.animate );

			if ( oRange === "min" && this.orientation === "horizontal" ) {
				this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { width: valPercent + "%" }, o.animate );
			}
			if ( oRange === "max" && this.orientation === "horizontal" ) {
				this.range[ animate ? "animate" : "css" ]( { width: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );
			}
			if ( oRange === "min" && this.orientation === "vertical" ) {
				this.range.stop( 1, 1 )[ animate ? "animate" : "css" ]( { height: valPercent + "%" }, o.animate );
			}
			if ( oRange === "max" && this.orientation === "vertical" ) {
				this.range[ animate ? "animate" : "css" ]( { height: ( 100 - valPercent ) + "%" }, { queue: false, duration: o.animate } );
			}
		}
	},

	_handleEvents: {
		keydown: function( event ) {
			var allowed, curVal, newVal, step,
				index = $( event.target ).data( "ui-slider-handle-index" );

			switch ( event.keyCode ) {
				case $.ui.keyCode.HOME:
				case $.ui.keyCode.END:
				case $.ui.keyCode.PAGE_UP:
				case $.ui.keyCode.PAGE_DOWN:
				case $.ui.keyCode.UP:
				case $.ui.keyCode.RIGHT:
				case $.ui.keyCode.DOWN:
				case $.ui.keyCode.LEFT:
					event.preventDefault();
					if ( !this._keySliding ) {
						this._keySliding = true;
						$( event.target ).addClass( "ui-state-active" );
						allowed = this._start( event, index );
						if ( allowed === false ) {
							return;
						}
					}
					break;
			}

			step = this.options.step;
			if ( this.options.values && this.options.values.length ) {
				curVal = newVal = this.values( index );
			} else {
				curVal = newVal = this.value();
			}

			switch ( event.keyCode ) {
				case $.ui.keyCode.HOME:
					newVal = this._valueMin();
					break;
				case $.ui.keyCode.END:
					newVal = this._valueMax();
					break;
				case $.ui.keyCode.PAGE_UP:
					newVal = this._trimAlignValue(
						curVal + ( ( this._valueMax() - this._valueMin() ) / this.numPages )
					);
					break;
				case $.ui.keyCode.PAGE_DOWN:
					newVal = this._trimAlignValue(
						curVal - ( (this._valueMax() - this._valueMin()) / this.numPages ) );
					break;
				case $.ui.keyCode.UP:
				case $.ui.keyCode.RIGHT:
					if ( curVal === this._valueMax() ) {
						return;
					}
					newVal = this._trimAlignValue( curVal + step );
					break;
				case $.ui.keyCode.DOWN:
				case $.ui.keyCode.LEFT:
					if ( curVal === this._valueMin() ) {
						return;
					}
					newVal = this._trimAlignValue( curVal - step );
					break;
			}

			this._slide( event, index, newVal );
		},
		keyup: function( event ) {
			var index = $( event.target ).data( "ui-slider-handle-index" );

			if ( this._keySliding ) {
				this._keySliding = false;
				this._stop( event, index );
				this._change( event, index );
				$( event.target ).removeClass( "ui-state-active" );
			}
		}
	}
});


/*!
 * jQuery UI Sortable 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/sortable/
 */


var sortable = $.widget("ui.sortable", $.ui.mouse, {
	version: "1.11.4",
	widgetEventPrefix: "sort",
	ready: false,
	options: {
		appendTo: "parent",
		axis: false,
		connectWith: false,
		containment: false,
		cursor: "auto",
		cursorAt: false,
		dropOnEmpty: true,
		forcePlaceholderSize: false,
		forceHelperSize: false,
		grid: false,
		handle: false,
		helper: "original",
		items: "> *",
		opacity: false,
		placeholder: false,
		revert: false,
		scroll: true,
		scrollSensitivity: 20,
		scrollSpeed: 20,
		scope: "default",
		tolerance: "intersect",
		zIndex: 1000,

		// callbacks
		activate: null,
		beforeStop: null,
		change: null,
		deactivate: null,
		out: null,
		over: null,
		receive: null,
		remove: null,
		sort: null,
		start: null,
		stop: null,
		update: null
	},

	_isOverAxis: function( x, reference, size ) {
		return ( x >= reference ) && ( x < ( reference + size ) );
	},

	_isFloating: function( item ) {
		return (/left|right/).test(item.css("float")) || (/inline|table-cell/).test(item.css("display"));
	},

	_create: function() {
		this.containerCache = {};
		this.element.addClass("ui-sortable");

		//Get the items
		this.refresh();

		//Let's determine the parent's offset
		this.offset = this.element.offset();

		//Initialize mouse events for interaction
		this._mouseInit();

		this._setHandleClassName();

		//We're ready to go
		this.ready = true;

	},

	_setOption: function( key, value ) {
		this._super( key, value );

		if ( key === "handle" ) {
			this._setHandleClassName();
		}
	},

	_setHandleClassName: function() {
		this.element.find( ".ui-sortable-handle" ).removeClass( "ui-sortable-handle" );
		$.each( this.items, function() {
			( this.instance.options.handle ?
				this.item.find( this.instance.options.handle ) : this.item )
				.addClass( "ui-sortable-handle" );
		});
	},

	_destroy: function() {
		this.element
			.removeClass( "ui-sortable ui-sortable-disabled" )
			.find( ".ui-sortable-handle" )
				.removeClass( "ui-sortable-handle" );
		this._mouseDestroy();

		for ( var i = this.items.length - 1; i >= 0; i-- ) {
			this.items[i].item.removeData(this.widgetName + "-item");
		}

		return this;
	},

	_mouseCapture: function(event, overrideHandle) {
		var currentItem = null,
			validHandle = false,
			that = this;

		if (this.reverting) {
			return false;
		}

		if(this.options.disabled || this.options.type === "static") {
			return false;
		}

		//We have to refresh the items data once first
		this._refreshItems(event);

		//Find out if the clicked node (or one of its parents) is a actual item in this.items
		$(event.target).parents().each(function() {
			if($.data(this, that.widgetName + "-item") === that) {
				currentItem = $(this);
				return false;
			}
		});
		if($.data(event.target, that.widgetName + "-item") === that) {
			currentItem = $(event.target);
		}

		if(!currentItem) {
			return false;
		}
		if(this.options.handle && !overrideHandle) {
			$(this.options.handle, currentItem).find("*").addBack().each(function() {
				if(this === event.target) {
					validHandle = true;
				}
			});
			if(!validHandle) {
				return false;
			}
		}

		this.currentItem = currentItem;
		this._removeCurrentsFromItems();
		return true;

	},

	_mouseStart: function(event, overrideHandle, noActivation) {

		var i, body,
			o = this.options;

		this.currentContainer = this;

		//We only need to call refreshPositions, because the refreshItems call has been moved to mouseCapture
		this.refreshPositions();

		//Create and append the visible helper
		this.helper = this._createHelper(event);

		//Cache the helper size
		this._cacheHelperProportions();

		/*
		 * - Position generation -
		 * This block generates everything position related - it's the core of draggables.
		 */

		//Cache the margins of the original element
		this._cacheMargins();

		//Get the next scrolling parent
		this.scrollParent = this.helper.scrollParent();

		//The element's absolute position on the page minus margins
		this.offset = this.currentItem.offset();
		this.offset = {
			top: this.offset.top - this.margins.top,
			left: this.offset.left - this.margins.left
		};

		$.extend(this.offset, {
			click: { //Where the click happened, relative to the element
				left: event.pageX - this.offset.left,
				top: event.pageY - this.offset.top
			},
			parent: this._getParentOffset(),
			relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper
		});

		// Only after we got the offset, we can change the helper's position to absolute
		// TODO: Still need to figure out a way to make relative sorting possible
		this.helper.css("position", "absolute");
		this.cssPosition = this.helper.css("position");

		//Generate the original position
		this.originalPosition = this._generatePosition(event);
		this.originalPageX = event.pageX;
		this.originalPageY = event.pageY;

		//Adjust the mouse offset relative to the helper if "cursorAt" is supplied
		(o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));

		//Cache the former DOM position
		this.domPosition = { prev: this.currentItem.prev()[0], parent: this.currentItem.parent()[0] };

		//If the helper is not the original, hide the original so it's not playing any role during the drag, won't cause anything bad this way
		if(this.helper[0] !== this.currentItem[0]) {
			this.currentItem.hide();
		}

		//Create the placeholder
		this._createPlaceholder();

		//Set a containment if given in the options
		if(o.containment) {
			this._setContainment();
		}

		if( o.cursor && o.cursor !== "auto" ) { // cursor option
			body = this.document.find( "body" );

			// support: IE
			this.storedCursor = body.css( "cursor" );
			body.css( "cursor", o.cursor );

			this.storedStylesheet = $( "<style>*{ cursor: "+o.cursor+" !important; }</style>" ).appendTo( body );
		}

		if(o.opacity) { // opacity option
			if (this.helper.css("opacity")) {
				this._storedOpacity = this.helper.css("opacity");
			}
			this.helper.css("opacity", o.opacity);
		}

		if(o.zIndex) { // zIndex option
			if (this.helper.css("zIndex")) {
				this._storedZIndex = this.helper.css("zIndex");
			}
			this.helper.css("zIndex", o.zIndex);
		}

		//Prepare scrolling
		if(this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== "HTML") {
			this.overflowOffset = this.scrollParent.offset();
		}

		//Call callbacks
		this._trigger("start", event, this._uiHash());

		//Recache the helper size
		if(!this._preserveHelperProportions) {
			this._cacheHelperProportions();
		}


		//Post "activate" events to possible containers
		if( !noActivation ) {
			for ( i = this.containers.length - 1; i >= 0; i-- ) {
				this.containers[ i ]._trigger( "activate", event, this._uiHash( this ) );
			}
		}

		//Prepare possible droppables
		if($.ui.ddmanager) {
			$.ui.ddmanager.current = this;
		}

		if ($.ui.ddmanager && !o.dropBehaviour) {
			$.ui.ddmanager.prepareOffsets(this, event);
		}

		this.dragging = true;

		this.helper.addClass("ui-sortable-helper");
		this._mouseDrag(event); //Execute the drag once - this causes the helper not to be visible before getting its correct position
		return true;

	},

	_mouseDrag: function(event) {
		var i, item, itemElement, intersection,
			o = this.options,
			scrolled = false;

		//Compute the helpers position
		this.position = this._generatePosition(event);
		this.positionAbs = this._convertPositionTo("absolute");

		if (!this.lastPositionAbs) {
			this.lastPositionAbs = this.positionAbs;
		}

		//Do scrolling
		if(this.options.scroll) {
			if(this.scrollParent[0] !== this.document[0] && this.scrollParent[0].tagName !== "HTML") {

				if((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {
					this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;
				} else if(event.pageY - this.overflowOffset.top < o.scrollSensitivity) {
					this.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;
				}

				if((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {
					this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;
				} else if(event.pageX - this.overflowOffset.left < o.scrollSensitivity) {
					this.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;
				}

			} else {

				if(event.pageY - this.document.scrollTop() < o.scrollSensitivity) {
					scrolled = this.document.scrollTop(this.document.scrollTop() - o.scrollSpeed);
				} else if(this.window.height() - (event.pageY - this.document.scrollTop()) < o.scrollSensitivity) {
					scrolled = this.document.scrollTop(this.document.scrollTop() + o.scrollSpeed);
				}

				if(event.pageX - this.document.scrollLeft() < o.scrollSensitivity) {
					scrolled = this.document.scrollLeft(this.document.scrollLeft() - o.scrollSpeed);
				} else if(this.window.width() - (event.pageX - this.document.scrollLeft()) < o.scrollSensitivity) {
					scrolled = this.document.scrollLeft(this.document.scrollLeft() + o.scrollSpeed);
				}

			}

			if(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {
				$.ui.ddmanager.prepareOffsets(this, event);
			}
		}

		//Regenerate the absolute position used for position checks
		this.positionAbs = this._convertPositionTo("absolute");

		//Set the helper position
		if(!this.options.axis || this.options.axis !== "y") {
			this.helper[0].style.left = this.position.left+"px";
		}
		if(!this.options.axis || this.options.axis !== "x") {
			this.helper[0].style.top = this.position.top+"px";
		}

		//Rearrange
		for (i = this.items.length - 1; i >= 0; i--) {

			//Cache variables and intersection, continue if no intersection
			item = this.items[i];
			itemElement = item.item[0];
			intersection = this._intersectsWithPointer(item);
			if (!intersection) {
				continue;
			}

			// Only put the placeholder inside the current Container, skip all
			// items from other containers. This works because when moving
			// an item from one container to another the
			// currentContainer is switched before the placeholder is moved.
			//
			// Without this, moving items in "sub-sortables" can cause
			// the placeholder to jitter between the outer and inner container.
			if (item.instance !== this.currentContainer) {
				continue;
			}

			// cannot intersect with itself
			// no useless actions that have been done before
			// no action if the item moved is the parent of the item checked
			if (itemElement !== this.currentItem[0] &&
				this.placeholder[intersection === 1 ? "next" : "prev"]()[0] !== itemElement &&
				!$.contains(this.placeholder[0], itemElement) &&
				(this.options.type === "semi-dynamic" ? !$.contains(this.element[0], itemElement) : true)
			) {

				this.direction = intersection === 1 ? "down" : "up";

				if (this.options.tolerance === "pointer" || this._intersectsWithSides(item)) {
					this._rearrange(event, item);
				} else {
					break;
				}

				this._trigger("change", event, this._uiHash());
				break;
			}
		}

		//Post events to containers
		this._contactContainers(event);

		//Interconnect with droppables
		if($.ui.ddmanager) {
			$.ui.ddmanager.drag(this, event);
		}

		//Call callbacks
		this._trigger("sort", event, this._uiHash());

		this.lastPositionAbs = this.positionAbs;
		return false;

	},

	_mouseStop: function(event, noPropagation) {

		if(!event) {
			return;
		}

		//If we are using droppables, inform the manager about the drop
		if ($.ui.ddmanager && !this.options.dropBehaviour) {
			$.ui.ddmanager.drop(this, event);
		}

		if(this.options.revert) {
			var that = this,
				cur = this.placeholder.offset(),
				axis = this.options.axis,
				animation = {};

			if ( !axis || axis === "x" ) {
				animation.left = cur.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft);
			}
			if ( !axis || axis === "y" ) {
				animation.top = cur.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop);
			}
			this.reverting = true;
			$(this.helper).animate( animation, parseInt(this.options.revert, 10) || 500, function() {
				that._clear(event);
			});
		} else {
			this._clear(event, noPropagation);
		}

		return false;

	},

	cancel: function() {

		if(this.dragging) {

			this._mouseUp({ target: null });

			if(this.options.helper === "original") {
				this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
			} else {
				this.currentItem.show();
			}

			//Post deactivating events to containers
			for (var i = this.containers.length - 1; i >= 0; i--){
				this.containers[i]._trigger("deactivate", null, this._uiHash(this));
				if(this.containers[i].containerCache.over) {
					this.containers[i]._trigger("out", null, this._uiHash(this));
					this.containers[i].containerCache.over = 0;
				}
			}

		}

		if (this.placeholder) {
			//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!
			if(this.placeholder[0].parentNode) {
				this.placeholder[0].parentNode.removeChild(this.placeholder[0]);
			}
			if(this.options.helper !== "original" && this.helper && this.helper[0].parentNode) {
				this.helper.remove();
			}

			$.extend(this, {
				helper: null,
				dragging: false,
				reverting: false,
				_noFinalSort: null
			});

			if(this.domPosition.prev) {
				$(this.domPosition.prev).after(this.currentItem);
			} else {
				$(this.domPosition.parent).prepend(this.currentItem);
			}
		}

		return this;

	},

	serialize: function(o) {

		var items = this._getItemsAsjQuery(o && o.connected),
			str = [];
		o = o || {};

		$(items).each(function() {
			var res = ($(o.item || this).attr(o.attribute || "id") || "").match(o.expression || (/(.+)[\-=_](.+)/));
			if (res) {
				str.push((o.key || res[1]+"[]")+"="+(o.key && o.expression ? res[1] : res[2]));
			}
		});

		if(!str.length && o.key) {
			str.push(o.key + "=");
		}

		return str.join("&");

	},

	toArray: function(o) {

		var items = this._getItemsAsjQuery(o && o.connected),
			ret = [];

		o = o || {};

		items.each(function() { ret.push($(o.item || this).attr(o.attribute || "id") || ""); });
		return ret;

	},

	/* Be careful with the following core functions */
	_intersectsWith: function(item) {

		var x1 = this.positionAbs.left,
			x2 = x1 + this.helperProportions.width,
			y1 = this.positionAbs.top,
			y2 = y1 + this.helperProportions.height,
			l = item.left,
			r = l + item.width,
			t = item.top,
			b = t + item.height,
			dyClick = this.offset.click.top,
			dxClick = this.offset.click.left,
			isOverElementHeight = ( this.options.axis === "x" ) || ( ( y1 + dyClick ) > t && ( y1 + dyClick ) < b ),
			isOverElementWidth = ( this.options.axis === "y" ) || ( ( x1 + dxClick ) > l && ( x1 + dxClick ) < r ),
			isOverElement = isOverElementHeight && isOverElementWidth;

		if ( this.options.tolerance === "pointer" ||
			this.options.forcePointerForContainers ||
			(this.options.tolerance !== "pointer" && this.helperProportions[this.floating ? "width" : "height"] > item[this.floating ? "width" : "height"])
		) {
			return isOverElement;
		} else {

			return (l < x1 + (this.helperProportions.width / 2) && // Right Half
				x2 - (this.helperProportions.width / 2) < r && // Left Half
				t < y1 + (this.helperProportions.height / 2) && // Bottom Half
				y2 - (this.helperProportions.height / 2) < b ); // Top Half

		}
	},

	_intersectsWithPointer: function(item) {

		var isOverElementHeight = (this.options.axis === "x") || this._isOverAxis(this.positionAbs.top + this.offset.click.top, item.top, item.height),
			isOverElementWidth = (this.options.axis === "y") || this._isOverAxis(this.positionAbs.left + this.offset.click.left, item.left, item.width),
			isOverElement = isOverElementHeight && isOverElementWidth,
			verticalDirection = this._getDragVerticalDirection(),
			horizontalDirection = this._getDragHorizontalDirection();

		if (!isOverElement) {
			return false;
		}

		return this.floating ?
			( ((horizontalDirection && horizontalDirection === "right") || verticalDirection === "down") ? 2 : 1 )
			: ( verticalDirection && (verticalDirection === "down" ? 2 : 1) );

	},

	_intersectsWithSides: function(item) {

		var isOverBottomHalf = this._isOverAxis(this.positionAbs.top + this.offset.click.top, item.top + (item.height/2), item.height),
			isOverRightHalf = this._isOverAxis(this.positionAbs.left + this.offset.click.left, item.left + (item.width/2), item.width),
			verticalDirection = this._getDragVerticalDirection(),
			horizontalDirection = this._getDragHorizontalDirection();

		if (this.floating && horizontalDirection) {
			return ((horizontalDirection === "right" && isOverRightHalf) || (horizontalDirection === "left" && !isOverRightHalf));
		} else {
			return verticalDirection && ((verticalDirection === "down" && isOverBottomHalf) || (verticalDirection === "up" && !isOverBottomHalf));
		}

	},

	_getDragVerticalDirection: function() {
		var delta = this.positionAbs.top - this.lastPositionAbs.top;
		return delta !== 0 && (delta > 0 ? "down" : "up");
	},

	_getDragHorizontalDirection: function() {
		var delta = this.positionAbs.left - this.lastPositionAbs.left;
		return delta !== 0 && (delta > 0 ? "right" : "left");
	},

	refresh: function(event) {
		this._refreshItems(event);
		this._setHandleClassName();
		this.refreshPositions();
		return this;
	},

	_connectWith: function() {
		var options = this.options;
		return options.connectWith.constructor === String ? [options.connectWith] : options.connectWith;
	},

	_getItemsAsjQuery: function(connected) {

		var i, j, cur, inst,
			items = [],
			queries = [],
			connectWith = this._connectWith();

		if(connectWith && connected) {
			for (i = connectWith.length - 1; i >= 0; i--){
				cur = $(connectWith[i], this.document[0]);
				for ( j = cur.length - 1; j >= 0; j--){
					inst = $.data(cur[j], this.widgetFullName);
					if(inst && inst !== this && !inst.options.disabled) {
						queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element) : $(inst.options.items, inst.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), inst]);
					}
				}
			}
		}

		queries.push([$.isFunction(this.options.items) ? this.options.items.call(this.element, null, { options: this.options, item: this.currentItem }) : $(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]);

		function addItems() {
			items.push( this );
		}
		for (i = queries.length - 1; i >= 0; i--){
			queries[i][0].each( addItems );
		}

		return $(items);

	},

	_removeCurrentsFromItems: function() {

		var list = this.currentItem.find(":data(" + this.widgetName + "-item)");

		this.items = $.grep(this.items, function (item) {
			for (var j=0; j < list.length; j++) {
				if(list[j] === item.item[0]) {
					return false;
				}
			}
			return true;
		});

	},

	_refreshItems: function(event) {

		this.items = [];
		this.containers = [this];

		var i, j, cur, inst, targetData, _queries, item, queriesLength,
			items = this.items,
			queries = [[$.isFunction(this.options.items) ? this.options.items.call(this.element[0], event, { item: this.currentItem }) : $(this.options.items, this.element), this]],
			connectWith = this._connectWith();

		if(connectWith && this.ready) { //Shouldn't be run the first time through due to massive slow-down
			for (i = connectWith.length - 1; i >= 0; i--){
				cur = $(connectWith[i], this.document[0]);
				for (j = cur.length - 1; j >= 0; j--){
					inst = $.data(cur[j], this.widgetFullName);
					if(inst && inst !== this && !inst.options.disabled) {
						queries.push([$.isFunction(inst.options.items) ? inst.options.items.call(inst.element[0], event, { item: this.currentItem }) : $(inst.options.items, inst.element), inst]);
						this.containers.push(inst);
					}
				}
			}
		}

		for (i = queries.length - 1; i >= 0; i--) {
			targetData = queries[i][1];
			_queries = queries[i][0];

			for (j=0, queriesLength = _queries.length; j < queriesLength; j++) {
				item = $(_queries[j]);

				item.data(this.widgetName + "-item", targetData); // Data for target checking (mouse manager)

				items.push({
					item: item,
					instance: targetData,
					width: 0, height: 0,
					left: 0, top: 0
				});
			}
		}

	},

	refreshPositions: function(fast) {

		// Determine whether items are being displayed horizontally
		this.floating = this.items.length ?
			this.options.axis === "x" || this._isFloating( this.items[ 0 ].item ) :
			false;

		//This has to be redone because due to the item being moved out/into the offsetParent, the offsetParent's position will change
		if(this.offsetParent && this.helper) {
			this.offset.parent = this._getParentOffset();
		}

		var i, item, t, p;

		for (i = this.items.length - 1; i >= 0; i--){
			item = this.items[i];

			//We ignore calculating positions of all connected containers when we're not over them
			if(item.instance !== this.currentContainer && this.currentContainer && item.item[0] !== this.currentItem[0]) {
				continue;
			}

			t = this.options.toleranceElement ? $(this.options.toleranceElement, item.item) : item.item;

			if (!fast) {
				item.width = t.outerWidth();
				item.height = t.outerHeight();
			}

			p = t.offset();
			item.left = p.left;
			item.top = p.top;
		}

		if(this.options.custom && this.options.custom.refreshContainers) {
			this.options.custom.refreshContainers.call(this);
		} else {
			for (i = this.containers.length - 1; i >= 0; i--){
				p = this.containers[i].element.offset();
				this.containers[i].containerCache.left = p.left;
				this.containers[i].containerCache.top = p.top;
				this.containers[i].containerCache.width = this.containers[i].element.outerWidth();
				this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
			}
		}

		return this;
	},

	_createPlaceholder: function(that) {
		that = that || this;
		var className,
			o = that.options;

		if(!o.placeholder || o.placeholder.constructor === String) {
			className = o.placeholder;
			o.placeholder = {
				element: function() {

					var nodeName = that.currentItem[0].nodeName.toLowerCase(),
						element = $( "<" + nodeName + ">", that.document[0] )
							.addClass(className || that.currentItem[0].className+" ui-sortable-placeholder")
							.removeClass("ui-sortable-helper");

					if ( nodeName === "tbody" ) {
						that._createTrPlaceholder(
							that.currentItem.find( "tr" ).eq( 0 ),
							$( "<tr>", that.document[ 0 ] ).appendTo( element )
						);
					} else if ( nodeName === "tr" ) {
						that._createTrPlaceholder( that.currentItem, element );
					} else if ( nodeName === "img" ) {
						element.attr( "src", that.currentItem.attr( "src" ) );
					}

					if ( !className ) {
						element.css( "visibility", "hidden" );
					}

					return element;
				},
				update: function(container, p) {

					// 1. If a className is set as 'placeholder option, we don't force sizes - the class is responsible for that
					// 2. The option 'forcePlaceholderSize can be enabled to force it even if a class name is specified
					if(className && !o.forcePlaceholderSize) {
						return;
					}

					//If the element doesn't have a actual height by itself (without styles coming from a stylesheet), it receives the inline height from the dragged item
					if(!p.height()) { p.height(that.currentItem.innerHeight() - parseInt(that.currentItem.css("paddingTop")||0, 10) - parseInt(that.currentItem.css("paddingBottom")||0, 10)); }
					if(!p.width()) { p.width(that.currentItem.innerWidth() - parseInt(that.currentItem.css("paddingLeft")||0, 10) - parseInt(that.currentItem.css("paddingRight")||0, 10)); }
				}
			};
		}

		//Create the placeholder
		that.placeholder = $(o.placeholder.element.call(that.element, that.currentItem));

		//Append it after the actual current item
		that.currentItem.after(that.placeholder);

		//Update the size of the placeholder (TODO: Logic to fuzzy, see line 316/317)
		o.placeholder.update(that, that.placeholder);

	},

	_createTrPlaceholder: function( sourceTr, targetTr ) {
		var that = this;

		sourceTr.children().each(function() {
			$( "<td>&#160;</td>", that.document[ 0 ] )
				.attr( "colspan", $( this ).attr( "colspan" ) || 1 )
				.appendTo( targetTr );
		});
	},

	_contactContainers: function(event) {
		var i, j, dist, itemWithLeastDistance, posProperty, sizeProperty, cur, nearBottom, floating, axis,
			innermostContainer = null,
			innermostIndex = null;

		// get innermost container that intersects with item
		for (i = this.containers.length - 1; i >= 0; i--) {

			// never consider a container that's located within the item itself
			if($.contains(this.currentItem[0], this.containers[i].element[0])) {
				continue;
			}

			if(this._intersectsWith(this.containers[i].containerCache)) {

				// if we've already found a container and it's more "inner" than this, then continue
				if(innermostContainer && $.contains(this.containers[i].element[0], innermostContainer.element[0])) {
					continue;
				}

				innermostContainer = this.containers[i];
				innermostIndex = i;

			} else {
				// container doesn't intersect. trigger "out" event if necessary
				if(this.containers[i].containerCache.over) {
					this.containers[i]._trigger("out", event, this._uiHash(this));
					this.containers[i].containerCache.over = 0;
				}
			}

		}

		// if no intersecting containers found, return
		if(!innermostContainer) {
			return;
		}

		// move the item into the container if it's not there already
		if(this.containers.length === 1) {
			if (!this.containers[innermostIndex].containerCache.over) {
				this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
				this.containers[innermostIndex].containerCache.over = 1;
			}
		} else {

			//When entering a new container, we will find the item with the least distance and append our item near it
			dist = 10000;
			itemWithLeastDistance = null;
			floating = innermostContainer.floating || this._isFloating(this.currentItem);
			posProperty = floating ? "left" : "top";
			sizeProperty = floating ? "width" : "height";
			axis = floating ? "clientX" : "clientY";

			for (j = this.items.length - 1; j >= 0; j--) {
				if(!$.contains(this.containers[innermostIndex].element[0], this.items[j].item[0])) {
					continue;
				}
				if(this.items[j].item[0] === this.currentItem[0]) {
					continue;
				}

				cur = this.items[j].item.offset()[posProperty];
				nearBottom = false;
				if ( event[ axis ] - cur > this.items[ j ][ sizeProperty ] / 2 ) {
					nearBottom = true;
				}

				if ( Math.abs( event[ axis ] - cur ) < dist ) {
					dist = Math.abs( event[ axis ] - cur );
					itemWithLeastDistance = this.items[ j ];
					this.direction = nearBottom ? "up": "down";
				}
			}

			//Check if dropOnEmpty is enabled
			if(!itemWithLeastDistance && !this.options.dropOnEmpty) {
				return;
			}

			if(this.currentContainer === this.containers[innermostIndex]) {
				if ( !this.currentContainer.containerCache.over ) {
					this.containers[ innermostIndex ]._trigger( "over", event, this._uiHash() );
					this.currentContainer.containerCache.over = 1;
				}
				return;
			}

			itemWithLeastDistance ? this._rearrange(event, itemWithLeastDistance, null, true) : this._rearrange(event, null, this.containers[innermostIndex].element, true);
			this._trigger("change", event, this._uiHash());
			this.containers[innermostIndex]._trigger("change", event, this._uiHash(this));
			this.currentContainer = this.containers[innermostIndex];

			//Update the placeholder
			this.options.placeholder.update(this.currentContainer, this.placeholder);

			this.containers[innermostIndex]._trigger("over", event, this._uiHash(this));
			this.containers[innermostIndex].containerCache.over = 1;
		}


	},

	_createHelper: function(event) {

		var o = this.options,
			helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event, this.currentItem])) : (o.helper === "clone" ? this.currentItem.clone() : this.currentItem);

		//Add the helper to the DOM if that didn't happen already
		if(!helper.parents("body").length) {
			$(o.appendTo !== "parent" ? o.appendTo : this.currentItem[0].parentNode)[0].appendChild(helper[0]);
		}

		if(helper[0] === this.currentItem[0]) {
			this._storedCSS = { width: this.currentItem[0].style.width, height: this.currentItem[0].style.height, position: this.currentItem.css("position"), top: this.currentItem.css("top"), left: this.currentItem.css("left") };
		}

		if(!helper[0].style.width || o.forceHelperSize) {
			helper.width(this.currentItem.width());
		}
		if(!helper[0].style.height || o.forceHelperSize) {
			helper.height(this.currentItem.height());
		}

		return helper;

	},

	_adjustOffsetFromHelper: function(obj) {
		if (typeof obj === "string") {
			obj = obj.split(" ");
		}
		if ($.isArray(obj)) {
			obj = {left: +obj[0], top: +obj[1] || 0};
		}
		if ("left" in obj) {
			this.offset.click.left = obj.left + this.margins.left;
		}
		if ("right" in obj) {
			this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;
		}
		if ("top" in obj) {
			this.offset.click.top = obj.top + this.margins.top;
		}
		if ("bottom" in obj) {
			this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;
		}
	},

	_getParentOffset: function() {


		//Get the offsetParent and cache its position
		this.offsetParent = this.helper.offsetParent();
		var po = this.offsetParent.offset();

		// This is a special case where we need to modify a offset calculated on start, since the following happened:
		// 1. The position of the helper is absolute, so it's position is calculated based on the next positioned parent
		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn't the document, which means that
		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag
		if(this.cssPosition === "absolute" && this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) {
			po.left += this.scrollParent.scrollLeft();
			po.top += this.scrollParent.scrollTop();
		}

		// This needs to be actually done for all browsers, since pageX/pageY includes this information
		// with an ugly IE fix
		if( this.offsetParent[0] === this.document[0].body || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && $.ui.ie)) {
			po = { top: 0, left: 0 };
		}

		return {
			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),
			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)
		};

	},

	_getRelativeOffset: function() {

		if(this.cssPosition === "relative") {
			var p = this.currentItem.position();
			return {
				top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),
				left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()
			};
		} else {
			return { top: 0, left: 0 };
		}

	},

	_cacheMargins: function() {
		this.margins = {
			left: (parseInt(this.currentItem.css("marginLeft"),10) || 0),
			top: (parseInt(this.currentItem.css("marginTop"),10) || 0)
		};
	},

	_cacheHelperProportions: function() {
		this.helperProportions = {
			width: this.helper.outerWidth(),
			height: this.helper.outerHeight()
		};
	},

	_setContainment: function() {

		var ce, co, over,
			o = this.options;
		if(o.containment === "parent") {
			o.containment = this.helper[0].parentNode;
		}
		if(o.containment === "document" || o.containment === "window") {
			this.containment = [
				0 - this.offset.relative.left - this.offset.parent.left,
				0 - this.offset.relative.top - this.offset.parent.top,
				o.containment === "document" ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left,
				(o.containment === "document" ? this.document.width() : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top
			];
		}

		if(!(/^(document|window|parent)$/).test(o.containment)) {
			ce = $(o.containment)[0];
			co = $(o.containment).offset();
			over = ($(ce).css("overflow") !== "hidden");

			this.containment = [
				co.left + (parseInt($(ce).css("borderLeftWidth"),10) || 0) + (parseInt($(ce).css("paddingLeft"),10) || 0) - this.margins.left,
				co.top + (parseInt($(ce).css("borderTopWidth"),10) || 0) + (parseInt($(ce).css("paddingTop"),10) || 0) - this.margins.top,
				co.left+(over ? Math.max(ce.scrollWidth,ce.offsetWidth) : ce.offsetWidth) - (parseInt($(ce).css("borderLeftWidth"),10) || 0) - (parseInt($(ce).css("paddingRight"),10) || 0) - this.helperProportions.width - this.margins.left,
				co.top+(over ? Math.max(ce.scrollHeight,ce.offsetHeight) : ce.offsetHeight) - (parseInt($(ce).css("borderTopWidth"),10) || 0) - (parseInt($(ce).css("paddingBottom"),10) || 0) - this.helperProportions.height - this.margins.top
			];
		}

	},

	_convertPositionTo: function(d, pos) {

		if(!pos) {
			pos = this.position;
		}
		var mod = d === "absolute" ? 1 : -1,
			scroll = this.cssPosition === "absolute" && !(this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
			scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

		return {
			top: (
				pos.top	+																// The absolute mouse position
				this.offset.relative.top * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.top * mod -											// The offsetParent's offset without borders (offset + border)
				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ) * mod)
			),
			left: (
				pos.left +																// The absolute mouse position
				this.offset.relative.left * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.left * mod	-										// The offsetParent's offset without borders (offset + border)
				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ) * mod)
			)
		};

	},

	_generatePosition: function(event) {

		var top, left,
			o = this.options,
			pageX = event.pageX,
			pageY = event.pageY,
			scroll = this.cssPosition === "absolute" && !(this.scrollParent[0] !== this.document[0] && $.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent, scrollIsRootNode = (/(html|body)/i).test(scroll[0].tagName);

		// This is another very weird special case that only happens for relative elements:
		// 1. If the css position is relative
		// 2. and the scroll parent is the document or similar to the offset parent
		// we have to refresh the relative offset during the scroll so there are no jumps
		if(this.cssPosition === "relative" && !(this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0])) {
			this.offset.relative = this._getRelativeOffset();
		}

		/*
		 * - Position constraining -
		 * Constrain the position to a mix of grid, containment.
		 */

		if(this.originalPosition) { //If we are not dragging yet, we won't check for options

			if(this.containment) {
				if(event.pageX - this.offset.click.left < this.containment[0]) {
					pageX = this.containment[0] + this.offset.click.left;
				}
				if(event.pageY - this.offset.click.top < this.containment[1]) {
					pageY = this.containment[1] + this.offset.click.top;
				}
				if(event.pageX - this.offset.click.left > this.containment[2]) {
					pageX = this.containment[2] + this.offset.click.left;
				}
				if(event.pageY - this.offset.click.top > this.containment[3]) {
					pageY = this.containment[3] + this.offset.click.top;
				}
			}

			if(o.grid) {
				top = this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1];
				pageY = this.containment ? ( (top - this.offset.click.top >= this.containment[1] && top - this.offset.click.top <= this.containment[3]) ? top : ((top - this.offset.click.top >= this.containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;

				left = this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0];
				pageX = this.containment ? ( (left - this.offset.click.left >= this.containment[0] && left - this.offset.click.left <= this.containment[2]) ? left : ((left - this.offset.click.left >= this.containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;
			}

		}

		return {
			top: (
				pageY -																// The absolute mouse position
				this.offset.click.top -													// Click offset (relative to the element)
				this.offset.relative.top	-											// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.top +												// The offsetParent's offset without borders (offset + border)
				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : ( scrollIsRootNode ? 0 : scroll.scrollTop() ) ))
			),
			left: (
				pageX -																// The absolute mouse position
				this.offset.click.left -												// Click offset (relative to the element)
				this.offset.relative.left	-											// Only for relative positioned nodes: Relative offset from element to offset parent
				this.offset.parent.left +												// The offsetParent's offset without borders (offset + border)
				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : scrollIsRootNode ? 0 : scroll.scrollLeft() ))
			)
		};

	},

	_rearrange: function(event, i, a, hardRefresh) {

		a ? a[0].appendChild(this.placeholder[0]) : i.item[0].parentNode.insertBefore(this.placeholder[0], (this.direction === "down" ? i.item[0] : i.item[0].nextSibling));

		//Various things done here to improve the performance:
		// 1. we create a setTimeout, that calls refreshPositions
		// 2. on the instance, we have a counter variable, that get's higher after every append
		// 3. on the local scope, we copy the counter variable, and check in the timeout, if it's still the same
		// 4. this lets only the last addition to the timeout stack through
		this.counter = this.counter ? ++this.counter : 1;
		var counter = this.counter;

		this._delay(function() {
			if(counter === this.counter) {
				this.refreshPositions(!hardRefresh); //Precompute after each DOM insertion, NOT on mousemove
			}
		});

	},

	_clear: function(event, noPropagation) {

		this.reverting = false;
		// We delay all events that have to be triggered to after the point where the placeholder has been removed and
		// everything else normalized again
		var i,
			delayedTriggers = [];

		// We first have to update the dom position of the actual currentItem
		// Note: don't do it if the current item is already removed (by a user), or it gets reappended (see #4088)
		if(!this._noFinalSort && this.currentItem.parent().length) {
			this.placeholder.before(this.currentItem);
		}
		this._noFinalSort = null;

		if(this.helper[0] === this.currentItem[0]) {
			for(i in this._storedCSS) {
				if(this._storedCSS[i] === "auto" || this._storedCSS[i] === "static") {
					this._storedCSS[i] = "";
				}
			}
			this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
		} else {
			this.currentItem.show();
		}

		if(this.fromOutside && !noPropagation) {
			delayedTriggers.push(function(event) { this._trigger("receive", event, this._uiHash(this.fromOutside)); });
		}
		if((this.fromOutside || this.domPosition.prev !== this.currentItem.prev().not(".ui-sortable-helper")[0] || this.domPosition.parent !== this.currentItem.parent()[0]) && !noPropagation) {
			delayedTriggers.push(function(event) { this._trigger("update", event, this._uiHash()); }); //Trigger update callback if the DOM position has changed
		}

		// Check if the items Container has Changed and trigger appropriate
		// events.
		if (this !== this.currentContainer) {
			if(!noPropagation) {
				delayedTriggers.push(function(event) { this._trigger("remove", event, this._uiHash()); });
				delayedTriggers.push((function(c) { return function(event) { c._trigger("receive", event, this._uiHash(this)); };  }).call(this, this.currentContainer));
				delayedTriggers.push((function(c) { return function(event) { c._trigger("update", event, this._uiHash(this));  }; }).call(this, this.currentContainer));
			}
		}


		//Post events to containers
		function delayEvent( type, instance, container ) {
			return function( event ) {
				container._trigger( type, event, instance._uiHash( instance ) );
			};
		}
		for (i = this.containers.length - 1; i >= 0; i--){
			if (!noPropagation) {
				delayedTriggers.push( delayEvent( "deactivate", this, this.containers[ i ] ) );
			}
			if(this.containers[i].containerCache.over) {
				delayedTriggers.push( delayEvent( "out", this, this.containers[ i ] ) );
				this.containers[i].containerCache.over = 0;
			}
		}

		//Do what was originally in plugins
		if ( this.storedCursor ) {
			this.document.find( "body" ).css( "cursor", this.storedCursor );
			this.storedStylesheet.remove();
		}
		if(this._storedOpacity) {
			this.helper.css("opacity", this._storedOpacity);
		}
		if(this._storedZIndex) {
			this.helper.css("zIndex", this._storedZIndex === "auto" ? "" : this._storedZIndex);
		}

		this.dragging = false;

		if(!noPropagation) {
			this._trigger("beforeStop", event, this._uiHash());
		}

		//$(this.placeholder[0]).remove(); would have been the jQuery way - unfortunately, it unbinds ALL events from the original node!
		this.placeholder[0].parentNode.removeChild(this.placeholder[0]);

		if ( !this.cancelHelperRemoval ) {
			if ( this.helper[ 0 ] !== this.currentItem[ 0 ] ) {
				this.helper.remove();
			}
			this.helper = null;
		}

		if(!noPropagation) {
			for (i=0; i < delayedTriggers.length; i++) {
				delayedTriggers[i].call(this, event);
			} //Trigger all delayed events
			this._trigger("stop", event, this._uiHash());
		}

		this.fromOutside = false;
		return !this.cancelHelperRemoval;

	},

	_trigger: function() {
		if ($.Widget.prototype._trigger.apply(this, arguments) === false) {
			this.cancel();
		}
	},

	_uiHash: function(_inst) {
		var inst = _inst || this;
		return {
			helper: inst.helper,
			placeholder: inst.placeholder || $([]),
			position: inst.position,
			originalPosition: inst.originalPosition,
			offset: inst.positionAbs,
			item: inst.currentItem,
			sender: _inst ? _inst.element : null
		};
	}

});


/*!
 * jQuery UI Spinner 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/spinner/
 */


function spinner_modifier( fn ) {
	return function() {
		var previous = this.element.val();
		fn.apply( this, arguments );
		this._refresh();
		if ( previous !== this.element.val() ) {
			this._trigger( "change" );
		}
	};
}

var spinner = $.widget( "ui.spinner", {
	version: "1.11.4",
	defaultElement: "<input>",
	widgetEventPrefix: "spin",
	options: {
		culture: null,
		icons: {
			down: "ui-icon-triangle-1-s",
			up: "ui-icon-triangle-1-n"
		},
		incremental: true,
		max: null,
		min: null,
		numberFormat: null,
		page: 10,
		step: 1,

		change: null,
		spin: null,
		start: null,
		stop: null
	},

	_create: function() {
		// handle string values that need to be parsed
		this._setOption( "max", this.options.max );
		this._setOption( "min", this.options.min );
		this._setOption( "step", this.options.step );

		// Only format if there is a value, prevents the field from being marked
		// as invalid in Firefox, see #9573.
		if ( this.value() !== "" ) {
			// Format the value, but don't constrain.
			this._value( this.element.val(), true );
		}

		this._draw();
		this._on( this._events );
		this._refresh();

		// turning off autocomplete prevents the browser from remembering the
		// value when navigating through history, so we re-enable autocomplete
		// if the page is unloaded before the widget is destroyed. #7790
		this._on( this.window, {
			beforeunload: function() {
				this.element.removeAttr( "autocomplete" );
			}
		});
	},

	_getCreateOptions: function() {
		var options = {},
			element = this.element;

		$.each( [ "min", "max", "step" ], function( i, option ) {
			var value = element.attr( option );
			if ( value !== undefined && value.length ) {
				options[ option ] = value;
			}
		});

		return options;
	},

	_events: {
		keydown: function( event ) {
			if ( this._start( event ) && this._keydown( event ) ) {
				event.preventDefault();
			}
		},
		keyup: "_stop",
		focus: function() {
			this.previous = this.element.val();
		},
		blur: function( event ) {
			if ( this.cancelBlur ) {
				delete this.cancelBlur;
				return;
			}

			this._stop();
			this._refresh();
			if ( this.previous !== this.element.val() ) {
				this._trigger( "change", event );
			}
		},
		mousewheel: function( event, delta ) {
			if ( !delta ) {
				return;
			}
			if ( !this.spinning && !this._start( event ) ) {
				return false;
			}

			this._spin( (delta > 0 ? 1 : -1) * this.options.step, event );
			clearTimeout( this.mousewheelTimer );
			this.mousewheelTimer = this._delay(function() {
				if ( this.spinning ) {
					this._stop( event );
				}
			}, 100 );
			event.preventDefault();
		},
		"mousedown .ui-spinner-button": function( event ) {
			var previous;

			// We never want the buttons to have focus; whenever the user is
			// interacting with the spinner, the focus should be on the input.
			// If the input is focused then this.previous is properly set from
			// when the input first received focus. If the input is not focused
			// then we need to set this.previous based on the value before spinning.
			previous = this.element[0] === this.document[0].activeElement ?
				this.previous : this.element.val();
			function checkFocus() {
				var isActive = this.element[0] === this.document[0].activeElement;
				if ( !isActive ) {
					this.element.focus();
					this.previous = previous;
					// support: IE
					// IE sets focus asynchronously, so we need to check if focus
					// moved off of the input because the user clicked on the button.
					this._delay(function() {
						this.previous = previous;
					});
				}
			}

			// ensure focus is on (or stays on) the text field
			event.preventDefault();
			checkFocus.call( this );

			// support: IE
			// IE doesn't prevent moving focus even with event.preventDefault()
			// so we set a flag to know when we should ignore the blur event
			// and check (again) if focus moved off of the input.
			this.cancelBlur = true;
			this._delay(function() {
				delete this.cancelBlur;
				checkFocus.call( this );
			});

			if ( this._start( event ) === false ) {
				return;
			}

			this._repeat( null, $( event.currentTarget ).hasClass( "ui-spinner-up" ) ? 1 : -1, event );
		},
		"mouseup .ui-spinner-button": "_stop",
		"mouseenter .ui-spinner-button": function( event ) {
			// button will add ui-state-active if mouse was down while mouseleave and kept down
			if ( !$( event.currentTarget ).hasClass( "ui-state-active" ) ) {
				return;
			}

			if ( this._start( event ) === false ) {
				return false;
			}
			this._repeat( null, $( event.currentTarget ).hasClass( "ui-spinner-up" ) ? 1 : -1, event );
		},
		// TODO: do we really want to consider this a stop?
		// shouldn't we just stop the repeater and wait until mouseup before
		// we trigger the stop event?
		"mouseleave .ui-spinner-button": "_stop"
	},

	_draw: function() {
		var uiSpinner = this.uiSpinner = this.element
			.addClass( "ui-spinner-input" )
			.attr( "autocomplete", "off" )
			.wrap( this._uiSpinnerHtml() )
			.parent()
				// add buttons
				.append( this._buttonHtml() );

		this.element.attr( "role", "spinbutton" );

		// button bindings
		this.buttons = uiSpinner.find( ".ui-spinner-button" )
			.attr( "tabIndex", -1 )
			.button()
			.removeClass( "ui-corner-all" );

		// IE 6 doesn't understand height: 50% for the buttons
		// unless the wrapper has an explicit height
		if ( this.buttons.height() > Math.ceil( uiSpinner.height() * 0.5 ) &&
				uiSpinner.height() > 0 ) {
			uiSpinner.height( uiSpinner.height() );
		}

		// disable spinner if element was already disabled
		if ( this.options.disabled ) {
			this.disable();
		}
	},

	_keydown: function( event ) {
		var options = this.options,
			keyCode = $.ui.keyCode;

		switch ( event.keyCode ) {
		case keyCode.UP:
			this._repeat( null, 1, event );
			return true;
		case keyCode.DOWN:
			this._repeat( null, -1, event );
			return true;
		case keyCode.PAGE_UP:
			this._repeat( null, options.page, event );
			return true;
		case keyCode.PAGE_DOWN:
			this._repeat( null, -options.page, event );
			return true;
		}

		return false;
	},

	_uiSpinnerHtml: function() {
		return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>";
	},

	_buttonHtml: function() {
		return "" +
			"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'>" +
				"<span class='ui-icon " + this.options.icons.up + "'>&#9650;</span>" +
			"</a>" +
			"<a class='ui-spinner-button ui-spinner-down ui-corner-br'>" +
				"<span class='ui-icon " + this.options.icons.down + "'>&#9660;</span>" +
			"</a>";
	},

	_start: function( event ) {
		if ( !this.spinning && this._trigger( "start", event ) === false ) {
			return false;
		}

		if ( !this.counter ) {
			this.counter = 1;
		}
		this.spinning = true;
		return true;
	},

	_repeat: function( i, steps, event ) {
		i = i || 500;

		clearTimeout( this.timer );
		this.timer = this._delay(function() {
			this._repeat( 40, steps, event );
		}, i );

		this._spin( steps * this.options.step, event );
	},

	_spin: function( step, event ) {
		var value = this.value() || 0;

		if ( !this.counter ) {
			this.counter = 1;
		}

		value = this._adjustValue( value + step * this._increment( this.counter ) );

		if ( !this.spinning || this._trigger( "spin", event, { value: value } ) !== false) {
			this._value( value );
			this.counter++;
		}
	},

	_increment: function( i ) {
		var incremental = this.options.incremental;

		if ( incremental ) {
			return $.isFunction( incremental ) ?
				incremental( i ) :
				Math.floor( i * i * i / 50000 - i * i / 500 + 17 * i / 200 + 1 );
		}

		return 1;
	},

	_precision: function() {
		var precision = this._precisionOf( this.options.step );
		if ( this.options.min !== null ) {
			precision = Math.max( precision, this._precisionOf( this.options.min ) );
		}
		return precision;
	},

	_precisionOf: function( num ) {
		var str = num.toString(),
			decimal = str.indexOf( "." );
		return decimal === -1 ? 0 : str.length - decimal - 1;
	},

	_adjustValue: function( value ) {
		var base, aboveMin,
			options = this.options;

		// make sure we're at a valid step
		// - find out where we are relative to the base (min or 0)
		base = options.min !== null ? options.min : 0;
		aboveMin = value - base;
		// - round to the nearest step
		aboveMin = Math.round(aboveMin / options.step) * options.step;
		// - rounding is based on 0, so adjust back to our base
		value = base + aboveMin;

		// fix precision from bad JS floating point math
		value = parseFloat( value.toFixed( this._precision() ) );

		// clamp the value
		if ( options.max !== null && value > options.max) {
			return options.max;
		}
		if ( options.min !== null && value < options.min ) {
			return options.min;
		}

		return value;
	},

	_stop: function( event ) {
		if ( !this.spinning ) {
			return;
		}

		clearTimeout( this.timer );
		clearTimeout( this.mousewheelTimer );
		this.counter = 0;
		this.spinning = false;
		this._trigger( "stop", event );
	},

	_setOption: function( key, value ) {
		if ( key === "culture" || key === "numberFormat" ) {
			var prevValue = this._parse( this.element.val() );
			this.options[ key ] = value;
			this.element.val( this._format( prevValue ) );
			return;
		}

		if ( key === "max" || key === "min" || key === "step" ) {
			if ( typeof value === "string" ) {
				value = this._parse( value );
			}
		}
		if ( key === "icons" ) {
			this.buttons.first().find( ".ui-icon" )
				.removeClass( this.options.icons.up )
				.addClass( value.up );
			this.buttons.last().find( ".ui-icon" )
				.removeClass( this.options.icons.down )
				.addClass( value.down );
		}

		this._super( key, value );

		if ( key === "disabled" ) {
			this.widget().toggleClass( "ui-state-disabled", !!value );
			this.element.prop( "disabled", !!value );
			this.buttons.button( value ? "disable" : "enable" );
		}
	},

	_setOptions: spinner_modifier(function( options ) {
		this._super( options );
	}),

	_parse: function( val ) {
		if ( typeof val === "string" && val !== "" ) {
			val = window.Globalize && this.options.numberFormat ?
				Globalize.parseFloat( val, 10, this.options.culture ) : +val;
		}
		return val === "" || isNaN( val ) ? null : val;
	},

	_format: function( value ) {
		if ( value === "" ) {
			return "";
		}
		return window.Globalize && this.options.numberFormat ?
			Globalize.format( value, this.options.numberFormat, this.options.culture ) :
			value;
	},

	_refresh: function() {
		this.element.attr({
			"aria-valuemin": this.options.min,
			"aria-valuemax": this.options.max,
			// TODO: what should we do with values that can't be parsed?
			"aria-valuenow": this._parse( this.element.val() )
		});
	},

	isValid: function() {
		var value = this.value();

		// null is invalid
		if ( value === null ) {
			return false;
		}

		// if value gets adjusted, it's invalid
		return value === this._adjustValue( value );
	},

	// update the value without triggering change
	_value: function( value, allowAny ) {
		var parsed;
		if ( value !== "" ) {
			parsed = this._parse( value );
			if ( parsed !== null ) {
				if ( !allowAny ) {
					parsed = this._adjustValue( parsed );
				}
				value = this._format( parsed );
			}
		}
		this.element.val( value );
		this._refresh();
	},

	_destroy: function() {
		this.element
			.removeClass( "ui-spinner-input" )
			.prop( "disabled", false )
			.removeAttr( "autocomplete" )
			.removeAttr( "role" )
			.removeAttr( "aria-valuemin" )
			.removeAttr( "aria-valuemax" )
			.removeAttr( "aria-valuenow" );
		this.uiSpinner.replaceWith( this.element );
	},

	stepUp: spinner_modifier(function( steps ) {
		this._stepUp( steps );
	}),
	_stepUp: function( steps ) {
		if ( this._start() ) {
			this._spin( (steps || 1) * this.options.step );
			this._stop();
		}
	},

	stepDown: spinner_modifier(function( steps ) {
		this._stepDown( steps );
	}),
	_stepDown: function( steps ) {
		if ( this._start() ) {
			this._spin( (steps || 1) * -this.options.step );
			this._stop();
		}
	},

	pageUp: spinner_modifier(function( pages ) {
		this._stepUp( (pages || 1) * this.options.page );
	}),

	pageDown: spinner_modifier(function( pages ) {
		this._stepDown( (pages || 1) * this.options.page );
	}),

	value: function( newVal ) {
		if ( !arguments.length ) {
			return this._parse( this.element.val() );
		}
		spinner_modifier( this._value ).call( this, newVal );
	},

	widget: function() {
		return this.uiSpinner;
	}
});


/*!
 * jQuery UI Tabs 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/tabs/
 */


var tabs = $.widget( "ui.tabs", {
	version: "1.11.4",
	delay: 300,
	options: {
		active: null,
		collapsible: false,
		event: "click",
		heightStyle: "content",
		hide: null,
		show: null,

		// callbacks
		activate: null,
		beforeActivate: null,
		beforeLoad: null,
		load: null
	},

	_isLocal: (function() {
		var rhash = /#.*$/;

		return function( anchor ) {
			var anchorUrl, locationUrl;

			// support: IE7
			// IE7 doesn't normalize the href property when set via script (#9317)
			anchor = anchor.cloneNode( false );

			anchorUrl = anchor.href.replace( rhash, "" );
			locationUrl = location.href.replace( rhash, "" );

			// decoding may throw an error if the URL isn't UTF-8 (#9518)
			try {
				anchorUrl = decodeURIComponent( anchorUrl );
			} catch ( error ) {}
			try {
				locationUrl = decodeURIComponent( locationUrl );
			} catch ( error ) {}

			return anchor.hash.length > 1 && anchorUrl === locationUrl;
		};
	})(),

	_create: function() {
		var that = this,
			options = this.options;

		this.running = false;

		this.element
			.addClass( "ui-tabs ui-widget ui-widget-content ui-corner-all" )
			.toggleClass( "ui-tabs-collapsible", options.collapsible );

		this._processTabs();
		options.active = this._initialActive();

		// Take disabling tabs via class attribute from HTML
		// into account and update option properly.
		if ( $.isArray( options.disabled ) ) {
			options.disabled = $.unique( options.disabled.concat(
				$.map( this.tabs.filter( ".ui-state-disabled" ), function( li ) {
					return that.tabs.index( li );
				})
			) ).sort();
		}

		// check for length avoids error when initializing empty list
		if ( this.options.active !== false && this.anchors.length ) {
			this.active = this._findActive( options.active );
		} else {
			this.active = $();
		}

		this._refresh();

		if ( this.active.length ) {
			this.load( options.active );
		}
	},

	_initialActive: function() {
		var active = this.options.active,
			collapsible = this.options.collapsible,
			locationHash = location.hash.substring( 1 );

		if ( active === null ) {
			// check the fragment identifier in the URL
			if ( locationHash ) {
				this.tabs.each(function( i, tab ) {
					if ( $( tab ).attr( "aria-controls" ) === locationHash ) {
						active = i;
						return false;
					}
				});
			}

			// check for a tab marked active via a class
			if ( active === null ) {
				active = this.tabs.index( this.tabs.filter( ".ui-tabs-active" ) );
			}

			// no active tab, set to false
			if ( active === null || active === -1 ) {
				active = this.tabs.length ? 0 : false;
			}
		}

		// handle numbers: negative, out of range
		if ( active !== false ) {
			active = this.tabs.index( this.tabs.eq( active ) );
			if ( active === -1 ) {
				active = collapsible ? false : 0;
			}
		}

		// don't allow collapsible: false and active: false
		if ( !collapsible && active === false && this.anchors.length ) {
			active = 0;
		}

		return active;
	},

	_getCreateEventData: function() {
		return {
			tab: this.active,
			panel: !this.active.length ? $() : this._getPanelForTab( this.active )
		};
	},

	_tabKeydown: function( event ) {
		var focusedTab = $( this.document[0].activeElement ).closest( "li" ),
			selectedIndex = this.tabs.index( focusedTab ),
			goingForward = true;

		if ( this._handlePageNav( event ) ) {
			return;
		}

		switch ( event.keyCode ) {
			case $.ui.keyCode.RIGHT:
			case $.ui.keyCode.DOWN:
				selectedIndex++;
				break;
			case $.ui.keyCode.UP:
			case $.ui.keyCode.LEFT:
				goingForward = false;
				selectedIndex--;
				break;
			case $.ui.keyCode.END:
				selectedIndex = this.anchors.length - 1;
				break;
			case $.ui.keyCode.HOME:
				selectedIndex = 0;
				break;
			case $.ui.keyCode.SPACE:
				// Activate only, no collapsing
				event.preventDefault();
				clearTimeout( this.activating );
				this._activate( selectedIndex );
				return;
			case $.ui.keyCode.ENTER:
				// Toggle (cancel delayed activation, allow collapsing)
				event.preventDefault();
				clearTimeout( this.activating );
				// Determine if we should collapse or activate
				this._activate( selectedIndex === this.options.active ? false : selectedIndex );
				return;
			default:
				return;
		}

		// Focus the appropriate tab, based on which key was pressed
		event.preventDefault();
		clearTimeout( this.activating );
		selectedIndex = this._focusNextTab( selectedIndex, goingForward );

		// Navigating with control/command key will prevent automatic activation
		if ( !event.ctrlKey && !event.metaKey ) {

			// Update aria-selected immediately so that AT think the tab is already selected.
			// Otherwise AT may confuse the user by stating that they need to activate the tab,
			// but the tab will already be activated by the time the announcement finishes.
			focusedTab.attr( "aria-selected", "false" );
			this.tabs.eq( selectedIndex ).attr( "aria-selected", "true" );

			this.activating = this._delay(function() {
				this.option( "active", selectedIndex );
			}, this.delay );
		}
	},

	_panelKeydown: function( event ) {
		if ( this._handlePageNav( event ) ) {
			return;
		}

		// Ctrl+up moves focus to the current tab
		if ( event.ctrlKey && event.keyCode === $.ui.keyCode.UP ) {
			event.preventDefault();
			this.active.focus();
		}
	},

	// Alt+page up/down moves focus to the previous/next tab (and activates)
	_handlePageNav: function( event ) {
		if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP ) {
			this._activate( this._focusNextTab( this.options.active - 1, false ) );
			return true;
		}
		if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN ) {
			this._activate( this._focusNextTab( this.options.active + 1, true ) );
			return true;
		}
	},

	_findNextTab: function( index, goingForward ) {
		var lastTabIndex = this.tabs.length - 1;

		function constrain() {
			if ( index > lastTabIndex ) {
				index = 0;
			}
			if ( index < 0 ) {
				index = lastTabIndex;
			}
			return index;
		}

		while ( $.inArray( constrain(), this.options.disabled ) !== -1 ) {
			index = goingForward ? index + 1 : index - 1;
		}

		return index;
	},

	_focusNextTab: function( index, goingForward ) {
		index = this._findNextTab( index, goingForward );
		this.tabs.eq( index ).focus();
		return index;
	},

	_setOption: function( key, value ) {
		if ( key === "active" ) {
			// _activate() will handle invalid values and update this.options
			this._activate( value );
			return;
		}

		if ( key === "disabled" ) {
			// don't use the widget factory's disabled handling
			this._setupDisabled( value );
			return;
		}

		this._super( key, value);

		if ( key === "collapsible" ) {
			this.element.toggleClass( "ui-tabs-collapsible", value );
			// Setting collapsible: false while collapsed; open first panel
			if ( !value && this.options.active === false ) {
				this._activate( 0 );
			}
		}

		if ( key === "event" ) {
			this._setupEvents( value );
		}

		if ( key === "heightStyle" ) {
			this._setupHeightStyle( value );
		}
	},

	_sanitizeSelector: function( hash ) {
		return hash ? hash.replace( /[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&" ) : "";
	},

	refresh: function() {
		var options = this.options,
			lis = this.tablist.children( ":has(a[href])" );

		// get disabled tabs from class attribute from HTML
		// this will get converted to a boolean if needed in _refresh()
		options.disabled = $.map( lis.filter( ".ui-state-disabled" ), function( tab ) {
			return lis.index( tab );
		});

		this._processTabs();

		// was collapsed or no tabs
		if ( options.active === false || !this.anchors.length ) {
			options.active = false;
			this.active = $();
		// was active, but active tab is gone
		} else if ( this.active.length && !$.contains( this.tablist[ 0 ], this.active[ 0 ] ) ) {
			// all remaining tabs are disabled
			if ( this.tabs.length === options.disabled.length ) {
				options.active = false;
				this.active = $();
			// activate previous tab
			} else {
				this._activate( this._findNextTab( Math.max( 0, options.active - 1 ), false ) );
			}
		// was active, active tab still exists
		} else {
			// make sure active index is correct
			options.active = this.tabs.index( this.active );
		}

		this._refresh();
	},

	_refresh: function() {
		this._setupDisabled( this.options.disabled );
		this._setupEvents( this.options.event );
		this._setupHeightStyle( this.options.heightStyle );

		this.tabs.not( this.active ).attr({
			"aria-selected": "false",
			"aria-expanded": "false",
			tabIndex: -1
		});
		this.panels.not( this._getPanelForTab( this.active ) )
			.hide()
			.attr({
				"aria-hidden": "true"
			});

		// Make sure one tab is in the tab order
		if ( !this.active.length ) {
			this.tabs.eq( 0 ).attr( "tabIndex", 0 );
		} else {
			this.active
				.addClass( "ui-tabs-active ui-state-active" )
				.attr({
					"aria-selected": "true",
					"aria-expanded": "true",
					tabIndex: 0
				});
			this._getPanelForTab( this.active )
				.show()
				.attr({
					"aria-hidden": "false"
				});
		}
	},

	_processTabs: function() {
		var that = this,
			prevTabs = this.tabs,
			prevAnchors = this.anchors,
			prevPanels = this.panels;

		this.tablist = this._getList()
			.addClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )
			.attr( "role", "tablist" )

			// Prevent users from focusing disabled tabs via click
			.delegate( "> li", "mousedown" + this.eventNamespace, function( event ) {
				if ( $( this ).is( ".ui-state-disabled" ) ) {
					event.preventDefault();
				}
			})

			// support: IE <9
			// Preventing the default action in mousedown doesn't prevent IE
			// from focusing the element, so if the anchor gets focused, blur.
			// We don't have to worry about focusing the previously focused
			// element since clicking on a non-focusable element should focus
			// the body anyway.
			.delegate( ".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
				if ( $( this ).closest( "li" ).is( ".ui-state-disabled" ) ) {
					this.blur();
				}
			});

		this.tabs = this.tablist.find( "> li:has(a[href])" )
			.addClass( "ui-state-default ui-corner-top" )
			.attr({
				role: "tab",
				tabIndex: -1
			});

		this.anchors = this.tabs.map(function() {
				return $( "a", this )[ 0 ];
			})
			.addClass( "ui-tabs-anchor" )
			.attr({
				role: "presentation",
				tabIndex: -1
			});

		this.panels = $();

		this.anchors.each(function( i, anchor ) {
			var selector, panel, panelId,
				anchorId = $( anchor ).uniqueId().attr( "id" ),
				tab = $( anchor ).closest( "li" ),
				originalAriaControls = tab.attr( "aria-controls" );

			// inline tab
			if ( that._isLocal( anchor ) ) {
				selector = anchor.hash;
				panelId = selector.substring( 1 );
				panel = that.element.find( that._sanitizeSelector( selector ) );
			// remote tab
			} else {
				// If the tab doesn't already have aria-controls,
				// generate an id by using a throw-away element
				panelId = tab.attr( "aria-controls" ) || $( {} ).uniqueId()[ 0 ].id;
				selector = "#" + panelId;
				panel = that.element.find( selector );
				if ( !panel.length ) {
					panel = that._createPanel( panelId );
					panel.insertAfter( that.panels[ i - 1 ] || that.tablist );
				}
				panel.attr( "aria-live", "polite" );
			}

			if ( panel.length) {
				that.panels = that.panels.add( panel );
			}
			if ( originalAriaControls ) {
				tab.data( "ui-tabs-aria-controls", originalAriaControls );
			}
			tab.attr({
				"aria-controls": panelId,
				"aria-labelledby": anchorId
			});
			panel.attr( "aria-labelledby", anchorId );
		});

		this.panels
			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )
			.attr( "role", "tabpanel" );

		// Avoid memory leaks (#10056)
		if ( prevTabs ) {
			this._off( prevTabs.not( this.tabs ) );
			this._off( prevAnchors.not( this.anchors ) );
			this._off( prevPanels.not( this.panels ) );
		}
	},

	// allow overriding how to find the list for rare usage scenarios (#7715)
	_getList: function() {
		return this.tablist || this.element.find( "ol,ul" ).eq( 0 );
	},

	_createPanel: function( id ) {
		return $( "<div>" )
			.attr( "id", id )
			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )
			.data( "ui-tabs-destroy", true );
	},

	_setupDisabled: function( disabled ) {
		if ( $.isArray( disabled ) ) {
			if ( !disabled.length ) {
				disabled = false;
			} else if ( disabled.length === this.anchors.length ) {
				disabled = true;
			}
		}

		// disable tabs
		for ( var i = 0, li; ( li = this.tabs[ i ] ); i++ ) {
			if ( disabled === true || $.inArray( i, disabled ) !== -1 ) {
				$( li )
					.addClass( "ui-state-disabled" )
					.attr( "aria-disabled", "true" );
			} else {
				$( li )
					.removeClass( "ui-state-disabled" )
					.removeAttr( "aria-disabled" );
			}
		}

		this.options.disabled = disabled;
	},

	_setupEvents: function( event ) {
		var events = {};
		if ( event ) {
			$.each( event.split(" "), function( index, eventName ) {
				events[ eventName ] = "_eventHandler";
			});
		}

		this._off( this.anchors.add( this.tabs ).add( this.panels ) );
		// Always prevent the default action, even when disabled
		this._on( true, this.anchors, {
			click: function( event ) {
				event.preventDefault();
			}
		});
		this._on( this.anchors, events );
		this._on( this.tabs, { keydown: "_tabKeydown" } );
		this._on( this.panels, { keydown: "_panelKeydown" } );

		this._focusable( this.tabs );
		this._hoverable( this.tabs );
	},

	_setupHeightStyle: function( heightStyle ) {
		var maxHeight,
			parent = this.element.parent();

		if ( heightStyle === "fill" ) {
			maxHeight = parent.height();
			maxHeight -= this.element.outerHeight() - this.element.height();

			this.element.siblings( ":visible" ).each(function() {
				var elem = $( this ),
					position = elem.css( "position" );

				if ( position === "absolute" || position === "fixed" ) {
					return;
				}
				maxHeight -= elem.outerHeight( true );
			});

			this.element.children().not( this.panels ).each(function() {
				maxHeight -= $( this ).outerHeight( true );
			});

			this.panels.each(function() {
				$( this ).height( Math.max( 0, maxHeight -
					$( this ).innerHeight() + $( this ).height() ) );
			})
			.css( "overflow", "auto" );
		} else if ( heightStyle === "auto" ) {
			maxHeight = 0;
			this.panels.each(function() {
				maxHeight = Math.max( maxHeight, $( this ).height( "" ).height() );
			}).height( maxHeight );
		}
	},

	_eventHandler: function( event ) {
		var options = this.options,
			active = this.active,
			anchor = $( event.currentTarget ),
			tab = anchor.closest( "li" ),
			clickedIsActive = tab[ 0 ] === active[ 0 ],
			collapsing = clickedIsActive && options.collapsible,
			toShow = collapsing ? $() : this._getPanelForTab( tab ),
			toHide = !active.length ? $() : this._getPanelForTab( active ),
			eventData = {
				oldTab: active,
				oldPanel: toHide,
				newTab: collapsing ? $() : tab,
				newPanel: toShow
			};

		event.preventDefault();

		if ( tab.hasClass( "ui-state-disabled" ) ||
				// tab is already loading
				tab.hasClass( "ui-tabs-loading" ) ||
				// can't switch durning an animation
				this.running ||
				// click on active header, but not collapsible
				( clickedIsActive && !options.collapsible ) ||
				// allow canceling activation
				( this._trigger( "beforeActivate", event, eventData ) === false ) ) {
			return;
		}

		options.active = collapsing ? false : this.tabs.index( tab );

		this.active = clickedIsActive ? $() : tab;
		if ( this.xhr ) {
			this.xhr.abort();
		}

		if ( !toHide.length && !toShow.length ) {
			$.error( "jQuery UI Tabs: Mismatching fragment identifier." );
		}

		if ( toShow.length ) {
			this.load( this.tabs.index( tab ), event );
		}
		this._toggle( event, eventData );
	},

	// handles show/hide for selecting tabs
	_toggle: function( event, eventData ) {
		var that = this,
			toShow = eventData.newPanel,
			toHide = eventData.oldPanel;

		this.running = true;

		function complete() {
			that.running = false;
			that._trigger( "activate", event, eventData );
		}

		function show() {
			eventData.newTab.closest( "li" ).addClass( "ui-tabs-active ui-state-active" );

			if ( toShow.length && that.options.show ) {
				that._show( toShow, that.options.show, complete );
			} else {
				toShow.show();
				complete();
			}
		}

		// start out by hiding, then showing, then completing
		if ( toHide.length && this.options.hide ) {
			this._hide( toHide, this.options.hide, function() {
				eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
				show();
			});
		} else {
			eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );
			toHide.hide();
			show();
		}

		toHide.attr( "aria-hidden", "true" );
		eventData.oldTab.attr({
			"aria-selected": "false",
			"aria-expanded": "false"
		});
		// If we're switching tabs, remove the old tab from the tab order.
		// If we're opening from collapsed state, remove the previous tab from the tab order.
		// If we're collapsing, then keep the collapsing tab in the tab order.
		if ( toShow.length && toHide.length ) {
			eventData.oldTab.attr( "tabIndex", -1 );
		} else if ( toShow.length ) {
			this.tabs.filter(function() {
				return $( this ).attr( "tabIndex" ) === 0;
			})
			.attr( "tabIndex", -1 );
		}

		toShow.attr( "aria-hidden", "false" );
		eventData.newTab.attr({
			"aria-selected": "true",
			"aria-expanded": "true",
			tabIndex: 0
		});
	},

	_activate: function( index ) {
		var anchor,
			active = this._findActive( index );

		// trying to activate the already active panel
		if ( active[ 0 ] === this.active[ 0 ] ) {
			return;
		}

		// trying to collapse, simulate a click on the current active header
		if ( !active.length ) {
			active = this.active;
		}

		anchor = active.find( ".ui-tabs-anchor" )[ 0 ];
		this._eventHandler({
			target: anchor,
			currentTarget: anchor,
			preventDefault: $.noop
		});
	},

	_findActive: function( index ) {
		return index === false ? $() : this.tabs.eq( index );
	},

	_getIndex: function( index ) {
		// meta-function to give users option to provide a href string instead of a numerical index.
		if ( typeof index === "string" ) {
			index = this.anchors.index( this.anchors.filter( "[href$='" + index + "']" ) );
		}

		return index;
	},

	_destroy: function() {
		if ( this.xhr ) {
			this.xhr.abort();
		}

		this.element.removeClass( "ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible" );

		this.tablist
			.removeClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )
			.removeAttr( "role" );

		this.anchors
			.removeClass( "ui-tabs-anchor" )
			.removeAttr( "role" )
			.removeAttr( "tabIndex" )
			.removeUniqueId();

		this.tablist.unbind( this.eventNamespace );

		this.tabs.add( this.panels ).each(function() {
			if ( $.data( this, "ui-tabs-destroy" ) ) {
				$( this ).remove();
			} else {
				$( this )
					.removeClass( "ui-state-default ui-state-active ui-state-disabled " +
						"ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel" )
					.removeAttr( "tabIndex" )
					.removeAttr( "aria-live" )
					.removeAttr( "aria-busy" )
					.removeAttr( "aria-selected" )
					.removeAttr( "aria-labelledby" )
					.removeAttr( "aria-hidden" )
					.removeAttr( "aria-expanded" )
					.removeAttr( "role" );
			}
		});

		this.tabs.each(function() {
			var li = $( this ),
				prev = li.data( "ui-tabs-aria-controls" );
			if ( prev ) {
				li
					.attr( "aria-controls", prev )
					.removeData( "ui-tabs-aria-controls" );
			} else {
				li.removeAttr( "aria-controls" );
			}
		});

		this.panels.show();

		if ( this.options.heightStyle !== "content" ) {
			this.panels.css( "height", "" );
		}
	},

	enable: function( index ) {
		var disabled = this.options.disabled;
		if ( disabled === false ) {
			return;
		}

		if ( index === undefined ) {
			disabled = false;
		} else {
			index = this._getIndex( index );
			if ( $.isArray( disabled ) ) {
				disabled = $.map( disabled, function( num ) {
					return num !== index ? num : null;
				});
			} else {
				disabled = $.map( this.tabs, function( li, num ) {
					return num !== index ? num : null;
				});
			}
		}
		this._setupDisabled( disabled );
	},

	disable: function( index ) {
		var disabled = this.options.disabled;
		if ( disabled === true ) {
			return;
		}

		if ( index === undefined ) {
			disabled = true;
		} else {
			index = this._getIndex( index );
			if ( $.inArray( index, disabled ) !== -1 ) {
				return;
			}
			if ( $.isArray( disabled ) ) {
				disabled = $.merge( [ index ], disabled ).sort();
			} else {
				disabled = [ index ];
			}
		}
		this._setupDisabled( disabled );
	},

	load: function( index, event ) {
		index = this._getIndex( index );
		var that = this,
			tab = this.tabs.eq( index ),
			anchor = tab.find( ".ui-tabs-anchor" ),
			panel = this._getPanelForTab( tab ),
			eventData = {
				tab: tab,
				panel: panel
			},
			complete = function( jqXHR, status ) {
				if ( status === "abort" ) {
					that.panels.stop( false, true );
				}

				tab.removeClass( "ui-tabs-loading" );
				panel.removeAttr( "aria-busy" );

				if ( jqXHR === that.xhr ) {
					delete that.xhr;
				}
			};

		// not remote
		if ( this._isLocal( anchor[ 0 ] ) ) {
			return;
		}

		this.xhr = $.ajax( this._ajaxSettings( anchor, event, eventData ) );

		// support: jQuery <1.8
		// jQuery <1.8 returns false if the request is canceled in beforeSend,
		// but as of 1.8, $.ajax() always returns a jqXHR object.
		if ( this.xhr && this.xhr.statusText !== "canceled" ) {
			tab.addClass( "ui-tabs-loading" );
			panel.attr( "aria-busy", "true" );

			this.xhr
				.done(function( response, status, jqXHR ) {
					// support: jQuery <1.8
					// http://bugs.jquery.com/ticket/11778
					setTimeout(function() {
						panel.html( response );
						that._trigger( "load", event, eventData );

						complete( jqXHR, status );
					}, 1 );
				})
				.fail(function( jqXHR, status ) {
					// support: jQuery <1.8
					// http://bugs.jquery.com/ticket/11778
					setTimeout(function() {
						complete( jqXHR, status );
					}, 1 );
				});
		}
	},

	_ajaxSettings: function( anchor, event, eventData ) {
		var that = this;
		return {
			url: anchor.attr( "href" ),
			beforeSend: function( jqXHR, settings ) {
				return that._trigger( "beforeLoad", event,
					$.extend( { jqXHR: jqXHR, ajaxSettings: settings }, eventData ) );
			}
		};
	},

	_getPanelForTab: function( tab ) {
		var id = $( tab ).attr( "aria-controls" );
		return this.element.find( this._sanitizeSelector( "#" + id ) );
	}
});


/*!
 * jQuery UI Tooltip 1.11.4
 * http://jqueryui.com
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/tooltip/
 */


var tooltip = $.widget( "ui.tooltip", {
	version: "1.11.4",
	options: {
		content: function() {
			// support: IE<9, Opera in jQuery <1.7
			// .text() can't accept undefined, so coerce to a string
			var title = $( this ).attr( "title" ) || "";
			// Escape title, since we're going from an attribute to raw HTML
			return $( "<a>" ).text( title ).html();
		},
		hide: true,
		// Disabled elements have inconsistent behavior across browsers (#8661)
		items: "[title]:not([disabled])",
		position: {
			my: "left top+15",
			at: "left bottom",
			collision: "flipfit flip"
		},
		show: true,
		tooltipClass: null,
		track: false,

		// callbacks
		close: null,
		open: null
	},

	_addDescribedBy: function( elem, id ) {
		var describedby = (elem.attr( "aria-describedby" ) || "").split( /\s+/ );
		describedby.push( id );
		elem
			.data( "ui-tooltip-id", id )
			.attr( "aria-describedby", $.trim( describedby.join( " " ) ) );
	},

	_removeDescribedBy: function( elem ) {
		var id = elem.data( "ui-tooltip-id" ),
			describedby = (elem.attr( "aria-describedby" ) || "").split( /\s+/ ),
			index = $.inArray( id, describedby );

		if ( index !== -1 ) {
			describedby.splice( index, 1 );
		}

		elem.removeData( "ui-tooltip-id" );
		describedby = $.trim( describedby.join( " " ) );
		if ( describedby ) {
			elem.attr( "aria-describedby", describedby );
		} else {
			elem.removeAttr( "aria-describedby" );
		}
	},

	_create: function() {
		this._on({
			mouseover: "open",
			focusin: "open"
		});

		// IDs of generated tooltips, needed for destroy
		this.tooltips = {};

		// IDs of parent tooltips where we removed the title attribute
		this.parents = {};

		if ( this.options.disabled ) {
			this._disable();
		}

		// Append the aria-live region so tooltips announce correctly
		this.liveRegion = $( "<div>" )
			.attr({
				role: "log",
				"aria-live": "assertive",
				"aria-relevant": "additions"
			})
			.addClass( "ui-helper-hidden-accessible" )
			.appendTo( this.document[ 0 ].body );
	},

	_setOption: function( key, value ) {
		var that = this;

		if ( key === "disabled" ) {
			this[ value ? "_disable" : "_enable" ]();
			this.options[ key ] = value;
			// disable element style changes
			return;
		}

		this._super( key, value );

		if ( key === "content" ) {
			$.each( this.tooltips, function( id, tooltipData ) {
				that._updateContent( tooltipData.element );
			});
		}
	},

	_disable: function() {
		var that = this;

		// close open tooltips
		$.each( this.tooltips, function( id, tooltipData ) {
			var event = $.Event( "blur" );
			event.target = event.currentTarget = tooltipData.element[ 0 ];
			that.close( event, true );
		});

		// remove title attributes to prevent native tooltips
		this.element.find( this.options.items ).addBack().each(function() {
			var element = $( this );
			if ( element.is( "[title]" ) ) {
				element
					.data( "ui-tooltip-title", element.attr( "title" ) )
					.removeAttr( "title" );
			}
		});
	},

	_enable: function() {
		// restore title attributes
		this.element.find( this.options.items ).addBack().each(function() {
			var element = $( this );
			if ( element.data( "ui-tooltip-title" ) ) {
				element.attr( "title", element.data( "ui-tooltip-title" ) );
			}
		});
	},

	open: function( event ) {
		var that = this,
			target = $( event ? event.target : this.element )
				// we need closest here due to mouseover bubbling,
				// but always pointing at the same event target
				.closest( this.options.items );

		// No element to show a tooltip for or the tooltip is already open
		if ( !target.length || target.data( "ui-tooltip-id" ) ) {
			return;
		}

		if ( target.attr( "title" ) ) {
			target.data( "ui-tooltip-title", target.attr( "title" ) );
		}

		target.data( "ui-tooltip-open", true );

		// kill parent tooltips, custom or native, for hover
		if ( event && event.type === "mouseover" ) {
			target.parents().each(function() {
				var parent = $( this ),
					blurEvent;
				if ( parent.data( "ui-tooltip-open" ) ) {
					blurEvent = $.Event( "blur" );
					blurEvent.target = blurEvent.currentTarget = this;
					that.close( blurEvent, true );
				}
				if ( parent.attr( "title" ) ) {
					parent.uniqueId();
					that.parents[ this.id ] = {
						element: this,
						title: parent.attr( "title" )
					};
					parent.attr( "title", "" );
				}
			});
		}

		this._registerCloseHandlers( event, target );
		this._updateContent( target, event );
	},

	_updateContent: function( target, event ) {
		var content,
			contentOption = this.options.content,
			that = this,
			eventType = event ? event.type : null;

		if ( typeof contentOption === "string" ) {
			return this._open( event, target, contentOption );
		}

		content = contentOption.call( target[0], function( response ) {

			// IE may instantly serve a cached response for ajax requests
			// delay this call to _open so the other call to _open runs first
			that._delay(function() {

				// Ignore async response if tooltip was closed already
				if ( !target.data( "ui-tooltip-open" ) ) {
					return;
				}

				// jQuery creates a special event for focusin when it doesn't
				// exist natively. To improve performance, the native event
				// object is reused and the type is changed. Therefore, we can't
				// rely on the type being correct after the event finished
				// bubbling, so we set it back to the previous value. (#8740)
				if ( event ) {
					event.type = eventType;
				}
				this._open( event, target, response );
			});
		});
		if ( content ) {
			this._open( event, target, content );
		}
	},

	_open: function( event, target, content ) {
		var tooltipData, tooltip, delayedShow, a11yContent,
			positionOption = $.extend( {}, this.options.position );

		if ( !content ) {
			return;
		}

		// Content can be updated multiple times. If the tooltip already
		// exists, then just update the content and bail.
		tooltipData = this._find( target );
		if ( tooltipData ) {
			tooltipData.tooltip.find( ".ui-tooltip-content" ).html( content );
			return;
		}

		// if we have a title, clear it to prevent the native tooltip
		// we have to check first to avoid defining a title if none exists
		// (we don't want to cause an element to start matching [title])
		//
		// We use removeAttr only for key events, to allow IE to export the correct
		// accessible attributes. For mouse events, set to empty string to avoid
		// native tooltip showing up (happens only when removing inside mouseover).
		if ( target.is( "[title]" ) ) {
			if ( event && event.type === "mouseover" ) {
				target.attr( "title", "" );
			} else {
				target.removeAttr( "title" );
			}
		}

		tooltipData = this._tooltip( target );
		tooltip = tooltipData.tooltip;
		this._addDescribedBy( target, tooltip.attr( "id" ) );
		tooltip.find( ".ui-tooltip-content" ).html( content );

		// Support: Voiceover on OS X, JAWS on IE <= 9
		// JAWS announces deletions even when aria-relevant="additions"
		// Voiceover will sometimes re-read the entire log region's contents from the beginning
		this.liveRegion.children().hide();
		if ( content.clone ) {
			a11yContent = content.clone();
			a11yContent.removeAttr( "id" ).find( "[id]" ).removeAttr( "id" );
		} else {
			a11yContent = content;
		}
		$( "<div>" ).html( a11yContent ).appendTo( this.liveRegion );

		function position( event ) {
			positionOption.of = event;
			if ( tooltip.is( ":hidden" ) ) {
				return;
			}
			tooltip.position( positionOption );
		}
		if ( this.options.track && event && /^mouse/.test( event.type ) ) {
			this._on( this.document, {
				mousemove: position
			});
			// trigger once to override element-relative positioning
			position( event );
		} else {
			tooltip.position( $.extend({
				of: target
			}, this.options.position ) );
		}

		tooltip.hide();

		this._show( tooltip, this.options.show );
		// Handle tracking tooltips that are shown with a delay (#8644). As soon
		// as the tooltip is visible, position the tooltip using the most recent
		// event.
		if ( this.options.show && this.options.show.delay ) {
			delayedShow = this.delayedShow = setInterval(function() {
				if ( tooltip.is( ":visible" ) ) {
					position( positionOption.of );
					clearInterval( delayedShow );
				}
			}, $.fx.interval );
		}

		this._trigger( "open", event, { tooltip: tooltip } );
	},

	_registerCloseHandlers: function( event, target ) {
		var events = {
			keyup: function( event ) {
				if ( event.keyCode === $.ui.keyCode.ESCAPE ) {
					var fakeEvent = $.Event(event);
					fakeEvent.currentTarget = target[0];
					this.close( fakeEvent, true );
				}
			}
		};

		// Only bind remove handler for delegated targets. Non-delegated
		// tooltips will handle this in destroy.
		if ( target[ 0 ] !== this.element[ 0 ] ) {
			events.remove = function() {
				this._removeTooltip( this._find( target ).tooltip );
			};
		}

		if ( !event || event.type === "mouseover" ) {
			events.mouseleave = "close";
		}
		if ( !event || event.type === "focusin" ) {
			events.focusout = "close";
		}
		this._on( true, target, events );
	},

	close: function( event ) {
		var tooltip,
			that = this,
			target = $( event ? event.currentTarget : this.element ),
			tooltipData = this._find( target );

		// The tooltip may already be closed
		if ( !tooltipData ) {

			// We set ui-tooltip-open immediately upon open (in open()), but only set the
			// additional data once there's actually content to show (in _open()). So even if the
			// tooltip doesn't have full data, we always remove ui-tooltip-open in case we're in
			// the period between open() and _open().
			target.removeData( "ui-tooltip-open" );
			return;
		}

		tooltip = tooltipData.tooltip;

		// disabling closes the tooltip, so we need to track when we're closing
		// to avoid an infinite loop in case the tooltip becomes disabled on close
		if ( tooltipData.closing ) {
			return;
		}

		// Clear the interval for delayed tracking tooltips
		clearInterval( this.delayedShow );

		// only set title if we had one before (see comment in _open())
		// If the title attribute has changed since open(), don't restore
		if ( target.data( "ui-tooltip-title" ) && !target.attr( "title" ) ) {
			target.attr( "title", target.data( "ui-tooltip-title" ) );
		}

		this._removeDescribedBy( target );

		tooltipData.hiding = true;
		tooltip.stop( true );
		this._hide( tooltip, this.options.hide, function() {
			that._removeTooltip( $( this ) );
		});

		target.removeData( "ui-tooltip-open" );
		this._off( target, "mouseleave focusout keyup" );

		// Remove 'remove' binding only on delegated targets
		if ( target[ 0 ] !== this.element[ 0 ] ) {
			this._off( target, "remove" );
		}
		this._off( this.document, "mousemove" );

		if ( event && event.type === "mouseleave" ) {
			$.each( this.parents, function( id, parent ) {
				$( parent.element ).attr( "title", parent.title );
				delete that.parents[ id ];
			});
		}

		tooltipData.closing = true;
		this._trigger( "close", event, { tooltip: tooltip } );
		if ( !tooltipData.hiding ) {
			tooltipData.closing = false;
		}
	},

	_tooltip: function( element ) {
		var tooltip = $( "<div>" )
				.attr( "role", "tooltip" )
				.addClass( "ui-tooltip ui-widget ui-corner-all ui-widget-content " +
					( this.options.tooltipClass || "" ) ),
			id = tooltip.uniqueId().attr( "id" );

		$( "<div>" )
			.addClass( "ui-tooltip-content" )
			.appendTo( tooltip );

		tooltip.appendTo( this.document[0].body );

		return this.tooltips[ id ] = {
			element: element,
			tooltip: tooltip
		};
	},

	_find: function( target ) {
		var id = target.data( "ui-tooltip-id" );
		return id ? this.tooltips[ id ] : null;
	},

	_removeTooltip: function( tooltip ) {
		tooltip.remove();
		delete this.tooltips[ tooltip.attr( "id" ) ];
	},

	_destroy: function() {
		var that = this;

		// close open tooltips
		$.each( this.tooltips, function( id, tooltipData ) {
			// Delegate to close method to handle common cleanup
			var event = $.Event( "blur" ),
				element = tooltipData.element;
			event.target = event.currentTarget = element[ 0 ];
			that.close( event, true );

			// Remove immediately; destroying an open tooltip doesn't use the
			// hide animation
			$( "#" + id ).remove();

			// Restore the title
			if ( element.data( "ui-tooltip-title" ) ) {
				// If the title attribute has changed since open(), don't restore
				if ( !element.attr( "title" ) ) {
					element.attr( "title", element.data( "ui-tooltip-title" ) );
				}
				element.removeData( "ui-tooltip-title" );
			}
		});
		this.liveRegion.remove();
	}
});



}));
!function() {
  var d3 = {
    version: "3.5.5"
  };
  var d3_arraySlice = [].slice, d3_array = function(list) {
    return d3_arraySlice.call(list);
  };
  var d3_document = this.document;
  function d3_documentElement(node) {
    return node && (node.ownerDocument || node.document || node).documentElement;
  }
  function d3_window(node) {
    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
  }
  if (d3_document) {
    try {
      d3_array(d3_document.documentElement.childNodes)[0].nodeType;
    } catch (e) {
      d3_array = function(list) {
        var i = list.length, array = new Array(i);
        while (i--) array[i] = list[i];
        return array;
      };
    }
  }
  if (!Date.now) Date.now = function() {
    return +new Date();
  };
  if (d3_document) {
    try {
      d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
    } catch (error) {
      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
      d3_element_prototype.setAttribute = function(name, value) {
        d3_element_setAttribute.call(this, name, value + "");
      };
      d3_element_prototype.setAttributeNS = function(space, local, value) {
        d3_element_setAttributeNS.call(this, space, local, value + "");
      };
      d3_style_prototype.setProperty = function(name, value, priority) {
        d3_style_setProperty.call(this, name, value + "", priority);
      };
    }
  }
  d3.ascending = d3_ascending;
  function d3_ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }
  d3.descending = function(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  };
  d3.min = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
    }
    return a;
  };
  d3.max = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
    }
    return a;
  };
  d3.extent = function(array, f) {
    var i = -1, n = array.length, a, b, c;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = c = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = c = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    }
    return [ a, c ];
  };
  function d3_number(x) {
    return x === null ? NaN : +x;
  }
  function d3_numeric(x) {
    return !isNaN(x);
  }
  d3.sum = function(array, f) {
    var s = 0, n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
    } else {
      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
    }
    return s;
  };
  d3.mean = function(array, f) {
    var s = 0, n = array.length, a, i = -1, j = n;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;
    } else {
      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;
    }
    if (j) return s / j;
  };
  d3.quantile = function(values, p) {
    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
    return e ? v + e * (values[h] - v) : v;
  };
  d3.median = function(array, f) {
    var numbers = [], n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
    } else {
      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
    }
    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
  };
  d3.variance = function(array, f) {
    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;
    if (arguments.length === 1) {
      while (++i < n) {
        if (d3_numeric(a = d3_number(array[i]))) {
          d = a - m;
          m += d / ++j;
          s += d * (a - m);
        }
      }
    } else {
      while (++i < n) {
        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
          d = a - m;
          m += d / ++j;
          s += d * (a - m);
        }
      }
    }
    if (j > 1) return s / (j - 1);
  };
  d3.deviation = function() {
    var v = d3.variance.apply(this, arguments);
    return v ? Math.sqrt(v) : v;
  };
  function d3_bisector(compare) {
    return {
      left: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
        }
        return lo;
      },
      right: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
        }
        return lo;
      }
    };
  }
  var d3_bisect = d3_bisector(d3_ascending);
  d3.bisectLeft = d3_bisect.left;
  d3.bisect = d3.bisectRight = d3_bisect.right;
  d3.bisector = function(f) {
    return d3_bisector(f.length === 1 ? function(d, x) {
      return d3_ascending(f(d), x);
    } : f);
  };
  d3.shuffle = function(array, i0, i1) {
    if ((m = arguments.length) < 3) {
      i1 = array.length;
      if (m < 2) i0 = 0;
    }
    var m = i1 - i0, t, i;
    while (m) {
      i = Math.random() * m-- | 0;
      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
    }
    return array;
  };
  d3.permute = function(array, indexes) {
    var i = indexes.length, permutes = new Array(i);
    while (i--) permutes[i] = array[indexes[i]];
    return permutes;
  };
  d3.pairs = function(array) {
    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
    return pairs;
  };
  d3.zip = function() {
    if (!(n = arguments.length)) return [];
    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {
      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {
        zip[j] = arguments[j][i];
      }
    }
    return zips;
  };
  function d3_zipLength(d) {
    return d.length;
  }
  d3.transpose = function(matrix) {
    return d3.zip.apply(d3, matrix);
  };
  d3.keys = function(map) {
    var keys = [];
    for (var key in map) keys.push(key);
    return keys;
  };
  d3.values = function(map) {
    var values = [];
    for (var key in map) values.push(map[key]);
    return values;
  };
  d3.entries = function(map) {
    var entries = [];
    for (var key in map) entries.push({
      key: key,
      value: map[key]
    });
    return entries;
  };
  d3.merge = function(arrays) {
    var n = arrays.length, m, i = -1, j = 0, merged, array;
    while (++i < n) j += arrays[i].length;
    merged = new Array(j);
    while (--n >= 0) {
      array = arrays[n];
      m = array.length;
      while (--m >= 0) {
        merged[--j] = array[m];
      }
    }
    return merged;
  };
  var abs = Math.abs;
  d3.range = function(start, stop, step) {
    if (arguments.length < 3) {
      step = 1;
      if (arguments.length < 2) {
        stop = start;
        start = 0;
      }
    }
    if ((stop - start) / step === Infinity) throw new Error("infinite range");
    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
    start *= k, stop *= k, step *= k;
    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
    return range;
  };
  function d3_range_integerScale(x) {
    var k = 1;
    while (x * k % 1) k *= 10;
    return k;
  }
  function d3_class(ctor, properties) {
    for (var key in properties) {
      Object.defineProperty(ctor.prototype, key, {
        value: properties[key],
        enumerable: false
      });
    }
  }
  d3.map = function(object, f) {
    var map = new d3_Map();
    if (object instanceof d3_Map) {
      object.forEach(function(key, value) {
        map.set(key, value);
      });
    } else if (Array.isArray(object)) {
      var i = -1, n = object.length, o;
      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);
    } else {
      for (var key in object) map.set(key, object[key]);
    }
    return map;
  };
  function d3_Map() {
    this._ = Object.create(null);
  }
  var d3_map_proto = "__proto__", d3_map_zero = "\x00";
  d3_class(d3_Map, {
    has: d3_map_has,
    get: function(key) {
      return this._[d3_map_escape(key)];
    },
    set: function(key, value) {
      return this._[d3_map_escape(key)] = value;
    },
    remove: d3_map_remove,
    keys: d3_map_keys,
    values: function() {
      var values = [];
      for (var key in this._) values.push(this._[key]);
      return values;
    },
    entries: function() {
      var entries = [];
      for (var key in this._) entries.push({
        key: d3_map_unescape(key),
        value: this._[key]
      });
      return entries;
    },
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
    }
  });
  function d3_map_escape(key) {
    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
  }
  function d3_map_unescape(key) {
    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
  }
  function d3_map_has(key) {
    return d3_map_escape(key) in this._;
  }
  function d3_map_remove(key) {
    return (key = d3_map_escape(key)) in this._ && delete this._[key];
  }
  function d3_map_keys() {
    var keys = [];
    for (var key in this._) keys.push(d3_map_unescape(key));
    return keys;
  }
  function d3_map_size() {
    var size = 0;
    for (var key in this._) ++size;
    return size;
  }
  function d3_map_empty() {
    for (var key in this._) return false;
    return true;
  }
  d3.nest = function() {
    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
    function map(mapType, array, depth) {
      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
      while (++i < n) {
        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
          values.push(object);
        } else {
          valuesByKey.set(keyValue, [ object ]);
        }
      }
      if (mapType) {
        object = mapType();
        setter = function(keyValue, values) {
          object.set(keyValue, map(mapType, values, depth));
        };
      } else {
        object = {};
        setter = function(keyValue, values) {
          object[keyValue] = map(mapType, values, depth);
        };
      }
      valuesByKey.forEach(setter);
      return object;
    }
    function entries(map, depth) {
      if (depth >= keys.length) return map;
      var array = [], sortKey = sortKeys[depth++];
      map.forEach(function(key, keyMap) {
        array.push({
          key: key,
          values: entries(keyMap, depth)
        });
      });
      return sortKey ? array.sort(function(a, b) {
        return sortKey(a.key, b.key);
      }) : array;
    }
    nest.map = function(array, mapType) {
      return map(mapType, array, 0);
    };
    nest.entries = function(array) {
      return entries(map(d3.map, array, 0), 0);
    };
    nest.key = function(d) {
      keys.push(d);
      return nest;
    };
    nest.sortKeys = function(order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    };
    nest.sortValues = function(order) {
      sortValues = order;
      return nest;
    };
    nest.rollup = function(f) {
      rollup = f;
      return nest;
    };
    return nest;
  };
  d3.set = function(array) {
    var set = new d3_Set();
    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
    return set;
  };
  function d3_Set() {
    this._ = Object.create(null);
  }
  d3_class(d3_Set, {
    has: d3_map_has,
    add: function(key) {
      this._[d3_map_escape(key += "")] = true;
      return key;
    },
    remove: d3_map_remove,
    values: d3_map_keys,
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var key in this._) f.call(this, d3_map_unescape(key));
    }
  });
  d3.behavior = {};
  function d3_identity(d) {
    return d;
  }
  d3.rebind = function(target, source) {
    var i = 1, n = arguments.length, method;
    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
    return target;
  };
  function d3_rebind(target, source, method) {
    return function() {
      var value = method.apply(source, arguments);
      return value === source ? target : value;
    };
  }
  function d3_vendorSymbol(object, name) {
    if (name in object) return name;
    name = name.charAt(0).toUpperCase() + name.slice(1);
    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
      var prefixName = d3_vendorPrefixes[i] + name;
      if (prefixName in object) return prefixName;
    }
  }
  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
  function d3_noop() {}
  d3.dispatch = function() {
    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    return dispatch;
  };
  function d3_dispatch() {}
  d3_dispatch.prototype.on = function(type, listener) {
    var i = type.indexOf("."), name = "";
    if (i >= 0) {
      name = type.slice(i + 1);
      type = type.slice(0, i);
    }
    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
    if (arguments.length === 2) {
      if (listener == null) for (type in this) {
        if (this.hasOwnProperty(type)) this[type].on(name, null);
      }
      return this;
    }
  };
  function d3_dispatch_event(dispatch) {
    var listeners = [], listenerByName = new d3_Map();
    function event() {
      var z = listeners, i = -1, n = z.length, l;
      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
      return dispatch;
    }
    event.on = function(name, listener) {
      var l = listenerByName.get(name), i;
      if (arguments.length < 2) return l && l.on;
      if (l) {
        l.on = null;
        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
        listenerByName.remove(name);
      }
      if (listener) listeners.push(listenerByName.set(name, {
        on: listener
      }));
      return dispatch;
    };
    return event;
  }
  d3.event = null;
  function d3_eventPreventDefault() {
    d3.event.preventDefault();
  }
  function d3_eventSource() {
    var e = d3.event, s;
    while (s = e.sourceEvent) e = s;
    return e;
  }
  function d3_eventDispatch(target) {
    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    dispatch.of = function(thiz, argumentz) {
      return function(e1) {
        try {
          var e0 = e1.sourceEvent = d3.event;
          e1.target = target;
          d3.event = e1;
          dispatch[e1.type].apply(thiz, argumentz);
        } finally {
          d3.event = e0;
        }
      };
    };
    return dispatch;
  }
  d3.requote = function(s) {
    return s.replace(d3_requote_re, "\\$&");
  };
  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
  var d3_subclass = {}.__proto__ ? function(object, prototype) {
    object.__proto__ = prototype;
  } : function(object, prototype) {
    for (var property in prototype) object[property] = prototype[property];
  };
  function d3_selection(groups) {
    d3_subclass(groups, d3_selectionPrototype);
    return groups;
  }
  var d3_select = function(s, n) {
    return n.querySelector(s);
  }, d3_selectAll = function(s, n) {
    return n.querySelectorAll(s);
  }, d3_selectMatches = function(n, s) {
    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];
    d3_selectMatches = function(n, s) {
      return d3_selectMatcher.call(n, s);
    };
    return d3_selectMatches(n, s);
  };
  if (typeof Sizzle === "function") {
    d3_select = function(s, n) {
      return Sizzle(s, n)[0] || null;
    };
    d3_selectAll = Sizzle;
    d3_selectMatches = Sizzle.matchesSelector;
  }
  d3.selection = function() {
    return d3.select(d3_document.documentElement);
  };
  var d3_selectionPrototype = d3.selection.prototype = [];
  d3_selectionPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, group, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selector(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_select(selector, this);
    };
  }
  d3_selectionPrototype.selectAll = function(selector) {
    var subgroups = [], subgroup, node;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
          subgroup.parentNode = node;
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selectorAll(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_selectAll(selector, this);
    };
  }
  var d3_nsPrefix = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };
  d3.ns = {
    prefix: d3_nsPrefix,
    qualify: function(name) {
      var i = name.indexOf(":"), prefix = name;
      if (i >= 0) {
        prefix = name.slice(0, i);
        name = name.slice(i + 1);
      }
      return d3_nsPrefix.hasOwnProperty(prefix) ? {
        space: d3_nsPrefix[prefix],
        local: name
      } : name;
    }
  };
  d3_selectionPrototype.attr = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node();
        name = d3.ns.qualify(name);
        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
      }
      for (value in name) this.each(d3_selection_attr(value, name[value]));
      return this;
    }
    return this.each(d3_selection_attr(name, value));
  };
  function d3_selection_attr(name, value) {
    name = d3.ns.qualify(name);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrConstant() {
      this.setAttribute(name, value);
    }
    function attrConstantNS() {
      this.setAttributeNS(name.space, name.local, value);
    }
    function attrFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
    }
    function attrFunctionNS() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
    }
    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
  }
  function d3_collapse(s) {
    return s.trim().replace(/\s+/g, " ");
  }
  d3_selectionPrototype.classed = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
        if (value = node.classList) {
          while (++i < n) if (!value.contains(name[i])) return false;
        } else {
          value = node.getAttribute("class");
          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
        }
        return true;
      }
      for (value in name) this.each(d3_selection_classed(value, name[value]));
      return this;
    }
    return this.each(d3_selection_classed(name, value));
  };
  function d3_selection_classedRe(name) {
    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
  }
  function d3_selection_classes(name) {
    return (name + "").trim().split(/^|\s+/);
  }
  function d3_selection_classed(name, value) {
    name = d3_selection_classes(name).map(d3_selection_classedName);
    var n = name.length;
    function classedConstant() {
      var i = -1;
      while (++i < n) name[i](this, value);
    }
    function classedFunction() {
      var i = -1, x = value.apply(this, arguments);
      while (++i < n) name[i](this, x);
    }
    return typeof value === "function" ? classedFunction : classedConstant;
  }
  function d3_selection_classedName(name) {
    var re = d3_selection_classedRe(name);
    return function(node, value) {
      if (c = node.classList) return value ? c.add(name) : c.remove(name);
      var c = node.getAttribute("class") || "";
      if (value) {
        re.lastIndex = 0;
        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
      } else {
        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
      }
    };
  }
  d3_selectionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
        return this;
      }
      if (n < 2) {
        var node = this.node();
        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
      }
      priority = "";
    }
    return this.each(d3_selection_style(name, value, priority));
  };
  function d3_selection_style(name, value, priority) {
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleConstant() {
      this.style.setProperty(name, value, priority);
    }
    function styleFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
    }
    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
  }
  d3_selectionPrototype.property = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") return this.node()[name];
      for (value in name) this.each(d3_selection_property(value, name[value]));
      return this;
    }
    return this.each(d3_selection_property(name, value));
  };
  function d3_selection_property(name, value) {
    function propertyNull() {
      delete this[name];
    }
    function propertyConstant() {
      this[name] = value;
    }
    function propertyFunction() {
      var x = value.apply(this, arguments);
      if (x == null) delete this[name]; else this[name] = x;
    }
    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
  }
  d3_selectionPrototype.text = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    } : value == null ? function() {
      this.textContent = "";
    } : function() {
      this.textContent = value;
    }) : this.node().textContent;
  };
  d3_selectionPrototype.html = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    } : value == null ? function() {
      this.innerHTML = "";
    } : function() {
      this.innerHTML = value;
    }) : this.node().innerHTML;
  };
  d3_selectionPrototype.append = function(name) {
    name = d3_selection_creator(name);
    return this.select(function() {
      return this.appendChild(name.apply(this, arguments));
    });
  };
  function d3_selection_creator(name) {
    function create() {
      var document = this.ownerDocument, namespace = this.namespaceURI;
      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);
    }
    function createNS() {
      return this.ownerDocument.createElementNS(name.space, name.local);
    }
    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
  }
  d3_selectionPrototype.insert = function(name, before) {
    name = d3_selection_creator(name);
    before = d3_selection_selector(before);
    return this.select(function() {
      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
    });
  };
  d3_selectionPrototype.remove = function() {
    return this.each(d3_selectionRemove);
  };
  function d3_selectionRemove() {
    var parent = this.parentNode;
    if (parent) parent.removeChild(this);
  }
  d3_selectionPrototype.data = function(value, key) {
    var i = -1, n = this.length, group, node;
    if (!arguments.length) {
      value = new Array(n = (group = this[0]).length);
      while (++i < n) {
        if (node = group[i]) {
          value[i] = node.__data__;
        }
      }
      return value;
    }
    function bind(group, groupData) {
      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
      if (key) {
        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
        for (i = -1; ++i < n; ) {
          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {
            exitNodes[i] = node;
          } else {
            nodeByKeyValue.set(keyValue, node);
          }
          keyValues[i] = keyValue;
        }
        for (i = -1; ++i < m; ) {
          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          } else if (node !== true) {
            updateNodes[i] = node;
            node.__data__ = nodeData;
          }
          nodeByKeyValue.set(keyValue, true);
        }
        for (i = -1; ++i < n; ) {
          if (nodeByKeyValue.get(keyValues[i]) !== true) {
            exitNodes[i] = group[i];
          }
        }
      } else {
        for (i = -1; ++i < n0; ) {
          node = group[i];
          nodeData = groupData[i];
          if (node) {
            node.__data__ = nodeData;
            updateNodes[i] = node;
          } else {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
        }
        for (;i < m; ++i) {
          enterNodes[i] = d3_selection_dataNode(groupData[i]);
        }
        for (;i < n; ++i) {
          exitNodes[i] = group[i];
        }
      }
      enterNodes.update = updateNodes;
      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
      enter.push(enterNodes);
      update.push(updateNodes);
      exit.push(exitNodes);
    }
    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
    if (typeof value === "function") {
      while (++i < n) {
        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
      }
    } else {
      while (++i < n) {
        bind(group = this[i], value);
      }
    }
    update.enter = function() {
      return enter;
    };
    update.exit = function() {
      return exit;
    };
    return update;
  };
  function d3_selection_dataNode(data) {
    return {
      __data__: data
    };
  }
  d3_selectionPrototype.datum = function(value) {
    return arguments.length ? this.property("__data__", value) : this.property("__data__");
  };
  d3_selectionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_filter(selector) {
    return function() {
      return d3_selectMatches(this, selector);
    };
  }
  d3_selectionPrototype.order = function() {
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
        if (node = group[i]) {
          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
          next = node;
        }
      }
    }
    return this;
  };
  d3_selectionPrototype.sort = function(comparator) {
    comparator = d3_selection_sortComparator.apply(this, arguments);
    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
    return this.order();
  };
  function d3_selection_sortComparator(comparator) {
    if (!arguments.length) comparator = d3_ascending;
    return function(a, b) {
      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
    };
  }
  d3_selectionPrototype.each = function(callback) {
    return d3_selection_each(this, function(node, i, j) {
      callback.call(node, node.__data__, i, j);
    });
  };
  function d3_selection_each(groups, callback) {
    for (var j = 0, m = groups.length; j < m; j++) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
        if (node = group[i]) callback(node, i, j);
      }
    }
    return groups;
  }
  d3_selectionPrototype.call = function(callback) {
    var args = d3_array(arguments);
    callback.apply(args[0] = this, args);
    return this;
  };
  d3_selectionPrototype.empty = function() {
    return !this.node();
  };
  d3_selectionPrototype.node = function() {
    for (var j = 0, m = this.length; j < m; j++) {
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        var node = group[i];
        if (node) return node;
      }
    }
    return null;
  };
  d3_selectionPrototype.size = function() {
    var n = 0;
    d3_selection_each(this, function() {
      ++n;
    });
    return n;
  };
  function d3_selection_enter(selection) {
    d3_subclass(selection, d3_selection_enterPrototype);
    return selection;
  }
  var d3_selection_enterPrototype = [];
  d3.selection.enter = d3_selection_enter;
  d3.selection.enter.prototype = d3_selection_enterPrototype;
  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
  d3_selection_enterPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, upgroup, group, node;
    for (var j = -1, m = this.length; ++j < m; ) {
      upgroup = (group = this[j]).update;
      subgroups.push(subgroup = []);
      subgroup.parentNode = group.parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
          subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  d3_selection_enterPrototype.insert = function(name, before) {
    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
    return d3_selectionPrototype.insert.call(this, name, before);
  };
  function d3_selection_enterInsertBefore(enter) {
    var i0, j0;
    return function(d, i, j) {
      var group = enter[j].update, n = group.length, node;
      if (j != j0) j0 = j, i0 = 0;
      if (i >= i0) i0 = i + 1;
      while (!(node = group[i0]) && ++i0 < n) ;
      return node;
    };
  }
  d3.select = function(node) {
    var group;
    if (typeof node === "string") {
      group = [ d3_select(node, d3_document) ];
      group.parentNode = d3_document.documentElement;
    } else {
      group = [ node ];
      group.parentNode = d3_documentElement(node);
    }
    return d3_selection([ group ]);
  };
  d3.selectAll = function(nodes) {
    var group;
    if (typeof nodes === "string") {
      group = d3_array(d3_selectAll(nodes, d3_document));
      group.parentNode = d3_document.documentElement;
    } else {
      group = nodes;
      group.parentNode = null;
    }
    return d3_selection([ group ]);
  };
  d3_selectionPrototype.on = function(type, listener, capture) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof type !== "string") {
        if (n < 2) listener = false;
        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
        return this;
      }
      if (n < 2) return (n = this.node()["__on" + type]) && n._;
      capture = false;
    }
    return this.each(d3_selection_on(type, listener, capture));
  };
  function d3_selection_on(type, listener, capture) {
    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
    if (i > 0) type = type.slice(0, i);
    var filter = d3_selection_onFilters.get(type);
    if (filter) type = filter, wrap = d3_selection_onFilter;
    function onRemove() {
      var l = this[name];
      if (l) {
        this.removeEventListener(type, l, l.$);
        delete this[name];
      }
    }
    function onAdd() {
      var l = wrap(listener, d3_array(arguments));
      onRemove.call(this);
      this.addEventListener(type, this[name] = l, l.$ = capture);
      l._ = listener;
    }
    function removeAll() {
      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
      for (var name in this) {
        if (match = name.match(re)) {
          var l = this[name];
          this.removeEventListener(match[1], l, l.$);
          delete this[name];
        }
      }
    }
    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
  }
  var d3_selection_onFilters = d3.map({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  });
  if (d3_document) {
    d3_selection_onFilters.forEach(function(k) {
      if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
    });
  }
  function d3_selection_onListener(listener, argumentz) {
    return function(e) {
      var o = d3.event;
      d3.event = e;
      argumentz[0] = this.__data__;
      try {
        listener.apply(this, argumentz);
      } finally {
        d3.event = o;
      }
    };
  }
  function d3_selection_onFilter(listener, argumentz) {
    var l = d3_selection_onListener(listener, argumentz);
    return function(e) {
      var target = this, related = e.relatedTarget;
      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
        l.call(target, e);
      }
    };
  }
  var d3_event_dragSelect, d3_event_dragId = 0;
  function d3_event_dragSuppress(node) {
    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
    if (d3_event_dragSelect == null) {
      d3_event_dragSelect = "onselectstart" in node ? false : d3_vendorSymbol(node.style, "userSelect");
    }
    if (d3_event_dragSelect) {
      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];
      style[d3_event_dragSelect] = "none";
    }
    return function(suppressClick) {
      w.on(name, null);
      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
      if (suppressClick) {
        var off = function() {
          w.on(click, null);
        };
        w.on(click, function() {
          d3_eventPreventDefault();
          off();
        }, true);
        setTimeout(off, 0);
      }
    };
  }
  d3.mouse = function(container) {
    return d3_mousePoint(container, d3_eventSource());
  };
  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
  function d3_mousePoint(container, e) {
    if (e.changedTouches) e = e.changedTouches[0];
    var svg = container.ownerSVGElement || container;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      if (d3_mouse_bug44083 < 0) {
        var window = d3_window(container);
        if (window.scrollX || window.scrollY) {
          svg = d3.select("body").append("svg").style({
            position: "absolute",
            top: 0,
            left: 0,
            margin: 0,
            padding: 0,
            border: "none"
          }, "important");
          var ctm = svg[0][0].getScreenCTM();
          d3_mouse_bug44083 = !(ctm.f || ctm.e);
          svg.remove();
        }
      }
      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, 
      point.y = e.clientY;
      point = point.matrixTransform(container.getScreenCTM().inverse());
      return [ point.x, point.y ];
    }
    var rect = container.getBoundingClientRect();
    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
  }
  d3.touch = function(container, touches, identifier) {
    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
      if ((touch = touches[i]).identifier === identifier) {
        return d3_mousePoint(container, touch);
      }
    }
  };
  d3.behavior.drag = function() {
    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");
    function drag() {
      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
    }
    function dragstart(id, position, subject, move, end) {
      return function() {
        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);
        if (origin) {
          dragOffset = origin.apply(that, arguments);
          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
        } else {
          dragOffset = [ 0, 0 ];
        }
        dispatch({
          type: "dragstart"
        });
        function moved() {
          var position1 = position(parent, dragId), dx, dy;
          if (!position1) return;
          dx = position1[0] - position0[0];
          dy = position1[1] - position0[1];
          dragged |= dx | dy;
          position0 = position1;
          dispatch({
            type: "drag",
            x: position1[0] + dragOffset[0],
            y: position1[1] + dragOffset[1],
            dx: dx,
            dy: dy
          });
        }
        function ended() {
          if (!position(parent, dragId)) return;
          dragSubject.on(move + dragName, null).on(end + dragName, null);
          dragRestore(dragged && d3.event.target === target);
          dispatch({
            type: "dragend"
          });
        }
      };
    }
    drag.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return drag;
    };
    return d3.rebind(drag, event, "on");
  };
  function d3_behavior_dragTouchId() {
    return d3.event.changedTouches[0].identifier;
  }
  d3.touches = function(container, touches) {
    if (arguments.length < 2) touches = d3_eventSource().touches;
    return touches ? d3_array(touches).map(function(touch) {
      var point = d3_mousePoint(container, touch);
      point.identifier = touch.identifier;
      return point;
    }) : [];
  };
  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;
  function d3_sgn(x) {
    return x > 0 ? 1 : x < 0 ? -1 : 0;
  }
  function d3_cross2d(a, b, c) {
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
  }
  function d3_acos(x) {
    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
  }
  function d3_asin(x) {
    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
  }
  function d3_sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
  }
  function d3_cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
  }
  function d3_tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
  }
  function d3_haversin(x) {
    return (x = Math.sin(x / 2)) * x;
  }
  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
  d3.interpolateZoom = function(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];
    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;
    function interpolate(t) {
      var s = t * S;
      if (dr) {
        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
      }
      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];
    }
    interpolate.duration = S * 1e3;
    return interpolate;
  };
  d3.behavior.zoom = function() {
    var view = {
      x: 0,
      y: 0,
      k: 1
    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
    if (!d3_behavior_zoomWheel) {
      d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
      }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
        return d3.event.wheelDelta;
      }, "mousewheel") : (d3_behavior_zoomDelta = function() {
        return -d3.event.detail;
      }, "MozMousePixelScroll");
    }
    function zoom(g) {
      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
    }
    zoom.event = function(g) {
      g.each(function() {
        var dispatch = event.of(this, arguments), view1 = view;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.zoom", function() {
            view = this.__chart__ || {
              x: 0,
              y: 0,
              k: 1
            };
            zoomstarted(dispatch);
          }).tween("zoom:zoom", function() {
            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
            return function(t) {
              var l = i(t), k = dx / l[2];
              this.__chart__ = view = {
                x: cx - l[0] * k,
                y: cy - l[1] * k,
                k: k
              };
              zoomed(dispatch);
            };
          }).each("interrupt.zoom", function() {
            zoomended(dispatch);
          }).each("end.zoom", function() {
            zoomended(dispatch);
          });
        } else {
          this.__chart__ = view;
          zoomstarted(dispatch);
          zoomed(dispatch);
          zoomended(dispatch);
        }
      });
    };
    zoom.translate = function(_) {
      if (!arguments.length) return [ view.x, view.y ];
      view = {
        x: +_[0],
        y: +_[1],
        k: view.k
      };
      rescale();
      return zoom;
    };
    zoom.scale = function(_) {
      if (!arguments.length) return view.k;
      view = {
        x: view.x,
        y: view.y,
        k: +_
      };
      rescale();
      return zoom;
    };
    zoom.scaleExtent = function(_) {
      if (!arguments.length) return scaleExtent;
      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.center = function(_) {
      if (!arguments.length) return center;
      center = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.size = function(_) {
      if (!arguments.length) return size;
      size = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.duration = function(_) {
      if (!arguments.length) return duration;
      duration = +_;
      return zoom;
    };
    zoom.x = function(z) {
      if (!arguments.length) return x1;
      x1 = z;
      x0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    zoom.y = function(z) {
      if (!arguments.length) return y1;
      y1 = z;
      y0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    function location(p) {
      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
    }
    function point(l) {
      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
    }
    function scaleTo(s) {
      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
    }
    function translateTo(p, l) {
      l = point(l);
      view.x += p[0] - l[0];
      view.y += p[1] - l[1];
    }
    function zoomTo(that, p, l, k) {
      that.__chart__ = {
        x: view.x,
        y: view.y,
        k: view.k
      };
      scaleTo(Math.pow(2, k));
      translateTo(center0 = p, l);
      that = d3.select(that);
      if (duration > 0) that = that.transition().duration(duration);
      that.call(zoom.event);
    }
    function rescale() {
      if (x1) x1.domain(x0.range().map(function(x) {
        return (x - view.x) / view.k;
      }).map(x0.invert));
      if (y1) y1.domain(y0.range().map(function(y) {
        return (y - view.y) / view.k;
      }).map(y0.invert));
    }
    function zoomstarted(dispatch) {
      if (!zooming++) dispatch({
        type: "zoomstart"
      });
    }
    function zoomed(dispatch) {
      rescale();
      dispatch({
        type: "zoom",
        scale: view.k,
        translate: [ view.x, view.y ]
      });
    }
    function zoomended(dispatch) {
      if (!--zooming) dispatch({
        type: "zoomend"
      });
      center0 = null;
    }
    function mousedowned() {
      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);
      d3_selection_interrupt.call(that);
      zoomstarted(dispatch);
      function moved() {
        dragged = 1;
        translateTo(d3.mouse(that), location0);
        zoomed(dispatch);
      }
      function ended() {
        subject.on(mousemove, null).on(mouseup, null);
        dragRestore(dragged && d3.event.target === target);
        zoomended(dispatch);
      }
    }
    function touchstarted() {
      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);
      started();
      zoomstarted(dispatch);
      subject.on(mousedown, null).on(touchstart, started);
      function relocate() {
        var touches = d3.touches(that);
        scale0 = view.k;
        touches.forEach(function(t) {
          if (t.identifier in locations0) locations0[t.identifier] = location(t);
        });
        return touches;
      }
      function started() {
        var target = d3.event.target;
        d3.select(target).on(touchmove, moved).on(touchend, ended);
        targets.push(target);
        var changed = d3.event.changedTouches;
        for (var i = 0, n = changed.length; i < n; ++i) {
          locations0[changed[i].identifier] = null;
        }
        var touches = relocate(), now = Date.now();
        if (touches.length === 1) {
          if (now - touchtime < 500) {
            var p = touches[0];
            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
            d3_eventPreventDefault();
          }
          touchtime = now;
        } else if (touches.length > 1) {
          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
          distance0 = dx * dx + dy * dy;
        }
      }
      function moved() {
        var touches = d3.touches(that), p0, l0, p1, l1;
        d3_selection_interrupt.call(that);
        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
          p1 = touches[i];
          if (l1 = locations0[p1.identifier]) {
            if (l0) break;
            p0 = p1, l0 = l1;
          }
        }
        if (l1) {
          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
          scaleTo(scale1 * scale0);
        }
        touchtime = null;
        translateTo(p0, l0);
        zoomed(dispatch);
      }
      function ended() {
        if (d3.event.touches.length) {
          var changed = d3.event.changedTouches;
          for (var i = 0, n = changed.length; i < n; ++i) {
            delete locations0[changed[i].identifier];
          }
          for (var identifier in locations0) {
            return void relocate();
          }
        }
        d3.selectAll(targets).on(zoomName, null);
        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
        dragRestore();
        zoomended(dispatch);
      }
    }
    function mousewheeled() {
      var dispatch = event.of(this, arguments);
      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), 
      d3_selection_interrupt.call(this), zoomstarted(dispatch);
      mousewheelTimer = setTimeout(function() {
        mousewheelTimer = null;
        zoomended(dispatch);
      }, 50);
      d3_eventPreventDefault();
      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
      translateTo(center0, translate0);
      zoomed(dispatch);
    }
    function dblclicked() {
      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;
      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
    }
    return d3.rebind(zoom, event, "on");
  };
  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;
  d3.color = d3_color;
  function d3_color() {}
  d3_color.prototype.toString = function() {
    return this.rgb() + "";
  };
  d3.hsl = d3_hsl;
  function d3_hsl(h, s, l) {
    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
  }
  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
  d3_hslPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, this.l / k);
  };
  d3_hslPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, k * this.l);
  };
  d3_hslPrototype.rgb = function() {
    return d3_hsl_rgb(this.h, this.s, this.l);
  };
  function d3_hsl_rgb(h, s, l) {
    var m1, m2;
    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
    l = l < 0 ? 0 : l > 1 ? 1 : l;
    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
    m1 = 2 * l - m2;
    function v(h) {
      if (h > 360) h -= 360; else if (h < 0) h += 360;
      if (h < 60) return m1 + (m2 - m1) * h / 60;
      if (h < 180) return m2;
      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
      return m1;
    }
    function vv(h) {
      return Math.round(v(h) * 255);
    }
    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
  }
  d3.hcl = d3_hcl;
  function d3_hcl(h, c, l) {
    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
  }
  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
  d3_hclPrototype.brighter = function(k) {
    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.darker = function(k) {
    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.rgb = function() {
    return d3_hcl_lab(this.h, this.c, this.l).rgb();
  };
  function d3_hcl_lab(h, c, l) {
    if (isNaN(h)) h = 0;
    if (isNaN(c)) c = 0;
    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
  }
  d3.lab = d3_lab;
  function d3_lab(l, a, b) {
    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
  }
  var d3_lab_K = 18;
  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
  var d3_labPrototype = d3_lab.prototype = new d3_color();
  d3_labPrototype.brighter = function(k) {
    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.darker = function(k) {
    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.rgb = function() {
    return d3_lab_rgb(this.l, this.a, this.b);
  };
  function d3_lab_rgb(l, a, b) {
    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
    x = d3_lab_xyz(x) * d3_lab_X;
    y = d3_lab_xyz(y) * d3_lab_Y;
    z = d3_lab_xyz(z) * d3_lab_Z;
    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
  }
  function d3_lab_hcl(l, a, b) {
    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
  }
  function d3_lab_xyz(x) {
    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
  }
  function d3_xyz_lab(x) {
    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
  }
  function d3_xyz_rgb(r) {
    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
  }
  d3.rgb = d3_rgb;
  function d3_rgb(r, g, b) {
    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
  }
  function d3_rgbNumber(value) {
    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
  }
  function d3_rgbString(value) {
    return d3_rgbNumber(value) + "";
  }
  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
  d3_rgbPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    var r = this.r, g = this.g, b = this.b, i = 30;
    if (!r && !g && !b) return new d3_rgb(i, i, i);
    if (r && r < i) r = i;
    if (g && g < i) g = i;
    if (b && b < i) b = i;
    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
  };
  d3_rgbPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_rgb(k * this.r, k * this.g, k * this.b);
  };
  d3_rgbPrototype.hsl = function() {
    return d3_rgb_hsl(this.r, this.g, this.b);
  };
  d3_rgbPrototype.toString = function() {
    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
  };
  function d3_rgb_hex(v) {
    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
  }
  function d3_rgb_parse(format, rgb, hsl) {
    var r = 0, g = 0, b = 0, m1, m2, color;
    m1 = /([a-z]+)\((.*)\)/i.exec(format);
    if (m1) {
      m2 = m1[2].split(",");
      switch (m1[1]) {
       case "hsl":
        {
          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
        }

       case "rgb":
        {
          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
        }
      }
    }
    if (color = d3_rgb_names.get(format.toLowerCase())) {
      return rgb(color.r, color.g, color.b);
    }
    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
      if (format.length === 4) {
        r = (color & 3840) >> 4;
        r = r >> 4 | r;
        g = color & 240;
        g = g >> 4 | g;
        b = color & 15;
        b = b << 4 | b;
      } else if (format.length === 7) {
        r = (color & 16711680) >> 16;
        g = (color & 65280) >> 8;
        b = color & 255;
      }
    }
    return rgb(r, g, b);
  }
  function d3_rgb_hsl(r, g, b) {
    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
    if (d) {
      s = l < .5 ? d / (max + min) : d / (2 - max - min);
      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
      h *= 60;
    } else {
      h = NaN;
      s = l > 0 && l < 1 ? 0 : h;
    }
    return new d3_hsl(h, s, l);
  }
  function d3_rgb_lab(r, g, b) {
    r = d3_rgb_xyz(r);
    g = d3_rgb_xyz(g);
    b = d3_rgb_xyz(b);
    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
  }
  function d3_rgb_xyz(r) {
    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
  }
  function d3_rgb_parseNumber(c) {
    var f = parseFloat(c);
    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
  }
  var d3_rgb_names = d3.map({
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  });
  d3_rgb_names.forEach(function(key, value) {
    d3_rgb_names.set(key, d3_rgbNumber(value));
  });
  function d3_functor(v) {
    return typeof v === "function" ? v : function() {
      return v;
    };
  }
  d3.functor = d3_functor;
  d3.xhr = d3_xhrType(d3_identity);
  function d3_xhrType(response) {
    return function(url, mimeType, callback) {
      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
      mimeType = null;
      return d3_xhr(url, mimeType, response, callback);
    };
  }
  function d3_xhr(url, mimeType, response, callback) {
    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
    if (this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
      request.readyState > 3 && respond();
    };
    function respond() {
      var status = request.status, result;
      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
        try {
          result = response.call(xhr, request);
        } catch (e) {
          dispatch.error.call(xhr, e);
          return;
        }
        dispatch.load.call(xhr, result);
      } else {
        dispatch.error.call(xhr, request);
      }
    }
    request.onprogress = function(event) {
      var o = d3.event;
      d3.event = event;
      try {
        dispatch.progress.call(xhr, request);
      } finally {
        d3.event = o;
      }
    };
    xhr.header = function(name, value) {
      name = (name + "").toLowerCase();
      if (arguments.length < 2) return headers[name];
      if (value == null) delete headers[name]; else headers[name] = value + "";
      return xhr;
    };
    xhr.mimeType = function(value) {
      if (!arguments.length) return mimeType;
      mimeType = value == null ? null : value + "";
      return xhr;
    };
    xhr.responseType = function(value) {
      if (!arguments.length) return responseType;
      responseType = value;
      return xhr;
    };
    xhr.response = function(value) {
      response = value;
      return xhr;
    };
    [ "get", "post" ].forEach(function(method) {
      xhr[method] = function() {
        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
      };
    });
    xhr.send = function(method, data, callback) {
      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
      request.open(method, url, true);
      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
      if (responseType != null) request.responseType = responseType;
      if (callback != null) xhr.on("error", callback).on("load", function(request) {
        callback(null, request);
      });
      dispatch.beforesend.call(xhr, request);
      request.send(data == null ? null : data);
      return xhr;
    };
    xhr.abort = function() {
      request.abort();
      return xhr;
    };
    d3.rebind(xhr, dispatch, "on");
    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
  }
  function d3_xhr_fixCallback(callback) {
    return callback.length === 1 ? function(error, request) {
      callback(error == null ? request : null);
    } : callback;
  }
  function d3_xhrHasResponse(request) {
    var type = request.responseType;
    return type && type !== "text" ? request.response : request.responseText;
  }
  d3.dsv = function(delimiter, mimeType) {
    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
    function dsv(url, row, callback) {
      if (arguments.length < 3) callback = row, row = null;
      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
      xhr.row = function(_) {
        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
      };
      return xhr;
    }
    function response(request) {
      return dsv.parse(request.responseText);
    }
    function typedResponse(f) {
      return function(request) {
        return dsv.parse(request.responseText, f);
      };
    }
    dsv.parse = function(text, f) {
      var o;
      return dsv.parseRows(text, function(row, i) {
        if (o) return o(row, i - 1);
        var a = new Function("d", "return {" + row.map(function(name, i) {
          return JSON.stringify(name) + ": d[" + i + "]";
        }).join(",") + "}");
        o = f ? function(row, i) {
          return f(a(row), i);
        } : a;
      });
    };
    dsv.parseRows = function(text, f) {
      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
      function token() {
        if (I >= N) return EOF;
        if (eol) return eol = false, EOL;
        var j = I;
        if (text.charCodeAt(j) === 34) {
          var i = j;
          while (i++ < N) {
            if (text.charCodeAt(i) === 34) {
              if (text.charCodeAt(i + 1) !== 34) break;
              ++i;
            }
          }
          I = i + 2;
          var c = text.charCodeAt(i + 1);
          if (c === 13) {
            eol = true;
            if (text.charCodeAt(i + 2) === 10) ++I;
          } else if (c === 10) {
            eol = true;
          }
          return text.slice(j + 1, i).replace(/""/g, '"');
        }
        while (I < N) {
          var c = text.charCodeAt(I++), k = 1;
          if (c === 10) eol = true; else if (c === 13) {
            eol = true;
            if (text.charCodeAt(I) === 10) ++I, ++k;
          } else if (c !== delimiterCode) continue;
          return text.slice(j, I - k);
        }
        return text.slice(j);
      }
      while ((t = token()) !== EOF) {
        var a = [];
        while (t !== EOL && t !== EOF) {
          a.push(t);
          t = token();
        }
        if (f && (a = f(a, n++)) == null) continue;
        rows.push(a);
      }
      return rows;
    };
    dsv.format = function(rows) {
      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
      var fieldSet = new d3_Set(), fields = [];
      rows.forEach(function(row) {
        for (var field in row) {
          if (!fieldSet.has(field)) {
            fields.push(fieldSet.add(field));
          }
        }
      });
      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
        return fields.map(function(field) {
          return formatValue(row[field]);
        }).join(delimiter);
      })).join("\n");
    };
    dsv.formatRows = function(rows) {
      return rows.map(formatRow).join("\n");
    };
    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }
    function formatValue(text) {
      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
    }
    return dsv;
  };
  d3.csv = d3.dsv(",", "text/csv");
  d3.tsv = d3.dsv("	", "text/tab-separated-values");
  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback) {
    setTimeout(callback, 17);
  };
  d3.timer = function(callback, delay, then) {
    var n = arguments.length;
    if (n < 2) delay = 0;
    if (n < 3) then = Date.now();
    var time = then + delay, timer = {
      c: callback,
      t: time,
      f: false,
      n: null
    };
    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
    d3_timer_queueTail = timer;
    if (!d3_timer_interval) {
      d3_timer_timeout = clearTimeout(d3_timer_timeout);
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  };
  function d3_timer_step() {
    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
    if (delay > 24) {
      if (isFinite(delay)) {
        clearTimeout(d3_timer_timeout);
        d3_timer_timeout = setTimeout(d3_timer_step, delay);
      }
      d3_timer_interval = 0;
    } else {
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  }
  d3.timer.flush = function() {
    d3_timer_mark();
    d3_timer_sweep();
  };
  function d3_timer_mark() {
    var now = Date.now();
    d3_timer_active = d3_timer_queueHead;
    while (d3_timer_active) {
      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);
      d3_timer_active = d3_timer_active.n;
    }
    return now;
  }
  function d3_timer_sweep() {
    var t0, t1 = d3_timer_queueHead, time = Infinity;
    while (t1) {
      if (t1.f) {
        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
      } else {
        if (t1.t < time) time = t1.t;
        t1 = (t0 = t1).n;
      }
    }
    d3_timer_queueTail = t0;
    return time;
  }
  function d3_format_precision(x, p) {
    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
  }
  d3.round = function(x, n) {
    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
  };
  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
  d3.formatPrefix = function(value, precision) {
    var i = 0;
    if (value) {
      if (value < 0) value *= -1;
      if (precision) value = d3.round(value, d3_format_precision(value, precision));
      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
    }
    return d3_formatPrefixes[8 + i / 3];
  };
  function d3_formatPrefix(d, i) {
    var k = Math.pow(10, abs(8 - i) * 3);
    return {
      scale: i > 8 ? function(d) {
        return d / k;
      } : function(d) {
        return d * k;
      },
      symbol: d
    };
  }
  function d3_locale_numberFormat(locale) {
    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {
      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;
      while (i > 0 && g > 0) {
        if (length + g + 1 > width) g = Math.max(1, width - length);
        t.push(value.substring(i -= g, i + g));
        if ((length += g + 1) > width) break;
        g = locale_grouping[j = (j + 1) % locale_grouping.length];
      }
      return t.reverse().join(locale_thousands);
    } : d3_identity;
    return function(specifier) {
      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "-", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false, exponent = true;
      if (precision) precision = +precision.substring(1);
      if (zfill || fill === "0" && align === "=") {
        zfill = fill = "0";
        align = "=";
      }
      switch (type) {
       case "n":
        comma = true;
        type = "g";
        break;

       case "%":
        scale = 100;
        suffix = "%";
        type = "f";
        break;

       case "p":
        scale = 100;
        suffix = "%";
        type = "r";
        break;

       case "b":
       case "o":
       case "x":
       case "X":
        if (symbol === "#") prefix = "0" + type.toLowerCase();

       case "c":
        exponent = false;

       case "d":
        integer = true;
        precision = 0;
        break;

       case "s":
        scale = -1;
        type = "r";
        break;
      }
      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
      if (type == "r" && !precision) type = "g";
      if (precision != null) {
        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
      }
      type = d3_format_types.get(type) || d3_format_typeDefault;
      var zcomma = zfill && comma;
      return function(value) {
        var fullSuffix = suffix;
        if (integer && value % 1) return "";
        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;
        if (scale < 0) {
          var unit = d3.formatPrefix(value, precision);
          value = unit.scale(value);
          fullSuffix = unit.symbol + suffix;
        } else {
          value *= scale;
        }
        value = type(value, precision);
        var i = value.lastIndexOf("."), before, after;
        if (i < 0) {
          var j = exponent ? value.lastIndexOf("e") : -1;
          if (j < 0) before = value, after = ""; else before = value.substring(0, j), after = value.substring(j);
        } else {
          before = value.substring(0, i);
          after = locale_decimal + value.substring(i + 1);
        }
        if (!zfill && comma) before = formatGroup(before, Infinity);
        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
        negative += prefix;
        value = before + after;
        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
      };
    };
  }
  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
  var d3_format_types = d3.map({
    b: function(x) {
      return x.toString(2);
    },
    c: function(x) {
      return String.fromCharCode(x);
    },
    o: function(x) {
      return x.toString(8);
    },
    x: function(x) {
      return x.toString(16);
    },
    X: function(x) {
      return x.toString(16).toUpperCase();
    },
    g: function(x, p) {
      return x.toPrecision(p);
    },
    e: function(x, p) {
      return x.toExponential(p);
    },
    f: function(x, p) {
      return x.toFixed(p);
    },
    r: function(x, p) {
      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
    }
  });
  function d3_format_typeDefault(x) {
    return x + "";
  }
  var d3_time = d3.time = {}, d3_date = Date;
  function d3_date_utc() {
    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
  }
  d3_date_utc.prototype = {
    getDate: function() {
      return this._.getUTCDate();
    },
    getDay: function() {
      return this._.getUTCDay();
    },
    getFullYear: function() {
      return this._.getUTCFullYear();
    },
    getHours: function() {
      return this._.getUTCHours();
    },
    getMilliseconds: function() {
      return this._.getUTCMilliseconds();
    },
    getMinutes: function() {
      return this._.getUTCMinutes();
    },
    getMonth: function() {
      return this._.getUTCMonth();
    },
    getSeconds: function() {
      return this._.getUTCSeconds();
    },
    getTime: function() {
      return this._.getTime();
    },
    getTimezoneOffset: function() {
      return 0;
    },
    valueOf: function() {
      return this._.valueOf();
    },
    setDate: function() {
      d3_time_prototype.setUTCDate.apply(this._, arguments);
    },
    setDay: function() {
      d3_time_prototype.setUTCDay.apply(this._, arguments);
    },
    setFullYear: function() {
      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
    },
    setHours: function() {
      d3_time_prototype.setUTCHours.apply(this._, arguments);
    },
    setMilliseconds: function() {
      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
    },
    setMinutes: function() {
      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
    },
    setMonth: function() {
      d3_time_prototype.setUTCMonth.apply(this._, arguments);
    },
    setSeconds: function() {
      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
    },
    setTime: function() {
      d3_time_prototype.setTime.apply(this._, arguments);
    }
  };
  var d3_time_prototype = Date.prototype;
  function d3_time_interval(local, step, number) {
    function round(date) {
      var d0 = local(date), d1 = offset(d0, 1);
      return date - d0 < d1 - date ? d0 : d1;
    }
    function ceil(date) {
      step(date = local(new d3_date(date - 1)), 1);
      return date;
    }
    function offset(date, k) {
      step(date = new d3_date(+date), k);
      return date;
    }
    function range(t0, t1, dt) {
      var time = ceil(t0), times = [];
      if (dt > 1) {
        while (time < t1) {
          if (!(number(time) % dt)) times.push(new Date(+time));
          step(time, 1);
        }
      } else {
        while (time < t1) times.push(new Date(+time)), step(time, 1);
      }
      return times;
    }
    function range_utc(t0, t1, dt) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = t0;
        return range(utc, t1, dt);
      } finally {
        d3_date = Date;
      }
    }
    local.floor = local;
    local.round = round;
    local.ceil = ceil;
    local.offset = offset;
    local.range = range;
    var utc = local.utc = d3_time_interval_utc(local);
    utc.floor = utc;
    utc.round = d3_time_interval_utc(round);
    utc.ceil = d3_time_interval_utc(ceil);
    utc.offset = d3_time_interval_utc(offset);
    utc.range = range_utc;
    return local;
  }
  function d3_time_interval_utc(method) {
    return function(date, k) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = date;
        return method(utc, k)._;
      } finally {
        d3_date = Date;
      }
    };
  }
  d3_time.year = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setMonth(0, 1);
    return date;
  }, function(date, offset) {
    date.setFullYear(date.getFullYear() + offset);
  }, function(date) {
    return date.getFullYear();
  });
  d3_time.years = d3_time.year.range;
  d3_time.years.utc = d3_time.year.utc.range;
  d3_time.day = d3_time_interval(function(date) {
    var day = new d3_date(2e3, 0);
    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
    return day;
  }, function(date, offset) {
    date.setDate(date.getDate() + offset);
  }, function(date) {
    return date.getDate() - 1;
  });
  d3_time.days = d3_time.day.range;
  d3_time.days.utc = d3_time.day.utc.range;
  d3_time.dayOfYear = function(date) {
    var year = d3_time.year(date);
    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
  };
  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
    i = 7 - i;
    var interval = d3_time[day] = d3_time_interval(function(date) {
      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
      return date;
    }, function(date, offset) {
      date.setDate(date.getDate() + Math.floor(offset) * 7);
    }, function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
    });
    d3_time[day + "s"] = interval.range;
    d3_time[day + "s"].utc = interval.utc.range;
    d3_time[day + "OfYear"] = function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
    };
  });
  d3_time.week = d3_time.sunday;
  d3_time.weeks = d3_time.sunday.range;
  d3_time.weeks.utc = d3_time.sunday.utc.range;
  d3_time.weekOfYear = d3_time.sundayOfYear;
  function d3_locale_timeFormat(locale) {
    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
    function d3_time_format(template) {
      var n = template.length;
      function format(date) {
        var string = [], i = -1, j = 0, c, p, f;
        while (++i < n) {
          if (template.charCodeAt(i) === 37) {
            string.push(template.slice(j, i));
            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
            string.push(c);
            j = i + 1;
          }
        }
        string.push(template.slice(j, i));
        return string.join("");
      }
      format.parse = function(string) {
        var d = {
          y: 1900,
          m: 0,
          d: 1,
          H: 0,
          M: 0,
          S: 0,
          L: 0,
          Z: null
        }, i = d3_time_parse(d, template, string, 0);
        if (i != string.length) return null;
        if ("p" in d) d.H = d.H % 12 + d.p * 12;
        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("w" in d && ("W" in d || "U" in d)) {
          date.setFullYear(d.y, 0, 1);
          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
        } else date.setFullYear(d.y, d.m, d.d);
        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
        return localZ ? date._ : date;
      };
      format.toString = function() {
        return template;
      };
      return format;
    }
    function d3_time_parse(date, template, string, j) {
      var c, p, t, i = 0, n = template.length, m = string.length;
      while (i < n) {
        if (j >= m) return -1;
        c = template.charCodeAt(i++);
        if (c === 37) {
          t = template.charAt(i++);
          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
          if (!p || (j = p(date, string, j)) < 0) return -1;
        } else if (c != string.charCodeAt(j++)) {
          return -1;
        }
      }
      return j;
    }
    d3_time_format.utc = function(template) {
      var local = d3_time_format(template);
      function format(date) {
        try {
          d3_date = d3_date_utc;
          var utc = new d3_date();
          utc._ = date;
          return local(utc);
        } finally {
          d3_date = Date;
        }
      }
      format.parse = function(string) {
        try {
          d3_date = d3_date_utc;
          var date = local.parse(string);
          return date && date._;
        } finally {
          d3_date = Date;
        }
      };
      format.toString = local.toString;
      return format;
    };
    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
    locale_periods.forEach(function(p, i) {
      d3_time_periodLookup.set(p.toLowerCase(), i);
    });
    var d3_time_formats = {
      a: function(d) {
        return locale_shortDays[d.getDay()];
      },
      A: function(d) {
        return locale_days[d.getDay()];
      },
      b: function(d) {
        return locale_shortMonths[d.getMonth()];
      },
      B: function(d) {
        return locale_months[d.getMonth()];
      },
      c: d3_time_format(locale_dateTime),
      d: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      e: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      H: function(d, p) {
        return d3_time_formatPad(d.getHours(), p, 2);
      },
      I: function(d, p) {
        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
      },
      j: function(d, p) {
        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
      },
      L: function(d, p) {
        return d3_time_formatPad(d.getMilliseconds(), p, 3);
      },
      m: function(d, p) {
        return d3_time_formatPad(d.getMonth() + 1, p, 2);
      },
      M: function(d, p) {
        return d3_time_formatPad(d.getMinutes(), p, 2);
      },
      p: function(d) {
        return locale_periods[+(d.getHours() >= 12)];
      },
      S: function(d, p) {
        return d3_time_formatPad(d.getSeconds(), p, 2);
      },
      U: function(d, p) {
        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
      },
      w: function(d) {
        return d.getDay();
      },
      W: function(d, p) {
        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
      },
      x: d3_time_format(locale_date),
      X: d3_time_format(locale_time),
      y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
      },
      Y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
      },
      Z: d3_time_zone,
      "%": function() {
        return "%";
      }
    };
    var d3_time_parsers = {
      a: d3_time_parseWeekdayAbbrev,
      A: d3_time_parseWeekday,
      b: d3_time_parseMonthAbbrev,
      B: d3_time_parseMonth,
      c: d3_time_parseLocaleFull,
      d: d3_time_parseDay,
      e: d3_time_parseDay,
      H: d3_time_parseHour24,
      I: d3_time_parseHour24,
      j: d3_time_parseDayOfYear,
      L: d3_time_parseMilliseconds,
      m: d3_time_parseMonthNumber,
      M: d3_time_parseMinutes,
      p: d3_time_parseAmPm,
      S: d3_time_parseSeconds,
      U: d3_time_parseWeekNumberSunday,
      w: d3_time_parseWeekdayNumber,
      W: d3_time_parseWeekNumberMonday,
      x: d3_time_parseLocaleDate,
      X: d3_time_parseLocaleTime,
      y: d3_time_parseYear,
      Y: d3_time_parseFullYear,
      Z: d3_time_parseZone,
      "%": d3_time_parseLiteralPercent
    };
    function d3_time_parseWeekdayAbbrev(date, string, i) {
      d3_time_dayAbbrevRe.lastIndex = 0;
      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseWeekday(date, string, i) {
      d3_time_dayRe.lastIndex = 0;
      var n = d3_time_dayRe.exec(string.slice(i));
      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonthAbbrev(date, string, i) {
      d3_time_monthAbbrevRe.lastIndex = 0;
      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonth(date, string, i) {
      d3_time_monthRe.lastIndex = 0;
      var n = d3_time_monthRe.exec(string.slice(i));
      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseLocaleFull(date, string, i) {
      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
    }
    function d3_time_parseLocaleDate(date, string, i) {
      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
    }
    function d3_time_parseLocaleTime(date, string, i) {
      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
    }
    function d3_time_parseAmPm(date, string, i) {
      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
      return n == null ? -1 : (date.p = n, i);
    }
    return d3_time_format;
  }
  var d3_time_formatPads = {
    "-": "",
    _: " ",
    "0": "0"
  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
  function d3_time_formatPad(value, fill, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
  }
  function d3_time_formatRe(names) {
    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
  }
  function d3_time_formatLookup(names) {
    var map = new d3_Map(), i = -1, n = names.length;
    while (++i < n) map.set(names[i].toLowerCase(), i);
    return map;
  }
  function d3_time_parseWeekdayNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
    return n ? (date.w = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberSunday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i));
    return n ? (date.U = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberMonday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i));
    return n ? (date.W = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseFullYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
    return n ? (date.y = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
  }
  function d3_time_parseZone(date, string, i) {
    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, 
    i + 5) : -1;
  }
  function d3_time_expandYear(d) {
    return d + (d > 68 ? 1900 : 2e3);
  }
  function d3_time_parseMonthNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
  }
  function d3_time_parseDay(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.d = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseDayOfYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
    return n ? (date.j = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseHour24(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.H = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMinutes(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.M = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseSeconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.S = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMilliseconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
    return n ? (date.L = +n[0], i + n[0].length) : -1;
  }
  function d3_time_zone(d) {
    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = abs(z) / 60 | 0, zm = abs(z) % 60;
    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
  }
  function d3_time_parseLiteralPercent(date, string, i) {
    d3_time_percentRe.lastIndex = 0;
    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
    return n ? i + n[0].length : -1;
  }
  function d3_time_formatMulti(formats) {
    var n = formats.length, i = -1;
    while (++i < n) formats[i][0] = this(formats[i][0]);
    return function(date) {
      var i = 0, f = formats[i];
      while (!f[1](date)) f = formats[++i];
      return f[0](date);
    };
  }
  d3.locale = function(locale) {
    return {
      numberFormat: d3_locale_numberFormat(locale),
      timeFormat: d3_locale_timeFormat(locale)
    };
  };
  var d3_locale_enUS = d3.locale({
    decimal: ".",
    thousands: ",",
    grouping: [ 3 ],
    currency: [ "$", "" ],
    dateTime: "%a %b %e %X %Y",
    date: "%m/%d/%Y",
    time: "%H:%M:%S",
    periods: [ "AM", "PM" ],
    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
  });
  d3.format = d3_locale_enUS.numberFormat;
  d3.geo = {};
  function d3_adder() {}
  d3_adder.prototype = {
    s: 0,
    t: 0,
    add: function(y) {
      d3_adderSum(y, this.t, d3_adderTemp);
      d3_adderSum(d3_adderTemp.s, this.s, this);
      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
    },
    reset: function() {
      this.s = this.t = 0;
    },
    valueOf: function() {
      return this.s;
    }
  };
  var d3_adderTemp = new d3_adder();
  function d3_adderSum(a, b, o) {
    var x = o.s = a + b, bv = x - a, av = x - bv;
    o.t = a - av + (b - bv);
  }
  d3.geo.stream = function(object, listener) {
    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
      d3_geo_streamObjectType[object.type](object, listener);
    } else {
      d3_geo_streamGeometry(object, listener);
    }
  };
  function d3_geo_streamGeometry(geometry, listener) {
    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
      d3_geo_streamGeometryType[geometry.type](geometry, listener);
    }
  }
  var d3_geo_streamObjectType = {
    Feature: function(feature, listener) {
      d3_geo_streamGeometry(feature.geometry, listener);
    },
    FeatureCollection: function(object, listener) {
      var features = object.features, i = -1, n = features.length;
      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
    }
  };
  var d3_geo_streamGeometryType = {
    Sphere: function(object, listener) {
      listener.sphere();
    },
    Point: function(object, listener) {
      object = object.coordinates;
      listener.point(object[0], object[1], object[2]);
    },
    MultiPoint: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
    },
    LineString: function(object, listener) {
      d3_geo_streamLine(object.coordinates, listener, 0);
    },
    MultiLineString: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
    },
    Polygon: function(object, listener) {
      d3_geo_streamPolygon(object.coordinates, listener);
    },
    MultiPolygon: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
    },
    GeometryCollection: function(object, listener) {
      var geometries = object.geometries, i = -1, n = geometries.length;
      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
    }
  };
  function d3_geo_streamLine(coordinates, listener, closed) {
    var i = -1, n = coordinates.length - closed, coordinate;
    listener.lineStart();
    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
    listener.lineEnd();
  }
  function d3_geo_streamPolygon(coordinates, listener) {
    var i = -1, n = coordinates.length;
    listener.polygonStart();
    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
    listener.polygonEnd();
  }
  d3.geo.area = function(object) {
    d3_geo_areaSum = 0;
    d3.geo.stream(object, d3_geo_area);
    return d3_geo_areaSum;
  };
  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
  var d3_geo_area = {
    sphere: function() {
      d3_geo_areaSum += 4 * π;
    },
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_areaRingSum.reset();
      d3_geo_area.lineStart = d3_geo_areaRingStart;
    },
    polygonEnd: function() {
      var area = 2 * d3_geo_areaRingSum;
      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
    }
  };
  function d3_geo_areaRingStart() {
    var λ00, φ00, λ0, cosφ0, sinφ0;
    d3_geo_area.point = function(λ, φ) {
      d3_geo_area.point = nextPoint;
      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
      sinφ0 = Math.sin(φ);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      φ = φ * d3_radians / 2 + π / 4;
      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
      d3_geo_areaRingSum.add(Math.atan2(v, u));
      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
    }
    d3_geo_area.lineEnd = function() {
      nextPoint(λ00, φ00);
    };
  }
  function d3_geo_cartesian(spherical) {
    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
  }
  function d3_geo_cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }
  function d3_geo_cartesianCross(a, b) {
    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
  }
  function d3_geo_cartesianAdd(a, b) {
    a[0] += b[0];
    a[1] += b[1];
    a[2] += b[2];
  }
  function d3_geo_cartesianScale(vector, k) {
    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
  }
  function d3_geo_cartesianNormalize(d) {
    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l;
    d[1] /= l;
    d[2] /= l;
  }
  function d3_geo_spherical(cartesian) {
    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
  }
  function d3_geo_sphericalEqual(a, b) {
    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
  }
  d3.geo.bounds = function() {
    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
    var bound = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        bound.point = ringPoint;
        bound.lineStart = ringStart;
        bound.lineEnd = ringEnd;
        dλSum = 0;
        d3_geo_area.polygonStart();
      },
      polygonEnd: function() {
        d3_geo_area.polygonEnd();
        bound.point = point;
        bound.lineStart = lineStart;
        bound.lineEnd = lineEnd;
        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
        range[0] = λ0, range[1] = λ1;
      }
    };
    function point(λ, φ) {
      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
      if (φ < φ0) φ0 = φ;
      if (φ > φ1) φ1 = φ;
    }
    function linePoint(λ, φ) {
      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
      if (p0) {
        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
        d3_geo_cartesianNormalize(inflection);
        inflection = d3_geo_spherical(inflection);
        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = inflection[1] * d3_degrees;
          if (φi > φ1) φ1 = φi;
        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = -inflection[1] * d3_degrees;
          if (φi < φ0) φ0 = φi;
        } else {
          if (φ < φ0) φ0 = φ;
          if (φ > φ1) φ1 = φ;
        }
        if (antimeridian) {
          if (λ < λ_) {
            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
          } else {
            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
          }
        } else {
          if (λ1 >= λ0) {
            if (λ < λ0) λ0 = λ;
            if (λ > λ1) λ1 = λ;
          } else {
            if (λ > λ_) {
              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
            } else {
              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
            }
          }
        }
      } else {
        point(λ, φ);
      }
      p0 = p, λ_ = λ;
    }
    function lineStart() {
      bound.point = linePoint;
    }
    function lineEnd() {
      range[0] = λ0, range[1] = λ1;
      bound.point = point;
      p0 = null;
    }
    function ringPoint(λ, φ) {
      if (p0) {
        var dλ = λ - λ_;
        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
      } else λ__ = λ, φ__ = φ;
      d3_geo_area.point(λ, φ);
      linePoint(λ, φ);
    }
    function ringStart() {
      d3_geo_area.lineStart();
    }
    function ringEnd() {
      ringPoint(λ__, φ__);
      d3_geo_area.lineEnd();
      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
      range[0] = λ0, range[1] = λ1;
      p0 = null;
    }
    function angle(λ0, λ1) {
      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
    }
    function compareRanges(a, b) {
      return a[0] - b[0];
    }
    function withinRange(x, range) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }
    return function(feature) {
      φ1 = λ1 = -(λ0 = φ0 = Infinity);
      ranges = [];
      d3.geo.stream(feature, bound);
      var n = ranges.length;
      if (n) {
        ranges.sort(compareRanges);
        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
          b = ranges[i];
          if (withinRange(b[0], a) || withinRange(b[1], a)) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }
        var best = -Infinity, dλ;
        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
          b = merged[i];
          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
        }
      }
      ranges = range = null;
      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
    };
  }();
  d3.geo.centroid = function(object) {
    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
    d3.geo.stream(object, d3_geo_centroid);
    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
    if (m < ε2) {
      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
      m = x * x + y * y + z * z;
      if (m < ε2) return [ NaN, NaN ];
    }
    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
  };
  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
  var d3_geo_centroid = {
    sphere: d3_noop,
    point: d3_geo_centroidPoint,
    lineStart: d3_geo_centroidLineStart,
    lineEnd: d3_geo_centroidLineEnd,
    polygonStart: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
    }
  };
  function d3_geo_centroidPoint(λ, φ) {
    λ *= d3_radians;
    var cosφ = Math.cos(φ *= d3_radians);
    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
  }
  function d3_geo_centroidPointXYZ(x, y, z) {
    ++d3_geo_centroidW0;
    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
  }
  function d3_geo_centroidLineStart() {
    var x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroid.point = nextPoint;
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_centroidLineEnd() {
    d3_geo_centroid.point = d3_geo_centroidPoint;
  }
  function d3_geo_centroidRingStart() {
    var λ00, φ00, x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ00 = λ, φ00 = φ;
      d3_geo_centroid.point = nextPoint;
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    d3_geo_centroid.lineEnd = function() {
      nextPoint(λ00, φ00);
      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
      d3_geo_centroid.point = d3_geo_centroidPoint;
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
      d3_geo_centroidX2 += v * cx;
      d3_geo_centroidY2 += v * cy;
      d3_geo_centroidZ2 += v * cz;
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_compose(a, b) {
    function compose(x, y) {
      return x = a(x, y), b(x[0], x[1]);
    }
    if (a.invert && b.invert) compose.invert = function(x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
    return compose;
  }
  function d3_true() {
    return true;
  }
  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
    var subject = [], clip = [];
    segments.forEach(function(segment) {
      if ((n = segment.length - 1) <= 0) return;
      var n, p0 = segment[0], p1 = segment[n];
      if (d3_geo_sphericalEqual(p0, p1)) {
        listener.lineStart();
        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
        listener.lineEnd();
        return;
      }
      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
      a.o = b;
      subject.push(a);
      clip.push(b);
      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
      a.o = b;
      subject.push(a);
      clip.push(b);
    });
    clip.sort(compare);
    d3_geo_clipPolygonLinkCircular(subject);
    d3_geo_clipPolygonLinkCircular(clip);
    if (!subject.length) return;
    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
      clip[i].e = entry = !entry;
    }
    var start = subject[0], points, point;
    while (1) {
      var current = start, isSubject = true;
      while (current.v) if ((current = current.n) === start) return;
      points = current.z;
      listener.lineStart();
      do {
        current.v = current.o.v = true;
        if (current.e) {
          if (isSubject) {
            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.n.x, 1, listener);
          }
          current = current.n;
        } else {
          if (isSubject) {
            points = current.p.z;
            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.p.x, -1, listener);
          }
          current = current.p;
        }
        current = current.o;
        points = current.z;
        isSubject = !isSubject;
      } while (!current.v);
      listener.lineEnd();
    }
  }
  function d3_geo_clipPolygonLinkCircular(array) {
    if (!(n = array.length)) return;
    var n, i = 0, a = array[0], b;
    while (++i < n) {
      a.n = b = array[i];
      b.p = a;
      a = b;
    }
    a.n = b = array[0];
    b.p = a;
  }
  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
    this.x = point;
    this.z = points;
    this.o = other;
    this.e = entry;
    this.v = false;
    this.n = this.p = null;
  }
  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
    return function(rotate, listener) {
      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          clip.point = pointRing;
          clip.lineStart = ringStart;
          clip.lineEnd = ringEnd;
          segments = [];
          polygon = [];
        },
        polygonEnd: function() {
          clip.point = point;
          clip.lineStart = lineStart;
          clip.lineEnd = lineEnd;
          segments = d3.merge(segments);
          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
          if (segments.length) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
          } else if (clipStartInside) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            interpolate(null, null, 1, listener);
            listener.lineEnd();
          }
          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
          segments = polygon = null;
        },
        sphere: function() {
          listener.polygonStart();
          listener.lineStart();
          interpolate(null, null, 1, listener);
          listener.lineEnd();
          listener.polygonEnd();
        }
      };
      function point(λ, φ) {
        var point = rotate(λ, φ);
        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
      }
      function pointLine(λ, φ) {
        var point = rotate(λ, φ);
        line.point(point[0], point[1]);
      }
      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }
      function lineEnd() {
        clip.point = point;
        line.lineEnd();
      }
      var segments;
      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
      function pointRing(λ, φ) {
        ring.push([ λ, φ ]);
        var point = rotate(λ, φ);
        ringListener.point(point[0], point[1]);
      }
      function ringStart() {
        ringListener.lineStart();
        ring = [];
      }
      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringListener.lineEnd();
        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (!n) return;
        if (clean & 1) {
          segment = ringSegments[0];
          var n = segment.length - 1, i = -1, point;
          if (n > 0) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            while (++i < n) listener.point((point = segment[i])[0], point[1]);
            listener.lineEnd();
          }
          return;
        }
        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
      }
      return clip;
    };
  }
  function d3_geo_clipSegmentLength1(segment) {
    return segment.length > 1;
  }
  function d3_geo_clipBufferListener() {
    var lines = [], line;
    return {
      lineStart: function() {
        lines.push(line = []);
      },
      point: function(λ, φ) {
        line.push([ λ, φ ]);
      },
      lineEnd: d3_noop,
      buffer: function() {
        var buffer = lines;
        lines = [];
        line = null;
        return buffer;
      },
      rejoin: function() {
        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
      }
    };
  }
  function d3_geo_clipSort(a, b) {
    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
  }
  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
  function d3_geo_clipAntimeridianLine(listener) {
    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
    return {
      lineStart: function() {
        listener.lineStart();
        clean = 1;
      },
      point: function(λ1, φ1) {
        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
        if (abs(dλ - π) < ε) {
          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          listener.point(λ1, φ0);
          clean = 0;
        } else if (sλ0 !== sλ1 && dλ >= π) {
          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          clean = 0;
        }
        listener.point(λ0 = λ1, φ0 = φ1);
        sλ0 = sλ1;
      },
      lineEnd: function() {
        listener.lineEnd();
        λ0 = φ0 = NaN;
      },
      clean: function() {
        return 2 - clean;
      }
    };
  }
  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
  }
  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
    var φ;
    if (from == null) {
      φ = direction * halfπ;
      listener.point(-π, φ);
      listener.point(0, φ);
      listener.point(π, φ);
      listener.point(π, 0);
      listener.point(π, -φ);
      listener.point(0, -φ);
      listener.point(-π, -φ);
      listener.point(-π, 0);
      listener.point(-π, φ);
    } else if (abs(from[0] - to[0]) > ε) {
      var s = from[0] < to[0] ? π : -π;
      φ = direction * s / 2;
      listener.point(-s, φ);
      listener.point(0, φ);
      listener.point(s, φ);
    } else {
      listener.point(to[0], to[1]);
    }
  }
  function d3_geo_pointInPolygon(point, polygon) {
    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
    d3_geo_areaRingSum.reset();
    for (var i = 0, n = polygon.length; i < n; ++i) {
      var ring = polygon[i], m = ring.length;
      if (!m) continue;
      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
      while (true) {
        if (j === m) j = 0;
        point = ring[j];
        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
          d3_geo_cartesianNormalize(arc);
          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
          d3_geo_cartesianNormalize(intersection);
          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
          }
        }
        if (!j++) break;
        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
      }
    }
    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
  }
  function d3_geo_clipCircle(radius) {
    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
    function visible(λ, φ) {
      return Math.cos(λ) * Math.cos(φ) > cr;
    }
    function clipLine(listener) {
      var point0, c0, v0, v00, clean;
      return {
        lineStart: function() {
          v00 = v0 = false;
          clean = 1;
        },
        point: function(λ, φ) {
          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
          if (!point0 && (v00 = v0 = v)) listener.lineStart();
          if (v !== v0) {
            point2 = intersect(point0, point1);
            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
              point1[0] += ε;
              point1[1] += ε;
              v = visible(point1[0], point1[1]);
            }
          }
          if (v !== v0) {
            clean = 0;
            if (v) {
              listener.lineStart();
              point2 = intersect(point1, point0);
              listener.point(point2[0], point2[1]);
            } else {
              point2 = intersect(point0, point1);
              listener.point(point2[0], point2[1]);
              listener.lineEnd();
            }
            point0 = point2;
          } else if (notHemisphere && point0 && smallRadius ^ v) {
            var t;
            if (!(c & c0) && (t = intersect(point1, point0, true))) {
              clean = 0;
              if (smallRadius) {
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
              } else {
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
              }
            }
          }
          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
            listener.point(point1[0], point1[1]);
          }
          point0 = point1, v0 = v, c0 = c;
        },
        lineEnd: function() {
          if (v0) listener.lineEnd();
          point0 = null;
        },
        clean: function() {
          return clean | (v00 && v0) << 1;
        }
      };
    }
    function intersect(a, b, two) {
      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
      if (!determinant) return !two && a;
      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
      d3_geo_cartesianAdd(A, B);
      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
      if (t2 < 0) return;
      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
      d3_geo_cartesianAdd(q, A);
      q = d3_geo_spherical(q);
      if (!two) return q;
      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
        d3_geo_cartesianAdd(q1, A);
        return [ q, d3_geo_spherical(q1) ];
      }
    }
    function code(λ, φ) {
      var r = smallRadius ? radius : π - radius, code = 0;
      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
      return code;
    }
  }
  function d3_geom_clipLine(x0, y0, x1, y1) {
    return function(line) {
      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;
      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;
      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;
      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;
      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      if (t0 > 0) line.a = {
        x: ax + t0 * dx,
        y: ay + t0 * dy
      };
      if (t1 < 1) line.b = {
        x: ax + t1 * dx,
        y: ay + t1 * dy
      };
      return line;
    };
  }
  var d3_geo_clipExtentMAX = 1e9;
  d3.geo.clipExtent = function() {
    var x0, y0, x1, y1, stream, clip, clipExtent = {
      stream: function(output) {
        if (stream) stream.valid = false;
        stream = clip(output);
        stream.valid = true;
        return stream;
      },
      extent: function(_) {
        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
        if (stream) stream.valid = false, stream = null;
        return clipExtent;
      }
    };
    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
  };
  function d3_geo_clipExtent(x0, y0, x1, y1) {
    return function(listener) {
      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          listener = bufferListener;
          segments = [];
          polygon = [];
          clean = true;
        },
        polygonEnd: function() {
          listener = listener_;
          segments = d3.merge(segments);
          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
          if (inside || visible) {
            listener.polygonStart();
            if (inside) {
              listener.lineStart();
              interpolate(null, null, 1, listener);
              listener.lineEnd();
            }
            if (visible) {
              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
            }
            listener.polygonEnd();
          }
          segments = polygon = ring = null;
        }
      };
      function insidePolygon(p) {
        var wn = 0, n = polygon.length, y = p[1];
        for (var i = 0; i < n; ++i) {
          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
            b = v[j];
            if (a[1] <= y) {
              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
            } else {
              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
            }
            a = b;
          }
        }
        return wn !== 0;
      }
      function interpolate(from, to, direction, listener) {
        var a = 0, a1 = 0;
        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
          do {
            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          } while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          listener.point(to[0], to[1]);
        }
      }
      function pointVisible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }
      function point(x, y) {
        if (pointVisible(x, y)) listener.point(x, y);
      }
      var x__, y__, v__, x_, y_, v_, first, clean;
      function lineStart() {
        clip.point = linePoint;
        if (polygon) polygon.push(ring = []);
        first = true;
        v_ = false;
        x_ = y_ = NaN;
      }
      function lineEnd() {
        if (segments) {
          linePoint(x__, y__);
          if (v__ && v_) bufferListener.rejoin();
          segments.push(bufferListener.buffer());
        }
        clip.point = point;
        if (v_) listener.lineEnd();
      }
      function linePoint(x, y) {
        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
        var v = pointVisible(x, y);
        if (polygon) ring.push([ x, y ]);
        if (first) {
          x__ = x, y__ = y, v__ = v;
          first = false;
          if (v) {
            listener.lineStart();
            listener.point(x, y);
          }
        } else {
          if (v && v_) listener.point(x, y); else {
            var l = {
              a: {
                x: x_,
                y: y_
              },
              b: {
                x: x,
                y: y
              }
            };
            if (clipLine(l)) {
              if (!v_) {
                listener.lineStart();
                listener.point(l.a.x, l.a.y);
              }
              listener.point(l.b.x, l.b.y);
              if (!v) listener.lineEnd();
              clean = false;
            } else if (v) {
              listener.lineStart();
              listener.point(x, y);
              clean = false;
            }
          }
        }
        x_ = x, y_ = y, v_ = v;
      }
      return clip;
    };
    function corner(p, direction) {
      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
    }
    function compare(a, b) {
      return comparePoints(a.x, b.x);
    }
    function comparePoints(a, b) {
      var ca = corner(a, 1), cb = corner(b, 1);
      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
    }
  }
  function d3_geo_conic(projectAt) {
    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
    p.parallels = function(_) {
      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
    };
    return p;
  }
  function d3_geo_conicEqualArea(φ0, φ1) {
    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
    function forward(λ, φ) {
      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = ρ0 - y;
      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
    };
    return forward;
  }
  (d3.geo.conicEqualArea = function() {
    return d3_geo_conic(d3_geo_conicEqualArea);
  }).raw = d3_geo_conicEqualArea;
  d3.geo.albers = function() {
    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
  };
  d3.geo.albersUsa = function() {
    var lower48 = d3.geo.albers();
    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
    var point, pointStream = {
      point: function(x, y) {
        point = [ x, y ];
      }
    }, lower48Point, alaskaPoint, hawaiiPoint;
    function albersUsa(coordinates) {
      var x = coordinates[0], y = coordinates[1];
      point = null;
      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
      return point;
    }
    albersUsa.invert = function(coordinates) {
      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
    };
    albersUsa.stream = function(stream) {
      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
      return {
        point: function(x, y) {
          lower48Stream.point(x, y);
          alaskaStream.point(x, y);
          hawaiiStream.point(x, y);
        },
        sphere: function() {
          lower48Stream.sphere();
          alaskaStream.sphere();
          hawaiiStream.sphere();
        },
        lineStart: function() {
          lower48Stream.lineStart();
          alaskaStream.lineStart();
          hawaiiStream.lineStart();
        },
        lineEnd: function() {
          lower48Stream.lineEnd();
          alaskaStream.lineEnd();
          hawaiiStream.lineEnd();
        },
        polygonStart: function() {
          lower48Stream.polygonStart();
          alaskaStream.polygonStart();
          hawaiiStream.polygonStart();
        },
        polygonEnd: function() {
          lower48Stream.polygonEnd();
          alaskaStream.polygonEnd();
          hawaiiStream.polygonEnd();
        }
      };
    };
    albersUsa.precision = function(_) {
      if (!arguments.length) return lower48.precision();
      lower48.precision(_);
      alaska.precision(_);
      hawaii.precision(_);
      return albersUsa;
    };
    albersUsa.scale = function(_) {
      if (!arguments.length) return lower48.scale();
      lower48.scale(_);
      alaska.scale(_ * .35);
      hawaii.scale(_);
      return albersUsa.translate(lower48.translate());
    };
    albersUsa.translate = function(_) {
      if (!arguments.length) return lower48.translate();
      var k = lower48.scale(), x = +_[0], y = +_[1];
      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      return albersUsa;
    };
    return albersUsa.scale(1070);
  };
  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_pathAreaPolygon = 0;
      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
    }
  };
  function d3_geo_pathAreaRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathArea.point = function(x, y) {
      d3_geo_pathArea.point = nextPoint;
      x00 = x0 = x, y00 = y0 = y;
    };
    function nextPoint(x, y) {
      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
      x0 = x, y0 = y;
    }
    d3_geo_pathArea.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
  var d3_geo_pathBounds = {
    point: d3_geo_pathBoundsPoint,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_pathBoundsPoint(x, y) {
    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
  }
  function d3_geo_pathBuffer() {
    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointCircle = d3_geo_pathBufferCircle(_);
        return stream;
      },
      result: function() {
        if (buffer.length) {
          var result = buffer.join("");
          buffer = [];
          return result;
        }
      }
    };
    function point(x, y) {
      buffer.push("M", x, ",", y, pointCircle);
    }
    function pointLineStart(x, y) {
      buffer.push("M", x, ",", y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      buffer.push("L", x, ",", y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      buffer.push("Z");
    }
    return stream;
  }
  function d3_geo_pathBufferCircle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }
  var d3_geo_pathCentroid = {
    point: d3_geo_pathCentroidPoint,
    lineStart: d3_geo_pathCentroidLineStart,
    lineEnd: d3_geo_pathCentroidLineEnd,
    polygonStart: function() {
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
    }
  };
  function d3_geo_pathCentroidPoint(x, y) {
    d3_geo_centroidX0 += x;
    d3_geo_centroidY0 += y;
    ++d3_geo_centroidZ0;
  }
  function d3_geo_pathCentroidLineStart() {
    var x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
  }
  function d3_geo_pathCentroidLineEnd() {
    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
  }
  function d3_geo_pathCentroidRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      z = y0 * x - x0 * y;
      d3_geo_centroidX2 += z * (x0 + x);
      d3_geo_centroidY2 += z * (y0 + y);
      d3_geo_centroidZ2 += z * 3;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
    d3_geo_pathCentroid.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  function d3_geo_pathContext(context) {
    var pointRadius = 4.5;
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointRadius = _;
        return stream;
      },
      result: d3_noop
    };
    function point(x, y) {
      context.moveTo(x + pointRadius, y);
      context.arc(x, y, pointRadius, 0, τ);
    }
    function pointLineStart(x, y) {
      context.moveTo(x, y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      context.lineTo(x, y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      context.closePath();
    }
    return stream;
  }
  function d3_geo_resample(project) {
    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
    function resample(stream) {
      return (maxDepth ? resampleRecursive : resampleNone)(stream);
    }
    function resampleNone(stream) {
      return d3_geo_transformPoint(stream, function(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      });
    }
    function resampleRecursive(stream) {
      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
      var resample = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          stream.polygonStart();
          resample.lineStart = ringStart;
        },
        polygonEnd: function() {
          stream.polygonEnd();
          resample.lineStart = lineStart;
        }
      };
      function point(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      }
      function lineStart() {
        x0 = NaN;
        resample.point = linePoint;
        stream.lineStart();
      }
      function linePoint(λ, φ) {
        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
        stream.point(x0, y0);
      }
      function lineEnd() {
        resample.point = point;
        stream.lineEnd();
      }
      function ringStart() {
        lineStart();
        resample.point = ringPoint;
        resample.lineEnd = ringEnd;
      }
      function ringPoint(λ, φ) {
        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
        resample.point = linePoint;
      }
      function ringEnd() {
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
        resample.lineEnd = lineEnd;
        lineEnd();
      }
      return resample;
    }
    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
      if (d2 > 4 * δ2 && depth--) {
        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
          stream.point(x2, y2);
          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
        }
      }
    }
    resample.precision = function(_) {
      if (!arguments.length) return Math.sqrt(δ2);
      maxDepth = (δ2 = _ * _) > 0 && 16;
      return resample;
    };
    return resample;
  }
  d3.geo.path = function() {
    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
    function path(object) {
      if (object) {
        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
        d3.geo.stream(object, cacheStream);
      }
      return contextStream.result();
    }
    path.area = function(object) {
      d3_geo_pathAreaSum = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathArea));
      return d3_geo_pathAreaSum;
    };
    path.centroid = function(object) {
      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
    };
    path.bounds = function(object) {
      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
    };
    path.projection = function(_) {
      if (!arguments.length) return projection;
      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
      return reset();
    };
    path.context = function(_) {
      if (!arguments.length) return context;
      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
      return reset();
    };
    path.pointRadius = function(_) {
      if (!arguments.length) return pointRadius;
      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
      return path;
    };
    function reset() {
      cacheStream = null;
      return path;
    }
    return path.projection(d3.geo.albersUsa()).context(null);
  };
  function d3_geo_pathProjectStream(project) {
    var resample = d3_geo_resample(function(x, y) {
      return project([ x * d3_degrees, y * d3_degrees ]);
    });
    return function(stream) {
      return d3_geo_projectionRadians(resample(stream));
    };
  }
  d3.geo.transform = function(methods) {
    return {
      stream: function(stream) {
        var transform = new d3_geo_transform(stream);
        for (var k in methods) transform[k] = methods[k];
        return transform;
      }
    };
  };
  function d3_geo_transform(stream) {
    this.stream = stream;
  }
  d3_geo_transform.prototype = {
    point: function(x, y) {
      this.stream.point(x, y);
    },
    sphere: function() {
      this.stream.sphere();
    },
    lineStart: function() {
      this.stream.lineStart();
    },
    lineEnd: function() {
      this.stream.lineEnd();
    },
    polygonStart: function() {
      this.stream.polygonStart();
    },
    polygonEnd: function() {
      this.stream.polygonEnd();
    }
  };
  function d3_geo_transformPoint(stream, point) {
    return {
      point: point,
      sphere: function() {
        stream.sphere();
      },
      lineStart: function() {
        stream.lineStart();
      },
      lineEnd: function() {
        stream.lineEnd();
      },
      polygonStart: function() {
        stream.polygonStart();
      },
      polygonEnd: function() {
        stream.polygonEnd();
      }
    };
  }
  d3.geo.projection = d3_geo_projection;
  d3.geo.projectionMutator = d3_geo_projectionMutator;
  function d3_geo_projection(project) {
    return d3_geo_projectionMutator(function() {
      return project;
    })();
  }
  function d3_geo_projectionMutator(projectAt) {
    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
      x = project(x, y);
      return [ x[0] * k + δx, δy - x[1] * k ];
    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
    function projection(point) {
      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
      return [ point[0] * k + δx, δy - point[1] * k ];
    }
    function invert(point) {
      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
    }
    projection.stream = function(output) {
      if (stream) stream.valid = false;
      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
      stream.valid = true;
      return stream;
    };
    projection.clipAngle = function(_) {
      if (!arguments.length) return clipAngle;
      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
      return invalidate();
    };
    projection.clipExtent = function(_) {
      if (!arguments.length) return clipExtent;
      clipExtent = _;
      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
      return invalidate();
    };
    projection.scale = function(_) {
      if (!arguments.length) return k;
      k = +_;
      return reset();
    };
    projection.translate = function(_) {
      if (!arguments.length) return [ x, y ];
      x = +_[0];
      y = +_[1];
      return reset();
    };
    projection.center = function(_) {
      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
      λ = _[0] % 360 * d3_radians;
      φ = _[1] % 360 * d3_radians;
      return reset();
    };
    projection.rotate = function(_) {
      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
      δλ = _[0] % 360 * d3_radians;
      δφ = _[1] % 360 * d3_radians;
      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
      return reset();
    };
    d3.rebind(projection, projectResample, "precision");
    function reset() {
      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
      var center = project(λ, φ);
      δx = x - center[0] * k;
      δy = y + center[1] * k;
      return invalidate();
    }
    function invalidate() {
      if (stream) stream.valid = false, stream = null;
      return projection;
    }
    return function() {
      project = projectAt.apply(this, arguments);
      projection.invert = project.invert && invert;
      return reset();
    };
  }
  function d3_geo_projectionRadians(stream) {
    return d3_geo_transformPoint(stream, function(x, y) {
      stream.point(x * d3_radians, y * d3_radians);
    });
  }
  function d3_geo_equirectangular(λ, φ) {
    return [ λ, φ ];
  }
  (d3.geo.equirectangular = function() {
    return d3_geo_projection(d3_geo_equirectangular);
  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
  d3.geo.rotation = function(rotate) {
    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
    function forward(coordinates) {
      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    }
    forward.invert = function(coordinates) {
      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    };
    return forward;
  };
  function d3_geo_identityRotation(λ, φ) {
    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
  }
  d3_geo_identityRotation.invert = d3_geo_equirectangular;
  function d3_geo_rotation(δλ, δφ, δγ) {
    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
  }
  function d3_geo_forwardRotationλ(δλ) {
    return function(λ, φ) {
      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
    };
  }
  function d3_geo_rotationλ(δλ) {
    var rotation = d3_geo_forwardRotationλ(δλ);
    rotation.invert = d3_geo_forwardRotationλ(-δλ);
    return rotation;
  }
  function d3_geo_rotationφγ(δφ, δγ) {
    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
    function rotation(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
    }
    rotation.invert = function(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
    };
    return rotation;
  }
  d3.geo.circle = function() {
    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
    function circle() {
      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
      interpolate(null, null, 1, {
        point: function(x, y) {
          ring.push(x = rotate(x, y));
          x[0] *= d3_degrees, x[1] *= d3_degrees;
        }
      });
      return {
        type: "Polygon",
        coordinates: [ ring ]
      };
    }
    circle.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return circle;
    };
    circle.angle = function(x) {
      if (!arguments.length) return angle;
      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
      return circle;
    };
    circle.precision = function(_) {
      if (!arguments.length) return precision;
      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
      return circle;
    };
    return circle.angle(90);
  };
  function d3_geo_circleInterpolate(radius, precision) {
    var cr = Math.cos(radius), sr = Math.sin(radius);
    return function(from, to, direction, listener) {
      var step = direction * precision;
      if (from != null) {
        from = d3_geo_circleAngle(cr, from);
        to = d3_geo_circleAngle(cr, to);
        if (direction > 0 ? from < to : from > to) from += direction * τ;
      } else {
        from = radius + direction * τ;
        to = radius - .5 * step;
      }
      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
      }
    };
  }
  function d3_geo_circleAngle(cr, point) {
    var a = d3_geo_cartesian(point);
    a[0] -= cr;
    d3_geo_cartesianNormalize(a);
    var angle = d3_acos(-a[1]);
    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
  }
  d3.geo.distance = function(a, b) {
    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
  };
  d3.geo.graticule = function() {
    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
    function graticule() {
      return {
        type: "MultiLineString",
        coordinates: lines()
      };
    }
    function lines() {
      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
        return abs(x % DX) > ε;
      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
        return abs(y % DY) > ε;
      }).map(y));
    }
    graticule.lines = function() {
      return lines().map(function(coordinates) {
        return {
          type: "LineString",
          coordinates: coordinates
        };
      });
    };
    graticule.outline = function() {
      return {
        type: "Polygon",
        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
      };
    };
    graticule.extent = function(_) {
      if (!arguments.length) return graticule.minorExtent();
      return graticule.majorExtent(_).minorExtent(_);
    };
    graticule.majorExtent = function(_) {
      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
      X0 = +_[0][0], X1 = +_[1][0];
      Y0 = +_[0][1], Y1 = +_[1][1];
      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
      return graticule.precision(precision);
    };
    graticule.minorExtent = function(_) {
      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
      x0 = +_[0][0], x1 = +_[1][0];
      y0 = +_[0][1], y1 = +_[1][1];
      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
      return graticule.precision(precision);
    };
    graticule.step = function(_) {
      if (!arguments.length) return graticule.minorStep();
      return graticule.majorStep(_).minorStep(_);
    };
    graticule.majorStep = function(_) {
      if (!arguments.length) return [ DX, DY ];
      DX = +_[0], DY = +_[1];
      return graticule;
    };
    graticule.minorStep = function(_) {
      if (!arguments.length) return [ dx, dy ];
      dx = +_[0], dy = +_[1];
      return graticule;
    };
    graticule.precision = function(_) {
      if (!arguments.length) return precision;
      precision = +_;
      x = d3_geo_graticuleX(y0, y1, 90);
      y = d3_geo_graticuleY(x0, x1, precision);
      X = d3_geo_graticuleX(Y0, Y1, 90);
      Y = d3_geo_graticuleY(X0, X1, precision);
      return graticule;
    };
    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
  };
  function d3_geo_graticuleX(y0, y1, dy) {
    var y = d3.range(y0, y1 - ε, dy).concat(y1);
    return function(x) {
      return y.map(function(y) {
        return [ x, y ];
      });
    };
  }
  function d3_geo_graticuleY(x0, x1, dx) {
    var x = d3.range(x0, x1 - ε, dx).concat(x1);
    return function(y) {
      return x.map(function(x) {
        return [ x, y ];
      });
    };
  }
  function d3_source(d) {
    return d.source;
  }
  function d3_target(d) {
    return d.target;
  }
  d3.geo.greatArc = function() {
    var source = d3_source, source_, target = d3_target, target_;
    function greatArc() {
      return {
        type: "LineString",
        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
      };
    }
    greatArc.distance = function() {
      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
    };
    greatArc.source = function(_) {
      if (!arguments.length) return source;
      source = _, source_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.target = function(_) {
      if (!arguments.length) return target;
      target = _, target_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.precision = function() {
      return arguments.length ? greatArc : 0;
    };
    return greatArc;
  };
  d3.geo.interpolate = function(source, target) {
    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
  };
  function d3_geo_interpolate(x0, y0, x1, y1) {
    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
    var interpolate = d ? function(t) {
      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
    } : function() {
      return [ x0 * d3_degrees, y0 * d3_degrees ];
    };
    interpolate.distance = d;
    return interpolate;
  }
  d3.geo.length = function(object) {
    d3_geo_lengthSum = 0;
    d3.geo.stream(object, d3_geo_length);
    return d3_geo_lengthSum;
  };
  var d3_geo_lengthSum;
  var d3_geo_length = {
    sphere: d3_noop,
    point: d3_noop,
    lineStart: d3_geo_lengthLineStart,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_lengthLineStart() {
    var λ0, sinφ0, cosφ0;
    d3_geo_length.point = function(λ, φ) {
      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
      d3_geo_length.point = nextPoint;
    };
    d3_geo_length.lineEnd = function() {
      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
    };
    function nextPoint(λ, φ) {
      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
    }
  }
  function d3_geo_azimuthal(scale, angle) {
    function azimuthal(λ, φ) {
      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
    }
    azimuthal.invert = function(x, y) {
      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
    };
    return azimuthal;
  }
  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
    return Math.sqrt(2 / (1 + cosλcosφ));
  }, function(ρ) {
    return 2 * Math.asin(ρ / 2);
  });
  (d3.geo.azimuthalEqualArea = function() {
    return d3_geo_projection(d3_geo_azimuthalEqualArea);
  }).raw = d3_geo_azimuthalEqualArea;
  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
    var c = Math.acos(cosλcosφ);
    return c && c / Math.sin(c);
  }, d3_identity);
  (d3.geo.azimuthalEquidistant = function() {
    return d3_geo_projection(d3_geo_azimuthalEquidistant);
  }).raw = d3_geo_azimuthalEquidistant;
  function d3_geo_conicConformal(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), t = function(φ) {
      return Math.tan(π / 4 + φ / 2);
    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
    if (!n) return d3_geo_mercator;
    function forward(λ, φ) {
      if (F > 0) {
        if (φ < -halfπ + ε) φ = -halfπ + ε;
      } else {
        if (φ > halfπ - ε) φ = halfπ - ε;
      }
      var ρ = F / Math.pow(t(φ), n);
      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
    };
    return forward;
  }
  (d3.geo.conicConformal = function() {
    return d3_geo_conic(d3_geo_conicConformal);
  }).raw = d3_geo_conicConformal;
  function d3_geo_conicEquidistant(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
    if (abs(n) < ε) return d3_geo_equirectangular;
    function forward(λ, φ) {
      var ρ = G - φ;
      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = G - y;
      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
    };
    return forward;
  }
  (d3.geo.conicEquidistant = function() {
    return d3_geo_conic(d3_geo_conicEquidistant);
  }).raw = d3_geo_conicEquidistant;
  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / cosλcosφ;
  }, Math.atan);
  (d3.geo.gnomonic = function() {
    return d3_geo_projection(d3_geo_gnomonic);
  }).raw = d3_geo_gnomonic;
  function d3_geo_mercator(λ, φ) {
    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
  }
  d3_geo_mercator.invert = function(x, y) {
    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
  };
  function d3_geo_mercatorProjection(project) {
    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
    m.scale = function() {
      var v = scale.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.translate = function() {
      var v = translate.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.clipExtent = function(_) {
      var v = clipExtent.apply(m, arguments);
      if (v === m) {
        if (clipAuto = _ == null) {
          var k = π * scale(), t = translate();
          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
        }
      } else if (clipAuto) {
        v = null;
      }
      return v;
    };
    return m.clipExtent(null);
  }
  (d3.geo.mercator = function() {
    return d3_geo_mercatorProjection(d3_geo_mercator);
  }).raw = d3_geo_mercator;
  var d3_geo_orthographic = d3_geo_azimuthal(function() {
    return 1;
  }, Math.asin);
  (d3.geo.orthographic = function() {
    return d3_geo_projection(d3_geo_orthographic);
  }).raw = d3_geo_orthographic;
  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / (1 + cosλcosφ);
  }, function(ρ) {
    return 2 * Math.atan(ρ);
  });
  (d3.geo.stereographic = function() {
    return d3_geo_projection(d3_geo_stereographic);
  }).raw = d3_geo_stereographic;
  function d3_geo_transverseMercator(λ, φ) {
    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
  }
  d3_geo_transverseMercator.invert = function(x, y) {
    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
  };
  (d3.geo.transverseMercator = function() {
    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
    projection.center = function(_) {
      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
    };
    projection.rotate = function(_) {
      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
      [ _[0], _[1], _[2] - 90 ]);
    };
    return rotate([ 0, 0, 90 ]);
  }).raw = d3_geo_transverseMercator;
  d3.geom = {};
  function d3_geom_pointX(d) {
    return d[0];
  }
  function d3_geom_pointY(d) {
    return d[1];
  }
  d3.geom.hull = function(vertices) {
    var x = d3_geom_pointX, y = d3_geom_pointY;
    if (arguments.length) return hull(vertices);
    function hull(data) {
      if (data.length < 3) return [];
      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
      for (i = 0; i < n; i++) {
        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
      }
      points.sort(d3_geom_hullOrder);
      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
      return polygon;
    }
    hull.x = function(_) {
      return arguments.length ? (x = _, hull) : x;
    };
    hull.y = function(_) {
      return arguments.length ? (y = _, hull) : y;
    };
    return hull;
  };
  function d3_geom_hullUpper(points) {
    var n = points.length, hull = [ 0, 1 ], hs = 2;
    for (var i = 2; i < n; i++) {
      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
      hull[hs++] = i;
    }
    return hull.slice(0, hs);
  }
  function d3_geom_hullOrder(a, b) {
    return a[0] - b[0] || a[1] - b[1];
  }
  d3.geom.polygon = function(coordinates) {
    d3_subclass(coordinates, d3_geom_polygonPrototype);
    return coordinates;
  };
  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
  d3_geom_polygonPrototype.area = function() {
    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
    while (++i < n) {
      a = b;
      b = this[i];
      area += a[1] * b[0] - a[0] * b[1];
    }
    return area * .5;
  };
  d3_geom_polygonPrototype.centroid = function(k) {
    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
    if (!arguments.length) k = -1 / (6 * this.area());
    while (++i < n) {
      a = b;
      b = this[i];
      c = a[0] * b[1] - b[0] * a[1];
      x += (a[0] + b[0]) * c;
      y += (a[1] + b[1]) * c;
    }
    return [ x * k, y * k ];
  };
  d3_geom_polygonPrototype.clip = function(subject) {
    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
    while (++i < n) {
      input = subject.slice();
      subject.length = 0;
      b = this[i];
      c = input[(m = input.length - closed) - 1];
      j = -1;
      while (++j < m) {
        d = input[j];
        if (d3_geom_polygonInside(d, a, b)) {
          if (!d3_geom_polygonInside(c, a, b)) {
            subject.push(d3_geom_polygonIntersect(c, d, a, b));
          }
          subject.push(d);
        } else if (d3_geom_polygonInside(c, a, b)) {
          subject.push(d3_geom_polygonIntersect(c, d, a, b));
        }
        c = d;
      }
      if (closed) subject.push(subject[0]);
      a = b;
    }
    return subject;
  };
  function d3_geom_polygonInside(p, a, b) {
    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
  }
  function d3_geom_polygonIntersect(c, d, a, b) {
    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
    return [ x1 + ua * x21, y1 + ua * y21 ];
  }
  function d3_geom_polygonClosed(coordinates) {
    var a = coordinates[0], b = coordinates[coordinates.length - 1];
    return !(a[0] - b[0] || a[1] - b[1]);
  }
  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
  function d3_geom_voronoiBeach() {
    d3_geom_voronoiRedBlackNode(this);
    this.edge = this.site = this.circle = null;
  }
  function d3_geom_voronoiCreateBeach(site) {
    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
    beach.site = site;
    return beach;
  }
  function d3_geom_voronoiDetachBeach(beach) {
    d3_geom_voronoiDetachCircle(beach);
    d3_geom_voronoiBeaches.remove(beach);
    d3_geom_voronoiBeachPool.push(beach);
    d3_geom_voronoiRedBlackNode(beach);
  }
  function d3_geom_voronoiRemoveBeach(beach) {
    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
      x: x,
      y: y
    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
    d3_geom_voronoiDetachBeach(beach);
    var lArc = previous;
    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
      previous = lArc.P;
      disappearing.unshift(lArc);
      d3_geom_voronoiDetachBeach(lArc);
      lArc = previous;
    }
    disappearing.unshift(lArc);
    d3_geom_voronoiDetachCircle(lArc);
    var rArc = next;
    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
      next = rArc.N;
      disappearing.push(rArc);
      d3_geom_voronoiDetachBeach(rArc);
      rArc = next;
    }
    disappearing.push(rArc);
    d3_geom_voronoiDetachCircle(rArc);
    var nArcs = disappearing.length, iArc;
    for (iArc = 1; iArc < nArcs; ++iArc) {
      rArc = disappearing[iArc];
      lArc = disappearing[iArc - 1];
      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
    }
    lArc = disappearing[0];
    rArc = disappearing[nArcs - 1];
    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiAddBeach(site) {
    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
    while (node) {
      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
      if (dxl > ε) node = node.L; else {
        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
        if (dxr > ε) {
          if (!node.R) {
            lArc = node;
            break;
          }
          node = node.R;
        } else {
          if (dxl > -ε) {
            lArc = node.P;
            rArc = node;
          } else if (dxr > -ε) {
            lArc = node;
            rArc = node.N;
          } else {
            lArc = rArc = node;
          }
          break;
        }
      }
    }
    var newArc = d3_geom_voronoiCreateBeach(site);
    d3_geom_voronoiBeaches.insert(lArc, newArc);
    if (!lArc && !rArc) return;
    if (lArc === rArc) {
      d3_geom_voronoiDetachCircle(lArc);
      rArc = d3_geom_voronoiCreateBeach(lArc.site);
      d3_geom_voronoiBeaches.insert(newArc, rArc);
      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      d3_geom_voronoiAttachCircle(lArc);
      d3_geom_voronoiAttachCircle(rArc);
      return;
    }
    if (!rArc) {
      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      return;
    }
    d3_geom_voronoiDetachCircle(lArc);
    d3_geom_voronoiDetachCircle(rArc);
    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
      x: (cy * hb - by * hc) / d + ax,
      y: (bx * hc - cx * hb) / d + ay
    };
    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
    if (!pby2) return rfocx;
    var lArc = arc.P;
    if (!lArc) return -Infinity;
    site = lArc.site;
    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
    if (!plby2) return lfocx;
    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
    return (rfocx + lfocx) / 2;
  }
  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
    var rArc = arc.N;
    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
    var site = arc.site;
    return site.y === directrix ? site.x : Infinity;
  }
  function d3_geom_voronoiCell(site) {
    this.site = site;
    this.edges = [];
  }
  d3_geom_voronoiCell.prototype.prepare = function() {
    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
    while (iHalfEdge--) {
      edge = halfEdges[iHalfEdge].edge;
      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
    }
    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
    return halfEdges.length;
  };
  function d3_geom_voronoiCloseCells(extent) {
    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
    while (iCell--) {
      cell = cells[iCell];
      if (!cell || !cell.prepare()) continue;
      halfEdges = cell.edges;
      nHalfEdges = halfEdges.length;
      iHalfEdge = 0;
      while (iHalfEdge < nHalfEdges) {
        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
            x: x0,
            y: abs(x2 - x0) < ε ? y2 : y1
          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
            x: abs(y2 - y1) < ε ? x2 : x1,
            y: y1
          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
            x: x1,
            y: abs(x2 - x1) < ε ? y2 : y0
          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
            x: abs(y2 - y0) < ε ? x2 : x0,
            y: y0
          } : null), cell.site, null));
          ++nHalfEdges;
        }
      }
    }
  }
  function d3_geom_voronoiHalfEdgeOrder(a, b) {
    return b.angle - a.angle;
  }
  function d3_geom_voronoiCircle() {
    d3_geom_voronoiRedBlackNode(this);
    this.x = this.y = this.arc = this.site = this.cy = null;
  }
  function d3_geom_voronoiAttachCircle(arc) {
    var lArc = arc.P, rArc = arc.N;
    if (!lArc || !rArc) return;
    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
    if (lSite === rSite) return;
    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
    var d = 2 * (ax * cy - ay * cx);
    if (d >= -ε2) return;
    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
    circle.arc = arc;
    circle.site = cSite;
    circle.x = x + bx;
    circle.y = cy + Math.sqrt(x * x + y * y);
    circle.cy = cy;
    arc.circle = circle;
    var before = null, node = d3_geom_voronoiCircles._;
    while (node) {
      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
        if (node.L) node = node.L; else {
          before = node.P;
          break;
        }
      } else {
        if (node.R) node = node.R; else {
          before = node;
          break;
        }
      }
    }
    d3_geom_voronoiCircles.insert(before, circle);
    if (!before) d3_geom_voronoiFirstCircle = circle;
  }
  function d3_geom_voronoiDetachCircle(arc) {
    var circle = arc.circle;
    if (circle) {
      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
      d3_geom_voronoiCircles.remove(circle);
      d3_geom_voronoiCirclePool.push(circle);
      d3_geom_voronoiRedBlackNode(circle);
      arc.circle = null;
    }
  }
  function d3_geom_voronoiClipEdges(extent) {
    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
    while (i--) {
      e = edges[i];
      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
        e.a = e.b = null;
        edges.splice(i, 1);
      }
    }
  }
  function d3_geom_voronoiConnectEdge(edge, extent) {
    var vb = edge.b;
    if (vb) return true;
    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
    if (ry === ly) {
      if (fx < x0 || fx >= x1) return;
      if (lx > rx) {
        if (!va) va = {
          x: fx,
          y: y0
        }; else if (va.y >= y1) return;
        vb = {
          x: fx,
          y: y1
        };
      } else {
        if (!va) va = {
          x: fx,
          y: y1
        }; else if (va.y < y0) return;
        vb = {
          x: fx,
          y: y0
        };
      }
    } else {
      fm = (lx - rx) / (ry - ly);
      fb = fy - fm * fx;
      if (fm < -1 || fm > 1) {
        if (lx > rx) {
          if (!va) va = {
            x: (y0 - fb) / fm,
            y: y0
          }; else if (va.y >= y1) return;
          vb = {
            x: (y1 - fb) / fm,
            y: y1
          };
        } else {
          if (!va) va = {
            x: (y1 - fb) / fm,
            y: y1
          }; else if (va.y < y0) return;
          vb = {
            x: (y0 - fb) / fm,
            y: y0
          };
        }
      } else {
        if (ly < ry) {
          if (!va) va = {
            x: x0,
            y: fm * x0 + fb
          }; else if (va.x >= x1) return;
          vb = {
            x: x1,
            y: fm * x1 + fb
          };
        } else {
          if (!va) va = {
            x: x1,
            y: fm * x1 + fb
          }; else if (va.x < x0) return;
          vb = {
            x: x0,
            y: fm * x0 + fb
          };
        }
      }
    }
    edge.a = va;
    edge.b = vb;
    return true;
  }
  function d3_geom_voronoiEdge(lSite, rSite) {
    this.l = lSite;
    this.r = rSite;
    this.a = this.b = null;
  }
  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, rSite);
    d3_geom_voronoiEdges.push(edge);
    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
    return edge;
  }
  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, null);
    edge.a = va;
    edge.b = vb;
    d3_geom_voronoiEdges.push(edge);
    return edge;
  }
  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
    if (!edge.a && !edge.b) {
      edge.a = vertex;
      edge.l = lSite;
      edge.r = rSite;
    } else if (edge.l === rSite) {
      edge.b = vertex;
    } else {
      edge.a = vertex;
    }
  }
  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
    var va = edge.a, vb = edge.b;
    this.edge = edge;
    this.site = lSite;
    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
  }
  d3_geom_voronoiHalfEdge.prototype = {
    start: function() {
      return this.edge.l === this.site ? this.edge.a : this.edge.b;
    },
    end: function() {
      return this.edge.l === this.site ? this.edge.b : this.edge.a;
    }
  };
  function d3_geom_voronoiRedBlackTree() {
    this._ = null;
  }
  function d3_geom_voronoiRedBlackNode(node) {
    node.U = node.C = node.L = node.R = node.P = node.N = null;
  }
  d3_geom_voronoiRedBlackTree.prototype = {
    insert: function(after, node) {
      var parent, grandpa, uncle;
      if (after) {
        node.P = after;
        node.N = after.N;
        if (after.N) after.N.P = node;
        after.N = node;
        if (after.R) {
          after = after.R;
          while (after.L) after = after.L;
          after.L = node;
        } else {
          after.R = node;
        }
        parent = after;
      } else if (this._) {
        after = d3_geom_voronoiRedBlackFirst(this._);
        node.P = null;
        node.N = after;
        after.P = after.L = node;
        parent = after;
      } else {
        node.P = node.N = null;
        this._ = node;
        parent = null;
      }
      node.L = node.R = null;
      node.U = parent;
      node.C = true;
      after = node;
      while (parent && parent.C) {
        grandpa = parent.U;
        if (parent === grandpa.L) {
          uncle = grandpa.R;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.R) {
              d3_geom_voronoiRedBlackRotateLeft(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
          }
        } else {
          uncle = grandpa.L;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.L) {
              d3_geom_voronoiRedBlackRotateRight(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
          }
        }
        parent = after.U;
      }
      this._.C = false;
    },
    remove: function(node) {
      if (node.N) node.N.P = node.P;
      if (node.P) node.P.N = node.N;
      node.N = node.P = null;
      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
      if (parent) {
        if (parent.L === node) parent.L = next; else parent.R = next;
      } else {
        this._ = next;
      }
      if (left && right) {
        red = next.C;
        next.C = node.C;
        next.L = left;
        left.U = next;
        if (next !== right) {
          parent = next.U;
          next.U = node.U;
          node = next.R;
          parent.L = node;
          next.R = right;
          right.U = next;
        } else {
          next.U = parent;
          parent = next;
          node = next.R;
        }
      } else {
        red = node.C;
        node = next;
      }
      if (node) node.U = parent;
      if (red) return;
      if (node && node.C) {
        node.C = false;
        return;
      }
      do {
        if (node === this._) break;
        if (node === parent.L) {
          sibling = parent.R;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            sibling = parent.R;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.R || !sibling.R.C) {
              sibling.L.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateRight(this, sibling);
              sibling = parent.R;
            }
            sibling.C = parent.C;
            parent.C = sibling.R.C = false;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            node = this._;
            break;
          }
        } else {
          sibling = parent.L;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            sibling = parent.L;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.L || !sibling.L.C) {
              sibling.R.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
              sibling = parent.L;
            }
            sibling.C = parent.C;
            parent.C = sibling.L.C = false;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            node = this._;
            break;
          }
        }
        sibling.C = true;
        node = parent;
        parent = parent.U;
      } while (!node.C);
      if (node) node.C = false;
    }
  };
  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
    var p = node, q = node.R, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.R = q.L;
    if (p.R) p.R.U = p;
    q.L = p;
  }
  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
    var p = node, q = node.L, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.L = q.R;
    if (p.L) p.L.U = p;
    q.R = p;
  }
  function d3_geom_voronoiRedBlackFirst(node) {
    while (node.L) node = node.L;
    return node;
  }
  function d3_geom_voronoi(sites, bbox) {
    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
    d3_geom_voronoiEdges = [];
    d3_geom_voronoiCells = new Array(sites.length);
    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
    while (true) {
      circle = d3_geom_voronoiFirstCircle;
      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
        if (site.x !== x0 || site.y !== y0) {
          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
          d3_geom_voronoiAddBeach(site);
          x0 = site.x, y0 = site.y;
        }
        site = sites.pop();
      } else if (circle) {
        d3_geom_voronoiRemoveBeach(circle.arc);
      } else {
        break;
      }
    }
    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
    var diagram = {
      cells: d3_geom_voronoiCells,
      edges: d3_geom_voronoiEdges
    };
    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
    return diagram;
  }
  function d3_geom_voronoiVertexOrder(a, b) {
    return b.y - a.y || b.x - a.x;
  }
  d3.geom.voronoi = function(points) {
    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
    if (points) return voronoi(points);
    function voronoi(data) {
      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
          var s = e.start();
          return [ s.x, s.y ];
        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
        polygon.point = data[i];
      });
      return polygons;
    }
    function sites(data) {
      return data.map(function(d, i) {
        return {
          x: Math.round(fx(d, i) / ε) * ε,
          y: Math.round(fy(d, i) / ε) * ε,
          i: i
        };
      });
    }
    voronoi.links = function(data) {
      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
        return edge.l && edge.r;
      }).map(function(edge) {
        return {
          source: data[edge.l.i],
          target: data[edge.r.i]
        };
      });
    };
    voronoi.triangles = function(data) {
      var triangles = [];
      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
        while (++j < m) {
          e0 = e1;
          s0 = s1;
          e1 = edges[j].edge;
          s1 = e1.l === site ? e1.r : e1.l;
          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
          }
        }
      });
      return triangles;
    };
    voronoi.x = function(_) {
      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
    };
    voronoi.y = function(_) {
      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
    };
    voronoi.clipExtent = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
      return voronoi;
    };
    voronoi.size = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
    };
    return voronoi;
  };
  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
  function d3_geom_voronoiTriangleArea(a, b, c) {
    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
  }
  d3.geom.delaunay = function(vertices) {
    return d3.geom.voronoi().triangles(vertices);
  };
  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
    if (compat = arguments.length) {
      x = d3_geom_quadtreeCompatX;
      y = d3_geom_quadtreeCompatY;
      if (compat === 3) {
        y2 = y1;
        x2 = x1;
        y1 = x1 = 0;
      }
      return quadtree(points);
    }
    function quadtree(data) {
      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
      if (x1 != null) {
        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
      } else {
        x2_ = y2_ = -(x1_ = y1_ = Infinity);
        xs = [], ys = [];
        n = data.length;
        if (compat) for (i = 0; i < n; ++i) {
          d = data[i];
          if (d.x < x1_) x1_ = d.x;
          if (d.y < y1_) y1_ = d.y;
          if (d.x > x2_) x2_ = d.x;
          if (d.y > y2_) y2_ = d.y;
          xs.push(d.x);
          ys.push(d.y);
        } else for (i = 0; i < n; ++i) {
          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
          if (x_ < x1_) x1_ = x_;
          if (y_ < y1_) y1_ = y_;
          if (x_ > x2_) x2_ = x_;
          if (y_ > y2_) y2_ = y_;
          xs.push(x_);
          ys.push(y_);
        }
      }
      var dx = x2_ - x1_, dy = y2_ - y1_;
      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
      function insert(n, d, x, y, x1, y1, x2, y2) {
        if (isNaN(x) || isNaN(y)) return;
        if (n.leaf) {
          var nx = n.x, ny = n.y;
          if (nx != null) {
            if (abs(nx - x) + abs(ny - y) < .01) {
              insertChild(n, d, x, y, x1, y1, x2, y2);
            } else {
              var nPoint = n.point;
              n.x = n.y = n.point = null;
              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
              insertChild(n, d, x, y, x1, y1, x2, y2);
            }
          } else {
            n.x = x, n.y = y, n.point = d;
          }
        } else {
          insertChild(n, d, x, y, x1, y1, x2, y2);
        }
      }
      function insertChild(n, d, x, y, x1, y1, x2, y2) {
        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;
        n.leaf = false;
        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
        if (right) x1 = xm; else x2 = xm;
        if (below) y1 = ym; else y2 = ym;
        insert(n, d, x, y, x1, y1, x2, y2);
      }
      var root = d3_geom_quadtreeNode();
      root.add = function(d) {
        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
      };
      root.visit = function(f) {
        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
      };
      root.find = function(point) {
        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
      };
      i = -1;
      if (x1 == null) {
        while (++i < n) {
          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
        }
        --i;
      } else data.forEach(root.add);
      xs = ys = data = d = null;
      return root;
    }
    quadtree.x = function(_) {
      return arguments.length ? (x = _, quadtree) : x;
    };
    quadtree.y = function(_) {
      return arguments.length ? (y = _, quadtree) : y;
    };
    quadtree.extent = function(_) {
      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
      y2 = +_[1][1];
      return quadtree;
    };
    quadtree.size = function(_) {
      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
      return quadtree;
    };
    return quadtree;
  };
  function d3_geom_quadtreeCompatX(d) {
    return d.x;
  }
  function d3_geom_quadtreeCompatY(d) {
    return d.y;
  }
  function d3_geom_quadtreeNode() {
    return {
      leaf: true,
      nodes: [],
      point: null,
      x: null,
      y: null
    };
  }
  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
    if (!f(node, x1, y1, x2, y2)) {
      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
    }
  }
  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
    var minDistance2 = Infinity, closestPoint;
    (function find(node, x1, y1, x2, y2) {
      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;
      if (point = node.point) {
        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;
        if (distance2 < minDistance2) {
          var distance = Math.sqrt(minDistance2 = distance2);
          x0 = x - distance, y0 = y - distance;
          x3 = x + distance, y3 = y + distance;
          closestPoint = point;
        }
      }
      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;
      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
        if (node = children[i & 3]) switch (i & 3) {
         case 0:
          find(node, x1, y1, xm, ym);
          break;

         case 1:
          find(node, xm, y1, x2, ym);
          break;

         case 2:
          find(node, x1, ym, xm, y2);
          break;

         case 3:
          find(node, xm, ym, x2, y2);
          break;
        }
      }
    })(root, x0, y0, x3, y3);
    return closestPoint;
  }
  d3.interpolateRgb = d3_interpolateRgb;
  function d3_interpolateRgb(a, b) {
    a = d3.rgb(a);
    b = d3.rgb(b);
    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
    return function(t) {
      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
    };
  }
  d3.interpolateObject = d3_interpolateObject;
  function d3_interpolateObject(a, b) {
    var i = {}, c = {}, k;
    for (k in a) {
      if (k in b) {
        i[k] = d3_interpolate(a[k], b[k]);
      } else {
        c[k] = a[k];
      }
    }
    for (k in b) {
      if (!(k in a)) {
        c[k] = b[k];
      }
    }
    return function(t) {
      for (k in i) c[k] = i[k](t);
      return c;
    };
  }
  d3.interpolateNumber = d3_interpolateNumber;
  function d3_interpolateNumber(a, b) {
    a = +a, b = +b;
    return function(t) {
      return a * (1 - t) + b * t;
    };
  }
  d3.interpolateString = d3_interpolateString;
  function d3_interpolateString(a, b) {
    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
    a = a + "", b = b + "";
    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
      if ((bs = bm.index) > bi) {
        bs = b.slice(bi, bs);
        if (s[i]) s[i] += bs; else s[++i] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s[i]) s[i] += bm; else s[++i] = bm;
      } else {
        s[++i] = null;
        q.push({
          i: i,
          x: d3_interpolateNumber(am, bm)
        });
      }
      bi = d3_interpolate_numberB.lastIndex;
    }
    if (bi < b.length) {
      bs = b.slice(bi);
      if (s[i]) s[i] += bs; else s[++i] = bs;
    }
    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
      return b(t) + "";
    }) : function() {
      return b;
    } : (b = q.length, function(t) {
      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    });
  }
  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
  d3.interpolate = d3_interpolate;
  function d3_interpolate(a, b) {
    var i = d3.interpolators.length, f;
    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
    return f;
  }
  d3.interpolators = [ function(a, b) {
    var t = typeof b;
    return (t === "string" ? d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
  } ];
  d3.interpolateArray = d3_interpolateArray;
  function d3_interpolateArray(a, b) {
    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
    for (;i < na; ++i) c[i] = a[i];
    for (;i < nb; ++i) c[i] = b[i];
    return function(t) {
      for (i = 0; i < n0; ++i) c[i] = x[i](t);
      return c;
    };
  }
  var d3_ease_default = function() {
    return d3_identity;
  };
  var d3_ease = d3.map({
    linear: d3_ease_default,
    poly: d3_ease_poly,
    quad: function() {
      return d3_ease_quad;
    },
    cubic: function() {
      return d3_ease_cubic;
    },
    sin: function() {
      return d3_ease_sin;
    },
    exp: function() {
      return d3_ease_exp;
    },
    circle: function() {
      return d3_ease_circle;
    },
    elastic: d3_ease_elastic,
    back: d3_ease_back,
    bounce: function() {
      return d3_ease_bounce;
    }
  });
  var d3_ease_mode = d3.map({
    "in": d3_identity,
    out: d3_ease_reverse,
    "in-out": d3_ease_reflect,
    "out-in": function(f) {
      return d3_ease_reflect(d3_ease_reverse(f));
    }
  });
  d3.ease = function(name) {
    var i = name.indexOf("-"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : "in";
    t = d3_ease.get(t) || d3_ease_default;
    m = d3_ease_mode.get(m) || d3_identity;
    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
  };
  function d3_ease_clamp(f) {
    return function(t) {
      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
    };
  }
  function d3_ease_reverse(f) {
    return function(t) {
      return 1 - f(1 - t);
    };
  }
  function d3_ease_reflect(f) {
    return function(t) {
      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
    };
  }
  function d3_ease_quad(t) {
    return t * t;
  }
  function d3_ease_cubic(t) {
    return t * t * t;
  }
  function d3_ease_cubicInOut(t) {
    if (t <= 0) return 0;
    if (t >= 1) return 1;
    var t2 = t * t, t3 = t2 * t;
    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
  }
  function d3_ease_poly(e) {
    return function(t) {
      return Math.pow(t, e);
    };
  }
  function d3_ease_sin(t) {
    return 1 - Math.cos(t * halfπ);
  }
  function d3_ease_exp(t) {
    return Math.pow(2, 10 * (t - 1));
  }
  function d3_ease_circle(t) {
    return 1 - Math.sqrt(1 - t * t);
  }
  function d3_ease_elastic(a, p) {
    var s;
    if (arguments.length < 2) p = .45;
    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
    return function(t) {
      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
    };
  }
  function d3_ease_back(s) {
    if (!s) s = 1.70158;
    return function(t) {
      return t * t * ((s + 1) * t - s);
    };
  }
  function d3_ease_bounce(t) {
    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
  }
  d3.interpolateHcl = d3_interpolateHcl;
  function d3_interpolateHcl(a, b) {
    a = d3.hcl(a);
    b = d3.hcl(b);
    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
    };
  }
  d3.interpolateHsl = d3_interpolateHsl;
  function d3_interpolateHsl(a, b) {
    a = d3.hsl(a);
    b = d3.hsl(b);
    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
    };
  }
  d3.interpolateLab = d3_interpolateLab;
  function d3_interpolateLab(a, b) {
    a = d3.lab(a);
    b = d3.lab(b);
    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
    return function(t) {
      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
    };
  }
  d3.interpolateRound = d3_interpolateRound;
  function d3_interpolateRound(a, b) {
    b -= a;
    return function(t) {
      return Math.round(a + b * t);
    };
  }
  d3.transform = function(string) {
    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
    return (d3.transform = function(string) {
      if (string != null) {
        g.setAttribute("transform", string);
        var t = g.transform.baseVal.consolidate();
      }
      return new d3_transform(t ? t.matrix : d3_transformIdentity);
    })(string);
  };
  function d3_transform(m) {
    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
    if (r0[0] * r1[1] < r1[0] * r0[1]) {
      r0[0] *= -1;
      r0[1] *= -1;
      kx *= -1;
      kz *= -1;
    }
    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
    this.translate = [ m.e, m.f ];
    this.scale = [ kx, ky ];
    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
  }
  d3_transform.prototype.toString = function() {
    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
  };
  function d3_transformDot(a, b) {
    return a[0] * b[0] + a[1] * b[1];
  }
  function d3_transformNormalize(a) {
    var k = Math.sqrt(d3_transformDot(a, a));
    if (k) {
      a[0] /= k;
      a[1] /= k;
    }
    return k;
  }
  function d3_transformCombine(a, b, k) {
    a[0] += k * b[0];
    a[1] += k * b[1];
    return a;
  }
  var d3_transformIdentity = {
    a: 1,
    b: 0,
    c: 0,
    d: 1,
    e: 0,
    f: 0
  };
  d3.interpolateTransform = d3_interpolateTransform;
  function d3_interpolateTransform(a, b) {
    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;
    if (ta[0] != tb[0] || ta[1] != tb[1]) {
      s.push("translate(", null, ",", null, ")");
      q.push({
        i: 1,
        x: d3_interpolateNumber(ta[0], tb[0])
      }, {
        i: 3,
        x: d3_interpolateNumber(ta[1], tb[1])
      });
    } else if (tb[0] || tb[1]) {
      s.push("translate(" + tb + ")");
    } else {
      s.push("");
    }
    if (ra != rb) {
      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
      q.push({
        i: s.push(s.pop() + "rotate(", null, ")") - 2,
        x: d3_interpolateNumber(ra, rb)
      });
    } else if (rb) {
      s.push(s.pop() + "rotate(" + rb + ")");
    }
    if (wa != wb) {
      q.push({
        i: s.push(s.pop() + "skewX(", null, ")") - 2,
        x: d3_interpolateNumber(wa, wb)
      });
    } else if (wb) {
      s.push(s.pop() + "skewX(" + wb + ")");
    }
    if (ka[0] != kb[0] || ka[1] != kb[1]) {
      n = s.push(s.pop() + "scale(", null, ",", null, ")");
      q.push({
        i: n - 4,
        x: d3_interpolateNumber(ka[0], kb[0])
      }, {
        i: n - 2,
        x: d3_interpolateNumber(ka[1], kb[1])
      });
    } else if (kb[0] != 1 || kb[1] != 1) {
      s.push(s.pop() + "scale(" + kb + ")");
    }
    n = q.length;
    return function(t) {
      var i = -1, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  }
  function d3_uninterpolateNumber(a, b) {
    b = (b -= a = +a) || 1 / b;
    return function(x) {
      return (x - a) / b;
    };
  }
  function d3_uninterpolateClamp(a, b) {
    b = (b -= a = +a) || 1 / b;
    return function(x) {
      return Math.max(0, Math.min(1, (x - a) / b));
    };
  }
  d3.layout = {};
  d3.layout.bundle = function() {
    return function(links) {
      var paths = [], i = -1, n = links.length;
      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
      return paths;
    };
  };
  function d3_layout_bundlePath(link) {
    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
    while (start !== lca) {
      start = start.parent;
      points.push(start);
    }
    var k = points.length;
    while (end !== lca) {
      points.splice(k, 0, end);
      end = end.parent;
    }
    return points;
  }
  function d3_layout_bundleAncestors(node) {
    var ancestors = [], parent = node.parent;
    while (parent != null) {
      ancestors.push(node);
      node = parent;
      parent = parent.parent;
    }
    ancestors.push(node);
    return ancestors;
  }
  function d3_layout_bundleLeastCommonAncestor(a, b) {
    if (a === b) return a;
    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
    while (aNode === bNode) {
      sharedNode = aNode;
      aNode = aNodes.pop();
      bNode = bNodes.pop();
    }
    return sharedNode;
  }
  d3.layout.chord = function() {
    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
    function relayout() {
      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
      chords = [];
      groups = [];
      k = 0, i = -1;
      while (++i < n) {
        x = 0, j = -1;
        while (++j < n) {
          x += matrix[i][j];
        }
        groupSums.push(x);
        subgroupIndex.push(d3.range(n));
        k += x;
      }
      if (sortGroups) {
        groupIndex.sort(function(a, b) {
          return sortGroups(groupSums[a], groupSums[b]);
        });
      }
      if (sortSubgroups) {
        subgroupIndex.forEach(function(d, i) {
          d.sort(function(a, b) {
            return sortSubgroups(matrix[i][a], matrix[i][b]);
          });
        });
      }
      k = (τ - padding * n) / k;
      x = 0, i = -1;
      while (++i < n) {
        x0 = x, j = -1;
        while (++j < n) {
          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
          subgroups[di + "-" + dj] = {
            index: di,
            subindex: dj,
            startAngle: a0,
            endAngle: a1,
            value: v
          };
        }
        groups[di] = {
          index: di,
          startAngle: x0,
          endAngle: x,
          value: (x - x0) / k
        };
        x += padding;
      }
      i = -1;
      while (++i < n) {
        j = i - 1;
        while (++j < n) {
          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
          if (source.value || target.value) {
            chords.push(source.value < target.value ? {
              source: target,
              target: source
            } : {
              source: source,
              target: target
            });
          }
        }
      }
      if (sortChords) resort();
    }
    function resort() {
      chords.sort(function(a, b) {
        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
      });
    }
    chord.matrix = function(x) {
      if (!arguments.length) return matrix;
      n = (matrix = x) && matrix.length;
      chords = groups = null;
      return chord;
    };
    chord.padding = function(x) {
      if (!arguments.length) return padding;
      padding = x;
      chords = groups = null;
      return chord;
    };
    chord.sortGroups = function(x) {
      if (!arguments.length) return sortGroups;
      sortGroups = x;
      chords = groups = null;
      return chord;
    };
    chord.sortSubgroups = function(x) {
      if (!arguments.length) return sortSubgroups;
      sortSubgroups = x;
      chords = null;
      return chord;
    };
    chord.sortChords = function(x) {
      if (!arguments.length) return sortChords;
      sortChords = x;
      if (chords) resort();
      return chord;
    };
    chord.chords = function() {
      if (!chords) relayout();
      return chords;
    };
    chord.groups = function() {
      if (!groups) relayout();
      return groups;
    };
    return chord;
  };
  d3.layout.force = function() {
    var force = {}, event = d3.dispatch("start", "tick", "end"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
    function repulse(node) {
      return function(quad, x1, _, x2) {
        if (quad.point !== node) {
          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
          if (dw * dw / theta2 < dn) {
            if (dn < chargeDistance2) {
              var k = quad.charge / dn;
              node.px -= dx * k;
              node.py -= dy * k;
            }
            return true;
          }
          if (quad.point && dn && dn < chargeDistance2) {
            var k = quad.pointCharge / dn;
            node.px -= dx * k;
            node.py -= dy * k;
          }
        }
        return !quad.charge;
      };
    }
    force.tick = function() {
      if ((alpha *= .99) < .005) {
        event.end({
          type: "end",
          alpha: alpha = 0
        });
        return true;
      }
      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
      for (i = 0; i < m; ++i) {
        o = links[i];
        s = o.source;
        t = o.target;
        x = t.x - s.x;
        y = t.y - s.y;
        if (l = x * x + y * y) {
          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
          x *= l;
          y *= l;
          t.x -= x * (k = s.weight / (t.weight + s.weight));
          t.y -= y * k;
          s.x += x * (k = 1 - k);
          s.y += y * k;
        }
      }
      if (k = alpha * gravity) {
        x = size[0] / 2;
        y = size[1] / 2;
        i = -1;
        if (k) while (++i < n) {
          o = nodes[i];
          o.x += (x - o.x) * k;
          o.y += (y - o.y) * k;
        }
      }
      if (charge) {
        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
        i = -1;
        while (++i < n) {
          if (!(o = nodes[i]).fixed) {
            q.visit(repulse(o));
          }
        }
      }
      i = -1;
      while (++i < n) {
        o = nodes[i];
        if (o.fixed) {
          o.x = o.px;
          o.y = o.py;
        } else {
          o.x -= (o.px - (o.px = o.x)) * friction;
          o.y -= (o.py - (o.py = o.y)) * friction;
        }
      }
      event.tick({
        type: "tick",
        alpha: alpha
      });
    };
    force.nodes = function(x) {
      if (!arguments.length) return nodes;
      nodes = x;
      return force;
    };
    force.links = function(x) {
      if (!arguments.length) return links;
      links = x;
      return force;
    };
    force.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return force;
    };
    force.linkDistance = function(x) {
      if (!arguments.length) return linkDistance;
      linkDistance = typeof x === "function" ? x : +x;
      return force;
    };
    force.distance = force.linkDistance;
    force.linkStrength = function(x) {
      if (!arguments.length) return linkStrength;
      linkStrength = typeof x === "function" ? x : +x;
      return force;
    };
    force.friction = function(x) {
      if (!arguments.length) return friction;
      friction = +x;
      return force;
    };
    force.charge = function(x) {
      if (!arguments.length) return charge;
      charge = typeof x === "function" ? x : +x;
      return force;
    };
    force.chargeDistance = function(x) {
      if (!arguments.length) return Math.sqrt(chargeDistance2);
      chargeDistance2 = x * x;
      return force;
    };
    force.gravity = function(x) {
      if (!arguments.length) return gravity;
      gravity = +x;
      return force;
    };
    force.theta = function(x) {
      if (!arguments.length) return Math.sqrt(theta2);
      theta2 = x * x;
      return force;
    };
    force.alpha = function(x) {
      if (!arguments.length) return alpha;
      x = +x;
      if (alpha) {
        if (x > 0) alpha = x; else alpha = 0;
      } else if (x > 0) {
        event.start({
          type: "start",
          alpha: alpha = x
        });
        d3.timer(force.tick);
      }
      return force;
    };
    force.start = function() {
      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
      for (i = 0; i < n; ++i) {
        (o = nodes[i]).index = i;
        o.weight = 0;
      }
      for (i = 0; i < m; ++i) {
        o = links[i];
        if (typeof o.source == "number") o.source = nodes[o.source];
        if (typeof o.target == "number") o.target = nodes[o.target];
        ++o.source.weight;
        ++o.target.weight;
      }
      for (i = 0; i < n; ++i) {
        o = nodes[i];
        if (isNaN(o.x)) o.x = position("x", w);
        if (isNaN(o.y)) o.y = position("y", h);
        if (isNaN(o.px)) o.px = o.x;
        if (isNaN(o.py)) o.py = o.y;
      }
      distances = [];
      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
      strengths = [];
      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
      charges = [];
      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
      function position(dimension, size) {
        if (!neighbors) {
          neighbors = new Array(n);
          for (j = 0; j < n; ++j) {
            neighbors[j] = [];
          }
          for (j = 0; j < m; ++j) {
            var o = links[j];
            neighbors[o.source.index].push(o.target);
            neighbors[o.target.index].push(o.source);
          }
        }
        var candidates = neighbors[i], j = -1, l = candidates.length, x;
        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;
        return Math.random() * size;
      }
      return force.resume();
    };
    force.resume = function() {
      return force.alpha(.1);
    };
    force.stop = function() {
      return force.alpha(0);
    };
    force.drag = function() {
      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
      if (!arguments.length) return drag;
      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
    };
    function dragmove(d) {
      d.px = d3.event.x, d.py = d3.event.y;
      force.resume();
    }
    return d3.rebind(force, event, "on");
  };
  function d3_layout_forceDragstart(d) {
    d.fixed |= 2;
  }
  function d3_layout_forceDragend(d) {
    d.fixed &= ~6;
  }
  function d3_layout_forceMouseover(d) {
    d.fixed |= 4;
    d.px = d.x, d.py = d.y;
  }
  function d3_layout_forceMouseout(d) {
    d.fixed &= ~4;
  }
  function d3_layout_forceAccumulate(quad, alpha, charges) {
    var cx = 0, cy = 0;
    quad.charge = 0;
    if (!quad.leaf) {
      var nodes = quad.nodes, n = nodes.length, i = -1, c;
      while (++i < n) {
        c = nodes[i];
        if (c == null) continue;
        d3_layout_forceAccumulate(c, alpha, charges);
        quad.charge += c.charge;
        cx += c.charge * c.cx;
        cy += c.charge * c.cy;
      }
    }
    if (quad.point) {
      if (!quad.leaf) {
        quad.point.x += Math.random() - .5;
        quad.point.y += Math.random() - .5;
      }
      var k = alpha * charges[quad.point.index];
      quad.charge += quad.pointCharge = k;
      cx += k * quad.point.x;
      cy += k * quad.point.y;
    }
    quad.cx = cx / quad.charge;
    quad.cy = cy / quad.charge;
  }
  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
  d3.layout.hierarchy = function() {
    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
    function hierarchy(root) {
      var stack = [ root ], nodes = [], node;
      root.depth = 0;
      while ((node = stack.pop()) != null) {
        nodes.push(node);
        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
          var n, childs, child;
          while (--n >= 0) {
            stack.push(child = childs[n]);
            child.parent = node;
            child.depth = node.depth + 1;
          }
          if (value) node.value = 0;
          node.children = childs;
        } else {
          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
          delete node.children;
        }
      }
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var childs, parent;
        if (sort && (childs = node.children)) childs.sort(sort);
        if (value && (parent = node.parent)) parent.value += node.value;
      });
      return nodes;
    }
    hierarchy.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return hierarchy;
    };
    hierarchy.children = function(x) {
      if (!arguments.length) return children;
      children = x;
      return hierarchy;
    };
    hierarchy.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return hierarchy;
    };
    hierarchy.revalue = function(root) {
      if (value) {
        d3_layout_hierarchyVisitBefore(root, function(node) {
          if (node.children) node.value = 0;
        });
        d3_layout_hierarchyVisitAfter(root, function(node) {
          var parent;
          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
          if (parent = node.parent) parent.value += node.value;
        });
      }
      return root;
    };
    return hierarchy;
  };
  function d3_layout_hierarchyRebind(object, hierarchy) {
    d3.rebind(object, hierarchy, "sort", "children", "value");
    object.nodes = object;
    object.links = d3_layout_hierarchyLinks;
    return object;
  }
  function d3_layout_hierarchyVisitBefore(node, callback) {
    var nodes = [ node ];
    while ((node = nodes.pop()) != null) {
      callback(node);
      if ((children = node.children) && (n = children.length)) {
        var n, children;
        while (--n >= 0) nodes.push(children[n]);
      }
    }
  }
  function d3_layout_hierarchyVisitAfter(node, callback) {
    var nodes = [ node ], nodes2 = [];
    while ((node = nodes.pop()) != null) {
      nodes2.push(node);
      if ((children = node.children) && (n = children.length)) {
        var i = -1, n, children;
        while (++i < n) nodes.push(children[i]);
      }
    }
    while ((node = nodes2.pop()) != null) {
      callback(node);
    }
  }
  function d3_layout_hierarchyChildren(d) {
    return d.children;
  }
  function d3_layout_hierarchyValue(d) {
    return d.value;
  }
  function d3_layout_hierarchySort(a, b) {
    return b.value - a.value;
  }
  function d3_layout_hierarchyLinks(nodes) {
    return d3.merge(nodes.map(function(parent) {
      return (parent.children || []).map(function(child) {
        return {
          source: parent,
          target: child
        };
      });
    }));
  }
  d3.layout.partition = function() {
    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
    function position(node, x, dx, dy) {
      var children = node.children;
      node.x = x;
      node.y = node.depth * dy;
      node.dx = dx;
      node.dy = dy;
      if (children && (n = children.length)) {
        var i = -1, n, c, d;
        dx = node.value ? dx / node.value : 0;
        while (++i < n) {
          position(c = children[i], x, d = c.value * dx, dy);
          x += d;
        }
      }
    }
    function depth(node) {
      var children = node.children, d = 0;
      if (children && (n = children.length)) {
        var i = -1, n;
        while (++i < n) d = Math.max(d, depth(children[i]));
      }
      return 1 + d;
    }
    function partition(d, i) {
      var nodes = hierarchy.call(this, d, i);
      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
      return nodes;
    }
    partition.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return partition;
    };
    return d3_layout_hierarchyRebind(partition, hierarchy);
  };
  d3.layout.pie = function() {
    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;
    function pie(data) {
      var n = data.length, values = data.map(function(d, i) {
        return +value.call(pie, d, i);
      }), a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;
      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
        return values[j] - values[i];
      } : function(i, j) {
        return sort(data[i], data[j]);
      });
      index.forEach(function(i) {
        arcs[i] = {
          data: data[i],
          value: v = values[i],
          startAngle: a,
          endAngle: a += v * k + pa,
          padAngle: p
        };
      });
      return arcs;
    }
    pie.value = function(_) {
      if (!arguments.length) return value;
      value = _;
      return pie;
    };
    pie.sort = function(_) {
      if (!arguments.length) return sort;
      sort = _;
      return pie;
    };
    pie.startAngle = function(_) {
      if (!arguments.length) return startAngle;
      startAngle = _;
      return pie;
    };
    pie.endAngle = function(_) {
      if (!arguments.length) return endAngle;
      endAngle = _;
      return pie;
    };
    pie.padAngle = function(_) {
      if (!arguments.length) return padAngle;
      padAngle = _;
      return pie;
    };
    return pie;
  };
  var d3_layout_pieSortByValue = {};
  d3.layout.stack = function() {
    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
    function stack(data, index) {
      if (!(n = data.length)) return data;
      var series = data.map(function(d, i) {
        return values.call(stack, d, i);
      });
      var points = series.map(function(d) {
        return d.map(function(v, i) {
          return [ x.call(stack, v, i), y.call(stack, v, i) ];
        });
      });
      var orders = order.call(stack, points, index);
      series = d3.permute(series, orders);
      points = d3.permute(points, orders);
      var offsets = offset.call(stack, points, index);
      var m = series[0].length, n, i, j, o;
      for (j = 0; j < m; ++j) {
        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
        for (i = 1; i < n; ++i) {
          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
        }
      }
      return data;
    }
    stack.values = function(x) {
      if (!arguments.length) return values;
      values = x;
      return stack;
    };
    stack.order = function(x) {
      if (!arguments.length) return order;
      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
      return stack;
    };
    stack.offset = function(x) {
      if (!arguments.length) return offset;
      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
      return stack;
    };
    stack.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      return stack;
    };
    stack.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      return stack;
    };
    stack.out = function(z) {
      if (!arguments.length) return out;
      out = z;
      return stack;
    };
    return stack;
  };
  function d3_layout_stackX(d) {
    return d.x;
  }
  function d3_layout_stackY(d) {
    return d.y;
  }
  function d3_layout_stackOut(d, y0, y) {
    d.y0 = y0;
    d.y = y;
  }
  var d3_layout_stackOrders = d3.map({
    "inside-out": function(data) {
      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
        return max[a] - max[b];
      }), top = 0, bottom = 0, tops = [], bottoms = [];
      for (i = 0; i < n; ++i) {
        j = index[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }
      return bottoms.reverse().concat(tops);
    },
    reverse: function(data) {
      return d3.range(data.length).reverse();
    },
    "default": d3_layout_stackOrderDefault
  });
  var d3_layout_stackOffsets = d3.map({
    silhouette: function(data) {
      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o > max) max = o;
        sums.push(o);
      }
      for (j = 0; j < m; ++j) {
        y0[j] = (max - sums[j]) / 2;
      }
      return y0;
    },
    wiggle: function(data) {
      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
      y0[0] = o = o0 = 0;
      for (j = 1; j < m; ++j) {
        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
          }
          s2 += s3 * data[i][j][1];
        }
        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
        if (o < o0) o0 = o;
      }
      for (j = 0; j < m; ++j) y0[j] -= o0;
      return y0;
    },
    expand: function(data) {
      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
      }
      for (j = 0; j < m; ++j) y0[j] = 0;
      return y0;
    },
    zero: d3_layout_stackOffsetZero
  });
  function d3_layout_stackOrderDefault(data) {
    return d3.range(data.length);
  }
  function d3_layout_stackOffsetZero(data) {
    var j = -1, m = data[0].length, y0 = [];
    while (++j < m) y0[j] = 0;
    return y0;
  }
  function d3_layout_stackMaxIndex(array) {
    var i = 1, j = 0, v = array[0][1], k, n = array.length;
    for (;i < n; ++i) {
      if ((k = array[i][1]) > v) {
        j = i;
        v = k;
      }
    }
    return j;
  }
  function d3_layout_stackReduceSum(d) {
    return d.reduce(d3_layout_stackSum, 0);
  }
  function d3_layout_stackSum(p, d) {
    return p + d[1];
  }
  d3.layout.histogram = function() {
    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
    function histogram(data, i) {
      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
      while (++i < m) {
        bin = bins[i] = [];
        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
        bin.y = 0;
      }
      if (m > 0) {
        i = -1;
        while (++i < n) {
          x = values[i];
          if (x >= range[0] && x <= range[1]) {
            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
            bin.y += k;
            bin.push(data[i]);
          }
        }
      }
      return bins;
    }
    histogram.value = function(x) {
      if (!arguments.length) return valuer;
      valuer = x;
      return histogram;
    };
    histogram.range = function(x) {
      if (!arguments.length) return ranger;
      ranger = d3_functor(x);
      return histogram;
    };
    histogram.bins = function(x) {
      if (!arguments.length) return binner;
      binner = typeof x === "number" ? function(range) {
        return d3_layout_histogramBinFixed(range, x);
      } : d3_functor(x);
      return histogram;
    };
    histogram.frequency = function(x) {
      if (!arguments.length) return frequency;
      frequency = !!x;
      return histogram;
    };
    return histogram;
  };
  function d3_layout_histogramBinSturges(range, values) {
    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
  }
  function d3_layout_histogramBinFixed(range, n) {
    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
    while (++x <= n) f[x] = m * x + b;
    return f;
  }
  function d3_layout_histogramRange(values) {
    return [ d3.min(values), d3.max(values) ];
  }
  d3.layout.pack = function() {
    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
    function pack(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
        return radius;
      };
      root.x = root.y = 0;
      d3_layout_hierarchyVisitAfter(root, function(d) {
        d.r = +r(d.value);
      });
      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
      if (padding) {
        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r += dr;
        });
        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r -= dr;
        });
      }
      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
      return nodes;
    }
    pack.size = function(_) {
      if (!arguments.length) return size;
      size = _;
      return pack;
    };
    pack.radius = function(_) {
      if (!arguments.length) return radius;
      radius = _ == null || typeof _ === "function" ? _ : +_;
      return pack;
    };
    pack.padding = function(_) {
      if (!arguments.length) return padding;
      padding = +_;
      return pack;
    };
    return d3_layout_hierarchyRebind(pack, hierarchy);
  };
  function d3_layout_packSort(a, b) {
    return a.value - b.value;
  }
  function d3_layout_packInsert(a, b) {
    var c = a._pack_next;
    a._pack_next = b;
    b._pack_prev = a;
    b._pack_next = c;
    c._pack_prev = b;
  }
  function d3_layout_packSplice(a, b) {
    a._pack_next = b;
    b._pack_prev = a;
  }
  function d3_layout_packIntersects(a, b) {
    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
    return .999 * dr * dr > dx * dx + dy * dy;
  }
  function d3_layout_packSiblings(node) {
    if (!(nodes = node.children) || !(n = nodes.length)) return;
    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
    function bound(node) {
      xMin = Math.min(node.x - node.r, xMin);
      xMax = Math.max(node.x + node.r, xMax);
      yMin = Math.min(node.y - node.r, yMin);
      yMax = Math.max(node.y + node.r, yMax);
    }
    nodes.forEach(d3_layout_packLink);
    a = nodes[0];
    a.x = -a.r;
    a.y = 0;
    bound(a);
    if (n > 1) {
      b = nodes[1];
      b.x = b.r;
      b.y = 0;
      bound(b);
      if (n > 2) {
        c = nodes[2];
        d3_layout_packPlace(a, b, c);
        bound(c);
        d3_layout_packInsert(a, c);
        a._pack_prev = c;
        d3_layout_packInsert(c, b);
        b = a._pack_next;
        for (i = 3; i < n; i++) {
          d3_layout_packPlace(a, b, c = nodes[i]);
          var isect = 0, s1 = 1, s2 = 1;
          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
            if (d3_layout_packIntersects(j, c)) {
              isect = 1;
              break;
            }
          }
          if (isect == 1) {
            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
              if (d3_layout_packIntersects(k, c)) {
                break;
              }
            }
          }
          if (isect) {
            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
            i--;
          } else {
            d3_layout_packInsert(a, c);
            b = c;
            bound(c);
          }
        }
      }
    }
    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
    for (i = 0; i < n; i++) {
      c = nodes[i];
      c.x -= cx;
      c.y -= cy;
      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
    }
    node.r = cr;
    nodes.forEach(d3_layout_packUnlink);
  }
  function d3_layout_packLink(node) {
    node._pack_next = node._pack_prev = node;
  }
  function d3_layout_packUnlink(node) {
    delete node._pack_next;
    delete node._pack_prev;
  }
  function d3_layout_packTransform(node, x, y, k) {
    var children = node.children;
    node.x = x += k * node.x;
    node.y = y += k * node.y;
    node.r *= k;
    if (children) {
      var i = -1, n = children.length;
      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
    }
  }
  function d3_layout_packPlace(a, b, c) {
    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
    if (db && (dx || dy)) {
      var da = b.r + c.r, dc = dx * dx + dy * dy;
      da *= da;
      db *= db;
      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
      c.x = a.x + x * dx + y * dy;
      c.y = a.y + x * dy - y * dx;
    } else {
      c.x = a.x + db;
      c.y = a.y;
    }
  }
  d3.layout.tree = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
    function tree(d, i) {
      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
      d3_layout_hierarchyVisitBefore(root1, secondWalk);
      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
        var left = root0, right = root0, bottom = root0;
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
      return nodes;
    }
    function wrapTree(root0) {
      var root1 = {
        A: null,
        children: [ root0 ]
      }, queue = [ root1 ], node1;
      while ((node1 = queue.pop()) != null) {
        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
          queue.push((children[i] = child = {
            _: children[i],
            parent: node1,
            children: (child = children[i].children) && child.slice() || [],
            A: null,
            a: null,
            z: 0,
            m: 0,
            c: 0,
            s: 0,
            t: null,
            i: i
          }).a = child);
        }
      }
      return root1.children[0];
    }
    function firstWalk(v) {
      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
      if (children.length) {
        d3_layout_treeShift(v);
        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
        if (w) {
          v.z = w.z + separation(v._, w._);
          v.m = v.z - midpoint;
        } else {
          v.z = midpoint;
        }
      } else if (w) {
        v.z = w.z + separation(v._, w._);
      }
      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
    }
    function secondWalk(v) {
      v._.x = v.z + v.parent.m;
      v.m += v.parent.m;
    }
    function apportion(v, w, ancestor) {
      if (w) {
        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
          vom = d3_layout_treeLeft(vom);
          vop = d3_layout_treeRight(vop);
          vop.a = v;
          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
          if (shift > 0) {
            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
            sip += shift;
            sop += shift;
          }
          sim += vim.m;
          sip += vip.m;
          som += vom.m;
          sop += vop.m;
        }
        if (vim && !d3_layout_treeRight(vop)) {
          vop.t = vim;
          vop.m += sim - sop;
        }
        if (vip && !d3_layout_treeLeft(vom)) {
          vom.t = vip;
          vom.m += sip - som;
          ancestor = v;
        }
      }
      return ancestor;
    }
    function sizeNode(node) {
      node.x *= size[0];
      node.y = node.depth * size[1];
    }
    tree.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return tree;
    };
    tree.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null ? sizeNode : null;
      return tree;
    };
    tree.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) == null ? null : sizeNode;
      return tree;
    };
    return d3_layout_hierarchyRebind(tree, hierarchy);
  };
  function d3_layout_treeSeparation(a, b) {
    return a.parent == b.parent ? 1 : 2;
  }
  function d3_layout_treeLeft(v) {
    var children = v.children;
    return children.length ? children[0] : v.t;
  }
  function d3_layout_treeRight(v) {
    var children = v.children, n;
    return (n = children.length) ? children[n - 1] : v.t;
  }
  function d3_layout_treeMove(wm, wp, shift) {
    var change = shift / (wp.i - wm.i);
    wp.c -= change;
    wp.s += shift;
    wm.c += change;
    wp.z += shift;
    wp.m += shift;
  }
  function d3_layout_treeShift(v) {
    var shift = 0, change = 0, children = v.children, i = children.length, w;
    while (--i >= 0) {
      w = children[i];
      w.z += shift;
      w.m += shift;
      shift += w.s + (change += w.c);
    }
  }
  function d3_layout_treeAncestor(vim, v, ancestor) {
    return vim.a.parent === v.parent ? vim.a : ancestor;
  }
  d3.layout.cluster = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
    function cluster(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var children = node.children;
        if (children && children.length) {
          node.x = d3_layout_clusterX(children);
          node.y = d3_layout_clusterY(children);
        } else {
          node.x = previousNode ? x += separation(node, previousNode) : 0;
          node.y = 0;
          previousNode = node;
        }
      });
      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
        node.x = (node.x - root.x) * size[0];
        node.y = (root.y - node.y) * size[1];
      } : function(node) {
        node.x = (node.x - x0) / (x1 - x0) * size[0];
        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
      });
      return nodes;
    }
    cluster.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return cluster;
    };
    cluster.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null;
      return cluster;
    };
    cluster.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) != null;
      return cluster;
    };
    return d3_layout_hierarchyRebind(cluster, hierarchy);
  };
  function d3_layout_clusterY(children) {
    return 1 + d3.max(children, function(child) {
      return child.y;
    });
  }
  function d3_layout_clusterX(children) {
    return children.reduce(function(x, child) {
      return x + child.x;
    }, 0) / children.length;
  }
  function d3_layout_clusterLeft(node) {
    var children = node.children;
    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
  }
  function d3_layout_clusterRight(node) {
    var children = node.children, n;
    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
  }
  d3.layout.treemap = function() {
    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
    function scale(children, k) {
      var i = -1, n = children.length, child, area;
      while (++i < n) {
        area = (child = children[i]).value * (k < 0 ? 0 : k);
        child.area = isNaN(area) || area <= 0 ? 0 : area;
      }
    }
    function squarify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while ((n = remaining.length) > 0) {
          row.push(child = remaining[n - 1]);
          row.area += child.area;
          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
            remaining.pop();
            best = score;
          } else {
            row.area -= row.pop().area;
            position(row, u, rect, false);
            u = Math.min(rect.dx, rect.dy);
            row.length = row.area = 0;
            best = Infinity;
          }
        }
        if (row.length) {
          position(row, u, rect, true);
          row.length = row.area = 0;
        }
        children.forEach(squarify);
      }
    }
    function stickify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), remaining = children.slice(), child, row = [];
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while (child = remaining.pop()) {
          row.push(child);
          row.area += child.area;
          if (child.z != null) {
            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
            row.length = row.area = 0;
          }
        }
        children.forEach(stickify);
      }
    }
    function worst(row, u) {
      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
      while (++i < n) {
        if (!(r = row[i].area)) continue;
        if (r < rmin) rmin = r;
        if (r > rmax) rmax = r;
      }
      s *= s;
      u *= u;
      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
    }
    function position(row, u, rect, flush) {
      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
      if (u == rect.dx) {
        if (flush || v > rect.dy) v = rect.dy;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dy = v;
          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
        }
        o.z = true;
        o.dx += rect.x + rect.dx - x;
        rect.y += v;
        rect.dy -= v;
      } else {
        if (flush || v > rect.dx) v = rect.dx;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dx = v;
          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
        }
        o.z = false;
        o.dy += rect.y + rect.dy - y;
        rect.x += v;
        rect.dx -= v;
      }
    }
    function treemap(d) {
      var nodes = stickies || hierarchy(d), root = nodes[0];
      root.x = 0;
      root.y = 0;
      root.dx = size[0];
      root.dy = size[1];
      if (stickies) hierarchy.revalue(root);
      scale([ root ], root.dx * root.dy / root.value);
      (stickies ? stickify : squarify)(root);
      if (sticky) stickies = nodes;
      return nodes;
    }
    treemap.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return treemap;
    };
    treemap.padding = function(x) {
      if (!arguments.length) return padding;
      function padFunction(node) {
        var p = x.call(treemap, node, node.depth);
        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
      }
      function padConstant(node) {
        return d3_layout_treemapPad(node, x);
      }
      var type;
      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
      padConstant) : padConstant;
      return treemap;
    };
    treemap.round = function(x) {
      if (!arguments.length) return round != Number;
      round = x ? Math.round : Number;
      return treemap;
    };
    treemap.sticky = function(x) {
      if (!arguments.length) return sticky;
      sticky = x;
      stickies = null;
      return treemap;
    };
    treemap.ratio = function(x) {
      if (!arguments.length) return ratio;
      ratio = x;
      return treemap;
    };
    treemap.mode = function(x) {
      if (!arguments.length) return mode;
      mode = x + "";
      return treemap;
    };
    return d3_layout_hierarchyRebind(treemap, hierarchy);
  };
  function d3_layout_treemapPadNull(node) {
    return {
      x: node.x,
      y: node.y,
      dx: node.dx,
      dy: node.dy
    };
  }
  function d3_layout_treemapPad(node, padding) {
    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
    if (dx < 0) {
      x += dx / 2;
      dx = 0;
    }
    if (dy < 0) {
      y += dy / 2;
      dy = 0;
    }
    return {
      x: x,
      y: y,
      dx: dx,
      dy: dy
    };
  }
  d3.random = {
    normal: function(µ, σ) {
      var n = arguments.length;
      if (n < 2) σ = 1;
      if (n < 1) µ = 0;
      return function() {
        var x, y, r;
        do {
          x = Math.random() * 2 - 1;
          y = Math.random() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
      };
    },
    logNormal: function() {
      var random = d3.random.normal.apply(d3, arguments);
      return function() {
        return Math.exp(random());
      };
    },
    bates: function(m) {
      var random = d3.random.irwinHall(m);
      return function() {
        return random() / m;
      };
    },
    irwinHall: function(m) {
      return function() {
        for (var s = 0, j = 0; j < m; j++) s += Math.random();
        return s;
      };
    }
  };
  d3.scale = {};
  function d3_scaleExtent(domain) {
    var start = domain[0], stop = domain[domain.length - 1];
    return start < stop ? [ start, stop ] : [ stop, start ];
  }
  function d3_scaleRange(scale) {
    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
  }
  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
    return function(x) {
      return i(u(x));
    };
  }
  function d3_scale_nice(domain, nice) {
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
    if (x1 < x0) {
      dx = i0, i0 = i1, i1 = dx;
      dx = x0, x0 = x1, x1 = dx;
    }
    domain[i0] = nice.floor(x0);
    domain[i1] = nice.ceil(x1);
    return domain;
  }
  function d3_scale_niceStep(step) {
    return step ? {
      floor: function(x) {
        return Math.floor(x / step) * step;
      },
      ceil: function(x) {
        return Math.ceil(x / step) * step;
      }
    } : d3_scale_niceIdentity;
  }
  var d3_scale_niceIdentity = {
    floor: d3_identity,
    ceil: d3_identity
  };
  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
    if (domain[k] < domain[0]) {
      domain = domain.slice().reverse();
      range = range.slice().reverse();
    }
    while (++j <= k) {
      u.push(uninterpolate(domain[j - 1], domain[j]));
      i.push(interpolate(range[j - 1], range[j]));
    }
    return function(x) {
      var j = d3.bisect(domain, x, 1, k) - 1;
      return i[j](u[j](x));
    };
  }
  d3.scale.linear = function() {
    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
  };
  function d3_scale_linear(domain, range, interpolate, clamp) {
    var output, input;
    function rescale() {
      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
      output = linear(domain, range, uninterpolate, interpolate);
      input = linear(range, domain, uninterpolate, d3_interpolate);
      return scale;
    }
    function scale(x) {
      return output(x);
    }
    scale.invert = function(y) {
      return input(y);
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(Number);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.rangeRound = function(x) {
      return scale.range(x).interpolate(d3_interpolateRound);
    };
    scale.clamp = function(x) {
      if (!arguments.length) return clamp;
      clamp = x;
      return rescale();
    };
    scale.interpolate = function(x) {
      if (!arguments.length) return interpolate;
      interpolate = x;
      return rescale();
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      d3_scale_linearNice(domain, m);
      return rescale();
    };
    scale.copy = function() {
      return d3_scale_linear(domain, range, interpolate, clamp);
    };
    return rescale();
  }
  function d3_scale_linearRebind(scale, linear) {
    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
  }
  function d3_scale_linearNice(domain, m) {
    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
  }
  function d3_scale_linearTickRange(domain, m) {
    if (m == null) m = 10;
    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
    extent[0] = Math.ceil(extent[0] / step) * step;
    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
    extent[2] = step;
    return extent;
  }
  function d3_scale_linearTicks(domain, m) {
    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
  }
  function d3_scale_linearTickFormat(domain, m, format) {
    var range = d3_scale_linearTickRange(domain, m);
    if (format) {
      var match = d3_format_re.exec(format);
      match.shift();
      if (match[8] === "s") {
        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
        match[8] = "f";
        format = d3.format(match.join(""));
        return function(d) {
          return format(prefix.scale(d)) + prefix.symbol;
        };
      }
      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
      format = match.join("");
    } else {
      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
    }
    return d3.format(format);
  }
  var d3_scale_linearFormatSignificant = {
    s: 1,
    g: 1,
    p: 1,
    r: 1,
    e: 1
  };
  function d3_scale_linearPrecision(value) {
    return -Math.floor(Math.log(value) / Math.LN10 + .01);
  }
  function d3_scale_linearFormatPrecision(type, range) {
    var p = d3_scale_linearPrecision(range[2]);
    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
  }
  d3.scale.log = function() {
    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
  };
  function d3_scale_log(linear, base, positive, domain) {
    function log(x) {
      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
    }
    function pow(x) {
      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
    }
    function scale(x) {
      return linear(log(x));
    }
    scale.invert = function(x) {
      return pow(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      positive = x[0] >= 0;
      linear.domain((domain = x.map(Number)).map(log));
      return scale;
    };
    scale.base = function(_) {
      if (!arguments.length) return base;
      base = +_;
      linear.domain(domain.map(log));
      return scale;
    };
    scale.nice = function() {
      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
      linear.domain(niced);
      domain = niced.map(pow);
      return scale;
    };
    scale.ticks = function() {
      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
      if (isFinite(j - i)) {
        if (positive) {
          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
          ticks.push(pow(i));
        } else {
          ticks.push(pow(i));
          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
        }
        for (i = 0; ticks[i] < u; i++) {}
        for (j = ticks.length; ticks[j - 1] > v; j--) {}
        ticks = ticks.slice(i, j);
      }
      return ticks;
    };
    scale.tickFormat = function(n, format) {
      if (!arguments.length) return d3_scale_logFormat;
      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, 
      Math.floor), e;
      return function(d) {
        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
      };
    };
    scale.copy = function() {
      return d3_scale_log(linear.copy(), base, positive, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
    floor: function(x) {
      return -Math.ceil(-x);
    },
    ceil: function(x) {
      return -Math.floor(-x);
    }
  };
  d3.scale.pow = function() {
    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
  };
  function d3_scale_pow(linear, exponent, domain) {
    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
    function scale(x) {
      return linear(powp(x));
    }
    scale.invert = function(x) {
      return powb(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      linear.domain((domain = x.map(Number)).map(powp));
      return scale;
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      return scale.domain(d3_scale_linearNice(domain, m));
    };
    scale.exponent = function(x) {
      if (!arguments.length) return exponent;
      powp = d3_scale_powPow(exponent = x);
      powb = d3_scale_powPow(1 / exponent);
      linear.domain(domain.map(powp));
      return scale;
    };
    scale.copy = function() {
      return d3_scale_pow(linear.copy(), exponent, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_scale_powPow(e) {
    return function(x) {
      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
    };
  }
  d3.scale.sqrt = function() {
    return d3.scale.pow().exponent(.5);
  };
  d3.scale.ordinal = function() {
    return d3_scale_ordinal([], {
      t: "range",
      a: [ [] ]
    });
  };
  function d3_scale_ordinal(domain, ranger) {
    var index, range, rangeBand;
    function scale(x) {
      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
    }
    function steps(start, step) {
      return d3.range(domain.length).map(function(i) {
        return start + step * i;
      });
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = [];
      index = new d3_Map();
      var i = -1, n = x.length, xi;
      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
      return scale[ranger.t].apply(scale, ranger.a);
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      rangeBand = 0;
      ranger = {
        t: "range",
        a: arguments
      };
      return scale;
    };
    scale.rangePoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, 
      0) : (stop - start) / (domain.length - 1 + padding);
      range = steps(start + step * padding / 2, step);
      rangeBand = 0;
      ranger = {
        t: "rangePoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundPoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 
      0) : (stop - start) / (domain.length - 1 + padding) | 0;
      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
      rangeBand = 0;
      ranger = {
        t: "rangeRoundPoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
      range = steps(start + step * outerPadding, step);
      if (reverse) range.reverse();
      rangeBand = step * (1 - padding);
      ranger = {
        t: "rangeBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
      if (reverse) range.reverse();
      rangeBand = Math.round(step * (1 - padding));
      ranger = {
        t: "rangeRoundBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeBand = function() {
      return rangeBand;
    };
    scale.rangeExtent = function() {
      return d3_scaleExtent(ranger.a[0]);
    };
    scale.copy = function() {
      return d3_scale_ordinal(domain, ranger);
    };
    return scale.domain(domain);
  }
  d3.scale.category10 = function() {
    return d3.scale.ordinal().range(d3_category10);
  };
  d3.scale.category20 = function() {
    return d3.scale.ordinal().range(d3_category20);
  };
  d3.scale.category20b = function() {
    return d3.scale.ordinal().range(d3_category20b);
  };
  d3.scale.category20c = function() {
    return d3.scale.ordinal().range(d3_category20c);
  };
  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
  d3.scale.quantile = function() {
    return d3_scale_quantile([], []);
  };
  function d3_scale_quantile(domain, range) {
    var thresholds;
    function rescale() {
      var k = 0, q = range.length;
      thresholds = [];
      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
      return scale;
    }
    function scale(x) {
      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.quantiles = function() {
      return thresholds;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
    };
    scale.copy = function() {
      return d3_scale_quantile(domain, range);
    };
    return rescale();
  }
  d3.scale.quantize = function() {
    return d3_scale_quantize(0, 1, [ 0, 1 ]);
  };
  function d3_scale_quantize(x0, x1, range) {
    var kx, i;
    function scale(x) {
      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
    }
    function rescale() {
      kx = range.length / (x1 - x0);
      i = range.length - 1;
      return scale;
    }
    scale.domain = function(x) {
      if (!arguments.length) return [ x0, x1 ];
      x0 = +x[0];
      x1 = +x[x.length - 1];
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      y = y < 0 ? NaN : y / kx + x0;
      return [ y, y + 1 / kx ];
    };
    scale.copy = function() {
      return d3_scale_quantize(x0, x1, range);
    };
    return rescale();
  }
  d3.scale.threshold = function() {
    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
  };
  function d3_scale_threshold(domain, range) {
    function scale(x) {
      if (x <= x) return range[d3.bisect(domain, x)];
    }
    scale.domain = function(_) {
      if (!arguments.length) return domain;
      domain = _;
      return scale;
    };
    scale.range = function(_) {
      if (!arguments.length) return range;
      range = _;
      return scale;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return [ domain[y - 1], domain[y] ];
    };
    scale.copy = function() {
      return d3_scale_threshold(domain, range);
    };
    return scale;
  }
  d3.scale.identity = function() {
    return d3_scale_identity([ 0, 1 ]);
  };
  function d3_scale_identity(domain) {
    function identity(x) {
      return +x;
    }
    identity.invert = identity;
    identity.domain = identity.range = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(identity);
      return identity;
    };
    identity.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    identity.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    identity.copy = function() {
      return d3_scale_identity(domain);
    };
    return identity;
  }
  d3.svg = {};
  function d3_zero() {
    return 0;
  }
  d3.svg.arc = function() {
    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;
    function arc() {
      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;
      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];
      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
        if (!cw) p1 *= -1;
        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
      }
      if (r1) {
        x0 = r1 * Math.cos(a0 + p1);
        y0 = r1 * Math.sin(a0 + p1);
        x1 = r1 * Math.cos(a1 - p1);
        y1 = r1 * Math.sin(a1 - p1);
        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;
        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
          var h1 = (a0 + a1) / 2;
          x0 = r1 * Math.cos(h1);
          y0 = r1 * Math.sin(h1);
          x1 = y1 = null;
        }
      } else {
        x0 = y0 = 0;
      }
      if (r0) {
        x2 = r0 * Math.cos(a1 - p0);
        y2 = r0 * Math.sin(a1 - p0);
        x3 = r0 * Math.cos(a0 + p0);
        y3 = r0 * Math.sin(a0 + p0);
        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;
        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
          var h0 = (a0 + a1) / 2;
          x2 = r0 * Math.cos(h0);
          y2 = r0 * Math.sin(h0);
          x3 = y3 = null;
        }
      } else {
        x2 = y2 = 0;
      }
      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
        cr = r0 < r1 ^ cw ? 0 : 1;
        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
        if (x1 != null) {
          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);
          if (rc === rc1) {
            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
          } else {
            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
          }
        } else {
          path.push("M", x0, ",", y0);
        }
        if (x3 != null) {
          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);
          if (rc === rc0) {
            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
          } else {
            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
          }
        } else {
          path.push("L", x2, ",", y2);
        }
      } else {
        path.push("M", x0, ",", y0);
        if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
        path.push("L", x2, ",", y2);
        if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
      }
      path.push("Z");
      return path.join("");
    }
    function circleSegment(r1, cw) {
      return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
    }
    arc.innerRadius = function(v) {
      if (!arguments.length) return innerRadius;
      innerRadius = d3_functor(v);
      return arc;
    };
    arc.outerRadius = function(v) {
      if (!arguments.length) return outerRadius;
      outerRadius = d3_functor(v);
      return arc;
    };
    arc.cornerRadius = function(v) {
      if (!arguments.length) return cornerRadius;
      cornerRadius = d3_functor(v);
      return arc;
    };
    arc.padRadius = function(v) {
      if (!arguments.length) return padRadius;
      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
      return arc;
    };
    arc.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return arc;
    };
    arc.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return arc;
    };
    arc.padAngle = function(v) {
      if (!arguments.length) return padAngle;
      padAngle = d3_functor(v);
      return arc;
    };
    arc.centroid = function() {
      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
      return [ Math.cos(a) * r, Math.sin(a) * r ];
    };
    return arc;
  };
  var d3_svg_arcAuto = "auto";
  function d3_svg_arcInnerRadius(d) {
    return d.innerRadius;
  }
  function d3_svg_arcOuterRadius(d) {
    return d.outerRadius;
  }
  function d3_svg_arcStartAngle(d) {
    return d.startAngle;
  }
  function d3_svg_arcEndAngle(d) {
    return d.endAngle;
  }
  function d3_svg_arcPadAngle(d) {
    return d && d.padAngle;
  }
  function d3_svg_arcSweep(x0, y0, x1, y1) {
    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
  }
  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;
    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];
  }
  function d3_svg_line(projection) {
    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
    function line(data) {
      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
      function segment() {
        segments.push("M", interpolate(projection(points), tension));
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
        } else if (points.length) {
          segment();
          points = [];
        }
      }
      if (points.length) segment();
      return segments.length ? segments.join("") : null;
    }
    line.x = function(_) {
      if (!arguments.length) return x;
      x = _;
      return line;
    };
    line.y = function(_) {
      if (!arguments.length) return y;
      y = _;
      return line;
    };
    line.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return line;
    };
    line.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      return line;
    };
    line.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return line;
    };
    return line;
  }
  d3.svg.line = function() {
    return d3_svg_line(d3_identity);
  };
  var d3_svg_lineInterpolators = d3.map({
    linear: d3_svg_lineLinear,
    "linear-closed": d3_svg_lineLinearClosed,
    step: d3_svg_lineStep,
    "step-before": d3_svg_lineStepBefore,
    "step-after": d3_svg_lineStepAfter,
    basis: d3_svg_lineBasis,
    "basis-open": d3_svg_lineBasisOpen,
    "basis-closed": d3_svg_lineBasisClosed,
    bundle: d3_svg_lineBundle,
    cardinal: d3_svg_lineCardinal,
    "cardinal-open": d3_svg_lineCardinalOpen,
    "cardinal-closed": d3_svg_lineCardinalClosed,
    monotone: d3_svg_lineMonotone
  });
  d3_svg_lineInterpolators.forEach(function(key, value) {
    value.key = key;
    value.closed = /-closed$/.test(key);
  });
  function d3_svg_lineLinear(points) {
    return points.join("L");
  }
  function d3_svg_lineLinearClosed(points) {
    return d3_svg_lineLinear(points) + "Z";
  }
  function d3_svg_lineStep(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
    if (n > 1) path.push("H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepBefore(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepAfter(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
    return path.join("");
  }
  function d3_svg_lineCardinalOpen(points, tension) {
    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineCardinalClosed(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
  }
  function d3_svg_lineCardinal(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineHermite(points, tangents) {
    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
      return d3_svg_lineLinear(points);
    }
    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
    if (quad) {
      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
      p0 = points[1];
      pi = 2;
    }
    if (tangents.length > 1) {
      t = tangents[1];
      p = points[pi];
      pi++;
      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      for (var i = 2; i < tangents.length; i++, pi++) {
        p = points[pi];
        t = tangents[i];
        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      }
    }
    if (quad) {
      var lp = points[pi];
      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
    }
    return path;
  }
  function d3_svg_lineCardinalTangents(points, tension) {
    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
    while (++i < n) {
      p0 = p1;
      p1 = p2;
      p2 = points[i];
      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
    }
    return tangents;
  }
  function d3_svg_lineBasis(points) {
    if (points.length < 3) return d3_svg_lineLinear(points);
    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    points.push(points[n - 1]);
    while (++i <= n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    points.pop();
    path.push("L", pi);
    return path.join("");
  }
  function d3_svg_lineBasisOpen(points) {
    if (points.length < 4) return d3_svg_lineLinear(points);
    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
    while (++i < 3) {
      pi = points[i];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
    --i;
    while (++i < n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBasisClosed(points) {
    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
    while (++i < 4) {
      pi = points[i % n];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    --i;
    while (++i < m) {
      pi = points[i % n];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBundle(points, tension) {
    var n = points.length - 1;
    if (n) {
      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
      while (++i <= n) {
        p = points[i];
        t = i / n;
        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
      }
    }
    return d3_svg_lineBasis(points);
  }
  function d3_svg_lineDot4(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
  }
  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
  function d3_svg_lineBasisBezier(path, x, y) {
    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
  }
  function d3_svg_lineSlope(p0, p1) {
    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
  }
  function d3_svg_lineFiniteDifferences(points) {
    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
    while (++i < j) {
      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
    }
    m[i] = d;
    return m;
  }
  function d3_svg_lineMonotoneTangents(points) {
    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
    while (++i < j) {
      d = d3_svg_lineSlope(points[i], points[i + 1]);
      if (abs(d) < ε) {
        m[i] = m[i + 1] = 0;
      } else {
        a = m[i] / d;
        b = m[i + 1] / d;
        s = a * a + b * b;
        if (s > 9) {
          s = d * 3 / Math.sqrt(s);
          m[i] = s * a;
          m[i + 1] = s * b;
        }
      }
    }
    i = -1;
    while (++i <= j) {
      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
      tangents.push([ s || 0, m[i] * s || 0 ]);
    }
    return tangents;
  }
  function d3_svg_lineMonotone(points) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
  }
  d3.svg.line.radial = function() {
    var line = d3_svg_line(d3_svg_lineRadial);
    line.radius = line.x, delete line.x;
    line.angle = line.y, delete line.y;
    return line;
  };
  function d3_svg_lineRadial(points) {
    var point, i = -1, n = points.length, r, a;
    while (++i < n) {
      point = points[i];
      r = point[0];
      a = point[1] - halfπ;
      point[0] = r * Math.cos(a);
      point[1] = r * Math.sin(a);
    }
    return points;
  }
  function d3_svg_area(projection) {
    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
    function area(data) {
      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
        return x;
      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
        return y;
      } : d3_functor(y1), x, y;
      function segment() {
        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
        } else if (points0.length) {
          segment();
          points0 = [];
          points1 = [];
        }
      }
      if (points0.length) segment();
      return segments.length ? segments.join("") : null;
    }
    area.x = function(_) {
      if (!arguments.length) return x1;
      x0 = x1 = _;
      return area;
    };
    area.x0 = function(_) {
      if (!arguments.length) return x0;
      x0 = _;
      return area;
    };
    area.x1 = function(_) {
      if (!arguments.length) return x1;
      x1 = _;
      return area;
    };
    area.y = function(_) {
      if (!arguments.length) return y1;
      y0 = y1 = _;
      return area;
    };
    area.y0 = function(_) {
      if (!arguments.length) return y0;
      y0 = _;
      return area;
    };
    area.y1 = function(_) {
      if (!arguments.length) return y1;
      y1 = _;
      return area;
    };
    area.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return area;
    };
    area.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      interpolateReverse = interpolate.reverse || interpolate;
      L = interpolate.closed ? "M" : "L";
      return area;
    };
    area.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return area;
    };
    return area;
  }
  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
  d3.svg.area = function() {
    return d3_svg_area(d3_identity);
  };
  d3.svg.area.radial = function() {
    var area = d3_svg_area(d3_svg_lineRadial);
    area.radius = area.x, delete area.x;
    area.innerRadius = area.x0, delete area.x0;
    area.outerRadius = area.x1, delete area.x1;
    area.angle = area.y, delete area.y;
    area.startAngle = area.y0, delete area.y0;
    area.endAngle = area.y1, delete area.y1;
    return area;
  };
  d3.svg.chord = function() {
    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function chord(d, i) {
      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
    }
    function subgroup(self, f, d, i) {
      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;
      return {
        r: r,
        a0: a0,
        a1: a1,
        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
      };
    }
    function equals(a, b) {
      return a.a0 == b.a0 && a.a1 == b.a1;
    }
    function arc(r, p, a) {
      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
    }
    function curve(r0, p0, r1, p1) {
      return "Q 0,0 " + p1;
    }
    chord.radius = function(v) {
      if (!arguments.length) return radius;
      radius = d3_functor(v);
      return chord;
    };
    chord.source = function(v) {
      if (!arguments.length) return source;
      source = d3_functor(v);
      return chord;
    };
    chord.target = function(v) {
      if (!arguments.length) return target;
      target = d3_functor(v);
      return chord;
    };
    chord.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return chord;
    };
    chord.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return chord;
    };
    return chord;
  };
  function d3_svg_chordRadius(d) {
    return d.radius;
  }
  d3.svg.diagonal = function() {
    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
    function diagonal(d, i) {
      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
        x: p0.x,
        y: m
      }, {
        x: p3.x,
        y: m
      }, p3 ];
      p = p.map(projection);
      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
    }
    diagonal.source = function(x) {
      if (!arguments.length) return source;
      source = d3_functor(x);
      return diagonal;
    };
    diagonal.target = function(x) {
      if (!arguments.length) return target;
      target = d3_functor(x);
      return diagonal;
    };
    diagonal.projection = function(x) {
      if (!arguments.length) return projection;
      projection = x;
      return diagonal;
    };
    return diagonal;
  };
  function d3_svg_diagonalProjection(d) {
    return [ d.x, d.y ];
  }
  d3.svg.diagonal.radial = function() {
    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
    diagonal.projection = function(x) {
      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
    };
    return diagonal;
  };
  function d3_svg_diagonalRadialProjection(projection) {
    return function() {
      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;
      return [ r * Math.cos(a), r * Math.sin(a) ];
    };
  }
  d3.svg.symbol = function() {
    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
    function symbol(d, i) {
      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
    }
    symbol.type = function(x) {
      if (!arguments.length) return type;
      type = d3_functor(x);
      return symbol;
    };
    symbol.size = function(x) {
      if (!arguments.length) return size;
      size = d3_functor(x);
      return symbol;
    };
    return symbol;
  };
  function d3_svg_symbolSize() {
    return 64;
  }
  function d3_svg_symbolType() {
    return "circle";
  }
  function d3_svg_symbolCircle(size) {
    var r = Math.sqrt(size / π);
    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
  }
  var d3_svg_symbols = d3.map({
    circle: d3_svg_symbolCircle,
    cross: function(size) {
      var r = Math.sqrt(size / 5) / 2;
      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
    },
    diamond: function(size) {
      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
    },
    square: function(size) {
      var r = Math.sqrt(size) / 2;
      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
    },
    "triangle-down": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
    },
    "triangle-up": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
    }
  });
  d3.svg.symbolTypes = d3_svg_symbols.keys();
  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
  d3_selectionPrototype.transition = function(name) {
    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {
      time: Date.now(),
      ease: d3_ease_cubicInOut,
      delay: 0,
      duration: 250
    };
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_selectionPrototype.interrupt = function(name) {
    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
  };
  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());
  function d3_selection_interruptNS(ns) {
    return function() {
      var lock, active;
      if ((lock = this[ns]) && (active = lock[lock.active])) {
        if (--lock.count) delete lock[lock.active]; else delete this[ns];
        lock.active += .5;
        active.event && active.event.interrupt.call(this, this.__data__, active.index);
      }
    };
  }
  function d3_transition(groups, ns, id) {
    d3_subclass(groups, d3_transitionPrototype);
    groups.namespace = ns;
    groups.id = id;
    return groups;
  }
  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
  d3_transitionPrototype.call = d3_selectionPrototype.call;
  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
  d3_transitionPrototype.node = d3_selectionPrototype.node;
  d3_transitionPrototype.size = d3_selectionPrototype.size;
  d3.transition = function(selection, name) {
    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
  };
  d3.transition.prototype = d3_transitionPrototype;
  d3_transitionPrototype.select = function(selector) {
    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          d3_transitionNode(subnode, i, ns, id, node[ns][id]);
          subgroup.push(subnode);
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_transitionPrototype.selectAll = function(selector) {
    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          transition = node[ns][id];
          subnodes = selector.call(node, node.__data__, i, j);
          subgroups.push(subgroup = []);
          for (var k = -1, o = subnodes.length; ++k < o; ) {
            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
            subgroup.push(subnode);
          }
        }
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_transitionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_transition(subgroups, this.namespace, this.id);
  };
  d3_transitionPrototype.tween = function(name, tween) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
    return d3_selection_each(this, tween == null ? function(node) {
      node[ns][id].tween.remove(name);
    } : function(node) {
      node[ns][id].tween.set(name, tween);
    });
  };
  function d3_transition_tween(groups, name, value, tween) {
    var id = groups.id, ns = groups.namespace;
    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
    } : (value = tween(value), function(node) {
      node[ns][id].tween.set(name, value);
    }));
  }
  d3_transitionPrototype.attr = function(nameNS, value) {
    if (arguments.length < 2) {
      for (value in nameNS) this.attr(value, nameNS[value]);
      return this;
    }
    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrTween(b) {
      return b == null ? attrNull : (b += "", function() {
        var a = this.getAttribute(name), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttribute(name, i(t));
        });
      });
    }
    function attrTweenNS(b) {
      return b == null ? attrNullNS : (b += "", function() {
        var a = this.getAttributeNS(name.space, name.local), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttributeNS(name.space, name.local, i(t));
        });
      });
    }
    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.attrTween = function(nameNS, tween) {
    var name = d3.ns.qualify(nameNS);
    function attrTween(d, i) {
      var f = tween.call(this, d, i, this.getAttribute(name));
      return f && function(t) {
        this.setAttribute(name, f(t));
      };
    }
    function attrTweenNS(d, i) {
      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
      return f && function(t) {
        this.setAttributeNS(name.space, name.local, f(t));
      };
    }
    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.style(priority, name[priority], value);
        return this;
      }
      priority = "";
    }
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleString(b) {
      return b == null ? styleNull : (b += "", function() {
        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;
        return a !== b && (i = d3_interpolate(a, b), function(t) {
          this.style.setProperty(name, i(t), priority);
        });
      });
    }
    return d3_transition_tween(this, "style." + name, value, styleString);
  };
  d3_transitionPrototype.styleTween = function(name, tween, priority) {
    if (arguments.length < 3) priority = "";
    function styleTween(d, i) {
      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
      return f && function(t) {
        this.style.setProperty(name, f(t), priority);
      };
    }
    return this.tween("style." + name, styleTween);
  };
  d3_transitionPrototype.text = function(value) {
    return d3_transition_tween(this, "text", value, d3_transition_text);
  };
  function d3_transition_text(b) {
    if (b == null) b = "";
    return function() {
      this.textContent = b;
    };
  }
  d3_transitionPrototype.remove = function() {
    var ns = this.namespace;
    return this.each("end.transition", function() {
      var p;
      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
    });
  };
  d3_transitionPrototype.ease = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].ease;
    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
    return d3_selection_each(this, function(node) {
      node[ns][id].ease = value;
    });
  };
  d3_transitionPrototype.delay = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].delay;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node[ns][id].delay = +value.call(node, node.__data__, i, j);
    } : (value = +value, function(node) {
      node[ns][id].delay = value;
    }));
  };
  d3_transitionPrototype.duration = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].duration;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
    } : (value = Math.max(1, value), function(node) {
      node[ns][id].duration = value;
    }));
  };
  d3_transitionPrototype.each = function(type, listener) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 2) {
      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
      try {
        d3_transitionInheritId = id;
        d3_selection_each(this, function(node, i, j) {
          d3_transitionInherit = node[ns][id];
          type.call(node, node.__data__, i, j);
        });
      } finally {
        d3_transitionInherit = inherit;
        d3_transitionInheritId = inheritId;
      }
    } else {
      d3_selection_each(this, function(node) {
        var transition = node[ns][id];
        (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
      });
    }
    return this;
  };
  d3_transitionPrototype.transition = function() {
    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if (node = group[i]) {
          transition = node[ns][id0];
          d3_transitionNode(node, i, ns, id1, {
            time: transition.time,
            ease: transition.ease,
            delay: transition.delay + transition.duration,
            duration: transition.duration
          });
        }
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, ns, id1);
  };
  function d3_transitionNamespace(name) {
    return name == null ? "__transition__" : "__transition_" + name + "__";
  }
  function d3_transitionNode(node, i, ns, id, inherit) {
    var lock = node[ns] || (node[ns] = {
      active: 0,
      count: 0
    }), transition = lock[id];
    if (!transition) {
      var time = inherit.time;
      transition = lock[id] = {
        tween: new d3_Map(),
        time: time,
        delay: inherit.delay,
        duration: inherit.duration,
        ease: inherit.ease,
        index: i
      };
      inherit = null;
      ++lock.count;
      d3.timer(function(elapsed) {
        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];
        timer.t = delay + time;
        if (delay <= elapsed) return start(elapsed - delay);
        timer.c = start;
        function start(elapsed) {
          if (lock.active > id) return stop();
          var active = lock[lock.active];
          if (active) {
            --lock.count;
            delete lock[lock.active];
            active.event && active.event.interrupt.call(node, node.__data__, active.index);
          }
          lock.active = id;
          transition.event && transition.event.start.call(node, node.__data__, i);
          transition.tween.forEach(function(key, value) {
            if (value = value.call(node, node.__data__, i)) {
              tweened.push(value);
            }
          });
          ease = transition.ease;
          duration = transition.duration;
          d3.timer(function() {
            timer.c = tick(elapsed || 1) ? d3_true : tick;
            return 1;
          }, 0, time);
        }
        function tick(elapsed) {
          if (lock.active !== id) return 1;
          var t = elapsed / duration, e = ease(t), n = tweened.length;
          while (n > 0) {
            tweened[--n].call(node, e);
          }
          if (t >= 1) {
            transition.event && transition.event.end.call(node, node.__data__, i);
            return stop();
          }
        }
        function stop() {
          if (--lock.count) delete lock[id]; else delete node[ns];
          return 1;
        }
      }, 0, time);
    }
  }
  d3.svg.axis = function() {
    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
    function axis(g) {
      g.each(function() {
        var g = d3.select(this);
        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
        d3.transition(path));
        tickEnter.append("line");
        tickEnter.append("text");
        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
        if (orient === "bottom" || orient === "top") {
          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
        } else {
          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
        }
        lineEnter.attr(y2, sign * innerTickSize);
        textEnter.attr(y1, sign * tickSpacing);
        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
        if (scale1.rangeBand) {
          var x = scale1, dx = x.rangeBand() / 2;
          scale0 = scale1 = function(d) {
            return x(d) + dx;
          };
        } else if (scale0.rangeBand) {
          scale0 = scale1;
        } else {
          tickExit.call(tickTransform, scale1, scale0);
        }
        tickEnter.call(tickTransform, scale0, scale1);
        tickUpdate.call(tickTransform, scale1, scale1);
      });
    }
    axis.scale = function(x) {
      if (!arguments.length) return scale;
      scale = x;
      return axis;
    };
    axis.orient = function(x) {
      if (!arguments.length) return orient;
      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
      return axis;
    };
    axis.ticks = function() {
      if (!arguments.length) return tickArguments_;
      tickArguments_ = arguments;
      return axis;
    };
    axis.tickValues = function(x) {
      if (!arguments.length) return tickValues;
      tickValues = x;
      return axis;
    };
    axis.tickFormat = function(x) {
      if (!arguments.length) return tickFormat_;
      tickFormat_ = x;
      return axis;
    };
    axis.tickSize = function(x) {
      var n = arguments.length;
      if (!n) return innerTickSize;
      innerTickSize = +x;
      outerTickSize = +arguments[n - 1];
      return axis;
    };
    axis.innerTickSize = function(x) {
      if (!arguments.length) return innerTickSize;
      innerTickSize = +x;
      return axis;
    };
    axis.outerTickSize = function(x) {
      if (!arguments.length) return outerTickSize;
      outerTickSize = +x;
      return axis;
    };
    axis.tickPadding = function(x) {
      if (!arguments.length) return tickPadding;
      tickPadding = +x;
      return axis;
    };
    axis.tickSubdivide = function() {
      return arguments.length && axis;
    };
    return axis;
  };
  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  };
  function d3_svg_axisX(selection, x0, x1) {
    selection.attr("transform", function(d) {
      var v0 = x0(d);
      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
    });
  }
  function d3_svg_axisY(selection, y0, y1) {
    selection.attr("transform", function(d) {
      var v0 = y0(d);
      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
    });
  }
  d3.svg.brush = function() {
    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
    function brush(g) {
      g.each(function() {
        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
        var background = g.selectAll(".background").data([ 0 ]);
        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
        var resize = g.selectAll(".resize").data(resizes, d3_identity);
        resize.exit().remove();
        resize.enter().append("g").attr("class", function(d) {
          return "resize " + d;
        }).style("cursor", function(d) {
          return d3_svg_brushCursor[d];
        }).append("rect").attr("x", function(d) {
          return /[ew]$/.test(d) ? -3 : null;
        }).attr("y", function(d) {
          return /^[ns]/.test(d) ? -3 : null;
        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
        resize.style("display", brush.empty() ? "none" : null);
        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
        if (x) {
          range = d3_scaleRange(x);
          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
          redrawX(gUpdate);
        }
        if (y) {
          range = d3_scaleRange(y);
          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
          redrawY(gUpdate);
        }
        redraw(gUpdate);
      });
    }
    brush.event = function(g) {
      g.each(function() {
        var event_ = event.of(this, arguments), extent1 = {
          x: xExtent,
          y: yExtent,
          i: xExtentDomain,
          j: yExtentDomain
        }, extent0 = this.__chart__ || extent1;
        this.__chart__ = extent1;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.brush", function() {
            xExtentDomain = extent0.i;
            yExtentDomain = extent0.j;
            xExtent = extent0.x;
            yExtent = extent0.y;
            event_({
              type: "brushstart"
            });
          }).tween("brush:brush", function() {
            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
            xExtentDomain = yExtentDomain = null;
            return function(t) {
              xExtent = extent1.x = xi(t);
              yExtent = extent1.y = yi(t);
              event_({
                type: "brush",
                mode: "resize"
              });
            };
          }).each("end.brush", function() {
            xExtentDomain = extent1.i;
            yExtentDomain = extent1.j;
            event_({
              type: "brush",
              mode: "resize"
            });
            event_({
              type: "brushend"
            });
          });
        } else {
          event_({
            type: "brushstart"
          });
          event_({
            type: "brush",
            mode: "resize"
          });
          event_({
            type: "brushend"
          });
        }
      });
    };
    function redraw(g) {
      g.selectAll(".resize").attr("transform", function(d) {
        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
      });
    }
    function redrawX(g) {
      g.select(".extent").attr("x", xExtent[0]);
      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
    }
    function redrawY(g) {
      g.select(".extent").attr("y", yExtent[0]);
      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
    }
    function brushstart() {
      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;
      var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);
      if (d3.event.changedTouches) {
        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
      } else {
        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
      }
      g.interrupt().selectAll("*").interrupt();
      if (dragging) {
        origin[0] = xExtent[0] - origin[0];
        origin[1] = yExtent[0] - origin[1];
      } else if (resizing) {
        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
        origin[0] = xExtent[ex];
        origin[1] = yExtent[ey];
      } else if (d3.event.altKey) center = origin.slice();
      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
      d3.select("body").style("cursor", eventTarget.style("cursor"));
      event_({
        type: "brushstart"
      });
      brushmove();
      function keydown() {
        if (d3.event.keyCode == 32) {
          if (!dragging) {
            center = null;
            origin[0] -= xExtent[1];
            origin[1] -= yExtent[1];
            dragging = 2;
          }
          d3_eventPreventDefault();
        }
      }
      function keyup() {
        if (d3.event.keyCode == 32 && dragging == 2) {
          origin[0] += xExtent[1];
          origin[1] += yExtent[1];
          dragging = 0;
          d3_eventPreventDefault();
        }
      }
      function brushmove() {
        var point = d3.mouse(target), moved = false;
        if (offset) {
          point[0] += offset[0];
          point[1] += offset[1];
        }
        if (!dragging) {
          if (d3.event.altKey) {
            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
            origin[0] = xExtent[+(point[0] < center[0])];
            origin[1] = yExtent[+(point[1] < center[1])];
          } else center = null;
        }
        if (resizingX && move1(point, x, 0)) {
          redrawX(g);
          moved = true;
        }
        if (resizingY && move1(point, y, 1)) {
          redrawY(g);
          moved = true;
        }
        if (moved) {
          redraw(g);
          event_({
            type: "brush",
            mode: dragging ? "move" : "resize"
          });
        }
      }
      function move1(point, scale, i) {
        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
        if (dragging) {
          r0 -= position;
          r1 -= size + position;
        }
        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
        if (dragging) {
          max = (min += position) + size;
        } else {
          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
          if (position < min) {
            max = min;
            min = position;
          } else {
            max = position;
          }
        }
        if (extent[0] != min || extent[1] != max) {
          if (i) yExtentDomain = null; else xExtentDomain = null;
          extent[0] = min;
          extent[1] = max;
          return true;
        }
      }
      function brushend() {
        brushmove();
        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
        d3.select("body").style("cursor", null);
        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
        dragRestore();
        event_({
          type: "brushend"
        });
      }
    }
    brush.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.clamp = function(z) {
      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
      return brush;
    };
    brush.extent = function(z) {
      var x0, x1, y0, y1, t;
      if (!arguments.length) {
        if (x) {
          if (xExtentDomain) {
            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
          } else {
            x0 = xExtent[0], x1 = xExtent[1];
            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
            if (x1 < x0) t = x0, x0 = x1, x1 = t;
          }
        }
        if (y) {
          if (yExtentDomain) {
            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
          } else {
            y0 = yExtent[0], y1 = yExtent[1];
            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
            if (y1 < y0) t = y0, y0 = y1, y1 = t;
          }
        }
        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
      }
      if (x) {
        x0 = z[0], x1 = z[1];
        if (y) x0 = x0[0], x1 = x1[0];
        xExtentDomain = [ x0, x1 ];
        if (x.invert) x0 = x(x0), x1 = x(x1);
        if (x1 < x0) t = x0, x0 = x1, x1 = t;
        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
      }
      if (y) {
        y0 = z[0], y1 = z[1];
        if (x) y0 = y0[1], y1 = y1[1];
        yExtentDomain = [ y0, y1 ];
        if (y.invert) y0 = y(y0), y1 = y(y1);
        if (y1 < y0) t = y0, y0 = y1, y1 = t;
        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
      }
      return brush;
    };
    brush.clear = function() {
      if (!brush.empty()) {
        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
        xExtentDomain = yExtentDomain = null;
      }
      return brush;
    };
    brush.empty = function() {
      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
    };
    return d3.rebind(brush, event, "on");
  };
  var d3_svg_brushCursor = {
    n: "ns-resize",
    e: "ew-resize",
    s: "ns-resize",
    w: "ew-resize",
    nw: "nwse-resize",
    ne: "nesw-resize",
    se: "nwse-resize",
    sw: "nesw-resize"
  };
  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
  var d3_time_formatUtc = d3_time_format.utc;
  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
  function d3_time_formatIsoNative(date) {
    return date.toISOString();
  }
  d3_time_formatIsoNative.parse = function(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
  };
  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
  d3_time.second = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 1e3) * 1e3);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
  }, function(date) {
    return date.getSeconds();
  });
  d3_time.seconds = d3_time.second.range;
  d3_time.seconds.utc = d3_time.second.utc.range;
  d3_time.minute = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 6e4) * 6e4);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
  }, function(date) {
    return date.getMinutes();
  });
  d3_time.minutes = d3_time.minute.range;
  d3_time.minutes.utc = d3_time.minute.utc.range;
  d3_time.hour = d3_time_interval(function(date) {
    var timezone = date.getTimezoneOffset() / 60;
    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
  }, function(date) {
    return date.getHours();
  });
  d3_time.hours = d3_time.hour.range;
  d3_time.hours.utc = d3_time.hour.utc.range;
  d3_time.month = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setDate(1);
    return date;
  }, function(date, offset) {
    date.setMonth(date.getMonth() + offset);
  }, function(date) {
    return date.getMonth();
  });
  d3_time.months = d3_time.month.range;
  d3_time.months.utc = d3_time.month.utc.range;
  function d3_time_scale(linear, methods, format) {
    function scale(x) {
      return linear(x);
    }
    scale.invert = function(x) {
      return d3_time_scaleDate(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
      linear.domain(x);
      return scale;
    };
    function tickMethod(extent, count) {
      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
        return d / 31536e6;
      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
    }
    scale.nice = function(interval, skip) {
      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
      if (method) interval = method[0], skip = method[1];
      function skipped(date) {
        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
      }
      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
        floor: function(date) {
          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
          return date;
        },
        ceil: function(date) {
          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
          return date;
        }
      } : interval));
    };
    scale.ticks = function(interval, skip) {
      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
        range: interval
      }, skip ];
      if (method) interval = method[0], skip = method[1];
      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
    };
    scale.tickFormat = function() {
      return format;
    };
    scale.copy = function() {
      return d3_time_scale(linear.copy(), methods, format);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_time_scaleDate(t) {
    return new Date(t);
  }
  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
    return d.getMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getMinutes();
  } ], [ "%I %p", function(d) {
    return d.getHours();
  } ], [ "%a %d", function(d) {
    return d.getDay() && d.getDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getDate() != 1;
  } ], [ "%B", function(d) {
    return d.getMonth();
  } ], [ "%Y", d3_true ] ]);
  var d3_time_scaleMilliseconds = {
    range: function(start, stop, step) {
      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
    },
    floor: d3_identity,
    ceil: d3_identity
  };
  d3_time_scaleLocalMethods.year = d3_time.year;
  d3_time.scale = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
  };
  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
    return [ m[0].utc, m[1] ];
  });
  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
    return d.getUTCMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getUTCSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getUTCMinutes();
  } ], [ "%I %p", function(d) {
    return d.getUTCHours();
  } ], [ "%a %d", function(d) {
    return d.getUTCDay() && d.getUTCDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getUTCDate() != 1;
  } ], [ "%B", function(d) {
    return d.getUTCMonth();
  } ], [ "%Y", d3_true ] ]);
  d3_time_scaleUtcMethods.year = d3_time.year.utc;
  d3_time.scale.utc = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
  };
  d3.text = d3_xhrType(function(request) {
    return request.responseText;
  });
  d3.json = function(url, callback) {
    return d3_xhr(url, "application/json", d3_json, callback);
  };
  function d3_json(request) {
    return JSON.parse(request.responseText);
  }
  d3.html = function(url, callback) {
    return d3_xhr(url, "text/html", d3_html, callback);
  };
  function d3_html(request) {
    var range = d3_document.createRange();
    range.selectNode(d3_document.body);
    return range.createContextualFragment(request.responseText);
  }
  d3.xml = d3_xhrType(function(request) {
    return request.responseXML;
  });
  if (typeof define === "function" && define.amd) define(d3); else if (typeof module === "object" && module.exports) module.exports = d3;
  this.d3 = d3;
}();
!function() {
  var topojson = {
    version: "1.6.19",
    mesh: function(topology) { return object(topology, meshArcs.apply(this, arguments)); },
    meshArcs: meshArcs,
    merge: function(topology) { return object(topology, mergeArcs.apply(this, arguments)); },
    mergeArcs: mergeArcs,
    feature: featureOrCollection,
    neighbors: neighbors,
    presimplify: presimplify
  };

  function stitchArcs(topology, arcs) {
    var stitchedArcs = {},
        fragmentByStart = {},
        fragmentByEnd = {},
        fragments = [],
        emptyIndex = -1;

    // Stitch empty arcs first, since they may be subsumed by other arcs.
    arcs.forEach(function(i, j) {
      var arc = topology.arcs[i < 0 ? ~i : i], t;
      if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {
        t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;
      }
    });

    arcs.forEach(function(i) {
      var e = ends(i),
          start = e[0],
          end = e[1],
          f, g;

      if (f = fragmentByEnd[start]) {
        delete fragmentByEnd[f.end];
        f.push(i);
        f.end = end;
        if (g = fragmentByStart[end]) {
          delete fragmentByStart[g.start];
          var fg = g === f ? f : f.concat(g);
          fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;
        } else {
          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
        }
      } else if (f = fragmentByStart[end]) {
        delete fragmentByStart[f.start];
        f.unshift(i);
        f.start = start;
        if (g = fragmentByEnd[start]) {
          delete fragmentByEnd[g.end];
          var gf = g === f ? f : g.concat(f);
          fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;
        } else {
          fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
        }
      } else {
        f = [i];
        fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;
      }
    });

    function ends(i) {
      var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;
      if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });
      else p1 = arc[arc.length - 1];
      return i < 0 ? [p1, p0] : [p0, p1];
    }

    function flush(fragmentByEnd, fragmentByStart) {
      for (var k in fragmentByEnd) {
        var f = fragmentByEnd[k];
        delete fragmentByStart[f.start];
        delete f.start;
        delete f.end;
        f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });
        fragments.push(f);
      }
    }

    flush(fragmentByEnd, fragmentByStart);
    flush(fragmentByStart, fragmentByEnd);
    arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });

    return fragments;
  }

  function meshArcs(topology, o, filter) {
    var arcs = [];

    if (arguments.length > 1) {
      var geomsByArc = [],
          geom;

      function arc(i) {
        var j = i < 0 ? ~i : i;
        (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});
      }

      function line(arcs) {
        arcs.forEach(arc);
      }

      function polygon(arcs) {
        arcs.forEach(line);
      }

      function geometry(o) {
        if (o.type === "GeometryCollection") o.geometries.forEach(geometry);
        else if (o.type in geometryType) geom = o, geometryType[o.type](o.arcs);
      }

      var geometryType = {
        LineString: line,
        MultiLineString: polygon,
        Polygon: polygon,
        MultiPolygon: function(arcs) { arcs.forEach(polygon); }
      };

      geometry(o);

      geomsByArc.forEach(arguments.length < 3
          ? function(geoms) { arcs.push(geoms[0].i); }
          : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });
    } else {
      for (var i = 0, n = topology.arcs.length; i < n; ++i) arcs.push(i);
    }

    return {type: "MultiLineString", arcs: stitchArcs(topology, arcs)};
  }

  function mergeArcs(topology, objects) {
    var polygonsByArc = {},
        polygons = [],
        components = [];

    objects.forEach(function(o) {
      if (o.type === "Polygon") register(o.arcs);
      else if (o.type === "MultiPolygon") o.arcs.forEach(register);
    });

    function register(polygon) {
      polygon.forEach(function(ring) {
        ring.forEach(function(arc) {
          (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);
        });
      });
      polygons.push(polygon);
    }

    function exterior(ring) {
      return cartesianRingArea(object(topology, {type: "Polygon", arcs: [ring]}).coordinates[0]) > 0; // TODO allow spherical?
    }

    polygons.forEach(function(polygon) {
      if (!polygon._) {
        var component = [],
            neighbors = [polygon];
        polygon._ = 1;
        components.push(component);
        while (polygon = neighbors.pop()) {
          component.push(polygon);
          polygon.forEach(function(ring) {
            ring.forEach(function(arc) {
              polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {
                if (!polygon._) {
                  polygon._ = 1;
                  neighbors.push(polygon);
                }
              });
            });
          });
        }
      }
    });

    polygons.forEach(function(polygon) {
      delete polygon._;
    });

    return {
      type: "MultiPolygon",
      arcs: components.map(function(polygons) {
        var arcs = [];

        // Extract the exterior (unique) arcs.
        polygons.forEach(function(polygon) {
          polygon.forEach(function(ring) {
            ring.forEach(function(arc) {
              if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {
                arcs.push(arc);
              }
            });
          });
        });

        // Stitch the arcs into one or more rings.
        arcs = stitchArcs(topology, arcs);

        // If more than one ring is returned,
        // at most one of these rings can be the exterior;
        // this exterior ring has the same winding order
        // as any exterior ring in the original polygons.
        if ((n = arcs.length) > 1) {
          var sgn = exterior(polygons[0][0]);
          for (var i = 0, t; i < n; ++i) {
            if (sgn === exterior(arcs[i])) {
              t = arcs[0], arcs[0] = arcs[i], arcs[i] = t;
              break;
            }
          }
        }

        return arcs;
      })
    };
  }

  function featureOrCollection(topology, o) {
    return o.type === "GeometryCollection" ? {
      type: "FeatureCollection",
      features: o.geometries.map(function(o) { return feature(topology, o); })
    } : feature(topology, o);
  }

  function feature(topology, o) {
    var f = {
      type: "Feature",
      id: o.id,
      properties: o.properties || {},
      geometry: object(topology, o)
    };
    if (o.id == null) delete f.id;
    return f;
  }

  function object(topology, o) {
    var absolute = transformAbsolute(topology.transform),
        arcs = topology.arcs;

    function arc(i, points) {
      if (points.length) points.pop();
      for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length, p; k < n; ++k) {
        points.push(p = a[k].slice());
        absolute(p, k);
      }
      if (i < 0) reverse(points, n);
    }

    function point(p) {
      p = p.slice();
      absolute(p, 0);
      return p;
    }

    function line(arcs) {
      var points = [];
      for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);
      if (points.length < 2) points.push(points[0].slice());
      return points;
    }

    function ring(arcs) {
      var points = line(arcs);
      while (points.length < 4) points.push(points[0].slice());
      return points;
    }

    function polygon(arcs) {
      return arcs.map(ring);
    }

    function geometry(o) {
      var t = o.type;
      return t === "GeometryCollection" ? {type: t, geometries: o.geometries.map(geometry)}
          : t in geometryType ? {type: t, coordinates: geometryType[t](o)}
          : null;
    }

    var geometryType = {
      Point: function(o) { return point(o.coordinates); },
      MultiPoint: function(o) { return o.coordinates.map(point); },
      LineString: function(o) { return line(o.arcs); },
      MultiLineString: function(o) { return o.arcs.map(line); },
      Polygon: function(o) { return polygon(o.arcs); },
      MultiPolygon: function(o) { return o.arcs.map(polygon); }
    };

    return geometry(o);
  }

  function reverse(array, n) {
    var t, j = array.length, i = j - n; while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;
  }

  function bisect(a, x) {
    var lo = 0, hi = a.length;
    while (lo < hi) {
      var mid = lo + hi >>> 1;
      if (a[mid] < x) lo = mid + 1;
      else hi = mid;
    }
    return lo;
  }

  function neighbors(objects) {
    var indexesByArc = {}, // arc index -> array of object indexes
        neighbors = objects.map(function() { return []; });

    function line(arcs, i) {
      arcs.forEach(function(a) {
        if (a < 0) a = ~a;
        var o = indexesByArc[a];
        if (o) o.push(i);
        else indexesByArc[a] = [i];
      });
    }

    function polygon(arcs, i) {
      arcs.forEach(function(arc) { line(arc, i); });
    }

    function geometry(o, i) {
      if (o.type === "GeometryCollection") o.geometries.forEach(function(o) { geometry(o, i); });
      else if (o.type in geometryType) geometryType[o.type](o.arcs, i);
    }

    var geometryType = {
      LineString: line,
      MultiLineString: polygon,
      Polygon: polygon,
      MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }
    };

    objects.forEach(geometry);

    for (var i in indexesByArc) {
      for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {
        for (var k = j + 1; k < m; ++k) {
          var ij = indexes[j], ik = indexes[k], n;
          if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);
          if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);
        }
      }
    }

    return neighbors;
  }

  function presimplify(topology, triangleArea) {
    var absolute = transformAbsolute(topology.transform),
        relative = transformRelative(topology.transform),
        heap = minAreaHeap();

    if (!triangleArea) triangleArea = cartesianTriangleArea;

    topology.arcs.forEach(function(arc) {
      var triangles = [],
          maxArea = 0,
          triangle;

      // To store each point’s effective area, we create a new array rather than
      // extending the passed-in point to workaround a Chrome/V8 bug (getting
      // stuck in smi mode). For midpoints, the initial effective area of
      // Infinity will be computed in the next step.
      for (var i = 0, n = arc.length, p; i < n; ++i) {
        p = arc[i];
        absolute(arc[i] = [p[0], p[1], Infinity], i);
      }

      for (var i = 1, n = arc.length - 1; i < n; ++i) {
        triangle = arc.slice(i - 1, i + 2);
        triangle[1][2] = triangleArea(triangle);
        triangles.push(triangle);
        heap.push(triangle);
      }

      for (var i = 0, n = triangles.length; i < n; ++i) {
        triangle = triangles[i];
        triangle.previous = triangles[i - 1];
        triangle.next = triangles[i + 1];
      }

      while (triangle = heap.pop()) {
        var previous = triangle.previous,
            next = triangle.next;

        // If the area of the current point is less than that of the previous point
        // to be eliminated, use the latter's area instead. This ensures that the
        // current point cannot be eliminated without eliminating previously-
        // eliminated points.
        if (triangle[1][2] < maxArea) triangle[1][2] = maxArea;
        else maxArea = triangle[1][2];

        if (previous) {
          previous.next = next;
          previous[2] = triangle[2];
          update(previous);
        }

        if (next) {
          next.previous = previous;
          next[0] = triangle[0];
          update(next);
        }
      }

      arc.forEach(relative);
    });

    function update(triangle) {
      heap.remove(triangle);
      triangle[1][2] = triangleArea(triangle);
      heap.push(triangle);
    }

    return topology;
  };

  function cartesianRingArea(ring) {
    var i = -1,
        n = ring.length,
        a,
        b = ring[n - 1],
        area = 0;

    while (++i < n) {
      a = b;
      b = ring[i];
      area += a[0] * b[1] - a[1] * b[0];
    }

    return area * .5;
  }

  function cartesianTriangleArea(triangle) {
    var a = triangle[0], b = triangle[1], c = triangle[2];
    return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]));
  }

  function compareArea(a, b) {
    return a[1][2] - b[1][2];
  }

  function minAreaHeap() {
    var heap = {},
        array = [],
        size = 0;

    heap.push = function(object) {
      up(array[object._ = size] = object, size++);
      return size;
    };

    heap.pop = function() {
      if (size <= 0) return;
      var removed = array[0], object;
      if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);
      return removed;
    };

    heap.remove = function(removed) {
      var i = removed._, object;
      if (array[i] !== removed) return; // invalid request
      if (i !== --size) object = array[size], (compareArea(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);
      return i;
    };

    function up(object, i) {
      while (i > 0) {
        var j = ((i + 1) >> 1) - 1,
            parent = array[j];
        if (compareArea(object, parent) >= 0) break;
        array[parent._ = i] = parent;
        array[object._ = i = j] = object;
      }
    }

    function down(object, i) {
      while (true) {
        var r = (i + 1) << 1,
            l = r - 1,
            j = i,
            child = array[j];
        if (l < size && compareArea(array[l], child) < 0) child = array[j = l];
        if (r < size && compareArea(array[r], child) < 0) child = array[j = r];
        if (j === i) break;
        array[child._ = i] = child;
        array[object._ = i = j] = object;
      }
    }

    return heap;
  }

  function transformAbsolute(transform) {
    if (!transform) return noop;
    var x0,
        y0,
        kx = transform.scale[0],
        ky = transform.scale[1],
        dx = transform.translate[0],
        dy = transform.translate[1];
    return function(point, i) {
      if (!i) x0 = y0 = 0;
      point[0] = (x0 += point[0]) * kx + dx;
      point[1] = (y0 += point[1]) * ky + dy;
    };
  }

  function transformRelative(transform) {
    if (!transform) return noop;
    var x0,
        y0,
        kx = transform.scale[0],
        ky = transform.scale[1],
        dx = transform.translate[0],
        dy = transform.translate[1];
    return function(point, i) {
      if (!i) x0 = y0 = 0;
      var x1 = (point[0] - dx) / kx | 0,
          y1 = (point[1] - dy) / ky | 0;
      point[0] = x1 - x0;
      point[1] = y1 - y0;
      x0 = x1;
      y0 = y1;
    };
  }

  function noop() {}

  if (typeof define === "function" && define.amd) define(topojson);
  else if (typeof module === "object" && module.exports) module.exports = topojson;
  else this.topojson = topojson;
}();

/**
 * @license
 * lodash 3.7.0 (Custom Build) lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE
 * Build: `lodash modern -o ./lodash.js`
 */
;(function(){function n(n,t){if(n!==t){var r=n===n,e=t===t;if(n>t||!r||n===w&&e)return 1;if(n<t||!e||t===w&&r)return-1}return 0}function t(n,t,r){for(var e=n.length,u=r?e:-1;r?u--:++u<e;)if(t(n[u],u,n))return u;return-1}function r(n,t,r){if(t!==t)return p(n,r);r-=1;for(var e=n.length;++r<e;)if(n[r]===t)return r;return-1}function e(n){return typeof n=="function"||false}function u(n){return typeof n=="string"?n:null==n?"":n+""}function o(n){return n.charCodeAt(0)}function i(n,t){for(var r=-1,e=n.length;++r<e&&-1<t.indexOf(n.charAt(r)););
return r}function f(n,t){for(var r=n.length;r--&&-1<t.indexOf(n.charAt(r)););return r}function a(t,r){return n(t.a,r.a)||t.b-r.b}function c(n){return $n[n]}function l(n){return Ln[n]}function s(n){return"\\"+Mn[n]}function p(n,t,r){var e=n.length;for(t+=r?0:-1;r?t--:++t<e;){var u=n[t];if(u!==u)return t}return-1}function h(n){return!!n&&typeof n=="object"}function _(n){return 160>=n&&9<=n&&13>=n||32==n||160==n||5760==n||6158==n||8192<=n&&(8202>=n||8232==n||8233==n||8239==n||8287==n||12288==n||65279==n);

}function v(n,t){for(var r=-1,e=n.length,u=-1,o=[];++r<e;)n[r]===t&&(n[r]=B,o[++u]=r);return o}function g(n){for(var t=-1,r=n.length;++t<r&&_(n.charCodeAt(t)););return t}function y(n){for(var t=n.length;t--&&_(n.charCodeAt(t)););return t}function d(n){return Bn[n]}function m(_){function $n(n){if(h(n)&&!(Io(n)||n instanceof zn)){if(n instanceof Bn)return n;if(Ke.call(n,"__chain__")&&Ke.call(n,"__wrapped__"))return Fr(n)}return new Bn(n)}function Ln(){}function Bn(n,t,r){this.__wrapped__=n,this.__actions__=r||[],
this.__chain__=!!t}function zn(n){this.__wrapped__=n,this.__actions__=null,this.__dir__=1,this.__filtered__=false,this.__iteratees__=null,this.__takeCount__=ju,this.__views__=null}function Mn(){this.__data__={}}function Dn(n){var t=n?n.length:0;for(this.data={hash:_u(null),set:new iu};t--;)this.push(n[t])}function Pn(n,t){var r=n.data;return(typeof t=="string"||ae(t)?r.set.has(t):r.hash[t])?0:-1}function qn(n,t){var r=-1,e=n.length;for(t||(t=Ce(e));++r<e;)t[r]=n[r];return t}function Kn(n,t){for(var r=-1,e=n.length;++r<e&&false!==t(n[r],r,n););
return n}function Vn(n,t){for(var r=-1,e=n.length;++r<e;)if(!t(n[r],r,n))return false;return true}function Gn(n,t){for(var r=-1,e=n.length,u=-1,o=[];++r<e;){var i=n[r];t(i,r,n)&&(o[++u]=i)}return o}function Jn(n,t){for(var r=-1,e=n.length,u=Ce(e);++r<e;)u[r]=t(n[r],r,n);return u}function Xn(n){for(var t=-1,r=n.length,e=Au;++t<r;){var u=n[t];u>e&&(e=u)}return e}function Hn(n,t){for(var r=-1,e=n.length;++r<e;)if(t(n[r],r,n))return true;return false}function Qn(n,t){return n===w?t:n}function nt(n,t,r,e){return n!==w&&Ke.call(e,r)?n:t;

}function tt(n,t,r){var e=zo(t);eu.apply(e,qu(t));for(var u=-1,o=e.length;++u<o;){var i=e[u],f=n[i],a=r(f,t[i],i,n,t);(a===a?a===f:f!==f)&&(f!==w||i in n)||(n[i]=a)}return n}function rt(n,t){for(var r=-1,e=n.length,u=Er(e),o=t.length,i=Ce(o);++r<o;){var f=t[r];i[r]=u?Ar(f,e)?n[f]:w:n[f]}return i}function et(n,t,r){r||(r={});for(var e=-1,u=t.length;++e<u;){var o=t[e];r[o]=n[o]}return r}function ut(n,t,r){var e=typeof n;return"function"==e?t===w?n:Bt(n,t,r):null==n?Oe:"object"==e?wt(n):t===w?Re(n):bt(n,t);

}function ot(n,t,r,e,u,o,i){var f;if(r&&(f=u?r(n,e,u):r(n)),f!==w)return f;if(!ae(n))return n;if(e=Io(n)){if(f=mr(n),!t)return qn(n,f)}else{var a=Ye.call(n),c=a==K;if(a!=Y&&a!=z&&(!c||u))return Nn[a]?br(n,a,t):u?n:{};if(f=wr(c?{}:n),!t)return Tu(f,n)}for(o||(o=[]),i||(i=[]),u=o.length;u--;)if(o[u]==n)return i[u];return o.push(n),i.push(f),(e?Kn:ht)(n,function(e,u){f[u]=ot(e,t,r,u,n,o,i)}),f}function it(n,t,r){if(typeof n!="function")throw new Be(L);return fu(function(){n.apply(w,r)},t)}function ft(n,t){
var e=n?n.length:0,u=[];if(!e)return u;var o=-1,i=dr(),f=i==r,a=f&&200<=t.length?zu(t):null,c=t.length;a&&(i=Pn,f=false,t=a);n:for(;++o<e;)if(a=n[o],f&&a===a){for(var l=c;l--;)if(t[l]===a)continue n;u.push(a)}else 0>i(t,a,0)&&u.push(a);return u}function at(n,t){var r=true;return Nu(n,function(n,e,u){return r=!!t(n,e,u)}),r}function ct(n,t){var r=[];return Nu(n,function(n,e,u){t(n,e,u)&&r.push(n)}),r}function lt(n,t,r,e){var u;return r(n,function(n,r,o){return t(n,r,o)?(u=e?r:n,false):void 0}),u}function st(n,t,r){
for(var e=-1,u=n.length,o=-1,i=[];++e<u;){var f=n[e];if(h(f)&&Er(f.length)&&(Io(f)||oe(f))){t&&(f=st(f,t,r));var a=-1,c=f.length;for(i.length+=c;++a<c;)i[++o]=f[a]}else r||(i[++o]=f)}return i}function pt(n,t){$u(n,t,ge)}function ht(n,t){return $u(n,t,zo)}function _t(n,t){return Lu(n,t,zo)}function vt(n,t){for(var r=-1,e=t.length,u=-1,o=[];++r<e;){var i=t[r];Co(n[i])&&(o[++u]=i)}return o}function gt(n,t,r){if(null!=n){r!==w&&r in Ur(n)&&(t=[r]),r=-1;for(var e=t.length;null!=n&&++r<e;)var u=n=n[t[r]];

return u}}function yt(n,t,r,e,u,o){if(n===t)return 0!==n||1/n==1/t;var i=typeof n,f=typeof t;if("function"!=i&&"object"!=i&&"function"!=f&&"object"!=f||null==n||null==t)n=n!==n&&t!==t;else n:{var i=yt,f=Io(n),a=Io(t),c=M,l=M;f||(c=Ye.call(n),c==z?c=Y:c!=Y&&(f=he(n))),a||(l=Ye.call(t),l==z?l=Y:l!=Y&&he(t));var s=c==Y,a=l==Y,l=c==l;if(!l||f||s){if(!e&&(c=s&&Ke.call(n,"__wrapped__"),a=a&&Ke.call(t,"__wrapped__"),c||a)){n=i(c?n.value():n,a?t.value():t,r,e,u,o);break n}if(l){for(u||(u=[]),o||(o=[]),c=u.length;c--;)if(u[c]==n){
n=o[c]==t;break n}u.push(n),o.push(t),n=(f?hr:vr)(n,t,i,r,e,u,o),u.pop(),o.pop()}else n=false}else n=_r(n,t,c)}return n}function dt(n,t,r,e,u){for(var o=-1,i=t.length,f=!u;++o<i;)if(f&&e[o]?r[o]!==n[t[o]]:!(t[o]in n))return false;for(o=-1;++o<i;){var a=t[o],c=n[a],l=r[o];if(f&&e[o]?a=c!==w||a in n:(a=u?u(c,l,a):w,a===w&&(a=yt(l,c,u,true))),!a)return false}return true}function mt(n,t){var r=-1,e=Pu(n),u=Er(e)?Ce(e):[];return Nu(n,function(n,e,o){u[++r]=t(n,e,o)}),u}function wt(n){var t=zo(n),r=t.length;if(!r)return ke(true);

if(1==r){var e=t[0],u=n[e];if(Ir(u))return function(n){return null==n?false:n[e]===u&&(u!==w||e in Ur(n))}}for(var o=Ce(r),i=Ce(r);r--;)u=n[t[r]],o[r]=u,i[r]=Ir(u);return function(n){return null!=n&&dt(Ur(n),t,o,i)}}function bt(n,t){var r=Io(n),e=kr(n)&&Ir(t),u=n+"";return n=Nr(n),function(o){if(null==o)return false;var i=u;if(o=Ur(o),!(!r&&e||i in o)){if(o=1==n.length?o:gt(o,It(n,0,-1)),null==o)return false;i=Mr(n),o=Ur(o)}return o[i]===t?t!==w||i in o:yt(t,o[i],null,true)}}function xt(n,t,r,e,u){if(!ae(n))return n;

var o=Er(t.length)&&(Io(t)||he(t));if(!o){var i=zo(t);eu.apply(i,qu(t))}return Kn(i||t,function(f,a){if(i&&(a=f,f=t[a]),h(f)){e||(e=[]),u||(u=[]);n:{for(var c=a,l=e,s=u,p=l.length,_=t[c];p--;)if(l[p]==_){n[c]=s[p];break n}var p=n[c],v=r?r(p,_,c,n,t):w,g=v===w;g&&(v=_,Er(_.length)&&(Io(_)||he(_))?v=Io(p)?p:Pu(p)?qn(p):[]:So(_)||oe(_)?v=oe(p)?_e(p):So(p)?p:{}:g=false),l.push(_),s.push(v),g?n[c]=xt(v,_,r,l,s):(v===v?v!==p:p===p)&&(n[c]=v)}}else c=n[a],l=r?r(c,f,a,n,t):w,(s=l===w)&&(l=f),!o&&l===w||!s&&(l===l?l===c:c!==c)||(n[a]=l);

}),n}function At(n){return function(t){return null==t?w:t[n]}}function jt(n){var t=n+"";return n=Nr(n),function(r){return gt(r,n,t)}}function kt(n,t){for(var r=t.length;r--;){var e=parseFloat(t[r]);if(e!=u&&Ar(e)){var u=e;au.call(n,e,1)}}}function Ot(n,t){return n+nu(xu()*(t-n+1))}function Et(n,t,r,e,u){return u(n,function(n,u,o){r=e?(e=false,n):t(r,n,u,o)}),r}function It(n,t,r){var e=-1,u=n.length;for(t=null==t?0:+t||0,0>t&&(t=-t>u?0:u+t),r=r===w||r>u?u:+r||0,0>r&&(r+=u),u=t>r?0:r-t>>>0,t>>>=0,r=Ce(u);++e<u;)r[e]=n[e+t];

return r}function Rt(n,t){var r;return Nu(n,function(n,e,u){return r=t(n,e,u),!r}),!!r}function Ct(n,t){var r=n.length;for(n.sort(t);r--;)n[r]=n[r].c;return n}function St(t,r,e){var u=yr(),o=-1;return r=Jn(r,function(n){return u(n)}),t=mt(t,function(n){return{a:Jn(r,function(t){return t(n)}),b:++o,c:n}}),Ct(t,function(t,r){var u;n:{u=-1;for(var o=t.a,i=r.a,f=o.length,a=e.length;++u<f;){var c=n(o[u],i[u]);if(c){u=u<a?c*(e[u]?1:-1):c;break n}}u=t.b-r.b}return u})}function Wt(n,t){var r=0;return Nu(n,function(n,e,u){
r+=+t(n,e,u)||0}),r}function Tt(n,t){var e=-1,u=dr(),o=n.length,i=u==r,f=i&&200<=o,a=f?zu():null,c=[];a?(u=Pn,i=false):(f=false,a=t?[]:c);n:for(;++e<o;){var l=n[e],s=t?t(l,e,n):l;if(i&&l===l){for(var p=a.length;p--;)if(a[p]===s)continue n;t&&a.push(s),c.push(l)}else 0>u(a,s,0)&&((t||f)&&a.push(s),c.push(l))}return c}function Ut(n,t){for(var r=-1,e=t.length,u=Ce(e);++r<e;)u[r]=n[t[r]];return u}function Nt(n,t,r,e){for(var u=n.length,o=e?u:-1;(e?o--:++o<u)&&t(n[o],o,n););return r?It(n,e?0:o,e?o+1:u):It(n,e?o+1:0,e?u:o);

}function Ft(n,t){var r=n;r instanceof zn&&(r=r.value());for(var e=-1,u=t.length;++e<u;){var r=[r],o=t[e];eu.apply(r,o.args),r=o.func.apply(o.thisArg,r)}return r}function $t(n,t,r){var e=0,u=n?n.length:e;if(typeof t=="number"&&t===t&&u<=Eu){for(;e<u;){var o=e+u>>>1,i=n[o];(r?i<=t:i<t)?e=o+1:u=o}return u}return Lt(n,t,Oe,r)}function Lt(n,t,r,e){t=r(t);for(var u=0,o=n?n.length:0,i=t!==t,f=t===w;u<o;){var a=nu((u+o)/2),c=r(n[a]),l=c===c;(i?l||e:f?l&&(e||c!==w):e?c<=t:c<t)?u=a+1:o=a}return du(o,Ou)}function Bt(n,t,r){
if(typeof n!="function")return Oe;if(t===w)return n;switch(r){case 1:return function(r){return n.call(t,r)};case 3:return function(r,e,u){return n.call(t,r,e,u)};case 4:return function(r,e,u,o){return n.call(t,r,e,u,o)};case 5:return function(r,e,u,o,i){return n.call(t,r,e,u,o,i)}}return function(){return n.apply(t,arguments)}}function zt(n){return Xe.call(n,0)}function Mt(n,t,r){for(var e=r.length,u=-1,o=yu(n.length-e,0),i=-1,f=t.length,a=Ce(o+f);++i<f;)a[i]=t[i];for(;++u<e;)a[r[u]]=n[u];for(;o--;)a[i++]=n[u++];

return a}function Dt(n,t,r){for(var e=-1,u=r.length,o=-1,i=yu(n.length-u,0),f=-1,a=t.length,c=Ce(i+a);++o<i;)c[o]=n[o];for(i=o;++f<a;)c[i+f]=t[f];for(;++e<u;)c[i+r[e]]=n[o++];return c}function Pt(n,t){return function(r,e,u){var o=t?t():{};if(e=yr(e,u,3),Io(r)){u=-1;for(var i=r.length;++u<i;){var f=r[u];n(o,f,e(f,u,r),r)}}else Nu(r,function(t,r,u){n(o,t,e(t,r,u),u)});return o}}function qt(n){return ue(function(t,r){var e=-1,u=null==t?0:r.length,o=2<u&&r[u-2],i=2<u&&r[2],f=1<u&&r[u-1];for(typeof o=="function"?(o=Bt(o,f,5),
u-=2):(o=typeof f=="function"?f:null,u-=o?1:0),i&&jr(r[0],r[1],i)&&(o=3>u?null:o,u=1);++e<u;)(i=r[e])&&n(t,i,o);return t})}function Kt(n,t){return function(r,e){var u=r?Pu(r):0;if(!Er(u))return n(r,e);for(var o=t?u:-1,i=Ur(r);(t?o--:++o<u)&&false!==e(i[o],o,i););return r}}function Vt(n){return function(t,r,e){var u=Ur(t);e=e(t);for(var o=e.length,i=n?o:-1;n?i--:++i<o;){var f=e[i];if(false===r(u[f],f,u))break}return t}}function Yt(n,t){function r(){return(this&&this!==Yn&&this instanceof r?e:n).apply(t,arguments);

}var e=Gt(n);return r}function Zt(n){return function(t){var r=-1;t=Ae(de(t));for(var e=t.length,u="";++r<e;)u=n(u,t[r],r);return u}}function Gt(n){return function(){var t=Uu(n.prototype),r=n.apply(t,arguments);return ae(r)?r:t}}function Jt(n){function t(r,e,u){return u&&jr(r,e,u)&&(e=null),r=pr(r,n,null,null,null,null,null,e),r.placeholder=t.placeholder,r}return t}function Xt(n,t){return function(r,e,u){u&&jr(r,e,u)&&(e=null);var i=yr(),f=null==e;if(i===ut&&f||(f=false,e=i(e,u,3)),f){if(e=Io(r),e||!pe(r))return n(e?r:Tr(r));

e=o}return gr(r,e,t)}}function Ht(n,r){return function(e,u,o){return u=yr(u,o,3),Io(e)?(u=t(e,u,r),-1<u?e[u]:w):lt(e,u,n)}}function Qt(n){return function(r,e,u){return r&&r.length?(e=yr(e,u,3),t(r,e,n)):-1}}function nr(n){return function(t,r,e){return r=yr(r,e,3),lt(t,r,n,true)}}function tr(n){return function(){var t=arguments.length;if(!t)return function(){return arguments[0]};for(var r,e=n?t:-1,u=0,o=Ce(t);n?e--:++e<t;){var i=o[u++]=arguments[e];if(typeof i!="function")throw new Be(L);var f=r?"":Du(i);

r="wrapper"==f?new Bn([]):r}for(e=r?-1:t;++e<t;)i=o[e],f=Du(i),r=(u="wrapper"==f?Mu(i):null)&&Or(u[0])?r[Du(u[0])].apply(r,u[3]):1==i.length&&Or(i)?r[f]():r.thru(i);return function(){var n=arguments;if(r&&1==n.length&&Io(n[0]))return r.plant(n[0]).value();for(var e=0,n=o[e].apply(this,n);++e<t;)n=o[e].call(this,n);return n}}}function rr(n,t){return function(r,e,u){return typeof e=="function"&&u===w&&Io(r)?n(r,e):t(r,Bt(e,u,3))}}function er(n){return function(t,r,e){return(typeof r!="function"||e!==w)&&(r=Bt(r,e,3)),
n(t,r,ge)}}function ur(n){return function(t,r,e){return(typeof r!="function"||e!==w)&&(r=Bt(r,e,3)),n(t,r)}}function or(n){return function(t,r,e){return(t=u(t))&&(n?t:"")+cr(t,r,e)+(n?"":t)}}function ir(n){var t=ue(function(r,e){var u=v(e,t.placeholder);return pr(r,n,null,e,u)});return t}function fr(n,t){return function(r,e,u,o){var i=3>arguments.length;return typeof e=="function"&&o===w&&Io(r)?n(r,e,u,i):Et(r,yr(e,o,4),u,i,t)}}function ar(n,t,r,e,u,o,i,f,a,c){function l(){for(var b=arguments.length,j=b,k=Ce(b);j--;)k[j]=arguments[j];

if(e&&(k=Mt(k,e,u)),o&&(k=Dt(k,o,i)),_||y){var j=l.placeholder,O=v(k,j),b=b-O.length;if(b<c){var R=f?qn(f):null,b=yu(c-b,0),C=_?O:null,O=_?null:O,S=_?k:null,k=_?null:k;return t|=_?E:I,t&=~(_?I:E),g||(t&=~(x|A)),k=[n,t,r,S,C,k,O,R,a,b],R=ar.apply(w,k),Or(n)&&Ku(R,k),R.placeholder=j,R}}if(j=p?r:this,h&&(n=j[m]),f)for(R=k.length,b=du(f.length,R),C=qn(k);b--;)O=f[b],k[b]=Ar(O,R)?C[O]:w;return s&&a<k.length&&(k.length=a),(this&&this!==Yn&&this instanceof l?d||Gt(n):n).apply(j,k)}var s=t&R,p=t&x,h=t&A,_=t&k,g=t&j,y=t&O,d=!h&&Gt(n),m=n;

return l}function cr(n,t,r){return n=n.length,t=+t,n<t&&vu(t)?(t-=n,r=null==r?" ":r+"",be(r,He(t/r.length)).slice(0,t)):""}function lr(n,t,r,e){function u(){for(var t=-1,f=arguments.length,a=-1,c=e.length,l=Ce(f+c);++a<c;)l[a]=e[a];for(;f--;)l[a++]=arguments[++t];return(this&&this!==Yn&&this instanceof u?i:n).apply(o?r:this,l)}var o=t&x,i=Gt(n);return u}function sr(n){return function(t,r,e,u){var o=yr(e);return o===ut&&null==e?$t(t,r,n):Lt(t,r,o(e,u,1),n)}}function pr(n,t,r,e,u,o,i,f){var a=t&A;if(!a&&typeof n!="function")throw new Be(L);

var c=e?e.length:0;if(c||(t&=~(E|I),e=u=null),c-=u?u.length:0,t&I){var l=e,s=u;e=u=null}var p=a?null:Mu(n);return r=[n,t,r,e,u,l,s,o,i,f],p&&(e=r[1],t=p[1],f=e|t,u=t==R&&e==k||t==R&&e==C&&r[7].length<=p[8]||t==(R|C)&&e==k,(f<R||u)&&(t&x&&(r[2]=p[2],f|=e&x?0:j),(e=p[3])&&(u=r[3],r[3]=u?Mt(u,e,p[4]):qn(e),r[4]=u?v(r[3],B):qn(p[4])),(e=p[5])&&(u=r[5],r[5]=u?Dt(u,e,p[6]):qn(e),r[6]=u?v(r[5],B):qn(p[6])),(e=p[7])&&(r[7]=qn(e)),t&R&&(r[8]=null==r[8]?p[8]:du(r[8],p[8])),null==r[9]&&(r[9]=p[9]),r[0]=p[0],
r[1]=f),t=r[1],f=r[9]),r[9]=null==f?a?0:n.length:yu(f-c,0)||0,(p?Bu:Ku)(t==x?Yt(r[0],r[2]):t!=E&&t!=(x|E)||r[4].length?ar.apply(w,r):lr.apply(w,r),r)}function hr(n,t,r,e,u,o,i){var f=-1,a=n.length,c=t.length,l=true;if(a!=c&&(!u||c<=a))return false;for(;l&&++f<a;){var s=n[f],p=t[f],l=w;if(e&&(l=u?e(p,s,f):e(s,p,f)),l===w)if(u)for(var h=c;h--&&(p=t[h],!(l=s&&s===p||r(s,p,e,u,o,i))););else l=s&&s===p||r(s,p,e,u,o,i)}return!!l}function _r(n,t,r){switch(r){case D:case P:return+n==+t;case q:return n.name==t.name&&n.message==t.message;

case V:return n!=+n?t!=+t:0==n?1/n==1/t:n==+t;case Z:case G:return n==t+""}return false}function vr(n,t,r,e,u,o,i){var f=zo(n),a=f.length,c=zo(t).length;if(a!=c&&!u)return false;for(var c=u,l=-1;++l<a;){var s=f[l],p=u?s in t:Ke.call(t,s);if(p){var h=n[s],_=t[s],p=w;e&&(p=u?e(_,h,s):e(h,_,s)),p===w&&(p=h&&h===_||r(h,_,e,u,o,i))}if(!p)return false;c||(c="constructor"==s)}return c||(r=n.constructor,e=t.constructor,!(r!=e&&"constructor"in n&&"constructor"in t)||typeof r=="function"&&r instanceof r&&typeof e=="function"&&e instanceof e)?true:false;

}function gr(n,t,r){var e=r?ju:Au,u=e,o=u;return Nu(n,function(n,i,f){i=t(n,i,f),((r?i<u:i>u)||i===e&&i===o)&&(u=i,o=n)}),o}function yr(n,t,r){var e=$n.callback||je,e=e===je?ut:e;return r?e(n,t,r):e}function dr(n,t,e){var u=$n.indexOf||zr,u=u===zr?r:u;return n?u(n,t,e):u}function mr(n){var t=n.length,r=new n.constructor(t);return t&&"string"==typeof n[0]&&Ke.call(n,"index")&&(r.index=n.index,r.input=n.input),r}function wr(n){return n=n.constructor,typeof n=="function"&&n instanceof n||(n=Fe),new n;

}function br(n,t,r){var e=n.constructor;switch(t){case J:return zt(n);case D:case P:return new e(+n);case X:case H:case Q:case nn:case tn:case rn:case en:case un:case on:return t=n.buffer,new e(r?zt(t):t,n.byteOffset,n.length);case V:case G:return new e(n);case Z:var u=new e(n.source,kn.exec(n));u.lastIndex=n.lastIndex}return u}function xr(n,t,r){return null==n||kr(t,n)||(t=Nr(t),n=1==t.length?n:gt(n,It(t,0,-1)),t=Mr(t)),t=null==n?n:n[t],null==t?w:t.apply(n,r)}function Ar(n,t){return n=+n,t=null==t?Ru:t,
-1<n&&0==n%1&&n<t}function jr(n,t,r){if(!ae(r))return false;var e=typeof t;return"number"==e?(e=Pu(r),e=Er(e)&&Ar(t,e)):e="string"==e&&t in r,e?(t=r[t],n===n?n===t:t!==t):false}function kr(n,t){var r=typeof n;return"string"==r&&dn.test(n)||"number"==r?true:Io(n)?false:!yn.test(n)||null!=t&&n in Ur(t)}function Or(n){var t=Du(n);return!!t&&n===$n[t]&&t in zn.prototype}function Er(n){return typeof n=="number"&&-1<n&&0==n%1&&n<=Ru}function Ir(n){return n===n&&(0===n?0<1/n:!ae(n))}function Rr(n,t){n=Ur(n);for(var r=-1,e=t.length,u={};++r<e;){
var o=t[r];o in n&&(u[o]=n[o])}return u}function Cr(n,t){var r={};return pt(n,function(n,e,u){t(n,e,u)&&(r[e]=n)}),r}function Sr(n){var t;if(!h(n)||Ye.call(n)!=Y||!(Ke.call(n,"constructor")||(t=n.constructor,typeof t!="function"||t instanceof t)))return false;var r;return pt(n,function(n,t){r=t}),r===w||Ke.call(n,r)}function Wr(n){for(var t=ge(n),r=t.length,e=r&&n.length,u=$n.support,u=e&&Er(e)&&(Io(n)||u.nonEnumArgs&&oe(n)),o=-1,i=[];++o<r;){var f=t[o];(u&&Ar(f,e)||Ke.call(n,f))&&i.push(f)}return i}
function Tr(n){return null==n?[]:Er(Pu(n))?ae(n)?n:Fe(n):ye(n)}function Ur(n){return ae(n)?n:Fe(n)}function Nr(n){if(Io(n))return n;var t=[];return u(n).replace(mn,function(n,r,e,u){t.push(e?u.replace(An,"$1"):r||n)}),t}function Fr(n){return n instanceof zn?n.clone():new Bn(n.__wrapped__,n.__chain__,qn(n.__actions__))}function $r(n,t,r){return n&&n.length?((r?jr(n,t,r):null==t)&&(t=1),It(n,0>t?0:t)):[]}function Lr(n,t,r){var e=n?n.length:0;return e?((r?jr(n,t,r):null==t)&&(t=1),t=e-(+t||0),It(n,0,0>t?0:t)):[];

}function Br(n){return n?n[0]:w}function zr(n,t,e){var u=n?n.length:0;if(!u)return-1;if(typeof e=="number")e=0>e?yu(u+e,0):e;else if(e)return e=$t(n,t),n=n[e],(t===t?t===n:n!==n)?e:-1;return r(n,t,e||0)}function Mr(n){var t=n?n.length:0;return t?n[t-1]:w}function Dr(n){return $r(n,1)}function Pr(n,t,e,u){if(!n||!n.length)return[];null!=t&&typeof t!="boolean"&&(u=e,e=jr(n,t,u)?null:t,t=false);var o=yr();if((o!==ut||null!=e)&&(e=o(e,u,3)),t&&dr()==r){t=e;var i;e=-1,u=n.length;for(var o=-1,f=[];++e<u;){
var a=n[e],c=t?t(a,e,n):a;e&&i===c||(i=c,f[++o]=a)}n=f}else n=Tt(n,e);return n}function qr(n){for(var t=-1,r=(n&&n.length&&Xn(Jn(n,Pu)))>>>0,e=Ce(r);++t<r;)e[t]=Jn(n,At(t));return e}function Kr(n,t){var r=-1,e=n?n.length:0,u={};for(!e||t||Io(n[0])||(t=[]);++r<e;){var o=n[r];t?u[o]=t[r]:o&&(u[o[0]]=o[1])}return u}function Vr(n){return n=$n(n),n.__chain__=true,n}function Yr(n,t,r){return t.call(r,n)}function Zr(n,t,r){var e=Io(n)?Vn:at;return r&&jr(n,t,r)&&(t=null),(typeof t!="function"||r!==w)&&(t=yr(t,r,3)),
e(n,t)}function Gr(n,t,r){var e=Io(n)?Gn:ct;return t=yr(t,r,3),e(n,t)}function Jr(n,t,r,e){var u=n?Pu(n):0;return Er(u)||(n=ye(n),u=n.length),u?(r=typeof r!="number"||e&&jr(t,r,e)?0:0>r?yu(u+r,0):r||0,typeof n=="string"||!Io(n)&&pe(n)?r<u&&-1<n.indexOf(t,r):-1<dr(n,t,r)):false}function Xr(n,t,r){var e=Io(n)?Jn:mt;return t=yr(t,r,3),e(n,t)}function Hr(n,t,r){return(r?jr(n,t,r):null==t)?(n=Tr(n),t=n.length,0<t?n[Ot(0,t-1)]:w):(n=Qr(n),n.length=du(0>t?0:+t||0,n.length),n)}function Qr(n){n=Tr(n);for(var t=-1,r=n.length,e=Ce(r);++t<r;){
var u=Ot(0,t);t!=u&&(e[t]=e[u]),e[u]=n[t]}return e}function ne(n,t,r){var e=Io(n)?Hn:Rt;return r&&jr(n,t,r)&&(t=null),(typeof t!="function"||r!==w)&&(t=yr(t,r,3)),e(n,t)}function te(n,t){var r;if(typeof t!="function"){if(typeof n!="function")throw new Be(L);var e=n;n=t,t=e}return function(){return 0<--n&&(r=t.apply(this,arguments)),1>=n&&(t=null),r}}function re(n,t,r){function e(){var r=t-(_o()-c);0>=r||r>t?(f&&Qe(f),r=p,f=s=p=w,r&&(h=_o(),a=n.apply(l,i),s||f||(i=l=null))):s=fu(e,r)}function u(){
s&&Qe(s),f=s=p=w,(v||_!==t)&&(h=_o(),a=n.apply(l,i),s||f||(i=l=null))}function o(){if(i=arguments,c=_o(),l=this,p=v&&(s||!g),false===_)var r=g&&!s;else{f||g||(h=c);var o=_-(c-h),y=0>=o||o>_;y?(f&&(f=Qe(f)),h=c,a=n.apply(l,i)):f||(f=fu(u,o))}return y&&s?s=Qe(s):s||t===_||(s=fu(e,t)),r&&(y=true,a=n.apply(l,i)),!y||s||f||(i=l=null),a}var i,f,a,c,l,s,p,h=0,_=false,v=true;if(typeof n!="function")throw new Be(L);if(t=0>t?0:+t||0,true===r)var g=true,v=false;else ae(r)&&(g=r.leading,_="maxWait"in r&&yu(+r.maxWait||0,t),v="trailing"in r?r.trailing:v);

return o.cancel=function(){s&&Qe(s),f&&Qe(f),f=s=p=w},o}function ee(n,t){function r(){var e=arguments,u=r.cache,o=t?t.apply(this,e):e[0];return u.has(o)?u.get(o):(e=n.apply(this,e),u.set(o,e),e)}if(typeof n!="function"||t&&typeof t!="function")throw new Be(L);return r.cache=new ee.Cache,r}function ue(n,t){if(typeof n!="function")throw new Be(L);return t=yu(t===w?n.length-1:+t||0,0),function(){for(var r=arguments,e=-1,u=yu(r.length-t,0),o=Ce(u);++e<u;)o[e]=r[t+e];switch(t){case 0:return n.call(this,o);

case 1:return n.call(this,r[0],o);case 2:return n.call(this,r[0],r[1],o)}for(u=Ce(t+1),e=-1;++e<t;)u[e]=r[e];return u[t]=o,n.apply(this,u)}}function oe(n){return Er(h(n)?n.length:w)&&Ye.call(n)==z}function ie(n){return!!n&&1===n.nodeType&&h(n)&&-1<Ye.call(n).indexOf("Element")}function fe(n){return h(n)&&typeof n.message=="string"&&Ye.call(n)==q}function ae(n){var t=typeof n;return"function"==t||!!n&&"object"==t}function ce(n){return null==n?false:Ye.call(n)==K?Ge.test(qe.call(n)):h(n)&&En.test(n)}function le(n){
return typeof n=="number"||h(n)&&Ye.call(n)==V}function se(n){return h(n)&&Ye.call(n)==Z||false}function pe(n){return typeof n=="string"||h(n)&&Ye.call(n)==G}function he(n){return h(n)&&Er(n.length)&&!!Un[Ye.call(n)]}function _e(n){return et(n,ge(n))}function ve(n){return vt(n,ge(n))}function ge(n){if(null==n)return[];ae(n)||(n=Fe(n));for(var t=n.length,t=t&&Er(t)&&(Io(n)||Wu.nonEnumArgs&&oe(n))&&t||0,r=n.constructor,e=-1,r=typeof r=="function"&&r.prototype===n,u=Ce(t),o=0<t;++e<t;)u[e]=e+"";for(var i in n)o&&Ar(i,t)||"constructor"==i&&(r||!Ke.call(n,i))||u.push(i);

return u}function ye(n){return Ut(n,zo(n))}function de(n){return(n=u(n))&&n.replace(In,c).replace(xn,"")}function me(n){return(n=u(n))&&bn.test(n)?n.replace(wn,"\\$&"):n}function we(n,t,r){return r&&jr(n,t,r)&&(t=0),bu(n,t)}function be(n,t){var r="";if(n=u(n),t=+t,1>t||!n||!vu(t))return r;do t%2&&(r+=n),t=nu(t/2),n+=n;while(t);return r}function xe(n,t,r){var e=n;return(n=u(n))?(r?jr(e,t,r):null==t)?n.slice(g(n),y(n)+1):(t+="",n.slice(i(n,t),f(n,t)+1)):n}function Ae(n,t,r){return r&&jr(n,t,r)&&(t=null),
n=u(n),n.match(t||Sn)||[]}function je(n,t,r){return r&&jr(n,t,r)&&(t=null),ut(n,t)}function ke(n){return function(){return n}}function Oe(n){return n}function Ee(n,t,r){if(null==r){var e=ae(t),u=e&&zo(t);((u=u&&u.length&&vt(t,u))?u.length:e)||(u=false,r=t,t=n,n=this)}u||(u=vt(t,zo(t)));var o=true,e=-1,i=Co(n),f=u.length;false===r?o=false:ae(r)&&"chain"in r&&(o=r.chain);for(;++e<f;){r=u[e];var a=t[r];n[r]=a,i&&(n.prototype[r]=function(t){return function(){var r=this.__chain__;if(o||r){var e=n(this.__wrapped__);

return(e.__actions__=qn(this.__actions__)).push({func:t,args:arguments,thisArg:n}),e.__chain__=r,e}return r=[this.value()],eu.apply(r,arguments),t.apply(n,r)}}(a))}return n}function Ie(){}function Re(n){return kr(n)?At(n):jt(n)}_=_?Zn.defaults(Yn.Object(),_,Zn.pick(Yn,Tn)):Yn;var Ce=_.Array,Se=_.Date,We=_.Error,Te=_.Function,Ue=_.Math,Ne=_.Number,Fe=_.Object,$e=_.RegExp,Le=_.String,Be=_.TypeError,ze=Ce.prototype,Me=Fe.prototype,De=Le.prototype,Pe=(Pe=_.window)&&Pe.document,qe=Te.prototype.toString,Ke=Me.hasOwnProperty,Ve=0,Ye=Me.toString,Ze=_._,Ge=$e("^"+me(Ye).replace(/toString|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Je=ce(Je=_.ArrayBuffer)&&Je,Xe=ce(Xe=Je&&new Je(0).slice)&&Xe,He=Ue.ceil,Qe=_.clearTimeout,nu=Ue.floor,tu=ce(tu=Fe.getOwnPropertySymbols)&&tu,ru=ce(ru=Fe.getPrototypeOf)&&ru,eu=ze.push,uu=ce(Fe.preventExtensions=Fe.preventExtensions)&&uu,ou=Me.propertyIsEnumerable,iu=ce(iu=_.Set)&&iu,fu=_.setTimeout,au=ze.splice,cu=ce(cu=_.Uint8Array)&&cu,lu=ce(lu=_.WeakMap)&&lu,su=function(){
try{var n=ce(n=_.Float64Array)&&n,t=new n(new Je(10),0,1)&&n}catch(r){}return t}(),pu=function(){var n={1:0},t=uu&&ce(t=Fe.assign)&&t;try{t(uu(n),"xo")}catch(r){}return!n[1]&&t}(),hu=ce(hu=Ce.isArray)&&hu,_u=ce(_u=Fe.create)&&_u,vu=_.isFinite,gu=ce(gu=Fe.keys)&&gu,yu=Ue.max,du=Ue.min,mu=ce(mu=Se.now)&&mu,wu=ce(wu=Ne.isFinite)&&wu,bu=_.parseInt,xu=Ue.random,Au=Ne.NEGATIVE_INFINITY,ju=Ne.POSITIVE_INFINITY,ku=Ue.pow(2,32)-1,Ou=ku-1,Eu=ku>>>1,Iu=su?su.BYTES_PER_ELEMENT:0,Ru=Ue.pow(2,53)-1,Cu=lu&&new lu,Su={},Wu=$n.support={};

!function(n){function t(){this.x=n}var r=[];t.prototype={valueOf:n,y:n};for(var e in new t)r.push(e);Wu.funcDecomp=/\bthis\b/.test(function(){return this}),Wu.funcNames=typeof Te.name=="string";try{Wu.dom=11===Pe.createDocumentFragment().nodeType}catch(u){Wu.dom=false}try{Wu.nonEnumArgs=!ou.call(arguments,1)}catch(o){Wu.nonEnumArgs=true}}(1,0),$n.templateSettings={escape:_n,evaluate:vn,interpolate:gn,variable:"",imports:{_:$n}};var Tu=pu||function(n,t){return null==t?n:et(t,qu(t),et(t,zo(t),n))},Uu=function(){
function n(){}return function(t){if(ae(t)){n.prototype=t;var r=new n;n.prototype=null}return r||_.Object()}}(),Nu=Kt(ht),Fu=Kt(_t,true),$u=Vt(),Lu=Vt(true),Bu=Cu?function(n,t){return Cu.set(n,t),n}:Oe;Xe||(zt=Je&&cu?function(n){var t=n.byteLength,r=su?nu(t/Iu):0,e=r*Iu,u=new Je(t);if(r){var o=new su(u,0,r);o.set(new su(n,0,r))}return t!=e&&(o=new cu(u,e),o.set(new cu(n,e))),u}:ke(null));var zu=_u&&iu?function(n){return new Dn(n)}:ke(null),Mu=Cu?function(n){return Cu.get(n)}:Ie,Du=function(){return Wu.funcNames?"constant"==ke.name?At("name"):function(n){
for(var t=n.name,r=Su[t],e=r?r.length:0;e--;){var u=r[e],o=u.func;if(null==o||o==n)return u.name}return t}:ke("")}(),Pu=At("length"),qu=tu?function(n){return tu(Ur(n))}:ke([]),Ku=function(){var n=0,t=0;return function(r,e){var u=_o(),o=U-(u-t);if(t=u,0<o){if(++n>=T)return r}else n=0;return Bu(r,e)}}(),Vu=ue(function(n,t){return Io(n)||oe(n)?ft(n,st(t,false,true)):[]}),Yu=Qt(),Zu=Qt(true),Gu=ue(function(t,r){t||(t=[]),r=st(r);var e=rt(t,r);return kt(t,r.sort(n)),e}),Ju=sr(),Xu=sr(true),Hu=ue(function(n){return Tt(st(n,false,true));

}),Qu=ue(function(n,t){return Io(n)||oe(n)?ft(n,t):[]}),no=ue(qr),to=ue(function(n,t){var r=n?Pu(n):0;return Er(r)&&(n=Tr(n)),rt(n,st(t))}),ro=Pt(function(n,t,r){Ke.call(n,r)?++n[r]:n[r]=1}),eo=Ht(Nu),uo=Ht(Fu,true),oo=rr(Kn,Nu),io=rr(function(n,t){for(var r=n.length;r--&&false!==t(n[r],r,n););return n},Fu),fo=Pt(function(n,t,r){Ke.call(n,r)?n[r].push(t):n[r]=[t]}),ao=Pt(function(n,t,r){n[r]=t}),co=ue(function(n,t,r){var e=-1,u=typeof t=="function",o=kr(t),i=Pu(n),f=Er(i)?Ce(i):[];return Nu(n,function(n){
var i=u?t:o&&null!=n&&n[t];f[++e]=i?i.apply(n,r):xr(n,t,r)}),f}),lo=Pt(function(n,t,r){n[r?0:1].push(t)},function(){return[[],[]]}),so=fr(function(n,t,r,e){var u=-1,o=n.length;for(e&&o&&(r=n[++u]);++u<o;)r=t(r,n[u],u,n);return r},Nu),po=fr(function(n,t,r,e){var u=n.length;for(e&&u&&(r=n[--u]);u--;)r=t(r,n[u],u,n);return r},Fu),ho=ue(function(n,t){if(null==n)return[];var r=t[2];return r&&jr(t[0],t[1],r)&&(t.length=1),St(n,st(t),[])}),_o=mu||function(){return(new Se).getTime()},vo=ue(function(n,t,r){
var e=x;if(r.length)var u=v(r,vo.placeholder),e=e|E;return pr(n,e,t,r,u)}),go=ue(function(n,t){t=t.length?st(t):ve(n);for(var r=-1,e=t.length;++r<e;){var u=t[r];n[u]=pr(n[u],x,n)}return n}),yo=ue(function(n,t,r){var e=x|A;if(r.length)var u=v(r,yo.placeholder),e=e|E;return pr(t,e,n,r,u)}),mo=Jt(k),wo=Jt(O),bo=ue(function(n,t){return it(n,1,t)}),xo=ue(function(n,t,r){return it(n,t,r)}),Ao=tr(),jo=tr(true),ko=ir(E),Oo=ir(I),Eo=ue(function(n,t){return pr(n,C,null,null,null,st(t))}),Io=hu||function(n){return h(n)&&Er(n.length)&&Ye.call(n)==M;

};Wu.dom||(ie=function(n){return!!n&&1===n.nodeType&&h(n)&&!So(n)});var Ro=wu||function(n){return typeof n=="number"&&vu(n)},Co=e(/x/)||cu&&!e(cu)?function(n){return Ye.call(n)==K}:e,So=ru?function(n){if(!n||Ye.call(n)!=Y)return false;var t=n.valueOf,r=ce(t)&&(r=ru(t))&&ru(r);return r?n==r||ru(n)==r:Sr(n)}:Sr,Wo=qt(function(n,t,r){return r?tt(n,t,r):Tu(n,t)}),To=ue(function(n){var t=n[0];return null==t?t:(n.push(Qn),Wo.apply(w,n))}),Uo=nr(ht),No=nr(_t),Fo=er($u),$o=er(Lu),Lo=ur(ht),Bo=ur(_t),zo=gu?function(n){
if(n)var t=n.constructor,r=n.length;return typeof t=="function"&&t.prototype===n||typeof n!="function"&&Er(r)?Wr(n):ae(n)?gu(n):[]}:Wr,Mo=qt(xt),Do=ue(function(n,t){if(null==n)return{};if("function"!=typeof t[0])return t=Jn(st(t),Le),Rr(n,ft(ge(n),t));var r=Bt(t[0],t[1],3);return Cr(n,function(n,t,e){return!r(n,t,e)})}),Po=ue(function(n,t){return null==n?{}:"function"==typeof t[0]?Cr(n,Bt(t[0],t[1],3)):Rr(n,st(t))}),qo=Zt(function(n,t,r){return t=t.toLowerCase(),n+(r?t.charAt(0).toUpperCase()+t.slice(1):t);

}),Ko=Zt(function(n,t,r){return n+(r?"-":"")+t.toLowerCase()}),Vo=or(),Yo=or(true);8!=bu(Wn+"08")&&(we=function(n,t,r){return(r?jr(n,t,r):null==t)?t=0:t&&(t=+t),n=xe(n),bu(n,t||(On.test(n)?16:10))});var Zo=Zt(function(n,t,r){return n+(r?"_":"")+t.toLowerCase()}),Go=Zt(function(n,t,r){return n+(r?" ":"")+(t.charAt(0).toUpperCase()+t.slice(1))}),Jo=ue(function(n,t){try{return n.apply(w,t)}catch(r){return fe(r)?r:new We(r)}}),Xo=ue(function(n,t){return function(r){return xr(r,n,t)}}),Ho=ue(function(n,t){
return function(r){return xr(n,r,t)}}),Qo=Xt(Xn),ni=Xt(function(n){for(var t=-1,r=n.length,e=ju;++t<r;){var u=n[t];u<e&&(e=u)}return e},true);return $n.prototype=Ln.prototype,Bn.prototype=Uu(Ln.prototype),Bn.prototype.constructor=Bn,zn.prototype=Uu(Ln.prototype),zn.prototype.constructor=zn,Mn.prototype["delete"]=function(n){return this.has(n)&&delete this.__data__[n]},Mn.prototype.get=function(n){return"__proto__"==n?w:this.__data__[n]},Mn.prototype.has=function(n){return"__proto__"!=n&&Ke.call(this.__data__,n);

},Mn.prototype.set=function(n,t){return"__proto__"!=n&&(this.__data__[n]=t),this},Dn.prototype.push=function(n){var t=this.data;typeof n=="string"||ae(n)?t.set.add(n):t.hash[n]=true},ee.Cache=Mn,$n.after=function(n,t){if(typeof t!="function"){if(typeof n!="function")throw new Be(L);var r=n;n=t,t=r}return n=vu(n=+n)?n:0,function(){return 1>--n?t.apply(this,arguments):void 0}},$n.ary=function(n,t,r){return r&&jr(n,t,r)&&(t=null),t=n&&null==t?n.length:yu(+t||0,0),pr(n,R,null,null,null,null,t)},$n.assign=Wo,
$n.at=to,$n.before=te,$n.bind=vo,$n.bindAll=go,$n.bindKey=yo,$n.callback=je,$n.chain=Vr,$n.chunk=function(n,t,r){t=(r?jr(n,t,r):null==t)?1:yu(+t||1,1),r=0;for(var e=n?n.length:0,u=-1,o=Ce(He(e/t));r<e;)o[++u]=It(n,r,r+=t);return o},$n.compact=function(n){for(var t=-1,r=n?n.length:0,e=-1,u=[];++t<r;){var o=n[t];o&&(u[++e]=o)}return u},$n.constant=ke,$n.countBy=ro,$n.create=function(n,t,r){var e=Uu(n);return r&&jr(n,t,r)&&(t=null),t?Tu(e,t):e},$n.curry=mo,$n.curryRight=wo,$n.debounce=re,$n.defaults=To,
$n.defer=bo,$n.delay=xo,$n.difference=Vu,$n.drop=$r,$n.dropRight=Lr,$n.dropRightWhile=function(n,t,r){return n&&n.length?Nt(n,yr(t,r,3),true,true):[]},$n.dropWhile=function(n,t,r){return n&&n.length?Nt(n,yr(t,r,3),true):[]},$n.fill=function(n,t,r,e){var u=n?n.length:0;if(!u)return[];for(r&&typeof r!="number"&&jr(n,t,r)&&(r=0,e=u),u=n.length,r=null==r?0:+r||0,0>r&&(r=-r>u?0:u+r),e=e===w||e>u?u:+e||0,0>e&&(e+=u),u=r>e?0:e>>>0,r>>>=0;r<u;)n[r++]=t;return n},$n.filter=Gr,$n.flatten=function(n,t,r){var e=n?n.length:0;

return r&&jr(n,t,r)&&(t=false),e?st(n,t):[]},$n.flattenDeep=function(n){return n&&n.length?st(n,true):[]},$n.flow=Ao,$n.flowRight=jo,$n.forEach=oo,$n.forEachRight=io,$n.forIn=Fo,$n.forInRight=$o,$n.forOwn=Lo,$n.forOwnRight=Bo,$n.functions=ve,$n.groupBy=fo,$n.indexBy=ao,$n.initial=function(n){return Lr(n,1)},$n.intersection=function(){for(var n=[],t=-1,e=arguments.length,u=[],o=dr(),i=o==r,f=[];++t<e;){var a=arguments[t];(Io(a)||oe(a))&&(n.push(a),u.push(i&&120<=a.length?zu(t&&a):null))}if(e=n.length,2>e)return f;

var i=n[0],c=-1,l=i?i.length:0,s=u[0];n:for(;++c<l;)if(a=i[c],0>(s?Pn(s,a):o(f,a,0))){for(t=e;--t;){var p=u[t];if(0>(p?Pn(p,a):o(n[t],a,0)))continue n}s&&s.push(a),f.push(a)}return f},$n.invert=function(n,t,r){r&&jr(n,t,r)&&(t=null),r=-1;for(var e=zo(n),u=e.length,o={};++r<u;){var i=e[r],f=n[i];t?Ke.call(o,f)?o[f].push(i):o[f]=[i]:o[f]=i}return o},$n.invoke=co,$n.keys=zo,$n.keysIn=ge,$n.map=Xr,$n.mapValues=function(n,t,r){var e={};return t=yr(t,r,3),ht(n,function(n,r,u){e[r]=t(n,r,u)}),e},$n.matches=function(n){
return wt(ot(n,true))},$n.matchesProperty=function(n,t){return bt(n,ot(t,true))},$n.memoize=ee,$n.merge=Mo,$n.method=Xo,$n.methodOf=Ho,$n.mixin=Ee,$n.negate=function(n){if(typeof n!="function")throw new Be(L);return function(){return!n.apply(this,arguments)}},$n.omit=Do,$n.once=function(n){return te(2,n)},$n.pairs=function(n){for(var t=-1,r=zo(n),e=r.length,u=Ce(e);++t<e;){var o=r[t];u[t]=[o,n[o]]}return u},$n.partial=ko,$n.partialRight=Oo,$n.partition=lo,$n.pick=Po,$n.pluck=function(n,t){return Xr(n,Re(t));

},$n.property=Re,$n.propertyOf=function(n){return function(t){return gt(n,Nr(t),t+"")}},$n.pull=function(){var n=arguments,t=n[0];if(!t||!t.length)return t;for(var r=0,e=dr(),u=n.length;++r<u;)for(var o=0,i=n[r];-1<(o=e(t,i,o));)au.call(t,o,1);return t},$n.pullAt=Gu,$n.range=function(n,t,r){r&&jr(n,t,r)&&(t=r=null),n=+n||0,r=null==r?1:+r||0,null==t?(t=n,n=0):t=+t||0;var e=-1;t=yu(He((t-n)/(r||1)),0);for(var u=Ce(t);++e<t;)u[e]=n,n+=r;return u},$n.rearg=Eo,$n.reject=function(n,t,r){var e=Io(n)?Gn:ct;

return t=yr(t,r,3),e(n,function(n,r,e){return!t(n,r,e)})},$n.remove=function(n,t,r){var e=[];if(!n||!n.length)return e;var u=-1,o=[],i=n.length;for(t=yr(t,r,3);++u<i;)r=n[u],t(r,u,n)&&(e.push(r),o.push(u));return kt(n,o),e},$n.rest=Dr,$n.restParam=ue,$n.set=function(n,t,r){if(null==n)return n;var e=t+"";t=null!=n[e]||kr(t,n)?[e]:Nr(t);for(var e=-1,u=t.length,o=u-1,i=n;null!=i&&++e<u;){var f=t[e];ae(i)&&(e==o?i[f]=r:null==i[f]&&(i[f]=Ar(t[e+1])?[]:{})),i=i[f]}return n},$n.shuffle=Qr,$n.slice=function(n,t,r){
var e=n?n.length:0;return e?(r&&typeof r!="number"&&jr(n,t,r)&&(t=0,r=e),It(n,t,r)):[]},$n.sortBy=function(n,t,r){if(null==n)return[];r&&jr(n,t,r)&&(t=null);var e=-1;return t=yr(t,r,3),n=mt(n,function(n,r,u){return{a:t(n,r,u),b:++e,c:n}}),Ct(n,a)},$n.sortByAll=ho,$n.sortByOrder=function(n,t,r,e){return null==n?[]:(e&&jr(t,r,e)&&(r=null),Io(t)||(t=null==t?[]:[t]),Io(r)||(r=null==r?[]:[r]),St(n,t,r))},$n.spread=function(n){if(typeof n!="function")throw new Be(L);return function(t){return n.apply(this,t);

}},$n.take=function(n,t,r){return n&&n.length?((r?jr(n,t,r):null==t)&&(t=1),It(n,0,0>t?0:t)):[]},$n.takeRight=function(n,t,r){var e=n?n.length:0;return e?((r?jr(n,t,r):null==t)&&(t=1),t=e-(+t||0),It(n,0>t?0:t)):[]},$n.takeRightWhile=function(n,t,r){return n&&n.length?Nt(n,yr(t,r,3),false,true):[]},$n.takeWhile=function(n,t,r){return n&&n.length?Nt(n,yr(t,r,3)):[]},$n.tap=function(n,t,r){return t.call(r,n),n},$n.throttle=function(n,t,r){var e=true,u=true;if(typeof n!="function")throw new Be(L);return false===r?e=false:ae(r)&&(e="leading"in r?!!r.leading:e,
u="trailing"in r?!!r.trailing:u),Fn.leading=e,Fn.maxWait=+t,Fn.trailing=u,re(n,t,Fn)},$n.thru=Yr,$n.times=function(n,t,r){if(n=nu(n),1>n||!vu(n))return[];var e=-1,u=Ce(du(n,ku));for(t=Bt(t,r,1);++e<n;)e<ku?u[e]=t(e):t(e);return u},$n.toArray=function(n){var t=n?Pu(n):0;return Er(t)?t?qn(n):[]:ye(n)},$n.toPlainObject=_e,$n.transform=function(n,t,r,e){var u=Io(n)||he(n);return t=yr(t,e,4),null==r&&(u||ae(n)?(e=n.constructor,r=u?Io(n)?new e:[]:Uu(Co(e)&&e.prototype)):r={}),(u?Kn:ht)(n,function(n,e,u){
return t(r,n,e,u)}),r},$n.union=Hu,$n.uniq=Pr,$n.unzip=qr,$n.values=ye,$n.valuesIn=function(n){return Ut(n,ge(n))},$n.where=function(n,t){return Gr(n,wt(t))},$n.without=Qu,$n.wrap=function(n,t){return t=null==t?Oe:t,pr(t,E,null,[n],[])},$n.xor=function(){for(var n=-1,t=arguments.length;++n<t;){var r=arguments[n];if(Io(r)||oe(r))var e=e?ft(e,r).concat(ft(r,e)):r}return e?Tt(e):[]},$n.zip=no,$n.zipObject=Kr,$n.backflow=jo,$n.collect=Xr,$n.compose=jo,$n.each=oo,$n.eachRight=io,$n.extend=Wo,$n.iteratee=je,
$n.methods=ve,$n.object=Kr,$n.select=Gr,$n.tail=Dr,$n.unique=Pr,Ee($n,$n),$n.add=function(n,t){return(+n||0)+(+t||0)},$n.attempt=Jo,$n.camelCase=qo,$n.capitalize=function(n){return(n=u(n))&&n.charAt(0).toUpperCase()+n.slice(1)},$n.clone=function(n,t,r,e){return t&&typeof t!="boolean"&&jr(n,t,r)?t=false:typeof t=="function"&&(e=r,r=t,t=false),r=typeof r=="function"&&Bt(r,e,1),ot(n,t,r)},$n.cloneDeep=function(n,t,r){return t=typeof t=="function"&&Bt(t,r,1),ot(n,true,t)},$n.deburr=de,$n.endsWith=function(n,t,r){
n=u(n),t+="";var e=n.length;return r=r===w?e:du(0>r?0:+r||0,e),r-=t.length,0<=r&&n.indexOf(t,r)==r},$n.escape=function(n){return(n=u(n))&&hn.test(n)?n.replace(sn,l):n},$n.escapeRegExp=me,$n.every=Zr,$n.find=eo,$n.findIndex=Yu,$n.findKey=Uo,$n.findLast=uo,$n.findLastIndex=Zu,$n.findLastKey=No,$n.findWhere=function(n,t){return eo(n,wt(t))},$n.first=Br,$n.get=function(n,t,r){return n=null==n?w:gt(n,Nr(t),t+""),n===w?r:n},$n.has=function(n,t){if(null==n)return false;var r=Ke.call(n,t);return r||kr(t)||(t=Nr(t),
n=1==t.length?n:gt(n,It(t,0,-1)),t=Mr(t),r=null!=n&&Ke.call(n,t)),r},$n.identity=Oe,$n.includes=Jr,$n.indexOf=zr,$n.inRange=function(n,t,r){return t=+t||0,"undefined"===typeof r?(r=t,t=0):r=+r||0,n>=du(t,r)&&n<yu(t,r)},$n.isArguments=oe,$n.isArray=Io,$n.isBoolean=function(n){return true===n||false===n||h(n)&&Ye.call(n)==D},$n.isDate=function(n){return h(n)&&Ye.call(n)==P},$n.isElement=ie,$n.isEmpty=function(n){if(null==n)return true;var t=Pu(n);return Er(t)&&(Io(n)||pe(n)||oe(n)||h(n)&&Co(n.splice))?!t:!zo(n).length;

},$n.isEqual=function(n,t,r,e){return r=typeof r=="function"&&Bt(r,e,3),!r&&Ir(n)&&Ir(t)?n===t:(e=r?r(n,t):w,e===w?yt(n,t,r):!!e)},$n.isError=fe,$n.isFinite=Ro,$n.isFunction=Co,$n.isMatch=function(n,t,r,e){var u=zo(t),o=u.length;if(!o)return true;if(null==n)return false;if(r=typeof r=="function"&&Bt(r,e,3),n=Ur(n),!r&&1==o){var i=u[0];if(e=t[i],Ir(e))return e===n[i]&&(e!==w||i in n)}for(var i=Ce(o),f=Ce(o);o--;)e=i[o]=t[u[o]],f[o]=Ir(e);return dt(n,u,i,f,r)},$n.isNaN=function(n){return le(n)&&n!=+n},$n.isNative=ce,
$n.isNull=function(n){return null===n},$n.isNumber=le,$n.isObject=ae,$n.isPlainObject=So,$n.isRegExp=se,$n.isString=pe,$n.isTypedArray=he,$n.isUndefined=function(n){return n===w},$n.kebabCase=Ko,$n.last=Mr,$n.lastIndexOf=function(n,t,r){var e=n?n.length:0;if(!e)return-1;var u=e;if(typeof r=="number")u=(0>r?yu(e+r,0):du(r||0,e-1))+1;else if(r)return u=$t(n,t,true)-1,n=n[u],(t===t?t===n:n!==n)?u:-1;if(t!==t)return p(n,u,true);for(;u--;)if(n[u]===t)return u;return-1},$n.max=Qo,$n.min=ni,$n.noConflict=function(){
return _._=Ze,this},$n.noop=Ie,$n.now=_o,$n.pad=function(n,t,r){n=u(n),t=+t;var e=n.length;return e<t&&vu(t)?(e=(t-e)/2,t=nu(e),e=He(e),r=cr("",e,r),r.slice(0,t)+n+r):n},$n.padLeft=Vo,$n.padRight=Yo,$n.parseInt=we,$n.random=function(n,t,r){r&&jr(n,t,r)&&(t=r=null);var e=null==n,u=null==t;return null==r&&(u&&typeof n=="boolean"?(r=n,n=1):typeof t=="boolean"&&(r=t,u=true)),e&&u&&(t=1,u=false),n=+n||0,u?(t=n,n=0):t=+t||0,r||n%1||t%1?(r=xu(),du(n+r*(t-n+parseFloat("1e-"+((r+"").length-1))),t)):Ot(n,t)},$n.reduce=so,
$n.reduceRight=po,$n.repeat=be,$n.result=function(n,t,r){var e=null==n?w:n[t];return e===w&&(null==n||kr(t,n)||(t=Nr(t),n=1==t.length?n:gt(n,It(t,0,-1)),e=null==n?w:n[Mr(t)]),e=e===w?r:e),Co(e)?e.call(n):e},$n.runInContext=m,$n.size=function(n){var t=n?Pu(n):0;return Er(t)?t:zo(n).length},$n.snakeCase=Zo,$n.some=ne,$n.sortedIndex=Ju,$n.sortedLastIndex=Xu,$n.startCase=Go,$n.startsWith=function(n,t,r){return n=u(n),r=null==r?0:du(0>r?0:+r||0,n.length),n.lastIndexOf(t,r)==r},$n.sum=function(n,t,r){r&&jr(n,t,r)&&(t=null);

var e=yr(),u=null==t;if(e===ut&&u||(u=false,t=e(t,r,3)),u){for(n=Io(n)?n:Tr(n),t=n.length,r=0;t--;)r+=+n[t]||0;n=r}else n=Wt(n,t);return n},$n.template=function(n,t,r){var e=$n.templateSettings;r&&jr(n,t,r)&&(t=r=null),n=u(n),t=tt(Tu({},r||t),e,nt),r=tt(Tu({},t.imports),e.imports,nt);var o,i,f=zo(r),a=Ut(r,f),c=0;r=t.interpolate||Rn;var l="__p+='";r=$e((t.escape||Rn).source+"|"+r.source+"|"+(r===gn?jn:Rn).source+"|"+(t.evaluate||Rn).source+"|$","g");var p="sourceURL"in t?"//# sourceURL="+t.sourceURL+"\n":"";

if(n.replace(r,function(t,r,e,u,f,a){return e||(e=u),l+=n.slice(c,a).replace(Cn,s),r&&(o=true,l+="'+__e("+r+")+'"),f&&(i=true,l+="';"+f+";\n__p+='"),e&&(l+="'+((__t=("+e+"))==null?'':__t)+'"),c=a+t.length,t}),l+="';",(t=t.variable)||(l="with(obj){"+l+"}"),l=(i?l.replace(fn,""):l).replace(an,"$1").replace(cn,"$1;"),l="function("+(t||"obj")+"){"+(t?"":"obj||(obj={});")+"var __t,__p=''"+(o?",__e=_.escape":"")+(i?",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}":";")+l+"return __p}",
t=Jo(function(){return Te(f,p+"return "+l).apply(w,a)}),t.source=l,fe(t))throw t;return t},$n.trim=xe,$n.trimLeft=function(n,t,r){var e=n;return(n=u(n))?n.slice((r?jr(e,t,r):null==t)?g(n):i(n,t+"")):n},$n.trimRight=function(n,t,r){var e=n;return(n=u(n))?(r?jr(e,t,r):null==t)?n.slice(0,y(n)+1):n.slice(0,f(n,t+"")+1):n},$n.trunc=function(n,t,r){r&&jr(n,t,r)&&(t=null);var e=S;if(r=W,null!=t)if(ae(t)){var o="separator"in t?t.separator:o,e="length"in t?+t.length||0:e;r="omission"in t?u(t.omission):r}else e=+t||0;

if(n=u(n),e>=n.length)return n;if(e-=r.length,1>e)return r;if(t=n.slice(0,e),null==o)return t+r;if(se(o)){if(n.slice(e).search(o)){var i,f=n.slice(0,e);for(o.global||(o=$e(o.source,(kn.exec(o)||"")+"g")),o.lastIndex=0;n=o.exec(f);)i=n.index;t=t.slice(0,null==i?e:i)}}else n.indexOf(o,e)!=e&&(o=t.lastIndexOf(o),-1<o&&(t=t.slice(0,o)));return t+r},$n.unescape=function(n){return(n=u(n))&&pn.test(n)?n.replace(ln,d):n},$n.uniqueId=function(n){var t=++Ve;return u(n)+t},$n.words=Ae,$n.all=Zr,$n.any=ne,$n.contains=Jr,
$n.detect=eo,$n.foldl=so,$n.foldr=po,$n.head=Br,$n.include=Jr,$n.inject=so,Ee($n,function(){var n={};return ht($n,function(t,r){$n.prototype[r]||(n[r]=t)}),n}(),false),$n.sample=Hr,$n.prototype.sample=function(n){return this.__chain__||null!=n?this.thru(function(t){return Hr(t,n)}):Hr(this.value())},$n.VERSION=b,Kn("bind bindKey curry curryRight partial partialRight".split(" "),function(n){$n[n].placeholder=$n}),Kn(["dropWhile","filter","map","takeWhile"],function(n,t){var r=t!=$,e=t==N;zn.prototype[n]=function(n,u){
var o=this.__filtered__,i=o&&e?new zn(this):this.clone();return(i.__iteratees__||(i.__iteratees__=[])).push({done:false,count:0,index:0,iteratee:yr(n,u,1),limit:-1,type:t}),i.__filtered__=o||r,i}}),Kn(["drop","take"],function(n,t){var r=n+"While";zn.prototype[n]=function(r){var e=this.__filtered__,u=e&&!t?this.dropWhile():this.clone();return r=null==r?1:yu(nu(r)||0,0),e?t?u.__takeCount__=du(u.__takeCount__,r):Mr(u.__iteratees__).limit=r:(u.__views__||(u.__views__=[])).push({size:r,type:n+(0>u.__dir__?"Right":"")
}),u},zn.prototype[n+"Right"]=function(t){return this.reverse()[n](t).reverse()},zn.prototype[n+"RightWhile"]=function(n,t){return this.reverse()[r](n,t).reverse()}}),Kn(["first","last"],function(n,t){var r="take"+(t?"Right":"");zn.prototype[n]=function(){return this[r](1).value()[0]}}),Kn(["initial","rest"],function(n,t){var r="drop"+(t?"":"Right");zn.prototype[n]=function(){return this[r](1)}}),Kn(["pluck","where"],function(n,t){var r=t?"filter":"map",e=t?wt:Re;zn.prototype[n]=function(n){return this[r](e(n));

}}),zn.prototype.compact=function(){return this.filter(Oe)},zn.prototype.reject=function(n,t){return n=yr(n,t,1),this.filter(function(t){return!n(t)})},zn.prototype.slice=function(n,t){n=null==n?0:+n||0;var r=0>n?this.takeRight(-n):this.drop(n);return t!==w&&(t=+t||0,r=0>t?r.dropRight(-t):r.take(t-n)),r},zn.prototype.toArray=function(){return this.drop(0)},ht(zn.prototype,function(n,t){var r=$n[t];if(r){var e=/^(?:filter|map|reject)|While$/.test(t),u=/^(?:first|last)$/.test(t);$n.prototype[t]=function(){
function t(n){return n=[n],eu.apply(n,o),r.apply($n,n)}var o=arguments,i=this.__chain__,f=this.__wrapped__,a=!!this.__actions__.length,c=f instanceof zn,l=o[0],s=c||Io(f);return s&&e&&typeof l=="function"&&1!=l.length&&(c=s=false),c=c&&!a,u&&!i?c?n.call(f):r.call($n,this.value()):s?(f=n.apply(c?f:new zn(this),o),u||!a&&!f.__actions__||(f.__actions__||(f.__actions__=[])).push({func:Yr,args:[t],thisArg:$n}),new Bn(f,i)):this.thru(t)}}}),Kn("concat join pop push replace shift sort splice split unshift".split(" "),function(n){
var t=(/^(?:replace|split)$/.test(n)?De:ze)[n],r=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",e=/^(?:join|pop|replace|shift)$/.test(n);$n.prototype[n]=function(){var n=arguments;return e&&!this.__chain__?t.apply(this.value(),n):this[r](function(r){return t.apply(r,n)})}}),ht(zn.prototype,function(n,t){var r=$n[t];if(r){var e=r.name;(Su[e]||(Su[e]=[])).push({name:t,func:r})}}),Su[ar(null,A).name]=[{name:"wrapper",func:null}],zn.prototype.clone=function(){var n=this.__actions__,t=this.__iteratees__,r=this.__views__,e=new zn(this.__wrapped__);

return e.__actions__=n?qn(n):null,e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=t?qn(t):null,e.__takeCount__=this.__takeCount__,e.__views__=r?qn(r):null,e},zn.prototype.reverse=function(){if(this.__filtered__){var n=new zn(this);n.__dir__=-1,n.__filtered__=true}else n=this.clone(),n.__dir__*=-1;return n},zn.prototype.value=function(){var n=this.__wrapped__.value();if(!Io(n))return Ft(n,this.__actions__);var t,r=this.__dir__,e=0>r;t=n.length;for(var u=this.__views__,o=0,i=-1,f=u?u.length:0;++i<f;){
var a=u[i],c=a.size;switch(a.type){case"drop":o+=c;break;case"dropRight":t-=c;break;case"take":t=du(t,o+c);break;case"takeRight":o=yu(o,t-c)}}t={start:o,end:t},u=t.start,o=t.end,t=o-u,u=e?o:u-1,o=du(t,this.__takeCount__),f=(i=this.__iteratees__)?i.length:0,a=0,c=[];n:for(;t--&&a<o;){for(var u=u+r,l=-1,s=n[u];++l<f;){var p=i[l],h=p.iteratee,_=p.type;if(_==N){if(p.done&&(e?u>p.index:u<p.index)&&(p.count=0,p.done=false),p.index=u,!(p.done||(_=p.limit,p.done=-1<_?p.count++>=_:!h(s))))continue n}else if(p=h(s),
_==$)s=p;else if(!p){if(_==F)continue n;break n}}c[a++]=s}return c},$n.prototype.chain=function(){return Vr(this)},$n.prototype.commit=function(){return new Bn(this.value(),this.__chain__)},$n.prototype.plant=function(n){for(var t,r=this;r instanceof Ln;){var e=Fr(r);t?u.__wrapped__=e:t=e;var u=e,r=r.__wrapped__}return u.__wrapped__=n,t},$n.prototype.reverse=function(){var n=this.__wrapped__;return n instanceof zn?(this.__actions__.length&&(n=new zn(this)),new Bn(n.reverse(),this.__chain__)):this.thru(function(n){
return n.reverse()})},$n.prototype.toString=function(){return this.value()+""},$n.prototype.run=$n.prototype.toJSON=$n.prototype.valueOf=$n.prototype.value=function(){return Ft(this.__wrapped__,this.__actions__)},$n.prototype.collect=$n.prototype.map,$n.prototype.head=$n.prototype.first,$n.prototype.select=$n.prototype.filter,$n.prototype.tail=$n.prototype.rest,$n}var w,b="3.7.0",x=1,A=2,j=4,k=8,O=16,E=32,I=64,R=128,C=256,S=30,W="...",T=150,U=16,N=0,F=1,$=2,L="Expected a function",B="__lodash_placeholder__",z="[object Arguments]",M="[object Array]",D="[object Boolean]",P="[object Date]",q="[object Error]",K="[object Function]",V="[object Number]",Y="[object Object]",Z="[object RegExp]",G="[object String]",J="[object ArrayBuffer]",X="[object Float32Array]",H="[object Float64Array]",Q="[object Int8Array]",nn="[object Int16Array]",tn="[object Int32Array]",rn="[object Uint8Array]",en="[object Uint8ClampedArray]",un="[object Uint16Array]",on="[object Uint32Array]",fn=/\b__p\+='';/g,an=/\b(__p\+=)''\+/g,cn=/(__e\(.*?\)|\b__t\))\+'';/g,ln=/&(?:amp|lt|gt|quot|#39|#96);/g,sn=/[&<>"'`]/g,pn=RegExp(ln.source),hn=RegExp(sn.source),_n=/<%-([\s\S]+?)%>/g,vn=/<%([\s\S]+?)%>/g,gn=/<%=([\s\S]+?)%>/g,yn=/\.|\[(?:[^[\]]+|(["'])(?:(?!\1)[^\n\\]|\\.)*?)\1\]/,dn=/^\w*$/,mn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\n\\]|\\.)*?)\2)\]/g,wn=/[.*+?^${}()|[\]\/\\]/g,bn=RegExp(wn.source),xn=/[\u0300-\u036f\ufe20-\ufe23]/g,An=/\\(\\)?/g,jn=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,kn=/\w*$/,On=/^0[xX]/,En=/^\[object .+?Constructor\]$/,In=/[\xc0-\xd6\xd8-\xde\xdf-\xf6\xf8-\xff]/g,Rn=/($^)/,Cn=/['\n\r\u2028\u2029\\]/g,Sn=RegExp("[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?=[A-Z\\xc0-\\xd6\\xd8-\\xde][a-z\\xdf-\\xf6\\xf8-\\xff]+)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+|[A-Z\\xc0-\\xd6\\xd8-\\xde]+|[0-9]+","g"),Wn=" \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000",Tn="Array ArrayBuffer Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Math Number Object RegExp Set String _ clearTimeout document isFinite parseInt setTimeout TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap window".split(" "),Un={};

Un[X]=Un[H]=Un[Q]=Un[nn]=Un[tn]=Un[rn]=Un[en]=Un[un]=Un[on]=true,Un[z]=Un[M]=Un[J]=Un[D]=Un[P]=Un[q]=Un[K]=Un["[object Map]"]=Un[V]=Un[Y]=Un[Z]=Un["[object Set]"]=Un[G]=Un["[object WeakMap]"]=false;var Nn={};Nn[z]=Nn[M]=Nn[J]=Nn[D]=Nn[P]=Nn[X]=Nn[H]=Nn[Q]=Nn[nn]=Nn[tn]=Nn[V]=Nn[Y]=Nn[Z]=Nn[G]=Nn[rn]=Nn[en]=Nn[un]=Nn[on]=true,Nn[q]=Nn[K]=Nn["[object Map]"]=Nn["[object Set]"]=Nn["[object WeakMap]"]=false;var Fn={leading:false,maxWait:0,trailing:false},$n={"\xc0":"A","\xc1":"A","\xc2":"A","\xc3":"A","\xc4":"A","\xc5":"A",
"\xe0":"a","\xe1":"a","\xe2":"a","\xe3":"a","\xe4":"a","\xe5":"a","\xc7":"C","\xe7":"c","\xd0":"D","\xf0":"d","\xc8":"E","\xc9":"E","\xca":"E","\xcb":"E","\xe8":"e","\xe9":"e","\xea":"e","\xeb":"e","\xcc":"I","\xcd":"I","\xce":"I","\xcf":"I","\xec":"i","\xed":"i","\xee":"i","\xef":"i","\xd1":"N","\xf1":"n","\xd2":"O","\xd3":"O","\xd4":"O","\xd5":"O","\xd6":"O","\xd8":"O","\xf2":"o","\xf3":"o","\xf4":"o","\xf5":"o","\xf6":"o","\xf8":"o","\xd9":"U","\xda":"U","\xdb":"U","\xdc":"U","\xf9":"u","\xfa":"u",
"\xfb":"u","\xfc":"u","\xdd":"Y","\xfd":"y","\xff":"y","\xc6":"Ae","\xe6":"ae","\xde":"Th","\xfe":"th","\xdf":"ss"},Ln={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","`":"&#96;"},Bn={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'","&#96;":"`"},zn={"function":true,object:true},Mn={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Dn=zn[typeof exports]&&exports&&!exports.nodeType&&exports,Pn=zn[typeof module]&&module&&!module.nodeType&&module,qn=zn[typeof self]&&self&&self.Object&&self,Kn=zn[typeof window]&&window&&window.Object&&window,Vn=Pn&&Pn.exports===Dn&&Dn,Yn=Dn&&Pn&&typeof global=="object"&&global&&global.Object&&global||Kn!==(this&&this.window)&&Kn||qn||this,Zn=m();

typeof define=="function"&&typeof define.amd=="object"&&define.amd?(Yn._=Zn, define(function(){return Zn})):Dn&&Pn?Vn?(Pn.exports=Zn)._=Zn:Dn._=Zn:Yn._=Zn}).call(this);
//! moment.js
//! version : 2.10.2
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, function () { 'use strict';

    var hookCallback;

    function utils_hooks__hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false
        };
    }

    function isArray(input) {
        return Object.prototype.toString.call(input) === '[object Array]';
    }

    function isDate(input) {
        return Object.prototype.toString.call(input) === '[object Date]' || input instanceof Date;
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function create_utc__createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function valid__isValid(m) {
        if (m._isValid == null) {
            m._isValid = !isNaN(m._d.getTime()) &&
                m._pf.overflow < 0 &&
                !m._pf.empty &&
                !m._pf.invalidMonth &&
                !m._pf.nullInput &&
                !m._pf.invalidFormat &&
                !m._pf.userInvalidated;

            if (m._strict) {
                m._isValid = m._isValid &&
                    m._pf.charsLeftOver === 0 &&
                    m._pf.unusedTokens.length === 0 &&
                    m._pf.bigHour === undefined;
            }
        }
        return m._isValid;
    }

    function valid__createInvalid (flags) {
        var m = create_utc__createUTC(NaN);
        if (flags != null) {
            extend(m._pf, flags);
        }
        else {
            m._pf.userInvalidated = true;
        }

        return m;
    }

    var momentProperties = utils_hooks__hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (typeof from._isAMomentObject !== 'undefined') {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (typeof from._i !== 'undefined') {
            to._i = from._i;
        }
        if (typeof from._f !== 'undefined') {
            to._f = from._f;
        }
        if (typeof from._l !== 'undefined') {
            to._l = from._l;
        }
        if (typeof from._strict !== 'undefined') {
            to._strict = from._strict;
        }
        if (typeof from._tzm !== 'undefined') {
            to._tzm = from._tzm;
        }
        if (typeof from._isUTC !== 'undefined') {
            to._isUTC = from._isUTC;
        }
        if (typeof from._offset !== 'undefined') {
            to._offset = from._offset;
        }
        if (typeof from._pf !== 'undefined') {
            to._pf = from._pf;
        }
        if (typeof from._locale !== 'undefined') {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i in momentProperties) {
                prop = momentProperties[i];
                val = from[prop];
                if (typeof val !== 'undefined') {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(+config._d);
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            utils_hooks__hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && hasOwnProp(obj, '_isAMomentObject'));
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            if (coercedNumber >= 0) {
                value = Math.floor(coercedNumber);
            } else {
                value = Math.ceil(coercedNumber);
            }
        }

        return value;
    }

    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function Locale() {
    }

    var locales = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return null;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && typeof module !== 'undefined' &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                require('./locale/' + name);
                // because defineLocale currently also sets the global locale, we
                // want to undo that for lazy loaded locales
                locale_locales__getSetGlobalLocale(oldLocale);
            } catch (e) { }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function locale_locales__getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (typeof values === 'undefined') {
                data = locale_locales__getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, values) {
        if (values !== null) {
            values.abbr = name;
            if (!locales[name]) {
                locales[name] = new Locale();
            }
            locales[name].set(values);

            // backwards compat for now: also set the locale
            locale_locales__getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    // returns locale data
    function locale_locales__getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                get_set__set(this, unit, value);
                utils_hooks__hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get_set__get(this, unit);
            }
        };
    }

    function get_set__get (mom, unit) {
        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
    }

    function get_set__set (mom, unit, value) {
        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
    }

    // MOMENTS

    function getSet (units, value) {
        var unit;
        if (typeof units === 'object') {
            for (unit in units) {
                this.set(unit, units[unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (typeof this[units] === 'function') {
                return this[units](value);
            }
        }
        return this;
    }

    function zeroFill(number, targetLength, forceSign) {
        var output = '' + Math.abs(number),
            sign = number >= 0;

        while (output.length < targetLength) {
            output = '0' + output;
        }
        return (sign ? (forceSign ? '+' : '') : '-') + output;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '';
            for (i = 0; i < length; i++) {
                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());

        if (!formatFunctions[format]) {
            formatFunctions[format] = makeFormatFunction(format);
        }

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = typeof regex === 'function' ? regex : function (isStrict) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }).replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (typeof callback === 'number') {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;

    function daysInMonth(year, month) {
        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  matchWord);
    addRegexToken('MMMM', matchWord);

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            config._pf.invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m) {
        return this._months[m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m) {
        return this._monthsShort[m.month()];
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = create_utc__createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        // TODO: Move this out of here!
        if (typeof value === 'string') {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (typeof value !== 'number') {
                return mom;
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            utils_hooks__hooks.updateOffset(this, true);
            return this;
        } else {
            return get_set__get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && m._pf.overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }

            m._pf.overflow = overflow;
        }

        return m;
    }

    function warn(msg) {
        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;
        return extend(function () {
            if (firstTime) {
                warn(msg);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    utils_hooks__hooks.suppressDeprecationWarnings = false;

    var from_string__isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
        ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
        ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d{2}/],
        ['YYYY-DDD', /\d{4}-\d{3}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
        ['HH:mm', /(T| )\d\d:\d\d/],
        ['HH', /(T| )\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = from_string__isoRegex.exec(string);

        if (match) {
            config._pf.iso = true;
            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(string)) {
                    // match[5] should be 'T' or undefined
                    config._f = isoDates[i][0] + (match[6] || ' ');
                    break;
                }
            }
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(string)) {
                    config._f += isoTimes[i][0];
                    break;
                }
            }
            if (string.match(matchOffset)) {
                config._f += 'Z';
            }
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
            utils_hooks__hooks.createFromInputFallback(config);
        }
    }

    utils_hooks__hooks.createFromInputFallback = deprecate(
        'moment construction falls back to js Date. This is ' +
        'discouraged and will be removed in upcoming major ' +
        'release. Please refer to ' +
        'https://github.com/moment/moment/issues/1407 for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    function createDate (y, m, d, h, M, s, ms) {
        //can't just apply() to create a date:
        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
        var date = new Date(y, m, d, h, M, s, ms);

        //the date constructor doesn't accept years < 1970
        if (y < 1970) {
            date.setFullYear(y);
        }
        return date;
    }

    function createUTCDate (y) {
        var date = new Date(Date.UTC.apply(null, arguments));
        if (y < 1970) {
            date.setUTCFullYear(y);
        }
        return date;
    }

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYY', 'YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YY', function (input, array) {
        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    utils_hooks__hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', false);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // firstDayOfWeek       0 = sun, 6 = sat
    //                      the day of the week that starts the week
    //                      (usually sunday or monday)
    // firstDayOfWeekOfYear 0 = sun, 6 = sat
    //                      the first week is the week that contains the first
    //                      of this day of the week
    //                      (eg. ISO weeks use thursday (4))
    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
        var end = firstDayOfWeekOfYear - firstDayOfWeek,
            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
            adjustedMoment;


        if (daysToDayOfWeek > end) {
            daysToDayOfWeek -= 7;
        }

        if (daysToDayOfWeek < end - 7) {
            daysToDayOfWeek += 7;
        }

        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');
        return {
            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
            year: adjustedMoment.year()
        };
    }

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
        var d = createUTCDate(year, 0, 1).getUTCDay();
        var daysToAdd;
        var dayOfYear;

        d = d === 0 ? 7 : d;
        weekday = weekday != null ? weekday : firstDayOfWeek;
        daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);
        dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;

        return {
            year      : dayOfYear > 0 ? year      : year - 1,
            dayOfYear : dayOfYear > 0 ? dayOfYear : daysInYear(year - 1) + dayOfYear
        };
    }

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        var now = new Date();
        if (config._useUTC) {
            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
        }
        return [now.getFullYear(), now.getMonth(), now.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse)) {
                config._pf._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
            week = defaults(w.w, 1);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < dow) {
                    ++week;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from begining of week
                weekday = w.e + dow;
            } else {
                // default to begining of week
                weekday = dow;
            }
        }
        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }

    utils_hooks__hooks.ISO_8601 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === utils_hooks__hooks.ISO_8601) {
            configFromISO(config);
            return;
        }

        config._a = [];
        config._pf.empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    config._pf.unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    config._pf.empty = false;
                }
                else {
                    config._pf.unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                config._pf.unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        config._pf.charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            config._pf.unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._pf.bigHour === true && config._a[HOUR] <= 12) {
            config._pf.bigHour = undefined;
        }
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            config._pf.invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._pf = defaultParsingFlags();
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!valid__isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += tempConfig._pf.charsLeftOver;

            //or tokens
            currentScore += tempConfig._pf.unusedTokens.length * 10;

            tempConfig._pf.score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];

        configFromArray(config);
    }

    function createFromConfig (config) {
        var input = config._i,
            format = config._f,
            res;

        config._locale = config._locale || locale_locales__getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return valid__createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        res = new Moment(checkOverflow(config));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function configFromInput(config) {
        var input = config._i;
        if (input === undefined) {
            config._d = new Date();
        } else if (isDate(input)) {
            config._d = new Date(+input);
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (typeof(input) === 'object') {
            configFromObject(config);
        } else if (typeof(input) === 'number') {
            // from milliseconds
            config._d = new Date(input);
        } else {
            utils_hooks__hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (typeof(locale) === 'boolean') {
            strict = locale;
            locale = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;
        c._pf = defaultParsingFlags();

        return createFromConfig(c);
    }

    function local__createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
         function () {
             var other = local__createLocal.apply(null, arguments);
             return other < this ? this : other;
         }
     );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
        function () {
            var other = local__createLocal.apply(null, arguments);
            return other > this ? this : other;
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return local__createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 36e5; // 1000 * 60 * 60
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = locale_locales__getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchOffset);
    addRegexToken('ZZ', matchOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(string) {
        var matches = ((string || '').match(matchOffset) || []);
        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(+res._d + diff);
            utils_hooks__hooks.updateOffset(res, false);
            return res;
        } else {
            return local__createLocal(input).local();
        }
        return model._isUTC ? local__createLocal(input).zone(model._offset || 0) : local__createLocal(input).local();
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    utils_hooks__hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime) {
        var offset = this._offset || 0,
            localAdjust;
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(input);
            }
            if (Math.abs(input) < 16) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    utils_hooks__hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm) {
            this.utcOffset(this._tzm);
        } else if (typeof this._i === 'string') {
            this.utcOffset(offsetFromString(this._i));
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!input) {
            input = 0;
        }
        else {
            input = local__createLocal(input).utcOffset();
        }

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (this._a) {
            var other = this._isUTC ? create_utc__createUTC(this._a) : local__createLocal(this._a);
            return this.isValid() && compareArrays(this._a, other.toArray()) > 0;
        }

        return false;
    }

    function isLocal () {
        return !this._isUTC;
    }

    function isUtcOffset () {
        return this._isUTC;
    }

    function isUtc () {
        return this._isUTC && this._offset === 0;
    }

    var aspNetRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

    function create__createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (typeof input === 'number') {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])        * sign,
                h  : toInt(match[HOUR])        * sign,
                m  : toInt(match[MINUTE])      * sign,
                s  : toInt(match[SECOND])      * sign,
                ms : toInt(match[MILLISECOND]) * sign
            };
        } else if (!!(match = create__isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                d : parseIso(match[4], sign),
                h : parseIso(match[5], sign),
                m : parseIso(match[6], sign),
                s : parseIso(match[7], sign),
                w : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    create__createDuration.fn = Duration.prototype;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {milliseconds: 0, months: 0};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = create__createDuration(val, period);
            add_subtract__addSubtract(this, dur, direction);
            return this;
        };
    }

    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = duration._days,
            months = duration._months;
        updateOffset = updateOffset == null ? true : updateOffset;

        if (milliseconds) {
            mom._d.setTime(+mom._d + milliseconds * isAdding);
        }
        if (days) {
            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
        }
        if (months) {
            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
        }
        if (updateOffset) {
            utils_hooks__hooks.updateOffset(mom, days || months);
        }
    }

    var add_subtract__add      = createAdder(1, 'add');
    var add_subtract__subtract = createAdder(-1, 'subtract');

    function moment_calendar__calendar (time) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || local__createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            diff = this.diff(sod, 'days', true),
            format = diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
        return this.format(this.localeData().calendar(format, this, local__createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var inputMs;
        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
        if (units === 'millisecond') {
            input = isMoment(input) ? input : local__createLocal(input);
            return +this > +input;
        } else {
            inputMs = isMoment(input) ? +input : +local__createLocal(input);
            return inputMs < +this.clone().startOf(units);
        }
    }

    function isBefore (input, units) {
        var inputMs;
        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
        if (units === 'millisecond') {
            input = isMoment(input) ? input : local__createLocal(input);
            return +this < +input;
        } else {
            inputMs = isMoment(input) ? +input : +local__createLocal(input);
            return +this.clone().endOf(units) < inputMs;
        }
    }

    function isBetween (from, to, units) {
        return this.isAfter(from, units) && this.isBefore(to, units);
    }

    function isSame (input, units) {
        var inputMs;
        units = normalizeUnits(units || 'millisecond');
        if (units === 'millisecond') {
            input = isMoment(input) ? input : local__createLocal(input);
            return +this === +input;
        } else {
            inputMs = +local__createLocal(input);
            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));
        }
    }

    function absFloor (number) {
        if (number < 0) {
            return Math.ceil(number);
        } else {
            return Math.floor(number);
        }
    }

    function diff (input, units, asFloat) {
        var that = cloneWithOffset(input, this),
            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,
            delta, output;

        units = normalizeUnits(units);

        if (units === 'year' || units === 'month' || units === 'quarter') {
            output = monthDiff(this, that);
            if (units === 'quarter') {
                output = output / 3;
            } else if (units === 'year') {
                output = output / 12;
            }
        } else {
            delta = this - that;
            output = units === 'second' ? delta / 1e3 : // 1000
                units === 'minute' ? delta / 6e4 : // 1000 * 60
                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
                delta;
        }
        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        return -(wholeMonthDiff + adjust);
    }

    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function moment_format__toISOString () {
        var m = this.clone().utc();
        if (0 < m.year() && m.year() <= 9999) {
            if ('function' === typeof Date.prototype.toISOString) {
                // native implementation is ~50x faster, use it when we can
                return this.toDate().toISOString();
            } else {
                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
            }
        } else {
            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
        }
    }

    function format (inputString) {
        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
    }

    function fromNow (withoutSuffix) {
        return this.from(local__createLocal(), withoutSuffix);
    }

    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = locale_locales__getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    function startOf (units) {
        units = normalizeUnits(units);
        // the following switch intentionally omits break keywords
        // to utilize falling through the cases.
        switch (units) {
        case 'year':
            this.month(0);
            /* falls through */
        case 'quarter':
        case 'month':
            this.date(1);
            /* falls through */
        case 'week':
        case 'isoWeek':
        case 'day':
            this.hours(0);
            /* falls through */
        case 'hour':
            this.minutes(0);
            /* falls through */
        case 'minute':
            this.seconds(0);
            /* falls through */
        case 'second':
            this.milliseconds(0);
        }

        // weeks are a special case
        if (units === 'week') {
            this.weekday(0);
        }
        if (units === 'isoWeek') {
            this.isoWeekday(1);
        }

        // quarters are also special
        if (units === 'quarter') {
            this.month(Math.floor(this.month() / 3) * 3);
        }

        return this;
    }

    function endOf (units) {
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond') {
            return this;
        }
        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
    }

    function to_type__valueOf () {
        return +this._d - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(+this / 1000);
    }

    function toDate () {
        return this._offset ? new Date(+this) : this._d;
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function moment_valid__isValid () {
        return valid__isValid(this);
    }

    function parsingFlags () {
        return extend({}, this._pf);
    }

    function invalidAt () {
        return this._pf.overflow;
    }

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
    });

    // HELPERS

    function weeksInYear(year, dow, doy) {
        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;
    }

    // MOMENTS

    function getSetWeekYear (input) {
        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
        return input == null ? year : this.add((input - year), 'y');
    }

    function getSetISOWeekYear (input) {
        var year = weekOfYear(this, 1, 4).year;
        return input == null ? year : this.add((input - year), 'y');
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    addFormatToken('Q', 0, 0, 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0], 10);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   matchWord);
    addRegexToken('ddd',  matchWord);
    addRegexToken('dddd', matchWord);

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {
        var weekday = config._locale.weekdaysParse(input);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            config._pf.invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input === 'string') {
            if (!isNaN(input)) {
                input = parseInt(input, 10);
            }
            else {
                input = locale.weekdaysParse(input);
                if (typeof input !== 'number') {
                    return null;
                }
            }
        }
        return input;
    }

    // LOCALES

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m) {
        return this._weekdays[m.day()];
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return this._weekdaysShort[m.day()];
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return this._weekdaysMin[m.day()];
    }

    function localeWeekdaysParse (weekdayName) {
        var i, mom, regex;

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            if (!this._weekdaysParse[i]) {
                mom = local__createLocal([2000, 1]).day(i);
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.
        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, function () {
        return this.hours() % 12 || 12;
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        config._pf.bigHour = true;
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour he wants. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    function millisecond__milliseconds (token) {
        addFormatToken(0, [token, 3], 0, 'millisecond');
    }

    millisecond__milliseconds('SSS');
    millisecond__milliseconds('SSSS');

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);
    addRegexToken('SSSS', matchUnsigned);
    addParseToken(['S', 'SS', 'SSS', 'SSSS'], function (input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    });

    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var momentPrototype__proto = Moment.prototype;

    momentPrototype__proto.add          = add_subtract__add;
    momentPrototype__proto.calendar     = moment_calendar__calendar;
    momentPrototype__proto.clone        = clone;
    momentPrototype__proto.diff         = diff;
    momentPrototype__proto.endOf        = endOf;
    momentPrototype__proto.format       = format;
    momentPrototype__proto.from         = from;
    momentPrototype__proto.fromNow      = fromNow;
    momentPrototype__proto.get          = getSet;
    momentPrototype__proto.invalidAt    = invalidAt;
    momentPrototype__proto.isAfter      = isAfter;
    momentPrototype__proto.isBefore     = isBefore;
    momentPrototype__proto.isBetween    = isBetween;
    momentPrototype__proto.isSame       = isSame;
    momentPrototype__proto.isValid      = moment_valid__isValid;
    momentPrototype__proto.lang         = lang;
    momentPrototype__proto.locale       = locale;
    momentPrototype__proto.localeData   = localeData;
    momentPrototype__proto.max          = prototypeMax;
    momentPrototype__proto.min          = prototypeMin;
    momentPrototype__proto.parsingFlags = parsingFlags;
    momentPrototype__proto.set          = getSet;
    momentPrototype__proto.startOf      = startOf;
    momentPrototype__proto.subtract     = add_subtract__subtract;
    momentPrototype__proto.toArray      = toArray;
    momentPrototype__proto.toDate       = toDate;
    momentPrototype__proto.toISOString  = moment_format__toISOString;
    momentPrototype__proto.toJSON       = moment_format__toISOString;
    momentPrototype__proto.toString     = toString;
    momentPrototype__proto.unix         = unix;
    momentPrototype__proto.valueOf      = to_type__valueOf;

    // Year
    momentPrototype__proto.year       = getSetYear;
    momentPrototype__proto.isLeapYear = getIsLeapYear;

    // Week Year
    momentPrototype__proto.weekYear    = getSetWeekYear;
    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

    // Quarter
    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

    // Month
    momentPrototype__proto.month       = getSetMonth;
    momentPrototype__proto.daysInMonth = getDaysInMonth;

    // Week
    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
    momentPrototype__proto.weeksInYear    = getWeeksInYear;
    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

    // Day
    momentPrototype__proto.date       = getSetDayOfMonth;
    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

    // Hour
    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

    // Minute
    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

    // Second
    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

    // Millisecond
    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

    // Offset
    momentPrototype__proto.utcOffset            = getSetOffset;
    momentPrototype__proto.utc                  = setOffsetToUTC;
    momentPrototype__proto.local                = setOffsetToLocal;
    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
    momentPrototype__proto.isDST                = isDaylightSavingTime;
    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
    momentPrototype__proto.isLocal              = isLocal;
    momentPrototype__proto.isUtcOffset          = isUtcOffset;
    momentPrototype__proto.isUtc                = isUtc;
    momentPrototype__proto.isUTC                = isUtc;

    // Timezone
    momentPrototype__proto.zoneAbbr = getZoneAbbr;
    momentPrototype__proto.zoneName = getZoneName;

    // Deprecations
    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

    var momentPrototype = momentPrototype__proto;

    function moment__createUnix (input) {
        return local__createLocal(input * 1000);
    }

    function moment__createInZone () {
        return local__createLocal.apply(null, arguments).parseZone();
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function locale_calendar__calendar (key, mom, now) {
        var output = this._calendar[key];
        return typeof output === 'function' ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY LT',
        LLLL : 'dddd, MMMM D, YYYY LT'
    };

    function longDateFormat (key) {
        var output = this._longDateFormat[key];
        if (!output && this._longDateFormat[key.toUpperCase()]) {
            output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {
                return val.slice(1);
            });
            this._longDateFormat[key] = output;
        }
        return output;
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    function preParsePostFormat (string) {
        return string;
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (typeof output === 'function') ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
    }

    function locale_set__set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (typeof prop === 'function') {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _ordinalParseLenient.
        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + /\d{1,2}/.source);
    }

    var prototype__proto = Locale.prototype;

    prototype__proto._calendar       = defaultCalendar;
    prototype__proto.calendar        = locale_calendar__calendar;
    prototype__proto._longDateFormat = defaultLongDateFormat;
    prototype__proto.longDateFormat  = longDateFormat;
    prototype__proto._invalidDate    = defaultInvalidDate;
    prototype__proto.invalidDate     = invalidDate;
    prototype__proto._ordinal        = defaultOrdinal;
    prototype__proto.ordinal         = ordinal;
    prototype__proto._ordinalParse   = defaultOrdinalParse;
    prototype__proto.preparse        = preParsePostFormat;
    prototype__proto.postformat      = preParsePostFormat;
    prototype__proto._relativeTime   = defaultRelativeTime;
    prototype__proto.relativeTime    = relative__relativeTime;
    prototype__proto.pastFuture      = pastFuture;
    prototype__proto.set             = locale_set__set;

    // Month
    prototype__proto.months       =        localeMonths;
    prototype__proto._months      = defaultLocaleMonths;
    prototype__proto.monthsShort  =        localeMonthsShort;
    prototype__proto._monthsShort = defaultLocaleMonthsShort;
    prototype__proto.monthsParse  =        localeMonthsParse;

    // Week
    prototype__proto.week = localeWeek;
    prototype__proto._week = defaultLocaleWeek;
    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

    // Day of Week
    prototype__proto.weekdays       =        localeWeekdays;
    prototype__proto._weekdays      = defaultLocaleWeekdays;
    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

    // Hours
    prototype__proto.isPM = localeIsPM;
    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
    prototype__proto.meridiem = localeMeridiem;

    function lists__get (format, index, field, setter) {
        var locale = locale_locales__getLocale();
        var utc = create_utc__createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function list (format, index, field, count, setter) {
        if (typeof format === 'number') {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return lists__get(format, index, field, setter);
        }

        var i;
        var out = [];
        for (i = 0; i < count; i++) {
            out[i] = lists__get(format, i, field, setter);
        }
        return out;
    }

    function lists__listMonths (format, index) {
        return list(format, index, 'months', 12, 'month');
    }

    function lists__listMonthsShort (format, index) {
        return list(format, index, 'monthsShort', 12, 'month');
    }

    function lists__listWeekdays (format, index) {
        return list(format, index, 'weekdays', 7, 'day');
    }

    function lists__listWeekdaysShort (format, index) {
        return list(format, index, 'weekdaysShort', 7, 'day');
    }

    function lists__listWeekdaysMin (format, index) {
        return list(format, index, 'weekdaysMin', 7, 'day');
    }

    locale_locales__getSetGlobalLocale('en', {
        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports
    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

    var mathAbs = Math.abs;

    function duration_abs__abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function duration_add_subtract__addSubtract (duration, input, value, direction) {
        var other = create__createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function duration_add_subtract__add (input, value) {
        return duration_add_subtract__addSubtract(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function duration_add_subtract__subtract (input, value) {
        return duration_add_subtract__addSubtract(this, input, value, -1);
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years = 0;

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // Accurately convert days to years, assume start from year 0.
        years = absFloor(daysToYears(days));
        days -= absFloor(yearsToDays(years));

        // 30 days to a month
        // TODO (iskren): Use anchor date (like 1st Jan) to compute this.
        months += absFloor(days / 30);
        days   %= 30;

        // 12 months -> 1 year
        years  += absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToYears (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        return days * 400 / 146097;
    }

    function yearsToDays (years) {
        // years * 365 + absFloor(years / 4) -
        //     absFloor(years / 100) + absFloor(years / 400);
        return years * 146097 / 400;
    }

    function as (units) {
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'year') {
            days   = this._days   + milliseconds / 864e5;
            months = this._months + daysToYears(days) * 12;
            return units === 'month' ? months : months / 12;
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(yearsToDays(this._months / 12));
            switch (units) {
                case 'week'   : return days / 7            + milliseconds / 6048e5;
                case 'day'    : return days                + milliseconds / 864e5;
                case 'hour'   : return days * 24           + milliseconds / 36e5;
                case 'minute' : return days * 24 * 60      + milliseconds / 6e4;
                case 'second' : return days * 24 * 60 * 60 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 24 * 60 * 60 * 1000) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function duration_as__valueOf () {
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asYears        = makeAs('y');

    function duration_get__get (units) {
        units = normalizeUnits(units);
        return this[units + 's']();
    }

    function makeGetter(name) {
        return function () {
            return this._data[name];
        };
    }

    var duration_get__milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        s: 45,  // seconds to minute
        m: 45,  // minutes to hour
        h: 22,  // hours to day
        d: 26,  // days to month
        M: 11   // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
        var duration = create__createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds < thresholds.s && ['s', seconds]  ||
                minutes === 1          && ['m']           ||
                minutes < thresholds.m && ['mm', minutes] ||
                hours   === 1          && ['h']           ||
                hours   < thresholds.h && ['hh', hours]   ||
                days    === 1          && ['d']           ||
                days    < thresholds.d && ['dd', days]    ||
                months  === 1          && ['M']           ||
                months  < thresholds.M && ['MM', months]  ||
                years   === 1          && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set a threshold for relative time strings
    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        return true;
    }

    function humanize (withSuffix) {
        var locale = this.localeData();
        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var iso_string__abs = Math.abs;

    function iso_string__toISOString() {
        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = iso_string__abs(this.years());
        var M = iso_string__abs(this.months());
        var D = iso_string__abs(this.days());
        var h = iso_string__abs(this.hours());
        var m = iso_string__abs(this.minutes());
        var s = iso_string__abs(this.seconds() + this.milliseconds() / 1000);
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        return (total < 0 ? '-' : '') +
            'P' +
            (Y ? Y + 'Y' : '') +
            (M ? M + 'M' : '') +
            (D ? D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? h + 'H' : '') +
            (m ? m + 'M' : '') +
            (s ? s + 'S' : '');
    }

    var duration_prototype__proto = Duration.prototype;

    duration_prototype__proto.abs            = duration_abs__abs;
    duration_prototype__proto.add            = duration_add_subtract__add;
    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
    duration_prototype__proto.as             = as;
    duration_prototype__proto.asMilliseconds = asMilliseconds;
    duration_prototype__proto.asSeconds      = asSeconds;
    duration_prototype__proto.asMinutes      = asMinutes;
    duration_prototype__proto.asHours        = asHours;
    duration_prototype__proto.asDays         = asDays;
    duration_prototype__proto.asWeeks        = asWeeks;
    duration_prototype__proto.asMonths       = asMonths;
    duration_prototype__proto.asYears        = asYears;
    duration_prototype__proto.valueOf        = duration_as__valueOf;
    duration_prototype__proto._bubble        = bubble;
    duration_prototype__proto.get            = duration_get__get;
    duration_prototype__proto.milliseconds   = duration_get__milliseconds;
    duration_prototype__proto.seconds        = seconds;
    duration_prototype__proto.minutes        = minutes;
    duration_prototype__proto.hours          = hours;
    duration_prototype__proto.days           = days;
    duration_prototype__proto.weeks          = weeks;
    duration_prototype__proto.months         = months;
    duration_prototype__proto.years          = years;
    duration_prototype__proto.humanize       = humanize;
    duration_prototype__proto.toISOString    = iso_string__toISOString;
    duration_prototype__proto.toString       = iso_string__toISOString;
    duration_prototype__proto.toJSON         = iso_string__toISOString;
    duration_prototype__proto.locale         = locale;
    duration_prototype__proto.localeData     = localeData;

    // Deprecations
    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
    duration_prototype__proto.lang = lang;

    // Side effect imports

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    utils_hooks__hooks.version = '2.10.2';

    setHookCallback(local__createLocal);

    utils_hooks__hooks.fn                    = momentPrototype;
    utils_hooks__hooks.min                   = min;
    utils_hooks__hooks.max                   = max;
    utils_hooks__hooks.utc                   = create_utc__createUTC;
    utils_hooks__hooks.unix                  = moment__createUnix;
    utils_hooks__hooks.months                = lists__listMonths;
    utils_hooks__hooks.isDate                = isDate;
    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
    utils_hooks__hooks.invalid               = valid__createInvalid;
    utils_hooks__hooks.duration              = create__createDuration;
    utils_hooks__hooks.isMoment              = isMoment;
    utils_hooks__hooks.weekdays              = lists__listWeekdays;
    utils_hooks__hooks.parseZone             = moment__createInZone;
    utils_hooks__hooks.localeData            = locale_locales__getLocale;
    utils_hooks__hooks.isDuration            = isDuration;
    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
    utils_hooks__hooks.defineLocale          = defineLocale;
    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

    var _moment = utils_hooks__hooks;

    return _moment;

}));
var Framebuffer, Heights, Node, Shader, Texture, WebGLHeatmap, fragmentShaderBlit, nukeVendorPrefix, textureFloatShims, vertexShaderBlit,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

nukeVendorPrefix = function() {
  var getExtension, getSupportedExtensions, vendorRe, vendors;
  if (window.WebGLRenderingContext != null) {
    vendors = ['WEBKIT', 'MOZ', 'MS', 'O'];
    vendorRe = /^WEBKIT_(.*)|MOZ_(.*)|MS_(.*)|O_(.*)/;
    getExtension = WebGLRenderingContext.prototype.getExtension;
    WebGLRenderingContext.prototype.getExtension = function(name) {
      var extobj, match, vendor, _i, _len;
      match = name.match(vendorRe);
      if (match !== null) {
        name = match[1];
      }
      extobj = getExtension.call(this, name);
      if (extobj === null) {
        for (_i = 0, _len = vendors.length; _i < _len; _i++) {
          vendor = vendors[_i];
          extobj = getExtension.call(this, vendor + '_' + name);
          if (extobj !== null) {
            return extobj;
          }
        }
        return null;
      } else {
        return extobj;
      }
    };
    getSupportedExtensions = WebGLRenderingContext.prototype.getSupportedExtensions;
    return WebGLRenderingContext.prototype.getSupportedExtensions = function() {
      var extension, match, result, supported, _i, _len;
      supported = getSupportedExtensions.call(this);
      result = [];
      for (_i = 0, _len = supported.length; _i < _len; _i++) {
        extension = supported[_i];
        match = extension.match(vendorRe);
        if (match !== null) {
          extension = match[1];
        }
        if (__indexOf.call(result, extension) < 0) {
          result.push(extension);
        }
      }
      return result;
    };
  }
};

textureFloatShims = function() {
  var checkColorBuffer, checkFloatLinear, checkSupport, checkTexture, createSourceCanvas, getExtension, getSupportedExtensions, name, shimExtensions, shimLookup, unshimExtensions, unshimLookup, _i, _len;
  createSourceCanvas = function() {
    var canvas, ctx, imageData;
    canvas = document.createElement('canvas');
    canvas.width = 2;
    canvas.height = 2;
    ctx = canvas.getContext('2d');
    imageData = ctx.getImageData(0, 0, 2, 2);
    imageData.data.set(new Uint8ClampedArray([0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255]));
    ctx.putImageData(imageData, 0, 0);
    return canvas;
  };
  createSourceCanvas();
  checkFloatLinear = function(gl, sourceType) {
    var buffer, cleanup, fragmentShader, framebuffer, positionLoc, program, readBuffer, result, source, sourceCanvas, sourceLoc, target, vertexShader, vertices;
    program = gl.createProgram();
    vertexShader = gl.createShader(gl.VERTEX_SHADER);
    gl.attachShader(program, vertexShader);
    gl.shaderSource(vertexShader, 'attribute vec2 position;\nvoid main(){\n    gl_Position = vec4(position, 0.0, 1.0);\n}');
    gl.compileShader(vertexShader);
    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {
      throw gl.getShaderInfoLog(vertexShader);
    }
    fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.attachShader(program, fragmentShader);
    gl.shaderSource(fragmentShader, 'uniform sampler2D source;\nvoid main(){\n    gl_FragColor = texture2D(source, vec2(1.0, 1.0));\n}');
    gl.compileShader(fragmentShader);
    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {
      throw gl.getShaderInfoLog(fragmentShader);
    }
    gl.linkProgram(program);
    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
      throw gl.getProgramInfoLog(program);
    }
    gl.useProgram(program);
    cleanup = function() {
      gl.deleteShader(fragmentShader);
      gl.deleteShader(vertexShader);
      gl.deleteProgram(program);
      gl.deleteBuffer(buffer);
      gl.deleteTexture(source);
      gl.deleteTexture(target);
      gl.deleteFramebuffer(framebuffer);
      gl.bindBuffer(gl.ARRAY_BUFFER, null);
      gl.useProgram(null);
      gl.bindTexture(gl.TEXTURE_2D, null);
      return gl.bindFramebuffer(gl.FRAMEBUFFER, null);
    };
    target = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, target);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 2, 2, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
    framebuffer = gl.createFramebuffer();
    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);
    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, target, 0);
    sourceCanvas = createSourceCanvas();
    source = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, source);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, sourceType, sourceCanvas);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);
    vertices = new Float32Array([1, 1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1]);
    buffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);
    positionLoc = gl.getAttribLocation(program, 'position');
    sourceLoc = gl.getUniformLocation(program, 'source');
    gl.enableVertexAttribArray(positionLoc);
    gl.vertexAttribPointer(positionLoc, 2, gl.FLOAT, false, 0, 0);
    gl.uniform1i(sourceLoc, 0);
    gl.drawArrays(gl.TRIANGLES, 0, 6);
    readBuffer = new Uint8Array(4 * 4);
    gl.readPixels(0, 0, 2, 2, gl.RGBA, gl.UNSIGNED_BYTE, readBuffer);
    result = Math.abs(readBuffer[0] - 127) < 10;
    cleanup();
    return result;
  };
  checkTexture = function(gl, targetType) {
    var target;
    target = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, target);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 2, 2, 0, gl.RGBA, targetType, null);
    if (gl.getError() === 0) {
      gl.deleteTexture(target);
      return true;
    } else {
      gl.deleteTexture(target);
      return false;
    }
  };
  checkColorBuffer = function(gl, targetType) {
    var check, framebuffer, target;
    target = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, target);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 2, 2, 0, gl.RGBA, targetType, null);
    framebuffer = gl.createFramebuffer();
    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);
    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, target, 0);
    check = gl.checkFramebufferStatus(gl.FRAMEBUFFER);
    gl.deleteTexture(target);
    gl.deleteFramebuffer(framebuffer);
    gl.bindTexture(gl.TEXTURE_2D, null);
    gl.bindFramebuffer(gl.FRAMEBUFFER, null);
    if (check === gl.FRAMEBUFFER_COMPLETE) {
      return true;
    } else {
      return false;
    }
  };
  shimExtensions = [];
  shimLookup = {};
  unshimExtensions = [];
  checkSupport = function() {
    var canvas, extobj, gl, halfFloatExt, halfFloatTexturing, singleFloatExt, singleFloatTexturing;
    canvas = document.createElement('canvas');
    gl = null;
    try {
      gl = canvas.getContext('experimental-webgl');
      if (gl === null) {
        gl = canvas.getContext('webgl');
      }
    } catch (_error) {}
    if (gl != null) {
      singleFloatExt = gl.getExtension('OES_texture_float');
      if (singleFloatExt === null) {
        if (checkTexture(gl, gl.FLOAT)) {
          singleFloatTexturing = true;
          shimExtensions.push('OES_texture_float');
          shimLookup.OES_texture_float = {
            shim: true
          };
        } else {
          singleFloatTexturing = false;
          unshimExtensions.push('OES_texture_float');
        }
      } else {
        if (checkTexture(gl, gl.FLOAT)) {
          singleFloatTexturing = true;
          shimExtensions.push('OES_texture_float');
        } else {
          singleFloatTexturing = false;
          unshimExtensions.push('OES_texture_float');
        }
      }
      if (singleFloatTexturing) {
        extobj = gl.getExtension('WEBGL_color_buffer_float');
        if (extobj === null) {
          if (checkColorBuffer(gl, gl.FLOAT)) {
            shimExtensions.push('WEBGL_color_buffer_float');
            shimLookup.WEBGL_color_buffer_float = {
              shim: true,
              RGBA32F_EXT: 0x8814,
              RGB32F_EXT: 0x8815,
              FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211,
              UNSIGNED_NORMALIZED_EXT: 0x8C17
            };
          } else {
            unshimExtensions.push('WEBGL_color_buffer_float');
          }
        } else {
          if (checkColorBuffer(gl, gl.FLOAT)) {
            shimExtensions.push('WEBGL_color_buffer_float');
          } else {
            unshimExtensions.push('WEBGL_color_buffer_float');
          }
        }
        extobj = gl.getExtension('OES_texture_float_linear');
        if (extobj === null) {
          if (checkFloatLinear(gl, gl.FLOAT)) {
            shimExtensions.push('OES_texture_float_linear');
            shimLookup.OES_texture_float_linear = {
              shim: true
            };
          } else {
            unshimExtensions.push('OES_texture_float_linear');
          }
        } else {
          if (checkFloatLinear(gl, gl.FLOAT)) {
            shimExtensions.push('OES_texture_float_linear');
          } else {
            unshimExtensions.push('OES_texture_float_linear');
          }
        }
      }
      halfFloatExt = gl.getExtension('OES_texture_half_float');
      if (halfFloatExt === null) {
        if (checkTexture(gl, 0x8D61)) {
          halfFloatTexturing = true;
          shimExtensions.push('OES_texture_half_float');
          halfFloatExt = shimLookup.OES_texture_half_float = {
            HALF_FLOAT_OES: 0x8D61,
            shim: true
          };
        } else {
          halfFloatTexturing = false;
          unshimExtensions.push('OES_texture_half_float');
        }
      } else {
        if (checkTexture(gl, halfFloatExt.HALF_FLOAT_OES)) {
          halfFloatTexturing = true;
          shimExtensions.push('OES_texture_half_float');
        } else {
          halfFloatTexturing = false;
          unshimExtensions.push('OES_texture_half_float');
        }
      }
      if (halfFloatTexturing) {
        extobj = gl.getExtension('EXT_color_buffer_half_float');
        if (extobj === null) {
          if (checkColorBuffer(gl, halfFloatExt.HALF_FLOAT_OES)) {
            shimExtensions.push('EXT_color_buffer_half_float');
            shimLookup.EXT_color_buffer_half_float = {
              shim: true,
              RGBA16F_EXT: 0x881A,
              RGB16F_EXT: 0x881B,
              FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: 0x8211,
              UNSIGNED_NORMALIZED_EXT: 0x8C17
            };
          } else {
            unshimExtensions.push('EXT_color_buffer_half_float');
          }
        } else {
          if (checkColorBuffer(gl, halfFloatExt.HALF_FLOAT_OES)) {
            shimExtensions.push('EXT_color_buffer_half_float');
          } else {
            unshimExtensions.push('EXT_color_buffer_half_float');
          }
        }
        extobj = gl.getExtension('OES_texture_half_float_linear');
        if (extobj === null) {
          if (checkFloatLinear(gl, halfFloatExt.HALF_FLOAT_OES)) {
            shimExtensions.push('OES_texture_half_float_linear');
            return shimLookup.OES_texture_half_float_linear = {
              shim: true
            };
          } else {
            return unshimExtensions.push('OES_texture_half_float_linear');
          }
        } else {
          if (checkFloatLinear(gl, halfFloatExt.HALF_FLOAT_OES)) {
            return shimExtensions.push('OES_texture_half_float_linear');
          } else {
            return unshimExtensions.push('OES_texture_half_float_linear');
          }
        }
      }
    }
  };
  if (window.WebGLRenderingContext != null) {
    checkSupport();
    unshimLookup = {};
    for (_i = 0, _len = unshimExtensions.length; _i < _len; _i++) {
      name = unshimExtensions[_i];
      unshimLookup[name] = true;
    }
    getExtension = WebGLRenderingContext.prototype.getExtension;
    WebGLRenderingContext.prototype.getExtension = function(name) {
      var extobj;
      extobj = shimLookup[name];
      if (extobj === void 0) {
        if (unshimLookup[name]) {
          return null;
        } else {
          return getExtension.call(this, name);
        }
      } else {
        return extobj;
      }
    };
    getSupportedExtensions = WebGLRenderingContext.prototype.getSupportedExtensions;
    WebGLRenderingContext.prototype.getSupportedExtensions = function() {
      var extension, result, supported, _j, _k, _len1, _len2;
      supported = getSupportedExtensions.call(this);
      result = [];
      for (_j = 0, _len1 = supported.length; _j < _len1; _j++) {
        extension = supported[_j];
        if (unshimLookup[extension] === void 0) {
          result.push(extension);
        }
      }
      for (_k = 0, _len2 = shimExtensions.length; _k < _len2; _k++) {
        extension = shimExtensions[_k];
        if (__indexOf.call(result, extension) < 0) {
          result.push(extension);
        }
      }
      return result;
    };
    return WebGLRenderingContext.prototype.getFloatExtension = function(spec) {
      var candidate, candidates, half, halfFramebuffer, halfLinear, halfTexture, i, importance, preference, result, single, singleFramebuffer, singleLinear, singleTexture, use, _j, _k, _l, _len1, _len2, _len3, _len4, _m, _ref, _ref1, _ref2;
      if (spec.prefer == null) {
        spec.prefer = ['half'];
      }
      if (spec.require == null) {
        spec.require = [];
      }
      if (spec.throws == null) {
        spec.throws = true;
      }
      singleTexture = this.getExtension('OES_texture_float');
      halfTexture = this.getExtension('OES_texture_half_float');
      singleFramebuffer = this.getExtension('WEBGL_color_buffer_float');
      halfFramebuffer = this.getExtension('EXT_color_buffer_half_float');
      singleLinear = this.getExtension('OES_texture_float_linear');
      halfLinear = this.getExtension('OES_texture_half_float_linear');
      single = {
        texture: singleTexture !== null,
        filterable: singleLinear !== null,
        renderable: singleFramebuffer !== null,
        score: 0,
        precision: 'single',
        half: false,
        single: true,
        type: this.FLOAT
      };
      half = {
        texture: halfTexture !== null,
        filterable: halfLinear !== null,
        renderable: halfFramebuffer !== null,
        score: 0,
        precision: 'half',
        half: true,
        single: false,
        type: (_ref = halfTexture != null ? halfTexture.HALF_FLOAT_OES : void 0) != null ? _ref : null
      };
      candidates = [];
      if (single.texture) {
        candidates.push(single);
      }
      if (half.texture) {
        candidates.push(half);
      }
      result = [];
      for (_j = 0, _len1 = candidates.length; _j < _len1; _j++) {
        candidate = candidates[_j];
        use = true;
        _ref1 = spec.require;
        for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
          name = _ref1[_k];
          if (candidate[name] === false) {
            use = false;
          }
        }
        if (use) {
          result.push(candidate);
        }
      }
      for (_l = 0, _len3 = result.length; _l < _len3; _l++) {
        candidate = result[_l];
        _ref2 = spec.prefer;
        for (i = _m = 0, _len4 = _ref2.length; _m < _len4; i = ++_m) {
          preference = _ref2[i];
          importance = Math.pow(2, spec.prefer.length - i - 1);
          if (candidate[preference]) {
            candidate.score += importance;
          }
        }
      }
      result.sort(function(a, b) {
        if (a.score === b.score) {
          return 0;
        } else if (a.score < b.score) {
          return 1;
        } else if (a.score > b.score) {
          return -1;
        }
      });
      if (result.length === 0) {
        if (spec.throws) {
          throw 'No floating point texture support that is ' + spec.require.join(', ');
        } else {
          return null;
        }
      } else {
        result = result[0];
        return {
          filterable: result.filterable,
          renderable: result.renderable,
          type: result.type,
          precision: result.precision
        };
      }
    };
  }
};

nukeVendorPrefix();

textureFloatShims();

Shader = (function() {
  function Shader(gl, _arg) {
    var fragment, vertex;
    this.gl = gl;
    vertex = _arg.vertex, fragment = _arg.fragment;
    this.program = this.gl.createProgram();
    this.vs = this.gl.createShader(this.gl.VERTEX_SHADER);
    this.fs = this.gl.createShader(this.gl.FRAGMENT_SHADER);
    this.gl.attachShader(this.program, this.vs);
    this.gl.attachShader(this.program, this.fs);
    this.compileShader(this.vs, vertex);
    this.compileShader(this.fs, fragment);
    this.link();
    this.value_cache = {};
    this.uniform_cache = {};
    this.attribCache = {};
  }

  Shader.prototype.attribLocation = function(name) {
    var location;
    location = this.attribCache[name];
    if (location === void 0) {
      location = this.attribCache[name] = this.gl.getAttribLocation(this.program, name);
    }
    return location;
  };

  Shader.prototype.compileShader = function(shader, source) {
    this.gl.shaderSource(shader, source);
    this.gl.compileShader(shader);
    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {
      throw "Shader Compile Error: " + (this.gl.getShaderInfoLog(shader));
    }
  };

  Shader.prototype.link = function() {
    this.gl.linkProgram(this.program);
    if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {
      throw "Shader Link Error: " + (this.gl.getProgramInfoLog(this.program));
    }
  };

  Shader.prototype.use = function() {
    this.gl.useProgram(this.program);
    return this;
  };

  Shader.prototype.uniformLoc = function(name) {
    var location;
    location = this.uniform_cache[name];
    if (location === void 0) {
      location = this.uniform_cache[name] = this.gl.getUniformLocation(this.program, name);
    }
    return location;
  };

  Shader.prototype.int = function(name, value) {
    var cached, loc;
    cached = this.value_cache[name];
    if (cached !== value) {
      this.value_cache[name] = value;
      loc = this.uniformLoc(name);
      if (loc) {
        this.gl.uniform1i(loc, value);
      }
    }
    return this;
  };

  Shader.prototype.vec2 = function(name, a, b) {
    var loc;
    loc = this.uniformLoc(name);
    if (loc) {
      this.gl.uniform2f(loc, a, b);
    }
    return this;
  };

  Shader.prototype.float = function(name, value) {
    var cached, loc;
    cached = this.value_cache[name];
    if (cached !== value) {
      this.value_cache[name] = value;
      loc = this.uniformLoc(name);
      if (loc) {
        this.gl.uniform1f(loc, value);
      }
    }
    return this;
  };

  return Shader;

})();

Framebuffer = (function() {
  function Framebuffer(gl) {
    this.gl = gl;
    this.buffer = this.gl.createFramebuffer();
  }

  Framebuffer.prototype.destroy = function() {
    return this.gl.deleteFRamebuffer(this.buffer);
  };

  Framebuffer.prototype.bind = function() {
    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.buffer);
    return this;
  };

  Framebuffer.prototype.unbind = function() {
    this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);
    return this;
  };

  Framebuffer.prototype.check = function() {
    var result;
    result = this.gl.checkFramebufferStatus(this.gl.FRAMEBUFFER);
    switch (result) {
      case this.gl.FRAMEBUFFER_UNSUPPORTED:
        throw 'Framebuffer is unsupported';
        break;
      case this.gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
        throw 'Framebuffer incomplete attachment';
        break;
      case this.gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
        throw 'Framebuffer incomplete dimensions';
        break;
      case this.gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
        throw 'Framebuffer incomplete missing attachment';
    }
    return this;
  };

  Framebuffer.prototype.color = function(texture) {
    this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER, this.gl.COLOR_ATTACHMENT0, texture.target, texture.handle, 0);
    this.check();
    return this;
  };

  Framebuffer.prototype.depth = function(buffer) {
    this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER, this.gl.DEPTH_ATTACHMENT, this.gl.RENDERBUFFER, buffer.id);
    this.check();
    return this;
  };

  Framebuffer.prototype.destroy = function() {
    return this.gl.deleteFramebuffer(this.buffer);
  };

  return Framebuffer;

})();

Texture = (function() {
  function Texture(gl, params) {
    var _ref, _ref1;
    this.gl = gl;
    if (params == null) {
      params = {};
    }
    this.channels = this.gl[((_ref = params.channels) != null ? _ref : 'rgba').toUpperCase()];
    if (typeof params.type === 'number') {
      this.type = params.type;
    } else {
      this.type = this.gl[((_ref1 = params.type) != null ? _ref1 : 'unsigned_byte').toUpperCase()];
    }
    switch (this.channels) {
      case this.gl.RGBA:
        this.chancount = 4;
        break;
      case this.gl.RGB:
        this.chancount = 3;
        break;
      case this.gl.LUMINANCE_ALPHA:
        this.chancount = 2;
        break;
      default:
        this.chancount = 1;
    }
    this.target = this.gl.TEXTURE_2D;
    this.handle = this.gl.createTexture();
  }

  Texture.prototype.destroy = function() {
    return this.gl.deleteTexture(this.handle);
  };

  Texture.prototype.bind = function(unit) {
    if (unit == null) {
      unit = 0;
    }
    if (unit > 15) {
      throw 'Texture unit too large: ' + unit;
    }
    this.gl.activeTexture(this.gl.TEXTURE0 + unit);
    this.gl.bindTexture(this.target, this.handle);
    return this;
  };

  Texture.prototype.setSize = function(width, height) {
    this.width = width;
    this.height = height;
    this.gl.texImage2D(this.target, 0, this.channels, this.width, this.height, 0, this.channels, this.type, null);
    return this;
  };

  Texture.prototype.upload = function(data) {
    this.width = data.width;
    this.height = data.height;
    this.gl.texImage2D(this.target, 0, this.channels, this.channels, this.type, data);
    return this;
  };

  Texture.prototype.linear = function() {
    this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);
    this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR);
    return this;
  };

  Texture.prototype.nearest = function() {
    this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);
    this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);
    return this;
  };

  Texture.prototype.clampToEdge = function() {
    this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);
    this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);
    return this;
  };

  Texture.prototype.repeat = function() {
    this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.gl.REPEAT);
    this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.gl.REPEAT);
    return this;
  };

  return Texture;

})();

Node = (function() {
  function Node(gl, width, height) {
    var floatExt;
    this.gl = gl;
    this.width = width;
    this.height = height;
    floatExt = this.gl.getFloatExtension({
      require: ['renderable']
    });
    this.texture = new Texture(this.gl, {
      type: floatExt.type
    }).bind(0).setSize(this.width, this.height).nearest().clampToEdge();
    this.fbo = new Framebuffer(this.gl).bind().color(this.texture).unbind();
  }

  Node.prototype.use = function() {
    return this.fbo.bind();
  };

  Node.prototype.bind = function(unit) {
    return this.texture.bind(unit);
  };

  Node.prototype.end = function() {
    return this.fbo.unbind();
  };

  Node.prototype.resize = function(width, height) {
    this.width = width;
    this.height = height;
    return this.texture.bind(0).setSize(this.width, this.height);
  };

  return Node;

})();

vertexShaderBlit = 'attribute vec4 position;\nvarying vec2 texcoord;\nvoid main(){\n    texcoord = position.xy*0.5+0.5;\n    gl_Position = position;\n}';

fragmentShaderBlit = '#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp int;\n    precision highp float;\n#else\n    precision mediump int;\n    precision mediump float;\n#endif\nuniform sampler2D source;\nvarying vec2 texcoord;';

Heights = (function() {
  function Heights(heatmap, gl, width, height) {
    var i, _i, _ref;
    this.heatmap = heatmap;
    this.gl = gl;
    this.width = width;
    this.height = height;
    this.shader = new Shader(this.gl, {
      vertex: 'attribute vec4 position, intensity;\nvarying vec2 off, dim;\nvarying float vIntensity;\nuniform vec2 viewport;\n\nvoid main(){\n    dim = abs(position.zw);\n    off = position.zw;\n    vec2 pos = position.xy + position.zw;\n    vIntensity = intensity.x;\n    gl_Position = vec4((pos/viewport)*2.0-1.0, 0.0, 1.0);\n}',
      fragment: '#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp int;\n    precision highp float;\n#else\n    precision mediump int;\n    precision mediump float;\n#endif\nvarying vec2 off, dim;\nvarying float vIntensity;\nvoid main(){\n    float falloff = (1.0 - smoothstep(0.0, 1.0, length(off/dim)));\n    float intensity = falloff*vIntensity;\n    gl_FragColor = vec4(intensity);\n}'
    });
    this.clampShader = new Shader(this.gl, {
      vertex: vertexShaderBlit,
      fragment: fragmentShaderBlit + 'uniform float low, high;\nvoid main(){\n    gl_FragColor = vec4(clamp(texture2D(source, texcoord).rgb, low, high), 1.0);\n}'
    });
    this.multiplyShader = new Shader(this.gl, {
      vertex: vertexShaderBlit,
      fragment: fragmentShaderBlit + 'uniform float value;\nvoid main(){\n    gl_FragColor = vec4(texture2D(source, texcoord).rgb*value, 1.0);\n}'
    });
    this.blurShader = new Shader(this.gl, {
      vertex: vertexShaderBlit,
      fragment: fragmentShaderBlit + 'uniform vec2 viewport;\nvoid main(){\n    vec4 result = vec4(0.0);\n    for(int x=-1; x<=1; x++){\n        for(int y=-1; y<=1; y++){\n            vec2 off = vec2(x,y)/viewport;\n            //float factor = 1.0 - smoothstep(0.0, 1.5, length(off));\n            float factor = 1.0;\n            result += vec4(texture2D(source, texcoord+off).rgb*factor, factor);\n        }\n    }\n    gl_FragColor = vec4(result.rgb/result.w, 1.0);\n}'
    });
    this.nodeBack = new Node(this.gl, this.width, this.height);
    this.nodeFront = new Node(this.gl, this.width, this.height);
    this.vertexBuffer = this.gl.createBuffer();
    this.vertexSize = 8;
    this.maxPointCount = 1024 * 10;
    this.vertexBufferData = new Float32Array(this.maxPointCount * this.vertexSize * 6);
    this.vertexBufferViews = [];
    for (i = _i = 0, _ref = this.maxPointCount; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      this.vertexBufferViews.push(new Float32Array(this.vertexBufferData.buffer, 0, i * this.vertexSize * 6));
    }
    this.bufferIndex = 0;
    this.pointCount = 0;
  }

  Heights.prototype.resize = function(width, height) {
    this.width = width;
    this.height = height;
    this.nodeBack.resize(this.width, this.height);
    return this.nodeFront.resize(this.width, this.height);
  };

  Heights.prototype.update = function() {
    var intensityLoc, positionLoc;
    if (this.pointCount > 0) {
      this.gl.enable(this.gl.BLEND);
      this.nodeFront.use();
      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);
      this.gl.bufferData(this.gl.ARRAY_BUFFER, this.vertexBufferViews[this.pointCount], this.gl.STREAM_DRAW);
      positionLoc = this.shader.attribLocation('position');
      intensityLoc = this.shader.attribLocation('intensity');
      this.gl.enableVertexAttribArray(1);
      this.gl.vertexAttribPointer(positionLoc, 4, this.gl.FLOAT, false, 8 * 4, 0 * 4);
      this.gl.vertexAttribPointer(intensityLoc, 4, this.gl.FLOAT, false, 8 * 4, 4 * 4);
      this.shader.use().vec2('viewport', this.width, this.height);
      this.gl.drawArrays(this.gl.TRIANGLES, 0, this.pointCount * 6);
      this.gl.disableVertexAttribArray(1);
      this.pointCount = 0;
      this.bufferIndex = 0;
      this.nodeFront.end();
      return this.gl.disable(this.gl.BLEND);
    }
  };

  Heights.prototype.clear = function() {
    this.nodeFront.use();
    this.gl.clearColor(0, 0, 0, 1);
    this.gl.clear(this.gl.COLOR_BUFFER_BIT);
    return this.nodeFront.end();
  };

  Heights.prototype.clamp = function(min, max) {
    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);
    this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);
    this.nodeFront.bind(0);
    this.nodeBack.use();
    this.clampShader.use().int('source', 0).float('low', min).float('high', max);
    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);
    this.nodeBack.end();
    return this.swap();
  };

  Heights.prototype.multiply = function(value) {
    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);
    this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);
    this.nodeFront.bind(0);
    this.nodeBack.use();
    this.multiplyShader.use().int('source', 0).float('value', value);
    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);
    this.nodeBack.end();
    return this.swap();
  };

  Heights.prototype.blur = function() {
    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.heatmap.quad);
    this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);
    this.nodeFront.bind(0);
    this.nodeBack.use();
    this.blurShader.use().int('source', 0).vec2('viewport', this.width, this.height);
    this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);
    this.nodeBack.end();
    return this.swap();
  };

  Heights.prototype.swap = function() {
    var tmp;
    tmp = this.nodeFront;
    this.nodeFront = this.nodeBack;
    return this.nodeBack = tmp;
  };

  Heights.prototype.addVertex = function(x, y, xs, ys, intensity) {
    this.vertexBufferData[this.bufferIndex++] = x;
    this.vertexBufferData[this.bufferIndex++] = y;
    this.vertexBufferData[this.bufferIndex++] = xs;
    this.vertexBufferData[this.bufferIndex++] = ys;
    this.vertexBufferData[this.bufferIndex++] = intensity;
    this.vertexBufferData[this.bufferIndex++] = intensity;
    this.vertexBufferData[this.bufferIndex++] = intensity;
    return this.vertexBufferData[this.bufferIndex++] = intensity;
  };

  Heights.prototype.addPoint = function(x, y, size, intensity) {
    var s;
    if (size == null) {
      size = 50;
    }
    if (intensity == null) {
      intensity = 0.2;
    }
    if (this.pointCount >= this.maxPointCount - 1) {
      this.update();
    }
    y = this.height - y;
    s = size / 2;
    this.addVertex(x, y, -s, -s, intensity);
    this.addVertex(x, y, +s, -s, intensity);
    this.addVertex(x, y, -s, +s, intensity);
    this.addVertex(x, y, -s, +s, intensity);
    this.addVertex(x, y, +s, -s, intensity);
    this.addVertex(x, y, +s, +s, intensity);
    return this.pointCount += 1;
  };

  return Heights;

})();

WebGLHeatmap = (function() {
  function WebGLHeatmap(_arg) {
    var alphaEnd, alphaRange, alphaStart, error, getColorFun, gradientTexture, image, intensityToAlpha, output, quad, textureGradient, _ref, _ref1;
    _ref = _arg != null ? _arg : {}, this.canvas = _ref.canvas, this.width = _ref.width, this.height = _ref.height, intensityToAlpha = _ref.intensityToAlpha, gradientTexture = _ref.gradientTexture, alphaRange = _ref.alphaRange;
    if (!this.canvas) {
      this.canvas = document.createElement('canvas');
    }
    try {
      this.gl = this.canvas.getContext('experimental-webgl', {
        depth: false,
        antialias: false
      });
      if (this.gl === null) {
        this.gl = this.canvas.getContext('webgl', {
          depth: false,
          antialias: false
        });
        if (this.gl === null) {
          throw 'WebGL not supported';
        }
      }
    } catch (_error) {
      error = _error;
      throw 'WebGL not supported';
    }
    if (window.WebGLDebugUtils != null) {
      console.log('debugging mode');
      this.gl = WebGLDebugUtils.makeDebugContext(this.gl, function(err, funcName, args) {
        throw WebGLDebugUtils.glEnumToString(err) + " was caused by call to: " + funcName;
      });
    }
    this.gl.enableVertexAttribArray(0);
    this.gl.blendFunc(this.gl.ONE, this.gl.ONE);
    if (gradientTexture) {
      textureGradient = this.gradientTexture = new Texture(this.gl, {
        channels: 'rgba'
      }).bind(0).setSize(2, 2).nearest().clampToEdge();
      if (typeof gradientTexture === 'string') {
        image = new Image();
        image.onload = function() {
          return textureGradient.bind().upload(image);
        };
        image.src = gradientTexture;
      } else {
        if (gradientTexture.width > 0 && gradientTexture.height > 0) {
          textureGradient.upload(gradientTexture);
        } else {
          gradientTexture.onload = function() {
            return textureGradient.upload(gradientTexture);
          };
        }
      }
      getColorFun = 'uniform sampler2D gradientTexture;\nvec3 getColor(float intensity){\n    return texture2D(gradientTexture, vec2(intensity, 0.0)).rgb;\n}';
    } else {
      textureGradient = null;
      getColorFun = 'vec3 getColor(float intensity){\n    vec3 blue = vec3(0.0, 0.0, 1.0);\n    vec3 cyan = vec3(0.0, 1.0, 1.0);\n    vec3 green = vec3(0.0, 1.0, 0.0);\n    vec3 yellow = vec3(1.0, 1.0, 0.0);\n    vec3 red = vec3(1.0, 0.0, 0.0);\n\n    vec3 color = (\n        fade(-0.25, 0.25, intensity)*blue +\n        fade(0.0, 0.5, intensity)*cyan +\n        fade(0.25, 0.75, intensity)*green +\n        fade(0.5, 1.0, intensity)*yellow +\n        smoothstep(0.75, 1.0, intensity)*red\n    );\n    return color;\n}';
    }
    if (intensityToAlpha == null) {
      intensityToAlpha = true;
    }
    if (intensityToAlpha) {
      _ref1 = alphaRange != null ? alphaRange : [0, 1], alphaStart = _ref1[0], alphaEnd = _ref1[1];
      output = "vec4 alphaFun(vec3 color, float intensity){\n    float alpha = smoothstep(" + (alphaStart.toFixed(8)) + ", " + (alphaEnd.toFixed(8)) + ", intensity);\n    return vec4(color*alpha, alpha);\n}";
    } else {
      output = 'vec4 alphaFun(vec3 color, float intensity){\n    return vec4(color, 1.0);\n}';
    }
    this.shader = new Shader(this.gl, {
      vertex: vertexShaderBlit,
      fragment: fragmentShaderBlit + ("float linstep(float low, float high, float value){\n    return clamp((value-low)/(high-low), 0.0, 1.0);\n}\n\nfloat fade(float low, float high, float value){\n    float mid = (low+high)*0.5;\n    float range = (high-low)*0.5;\n    float x = 1.0 - clamp(abs(mid-value)/range, 0.0, 1.0);\n    return smoothstep(0.0, 1.0, x);\n}\n\n" + getColorFun + "\n" + output + "\n\nvoid main(){\n    float intensity = smoothstep(0.0, 1.0, texture2D(source, texcoord).r);\n    vec3 color = getColor(intensity);\n    gl_FragColor = alphaFun(color, intensity);\n}")
    });
    if (this.width == null) {
      this.width = this.canvas.offsetWidth || 2;
    }
    if (this.height == null) {
      this.height = this.canvas.offsetHeight || 2;
    }
    this.canvas.width = this.width;
    this.canvas.height = this.height;
    this.gl.viewport(0, 0, this.width, this.height);
    this.quad = this.gl.createBuffer();
    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quad);
    quad = new Float32Array([-1, -1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, 1, 0, 1, 1, -1, 0, 1, 1, 1, 0, 1]);
    this.gl.bufferData(this.gl.ARRAY_BUFFER, quad, this.gl.STATIC_DRAW);
    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null);
    this.heights = new Heights(this, this.gl, this.width, this.height);
  }

  WebGLHeatmap.prototype.adjustSize = function() {
    var canvasHeight, canvasWidth;
    canvasWidth = this.canvas.offsetWidth || 2;
    canvasHeight = this.canvas.offsetHeight || 2;
    if (this.width !== canvasWidth || this.height !== canvasHeight) {
      this.gl.viewport(0, 0, canvasWidth, canvasHeight);
      this.canvas.width = canvasWidth;
      this.canvas.height = canvasHeight;
      this.width = canvasWidth;
      this.height = canvasHeight;
      return this.heights.resize(this.width, this.height);
    }
  };

  WebGLHeatmap.prototype.display = function() {
    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.quad);
    this.gl.vertexAttribPointer(0, 4, this.gl.FLOAT, false, 0, 0);
    this.heights.nodeFront.bind(0);
    if (this.gradientTexture) {
      this.gradientTexture.bind(1);
    }
    this.shader.use().int('source', 0).int('gradientTexture', 1);
    return this.gl.drawArrays(this.gl.TRIANGLES, 0, 6);
  };

  WebGLHeatmap.prototype.update = function() {
    return this.heights.update();
  };

  WebGLHeatmap.prototype.clear = function() {
    return this.heights.clear();
  };

  WebGLHeatmap.prototype.clamp = function(min, max) {
    if (min == null) {
      min = 0;
    }
    if (max == null) {
      max = 1;
    }
    return this.heights.clamp(min, max);
  };

  WebGLHeatmap.prototype.multiply = function(value) {
    if (value == null) {
      value = 0.95;
    }
    return this.heights.multiply(value);
  };

  WebGLHeatmap.prototype.blur = function() {
    return this.heights.blur();
  };

  WebGLHeatmap.prototype.addPoint = function(x, y, size, intensity) {
    return this.heights.addPoint(x, y, size, intensity);
  };

  WebGLHeatmap.prototype.addPoints = function(items) {
    var item, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = items.length; _i < _len; _i++) {
      item = items[_i];
      _results.push(this.addPoint(item.x, item.y, item.size, item.intensity));
    }
    return _results;
  };

  return WebGLHeatmap;

})();

window.createWebGLHeatmap = function(params) {
  return new WebGLHeatmap(params);
};
(function() {
 var Utils = {};
Utils.formQueryString = function (queryArguments) {
    var args = [],
        append = function(key) {
          args.push(key + "=" + encodeURIComponent(queryArguments[key]));
        };
    Object.keys(queryArguments).sort().forEach(append);
    return args.join("&");
  };
Utils.checkRequirements = function (method_name, required, callOptions, callback) {
    required = required || [];
    for(var r=0, last=required.length, arg; r<last; r++) {
      arg = required[r];
      if(arg.name === "api_key") continue;
      if(!callOptions.hasOwnProperty(arg.name)) {
        return callback(new Error("missing required argument '"+arg.name+"' in call to "+method_name));
      }
    }
  };
Utils.generateAPIFunction = function (method) {
    return function(callOptions, callback) {
      if(callOptions && !callback) { callback = callOptions; callOptions = {}; }
      var queryArguments = Utils.generateQueryArguments(method.name, this.flickrOptions, callOptions);
      Utils.queryFlickr(queryArguments, this.flickrOptions, method.security, callback);
    };
  };
Utils.generateAPIDevFunction = function (method) {
    return function(callOptions, callback) {
      if(callOptions && !callback) { callback = callOptions; callOptions = {}; }
      Utils.checkRequirements(method.name, method.required, callOptions, callback);
      var queryArguments = Utils.generateQueryArguments(method.name, this.flickrOptions, callOptions);
      Utils.queryFlickr(queryArguments, this.flickrOptions, method.security, callback, method.errors);
    };
  };
Utils.generateQueryArguments = function (method_name, flickrOptions, callOptions) {
    // set up authorized method access
    var queryArguments = {
      method: method_name,
      format: "json",
    };
    if(flickrOptions.api_key) {
      queryArguments.api_key = flickrOptions.api_key;
    }
    // set up bindings for method-specific args
    Object.keys(callOptions).forEach(function(key) {
      queryArguments[key] = callOptions[key];
    });
    return queryArguments;
  };
Utils.queryFlickr = function (queryArguments, flickrOptions, security, processResult) {
    if(flickrOptions.endpoint) {
      return this.queryProxyEndpoint(queryArguments, flickrOptions, processResult);
    }
    return this.queryFlickrAPI(queryArguments, flickrOptions, security, processResult);
  };
Utils.upload = function (uploadOptions, flickrOptions, processResult) {
    return processResult(new Error("Uploading directly from the browser is not supported"));
  };
Utils.queryFlickrAPI = function (queryArguments, flickrOptions, security, processResult) {
    var url = "https://api.flickr.com/services/rest/",
        queryString = this.formQueryString(queryArguments),
        flickrURL = url + "?" + queryString;
    // Do we need special permissions? (read private, 1, write, 2, or delete, 3)?
    // if so, those are currently not supported. Send an error-notification.
    if(security.requiredperms > 0) {
      return processResult(new Error("signed calls (write/delete) currently not supported"));
    }
    this.handleURLRequest("GET", flickrURL, processResult);
  };
Utils.queryProxyEndpoint = function (queryArguments, flickrOptions, processResult) {
    var queryString = this.formQueryString(queryArguments),
        url = flickrOptions.endpoint + "?" + queryString;
    this.handleURLRequest("POST", url, processResult, queryArguments);
  };
Utils.handleURLRequest = function (verb, url, processResult, postdata) {
    var xhr = new XMLHttpRequest();
    xhr.open(verb, url, true);
    if(postdata) {
      xhr.setRequestHeader("Content-Type", "application/json");
    }
    xhr.onreadystatechange = function() {
      if(xhr.readyState === 4) {
        if(xhr.status == 200) {
          var error = false,
              body = xhr.responseText;
          // we get a response, but there's no response body. That's a problem.
          if(!body) {
            error = "HTTP Error " + response.statusCode + " (" + statusCodes[response.statusCode] + ")";
            return processResult(error);
          }
          // we get a response, and there were no errors
          if(!error) {
            try {
              body = body.trim().replace(/^jsonFlickrApi\(/,'').replace(/\}\)$/,'}');
              body = JSON.parse(body);
              if(body.stat !== "ok") {
                // There was a request error, and the JSON .stat property
                // will tell us what that error was.
                return processResult(body.message);
              }
            } catch (e) {
              // general JSON error
              return processResult("could not parse body as JSON");
            }
          }
          // Some kind of other error occurred. Simply call the process
          // handler blindly with both the error and error body.
          processResult(error, body);
        }
        else { processResult("HTTP status not 200 (received "+xhr.status+")"); }
      }
    };
    xhr.send(postdata ? JSON.stringify(postdata) : null);
  };
 Utils.errors = {
    "96": {
        "code": 96,
        "message": "Invalid signature",
        "_content": "The passed signature was invalid."
    },
    "97": {
        "code": 97,
        "message": "Missing signature",
        "_content": "The call required signing but no signature was sent."
    },
    "98": {
        "code": 98,
        "message": "Login failed / Invalid auth token",
        "_content": "The login details or auth token passed were invalid."
    },
    "99": {
        "code": 99,
        "message": "User not logged in / Insufficient permissions",
        "_content": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
    },
    "100": {
        "code": 100,
        "message": "Invalid API Key",
        "_content": "The API key passed was not valid or has expired."
    },
    "105": {
        "code": 105,
        "message": "Service currently unavailable",
        "_content": "The requested service is temporarily unavailable."
    },
    "106": {
        "code": 106,
        "message": "Write operation failed",
        "_content": "The requested operation failed due to a temporary issue."
    },
    "108": {
        "code": "108",
        "message": "Invalid frob",
        "_content": "The specified frob does not exist or has already been used."
    },
    "111": {
        "code": 111,
        "message": "Format \"xxx\" not found",
        "_content": "The requested response format was not found."
    },
    "112": {
        "code": 112,
        "message": "Method \"xxx\" not found",
        "_content": "The requested method was not found."
    },
    "114": {
        "code": 114,
        "message": "Invalid SOAP envelope",
        "_content": "The SOAP envelope send in the request could not be parsed."
    },
    "115": {
        "code": 115,
        "message": "Invalid XML-RPC Method Call",
        "_content": "The XML-RPC request document could not be parsed."
    },
    "116": {
        "code": 116,
        "message": "Bad URL found",
        "_content": "One or more arguments contained a URL that has been used for abuse on Flickr."
    }
};
 var Flickr = function (flickrOptions) {
  this.bindOptions(flickrOptions);
};
 Flickr.prototype = {};
 Flickr.methods = {
 "flickr.activity.userComments": {
  "optional": [
   {
    "name": "per_page",
    "_content": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.activity.userComments",
  "url": "https://www.flickr.com/services/api/flickr.activity.userComments.html"
 },
 "flickr.activity.userPhotos": {
  "optional": [
   {
    "name": "timeframe",
    "_content": "The timeframe in which to return updates for. This can be specified in days (<code>'2d'</code>) or hours (<code>'4h'</code>). The default behavoir is to return changes since the beginning of the previous user session."
   },
   {
    "name": "per_page",
    "_content": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.activity.userPhotos",
  "url": "https://www.flickr.com/services/api/flickr.activity.userPhotos.html"
 },
 "flickr.auth.checkToken": {
  "required": [
   {
    "name": "auth_token",
    "_content": "The authentication token to check."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.auth.checkToken",
  "url": "https://www.flickr.com/services/api/flickr.auth.checkToken.html"
 },
 "flickr.auth.getFrob": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.auth.getFrob",
  "url": "https://www.flickr.com/services/api/flickr.auth.getFrob.html"
 },
 "flickr.auth.getFullToken": {
  "required": [
   {
    "name": "mini_token",
    "_content": "The mini-token typed in by a user. It should be 9 digits long. It may optionally contain dashes."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Mini-token not found",
    "_content": "The passed mini-token was not valid."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.auth.getFullToken",
  "url": "https://www.flickr.com/services/api/flickr.auth.getFullToken.html"
 },
 "flickr.auth.getToken": {
  "required": [
   {
    "name": "frob",
    "_content": "The frob to check."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.auth.getToken",
  "url": "https://www.flickr.com/services/api/flickr.auth.getToken.html"
 },
 "flickr.auth.oauth.checkToken": {
  "required": [
   {
    "name": "oauth_token",
    "_content": "The OAuth authentication token to check."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 1,
   "requiredperms": 0
  },
  "name": "flickr.auth.oauth.checkToken",
  "url": "https://www.flickr.com/services/api/flickr.auth.oauth.checkToken.html"
 },
 "flickr.auth.oauth.getAccessToken": {
  "security": {
   "needslogin": 0,
   "needssigning": 1,
   "requiredperms": 0
  },
  "name": "flickr.auth.oauth.getAccessToken",
  "url": "https://www.flickr.com/services/api/flickr.auth.oauth.getAccessToken.html"
 },
 "flickr.blogs.getList": {
  "optional": [
   {
    "name": "service",
    "_content": "Optionally only return blogs for a given service id.  You can get a list of from <a href=\"/services/api/flickr.blogs.getServices.html\">flickr.blogs.getServices()</a>."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.blogs.getList",
  "url": "https://www.flickr.com/services/api/flickr.blogs.getList.html"
 },
 "flickr.blogs.getServices": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.blogs.getServices",
  "url": "https://www.flickr.com/services/api/flickr.blogs.getServices.html"
 },
 "flickr.blogs.postPhoto": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to blog"
   },
   {
    "name": "title",
    "_content": "The blog post title"
   },
   {
    "name": "description",
    "_content": "The blog post body"
   }
  ],
  "optional": [
   {
    "name": "blog_id",
    "_content": "The id of the blog to post to."
   },
   {
    "name": "blog_password",
    "_content": "The password for the blog (used when the blog does not have a stored password)."
   },
   {
    "name": "service",
    "_content": "A Flickr supported blogging service.  Instead of passing a blog id you can pass a service id and we'll post to the first blog of that service we find."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Blog not found",
    "_content": "The blog id was not the id of a blog belonging to the calling user"
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id was not the id of a public photo"
   },
   {
    "code": "3",
    "message": "Password needed",
    "_content": "A password is not stored for the blog and one was not passed with the request"
   },
   {
    "code": "4",
    "message": "Blog post failed",
    "_content": "The blog posting failed (a blogging API failure of some sort)"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.blogs.postPhoto",
  "url": "https://www.flickr.com/services/api/flickr.blogs.postPhoto.html"
 },
 "flickr.cameras.getBrandModels": {
  "required": [
   {
    "name": "brand",
    "_content": "The ID of the requested brand (as returned from flickr.cameras.getBrands)."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Brand not found",
    "_content": "Unable to find the given brand ID."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.cameras.getBrandModels",
  "url": "https://www.flickr.com/services/api/flickr.cameras.getBrandModels.html"
 },
 "flickr.cameras.getBrands": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.cameras.getBrands",
  "url": "https://www.flickr.com/services/api/flickr.cameras.getBrands.html"
 },
 "flickr.collections.getInfo": {
  "required": [
   {
    "name": "collection_id",
    "_content": "The ID of the collection to fetch information for."
   }
  ],
  "optional": [
   {
    "name": "secure_image_embeds",
    "_content": "This argument will secure the external image embeds in all the markup and return a secure<Field> back in addition to the <Field>"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Collection not found",
    "_content": "The requested collection could not be found or is not visible to the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.collections.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.collections.getInfo.html"
 },
 "flickr.collections.getTree": {
  "optional": [
   {
    "name": "collection_id",
    "_content": "The ID of the collection to fetch a tree for, or zero to fetch the root collection. Defaults to zero."
   },
   {
    "name": "user_id",
    "_content": "The ID of the account to fetch the collection tree for. Deafults to the calling user."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The specified user could not be found."
   },
   {
    "code": "2",
    "message": "Collection not found",
    "_content": "The specified collection does not exist."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.collections.getTree",
  "url": "https://www.flickr.com/services/api/flickr.collections.getTree.html"
 },
 "flickr.commons.getInstitutions": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.commons.getInstitutions",
  "url": "https://www.flickr.com/services/api/flickr.commons.getInstitutions.html"
 },
 "flickr.contacts.getList": {
  "optional": [
   {
    "name": "filter",
    "_content": "An optional filter of the results. The following values are valid:<br />\r\n&nbsp;\r\n<dl>\r\n\t<dt><b><code>friends</code></b></dt>\r\n\t<dl>Only contacts who are friends (and not family)</dl>\r\n\r\n\t<dt><b><code>family</code></b></dt>\r\n\t<dl>Only contacts who are family (and not friends)</dl>\r\n\r\n\t<dt><b><code>both</code></b></dt>\r\n\t<dl>Only contacts who are both friends and family</dl>\r\n\r\n\t<dt><b><code>neither</code></b></dt>\r\n\t<dl>Only contacts who are neither friends nor family</dl>\r\n</dl>"
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   },
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 1000. The maximum allowed value is 1000."
   },
   {
    "name": "sort",
    "_content": "The order in which to sort the returned contacts. Defaults to name. The possible values are: name and time."
   },
   {
    "name": "fields",
    "_content": "The fields can have the following args:\r\nrealname, friend, family,path_alias,location,public_photos_count,can_tag"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Invalid sort parameter.",
    "_content": "The possible values are: name and time."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.contacts.getList",
  "url": "https://www.flickr.com/services/api/flickr.contacts.getList.html"
 },
 "flickr.contacts.getListRecentlyUploaded": {
  "optional": [
   {
    "name": "date_lastupload",
    "_content": "Limits the resultset to contacts that have uploaded photos since this date. The date should be in the form of a Unix timestamp.\r\n\r\nThe default offset is (1) hour and the maximum (24) hours. "
   },
   {
    "name": "filter",
    "_content": "Limit the result set to all contacts or only those who are friends or family. Valid options are:\r\n\r\n<ul>\r\n<li><strong>ff</strong> friends and family</li>\r\n<li><strong>all</strong> all your contacts</li>\r\n</ul>\r\nDefault value is \"all\"."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.contacts.getListRecentlyUploaded",
  "url": "https://www.flickr.com/services/api/flickr.contacts.getListRecentlyUploaded.html"
 },
 "flickr.contacts.getPublicList": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch the contact list for."
   }
  ],
  "optional": [
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   },
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 1000. The maximum allowed value is 1000."
   },
   {
    "name": "show_more",
    "_content": "Include additional information for each contact, such as realname, is_friend, is_family, path_alias and location."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The specified user NSID was not a valid user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.contacts.getPublicList",
  "url": "https://www.flickr.com/services/api/flickr.contacts.getPublicList.html"
 },
 "flickr.contacts.getTaggingSuggestions": {
  "optional": [
   {
    "name": "include_self",
    "_content": "Return calling user in the list of suggestions. Default: true."
   },
   {
    "name": "include_address_book",
    "_content": "Include suggestions from the user's address book. Default: false"
   },
   {
    "name": "per_page",
    "_content": "Number of contacts to return per page. If this argument is omitted, all contacts will be returned."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.contacts.getTaggingSuggestions",
  "url": "https://www.flickr.com/services/api/flickr.contacts.getTaggingSuggestions.html"
 },
 "flickr.favorites.add": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to add to the user's favorites."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id."
   },
   {
    "code": "2",
    "message": "Photo is owned by you",
    "_content": "The photo belongs to the user and so cannot be added to their favorites."
   },
   {
    "code": "3",
    "message": "Photo is already in favorites",
    "_content": "The photo is already in the user's list of favorites."
   },
   {
    "code": "4",
    "message": "User cannot see photo",
    "_content": "The user does not have permission to add the photo to their favorites."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.favorites.add",
  "url": "https://www.flickr.com/services/api/flickr.favorites.add.html"
 },
 "flickr.favorites.getContext": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to fetch the context for."
   },
   {
    "name": "user_id",
    "_content": "The user who counts the photo as a favorite."
   }
  ],
  "optional": [
   {
    "name": "num_prev",
    "_content": ""
   },
   {
    "name": "num_next",
    "_content": ""
   },
   {
    "name": "extras",
    "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description, license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_z, url_l, url_o"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id, or was the id of a photo that the calling user does not have permission to view."
   },
   {
    "code": "2",
    "message": "User not found",
    "_content": "The specified user was not found."
   },
   {
    "code": "3",
    "message": "Photo not a favorite",
    "_content": "The specified photo is not a favorite of the specified user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.favorites.getContext",
  "url": "https://www.flickr.com/services/api/flickr.favorites.getContext.html"
 },
 "flickr.favorites.getList": {
  "optional": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch the favorites list for. If this argument is omitted, the favorites list for the calling user is returned."
   },
   {
    "name": "jump_to",
    "_content": ""
   },
   {
    "name": "min_fave_date",
    "_content": "Minimum date that a photo was favorited on. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_fave_date",
    "_content": "Maximum date that a photo was favorited on. The date should be in the form of a unix timestamp."
   },
   {
    "name": "get_user_info",
    "_content": "Include info for the user who's favorites are being returned."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The specified user NSID was not a valid flickr user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.favorites.getList",
  "url": "https://www.flickr.com/services/api/flickr.favorites.getList.html"
 },
 "flickr.favorites.getPublicList": {
  "required": [
   {
    "name": "user_id",
    "_content": "The user to fetch the favorites list for."
   }
  ],
  "optional": [
   {
    "name": "jump_to",
    "_content": ""
   },
   {
    "name": "min_fave_date",
    "_content": "Minimum date that a photo was favorited on. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_fave_date",
    "_content": "Maximum date that a photo was favorited on. The date should be in the form of a unix timestamp."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The specified user NSID was not a valid flickr user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.favorites.getPublicList",
  "url": "https://www.flickr.com/services/api/flickr.favorites.getPublicList.html"
 },
 "flickr.favorites.remove": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to remove from the user's favorites."
   }
  ],
  "optional": [
   {
    "name": "user_id",
    "_content": "NSID of the user whose favorites the photo should be removed from. This only works if the calling user owns the photo."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not in favorites",
    "_content": "The photo id passed was not in the user's favorites."
   },
   {
    "code": "2",
    "message": "Cannot remove photo from that user's favorites",
    "_content": "user_id was passed as an argument, but photo_id is not owned by the authenticated user."
   },
   {
    "code": "3",
    "message": "User not found",
    "_content": "Invalid user_id argument."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.favorites.remove",
  "url": "https://www.flickr.com/services/api/flickr.favorites.remove.html"
 },
 "flickr.galleries.addPhoto": {
  "required": [
   {
    "name": "gallery_id",
    "_content": "The ID of the gallery to add a photo to.  Note: this is the compound ID returned in methods like <a href=\"/services/api/flickr.galleries.getList.html\">flickr.galleries.getList</a>, and <a href=\"/services/api/flickr.galleries.getListForPhoto.html\">flickr.galleries.getListForPhoto</a>."
   },
   {
    "name": "photo_id",
    "_content": "The photo ID to add to the gallery"
   }
  ],
  "optional": [
   {
    "name": "comment",
    "_content": "A short comment or story to accompany the photo."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more required parameters was not included with your API call."
   },
   {
    "code": "2",
    "message": "Invalid gallery ID",
    "_content": "That gallery could not be found."
   },
   {
    "code": "3",
    "message": "Invalid photo ID",
    "_content": "The requested photo could not be found."
   },
   {
    "code": "4",
    "message": "Invalid comment",
    "_content": "The comment body could not be validated."
   },
   {
    "code": "5",
    "message": "Failed to add photo",
    "_content": "Unable to add the photo to the gallery."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.galleries.addPhoto",
  "url": "https://www.flickr.com/services/api/flickr.galleries.addPhoto.html"
 },
 "flickr.galleries.create": {
  "required": [
   {
    "name": "title",
    "_content": "The name of the gallery"
   },
   {
    "name": "description",
    "_content": "A short description for the gallery"
   }
  ],
  "optional": [
   {
    "name": "primary_photo_id",
    "_content": "The first photo to add to your gallery"
   },
   {
    "name": "full_result",
    "_content": "Get the result in the same format as galleries.getList"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more of the required parameters was missing from your API call."
   },
   {
    "code": "2",
    "message": "Invalid title or description",
    "_content": "The title or the description could not be validated."
   },
   {
    "code": "3",
    "message": "Failed to add gallery",
    "_content": "There was a problem creating the gallery."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.galleries.create",
  "url": "https://www.flickr.com/services/api/flickr.galleries.create.html"
 },
 "flickr.galleries.editMeta": {
  "required": [
   {
    "name": "gallery_id",
    "_content": "The gallery ID to update."
   },
   {
    "name": "title",
    "_content": "The new title for the gallery."
   }
  ],
  "optional": [
   {
    "name": "description",
    "_content": "The new description for the gallery."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more required parameters was missing from your request."
   },
   {
    "code": "2",
    "message": "Invalid title or description",
    "_content": "The title or description arguments could not be validated."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.galleries.editMeta",
  "url": "https://www.flickr.com/services/api/flickr.galleries.editMeta.html"
 },
 "flickr.galleries.editPhoto": {
  "required": [
   {
    "name": "gallery_id",
    "_content": "The ID of the gallery to add a photo to. Note: this is the compound ID returned in methods like flickr.galleries.getList, and flickr.galleries.getListForPhoto."
   },
   {
    "name": "photo_id",
    "_content": "The photo ID to add to the gallery."
   },
   {
    "name": "comment",
    "_content": "The updated comment the photo."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Invalid gallery ID",
    "_content": "That gallery could not be found."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.galleries.editPhoto",
  "url": "https://www.flickr.com/services/api/flickr.galleries.editPhoto.html"
 },
 "flickr.galleries.editPhotos": {
  "required": [
   {
    "name": "gallery_id",
    "_content": "The id of the gallery to modify. The gallery must belong to the calling user."
   },
   {
    "name": "primary_photo_id",
    "_content": "The id of the photo to use as the 'primary' photo for the gallery. This id must also be passed along in photo_ids list argument."
   },
   {
    "name": "photo_ids",
    "_content": "A comma-delimited list of photo ids to include in the gallery. They will appear in the set in the order sent. This list must contain the primary photo id. This list of photos replaces the existing list."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.galleries.editPhotos",
  "url": "https://www.flickr.com/services/api/flickr.galleries.editPhotos.html"
 },
 "flickr.galleries.getInfo": {
  "required": [
   {
    "name": "gallery_id",
    "_content": "The gallery ID you are requesting information for."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.galleries.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.galleries.getInfo.html"
 },
 "flickr.galleries.getList": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to get a galleries list for. If none is specified, the calling user is assumed."
   }
  ],
  "optional": [
   {
    "name": "per_page",
    "_content": "Number of galleries to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   },
   {
    "name": "primary_photo_extras",
    "_content": "A comma-delimited list of extra information to fetch for the primary photo. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_o"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.galleries.getList",
  "url": "https://www.flickr.com/services/api/flickr.galleries.getList.html"
 },
 "flickr.galleries.getListForPhoto": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The ID of the photo to fetch a list of galleries for."
   }
  ],
  "optional": [
   {
    "name": "per_page",
    "_content": "Number of galleries to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.galleries.getListForPhoto",
  "url": "https://www.flickr.com/services/api/flickr.galleries.getListForPhoto.html"
 },
 "flickr.galleries.getPhotos": {
  "required": [
   {
    "name": "gallery_id",
    "_content": "The ID of the gallery of photos to return"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.galleries.getPhotos",
  "url": "https://www.flickr.com/services/api/flickr.galleries.getPhotos.html"
 },
 "flickr.groups.browse": {
  "optional": [
   {
    "name": "cat_id",
    "_content": "The category id to fetch a list of groups and sub-categories for. If not specified, it defaults to zero, the root of the category tree."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Category not found",
    "_content": "The value passed for cat_id was not a valid category id."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.groups.browse",
  "url": "https://www.flickr.com/services/api/flickr.groups.browse.html"
 },
 "flickr.groups.discuss.replies.add": {
  "required": [
   {
    "name": "topic_id",
    "_content": "The ID of the topic to post a comment to."
   },
   {
    "name": "message",
    "_content": "The message to post to the topic."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Topic not found",
    "_content": "The topic_id is invalid."
   },
   {
    "code": "2",
    "message": "Cannot post to group",
    "_content": "Either this account is not a member of the group, or discussion in this group is disabled.\r\n"
   },
   {
    "code": "3",
    "message": "Missing required arguments",
    "_content": "The topic_id and message are required."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.groups.discuss.replies.add",
  "url": "https://www.flickr.com/services/api/flickr.groups.discuss.replies.add.html"
 },
 "flickr.groups.discuss.replies.delete": {
  "required": [
   {
    "name": "topic_id",
    "_content": "The ID of the topic the post is in."
   },
   {
    "name": "reply_id",
    "_content": "The ID of the reply to delete."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Topic not found",
    "_content": "The topic_id is invalid."
   },
   {
    "code": "2",
    "message": "Reply not found",
    "_content": "The reply_id is invalid."
   },
   {
    "code": "3",
    "message": "Cannot delete reply",
    "_content": "Replies can only be edited by their owner."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 3
  },
  "name": "flickr.groups.discuss.replies.delete",
  "url": "https://www.flickr.com/services/api/flickr.groups.discuss.replies.delete.html"
 },
 "flickr.groups.discuss.replies.edit": {
  "required": [
   {
    "name": "topic_id",
    "_content": "The ID of the topic the post is in."
   },
   {
    "name": "reply_id",
    "_content": "The ID of the reply post to edit."
   },
   {
    "name": "message",
    "_content": "The message to edit the post with."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Topic not found",
    "_content": "The topic_id is invalid"
   },
   {
    "code": "2",
    "message": "Reply not found",
    "_content": "The reply_id is invalid."
   },
   {
    "code": "3",
    "message": "Missing required arguments",
    "_content": "The topic_id and reply_id are required."
   },
   {
    "code": "4",
    "message": "Cannot edit reply",
    "_content": "Replies can only be edited by their owner."
   },
   {
    "code": "5",
    "message": "Cannot post to group",
    "_content": "Either this account is not a member of the group, or discussion in this group is disabled."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.groups.discuss.replies.edit",
  "url": "https://www.flickr.com/services/api/flickr.groups.discuss.replies.edit.html"
 },
 "flickr.groups.discuss.replies.getInfo": {
  "required": [
   {
    "name": "topic_id",
    "_content": "The ID of the topic the post is in."
   },
   {
    "name": "reply_id",
    "_content": "The ID of the reply to fetch."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Topic not found",
    "_content": "The topic_id is invalid"
   },
   {
    "code": "2",
    "message": "Reply not found",
    "_content": "The reply_id is invalid"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.groups.discuss.replies.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.groups.discuss.replies.getInfo.html"
 },
 "flickr.groups.discuss.replies.getList": {
  "required": [
   {
    "name": "topic_id",
    "_content": "The ID of the topic to fetch replies for."
   },
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   }
  ],
  "optional": [
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Topic not found",
    "_content": "The topic_id is invalid."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.groups.discuss.replies.getList",
  "url": "https://www.flickr.com/services/api/flickr.groups.discuss.replies.getList.html"
 },
 "flickr.groups.discuss.topics.add": {
  "required": [
   {
    "name": "group_id",
    "_content": "The NSID of the group to add a topic to.\r\n"
   },
   {
    "name": "subject",
    "_content": "The topic subject."
   },
   {
    "name": "message",
    "_content": "The topic message."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Group not found",
    "_content": "The group by that ID does not exist\r\n"
   },
   {
    "code": "2",
    "message": "Cannot post to group",
    "_content": "Either this account is not a member of the group, or discussion in this group is disabled."
   },
   {
    "code": "3",
    "message": "Message is too long",
    "_content": "The post message is too long."
   },
   {
    "code": "4",
    "message": "Missing required arguments",
    "_content": "Subject and message are required."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.groups.discuss.topics.add",
  "url": "https://www.flickr.com/services/api/flickr.groups.discuss.topics.add.html"
 },
 "flickr.groups.discuss.topics.getInfo": {
  "required": [
   {
    "name": "topic_id",
    "_content": "The ID for the topic to edit."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Topic not found",
    "_content": "The topic_id is invalid"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.groups.discuss.topics.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.groups.discuss.topics.getInfo.html"
 },
 "flickr.groups.discuss.topics.getList": {
  "required": [
   {
    "name": "group_id",
    "_content": "The NSID of the group to fetch information for."
   }
  ],
  "optional": [
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Group not found",
    "_content": "The group_id is invalid"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.groups.discuss.topics.getList",
  "url": "https://www.flickr.com/services/api/flickr.groups.discuss.topics.getList.html"
 },
 "flickr.groups.getInfo": {
  "required": [
   {
    "name": "group_id",
    "_content": "The NSID of the group to fetch information for."
   }
  ],
  "optional": [
   {
    "name": "lang",
    "_content": "The language of the group name and description to fetch.  If the language is not found, the primary language of the group will be returned.\r\n\r\nValid values are the same as <a href=\"/services/feeds/\">in feeds</a>."
   },
   {
    "name": "secure_image_embeds",
    "_content": "This argument will secure the external image embeds in all the markup and return a secure<Field> back in addition to the <Field>"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Group not found",
    "_content": "The group NSID passed did not refer to a group that the calling user can see - either an invalid group is or a group that can't be seen by the calling user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.groups.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.groups.getInfo.html"
 },
 "flickr.groups.join": {
  "required": [
   {
    "name": "group_id",
    "_content": "The NSID of the Group in question"
   }
  ],
  "optional": [
   {
    "name": "accept_rules",
    "_content": "If the group has rules, they must be displayed to the user prior to joining. Passing a true value for this argument specifies that the application has displayed the group rules to the user, and that the user has agreed to them. (See flickr.groups.getInfo)."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required arguments missing",
    "_content": "The group_id doesn't exist"
   },
   {
    "code": "2",
    "message": "Group does not exist",
    "_content": "The Group does not exist"
   },
   {
    "code": "3",
    "message": "Group not availabie to the account",
    "_content": "The authed account does not have permission to view/join the group."
   },
   {
    "code": "4",
    "message": "Account is already in that group",
    "_content": "The authed account has previously joined this group"
   },
   {
    "code": "5",
    "message": "Membership in group is by invitation only.",
    "_content": "Use flickr.groups.joinRequest to contact the administrations for an invitation."
   },
   {
    "code": "6",
    "message": "User must accept the group rules before joining",
    "_content": "The user must read and accept the rules before joining. Please see the accept_rules argument for this method."
   },
   {
    "code": "10",
    "message": "Account in maximum number of groups",
    "_content": "The account is a member of the maximum number of groups."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.groups.join",
  "url": "https://www.flickr.com/services/api/flickr.groups.join.html"
 },
 "flickr.groups.joinRequest": {
  "required": [
   {
    "name": "group_id",
    "_content": "The NSID of the group to request joining."
   },
   {
    "name": "message",
    "_content": "Message to the administrators."
   },
   {
    "name": "accept_rules",
    "_content": "If the group has rules, they must be displayed to the user prior to joining. Passing a true value for this argument specifies that the application has displayed the group rules to the user, and that the user has agreed to them. (See flickr.groups.getInfo)."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required arguments missing",
    "_content": "The group_id or message argument are missing."
   },
   {
    "code": "2",
    "message": "Group does not exist",
    "_content": "The Group does not exist"
   },
   {
    "code": "3",
    "message": "Group not available to the account",
    "_content": "The authed account does not have permission to view/join the group."
   },
   {
    "code": "4",
    "message": "Account is already in that group",
    "_content": "The authed account has previously joined this group"
   },
   {
    "code": "5",
    "message": "Group is public and open",
    "_content": "The group does not require an invitation to join, please use flickr.groups.join."
   },
   {
    "code": "6",
    "message": "User must accept the group rules before joining",
    "_content": "The user must read and accept the rules before joining. Please see the accept_rules argument for this method."
   },
   {
    "code": "7",
    "message": "User has already requested to join that group",
    "_content": "A request has already been sent and is pending approval."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.groups.joinRequest",
  "url": "https://www.flickr.com/services/api/flickr.groups.joinRequest.html"
 },
 "flickr.groups.leave": {
  "required": [
   {
    "name": "group_id",
    "_content": "The NSID of the Group to leave"
   }
  ],
  "optional": [
   {
    "name": "delete_photos",
    "_content": "Delete all photos by this user from the group"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required arguments missing",
    "_content": "The group_id doesn't exist"
   },
   {
    "code": "2",
    "message": "Group does not exist",
    "_content": "The group by that ID does not exist"
   },
   {
    "code": "3",
    "message": "Account is not in that group",
    "_content": "The user is not a member of the group that was specified"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 3
  },
  "name": "flickr.groups.leave",
  "url": "https://www.flickr.com/services/api/flickr.groups.leave.html"
 },
 "flickr.groups.members.getList": {
  "required": [
   {
    "name": "group_id",
    "_content": "Return a list of members for this group.  The group must be viewable by the Flickr member on whose behalf the API call is made."
   }
  ],
  "optional": [
   {
    "name": "membertypes",
    "_content": "Comma separated list of member types\r\n<ul>\r\n<li>2: member</li>\r\n<li>3: moderator</li>\r\n<li>4: admin</li>\r\n</ul>\r\nBy default returns all types.  (Returning super rare member type \"1: narwhal\" isn't supported by this API method)"
   },
   {
    "name": "per_page",
    "_content": "Number of members to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Group not found",
    "_content": ""
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.groups.members.getList",
  "url": "https://www.flickr.com/services/api/flickr.groups.members.getList.html"
 },
 "flickr.groups.pools.add": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to add to the group pool. The photo must belong to the calling user."
   },
   {
    "name": "group_id",
    "_content": "The NSID of the group who's pool the photo is to be added to."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a photo owned by the caling user."
   },
   {
    "code": "2",
    "message": "Group not found",
    "_content": "The group id passed was not a valid id for a group the user is a member of."
   },
   {
    "code": "3",
    "message": "Photo already in pool",
    "_content": "The specified photo is already in the pool for the specified group."
   },
   {
    "code": "4",
    "message": "Photo in maximum number of pools",
    "_content": "The photo has already been added to the maximum allowed number of pools."
   },
   {
    "code": "5",
    "message": "Photo limit reached",
    "_content": "The user has already added the maximum amount of allowed photos to the pool."
   },
   {
    "code": "6",
    "message": "Your Photo has been added to the Pending Queue for this Pool",
    "_content": "The pool is moderated, and the photo has been added to the Pending Queue. If it is approved by a group administrator, it will be added to the pool."
   },
   {
    "code": "7",
    "message": "Your Photo has already been added to the Pending Queue for this Pool",
    "_content": "The pool is moderated, and the photo has already been added to the Pending Queue."
   },
   {
    "code": "8",
    "message": "Content not allowed",
    "_content": "The content has been disallowed from the pool by the group admin(s)."
   },
   {
    "code": "10",
    "message": "Maximum number of photos in Group Pool",
    "_content": "A group pool has reached the upper limit for the number of photos allowed."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.groups.pools.add",
  "url": "https://www.flickr.com/services/api/flickr.groups.pools.add.html"
 },
 "flickr.groups.pools.getContext": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to fetch the context for."
   },
   {
    "name": "group_id",
    "_content": "The nsid of the group who's pool to fetch the photo's context for."
   }
  ],
  "optional": [
   {
    "name": "num_prev",
    "_content": ""
   },
   {
    "name": "num_next",
    "_content": ""
   },
   {
    "name": "extras",
    "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description, license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_z, url_l, url_o"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id, or was the id of a photo that the calling user does not have permission to view."
   },
   {
    "code": "2",
    "message": "Photo not in pool",
    "_content": "The specified photo is not in the specified group's pool."
   },
   {
    "code": "3",
    "message": "Group not found",
    "_content": "The specified group nsid was not a valid group or the caller does not have permission to view the group's pool."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.groups.pools.getContext",
  "url": "https://www.flickr.com/services/api/flickr.groups.pools.getContext.html"
 },
 "flickr.groups.pools.getGroups": {
  "optional": [
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   },
   {
    "name": "per_page",
    "_content": "Number of groups to return per page. If this argument is omitted, it defaults to 400. The maximum allowed value is 400."
   },
   {
    "name": "extras",
    "_content": "can take the value icon_urls_deep and return the various buddy icon sizes for the group. It can only be done by blessed APIs"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.groups.pools.getGroups",
  "url": "https://www.flickr.com/services/api/flickr.groups.pools.getGroups.html"
 },
 "flickr.groups.pools.getPhotos": {
  "required": [
   {
    "name": "group_id",
    "_content": "The id of the group who's pool you which to get the photo list for."
   }
  ],
  "optional": [
   {
    "name": "tags",
    "_content": "A tag to filter the pool with. At the moment only one tag at a time is supported."
   },
   {
    "name": "user_id",
    "_content": "The nsid of a user. Specifiying this parameter will retrieve for you only those photos that the user has contributed to the group pool."
   },
   {
    "name": "safe_search",
    "_content": "Safe search setting:\r\n<ul>\r\n<li>1 for safe.</li>\r\n<li>2 for moderate.</li>\r\n<li>3 for restricted.</li>\r\n</ul>"
   },
   {
    "name": "jump_to",
    "_content": ""
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Group not found",
    "_content": "The group id passed was not a valid group id."
   },
   {
    "code": "2",
    "message": "You don't have permission to view this pool",
    "_content": "The logged in user (if any) does not have permission to view the pool for this group."
   },
   {
    "code": "3",
    "message": "Unknown user",
    "_content": "The user specified by user_id does not exist."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.groups.pools.getPhotos",
  "url": "https://www.flickr.com/services/api/flickr.groups.pools.getPhotos.html"
 },
 "flickr.groups.pools.remove": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to remove from the group pool. The photo must either be owned by the calling user of the calling user must be an administrator of the group."
   },
   {
    "name": "group_id",
    "_content": "The NSID of the group who's pool the photo is to removed from."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Group not found",
    "_content": "The group_id passed did not refer to a valid group."
   },
   {
    "code": "2",
    "message": "Photo not in pool",
    "_content": "The photo_id passed was not a valid id of a photo in the group pool."
   },
   {
    "code": "3",
    "message": "Insufficient permission to remove photo",
    "_content": "The calling user doesn't own the photo and is not an administrator of the group, so may not remove the photo from the pool."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.groups.pools.remove",
  "url": "https://www.flickr.com/services/api/flickr.groups.pools.remove.html"
 },
 "flickr.groups.search": {
  "required": [
   {
    "name": "text",
    "_content": "The text to search for."
   }
  ],
  "optional": [
   {
    "name": "per_page",
    "_content": "Number of groups to return per page. If this argument is ommited, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is ommited, it defaults to 1. "
   },
   {
    "name": "user_id",
    "_content": "NSID of the user, if you want to restrict your search by the groups this user is a member of. NOTE : This is experimental, and only search within the currently signed in user's groups is supported. "
   },
   {
    "name": "safe_search",
    "_content": "safe_search =1 means only safe groups\r\nsafe_search =2 means all groups\r\nsafe_search =3 means only 18+ groups\r\nDefault is 1. \r\n"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "No text passed",
    "_content": "The required text argument was ommited."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.groups.search",
  "url": "https://www.flickr.com/services/api/flickr.groups.search.html"
 },
 "flickr.interestingness.getList": {
  "optional": [
   {
    "name": "date",
    "_content": "A specific date, formatted as YYYY-MM-DD, to return interesting photos for."
   },
   {
    "name": "use_panda",
    "_content": "Always ask the pandas for interesting photos. This is a temporary argument to allow developers to update their code."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Not a valid date string.",
    "_content": "The date string passed did not validate. All dates must be formatted : YYYY-MM-DD"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.interestingness.getList",
  "url": "https://www.flickr.com/services/api/flickr.interestingness.getList.html"
 },
 "flickr.machinetags.getNamespaces": {
  "optional": [
   {
    "name": "predicate",
    "_content": "Limit the list of namespaces returned to those that have the following predicate."
   },
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Not a valid predicate.",
    "_content": "Missing or invalid predicate argument."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.machinetags.getNamespaces",
  "url": "https://www.flickr.com/services/api/flickr.machinetags.getNamespaces.html"
 },
 "flickr.machinetags.getPairs": {
  "optional": [
   {
    "name": "namespace",
    "_content": "Limit the list of pairs returned to those that have the following namespace."
   },
   {
    "name": "predicate",
    "_content": "Limit the list of pairs returned to those that have the following predicate."
   },
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Not a valid namespace",
    "_content": "Missing or invalid namespace argument."
   },
   {
    "code": "2",
    "message": "Not a valid predicate",
    "_content": "Missing or invalid predicate argument."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.machinetags.getPairs",
  "url": "https://www.flickr.com/services/api/flickr.machinetags.getPairs.html"
 },
 "flickr.machinetags.getPredicates": {
  "optional": [
   {
    "name": "namespace",
    "_content": "Limit the list of predicates returned to those that have the following namespace."
   },
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Not a valid namespace",
    "_content": "Missing or invalid namespace argument."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.machinetags.getPredicates",
  "url": "https://www.flickr.com/services/api/flickr.machinetags.getPredicates.html"
 },
 "flickr.machinetags.getRecentValues": {
  "optional": [
   {
    "name": "namespace",
    "_content": "A namespace that all values should be restricted to."
   },
   {
    "name": "predicate",
    "_content": "A predicate that all values should be restricted to."
   },
   {
    "name": "added_since",
    "_content": "Only return machine tags values that have been added since this timestamp, in epoch seconds.  "
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.machinetags.getRecentValues",
  "url": "https://www.flickr.com/services/api/flickr.machinetags.getRecentValues.html"
 },
 "flickr.machinetags.getValues": {
  "required": [
   {
    "name": "namespace",
    "_content": "The namespace that all values should be restricted to."
   },
   {
    "name": "predicate",
    "_content": "The predicate that all values should be restricted to."
   }
  ],
  "optional": [
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   },
   {
    "name": "usage",
    "_content": "Minimum usage count."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Not a valid namespace",
    "_content": "Missing or invalid namespace argument."
   },
   {
    "code": "2",
    "message": "Not a valid predicate",
    "_content": "Missing or invalid predicate argument."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.machinetags.getValues",
  "url": "https://www.flickr.com/services/api/flickr.machinetags.getValues.html"
 },
 "flickr.panda.getList": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.panda.getList",
  "url": "https://www.flickr.com/services/api/flickr.panda.getList.html"
 },
 "flickr.panda.getPhotos": {
  "required": [
   {
    "name": "panda_name",
    "_content": "The name of the panda to ask for photos from. There are currently three pandas named:<br /><br />\r\n\r\n<ul>\r\n<li><strong><a href=\"http://flickr.com/photos/ucumari/126073203/\">ling ling</a></strong></li>\r\n<li><strong><a href=\"http://flickr.com/photos/lynnehicks/136407353\">hsing hsing</a></strong></li>\r\n<li><strong><a href=\"http://flickr.com/photos/perfectpandas/1597067182/\">wang wang</a></strong></li>\r\n</ul>\r\n\r\n<br />You can fetch a list of all the current pandas using the <a href=\"/services/api/flickr.panda.getList.html\">flickr.panda.getList</a> API method."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing.",
    "_content": "One or more required parameters was not included with your request."
   },
   {
    "code": "2",
    "message": "Unknown panda",
    "_content": "You requested a panda we haven't met yet."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.panda.getPhotos",
  "url": "https://www.flickr.com/services/api/flickr.panda.getPhotos.html"
 },
 "flickr.people.findByEmail": {
  "required": [
   {
    "name": "find_email",
    "_content": "The email address of the user to find  (may be primary or secondary)."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "No user with the supplied email address was found."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.people.findByEmail",
  "url": "https://www.flickr.com/services/api/flickr.people.findByEmail.html"
 },
 "flickr.people.findByUsername": {
  "required": [
   {
    "name": "username",
    "_content": "The username of the user to lookup."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "No user with the supplied username was found."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.people.findByUsername",
  "url": "https://www.flickr.com/services/api/flickr.people.findByUsername.html"
 },
 "flickr.people.getGroups": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch groups for."
   }
  ],
  "optional": [
   {
    "name": "extras",
    "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: <code>privacy</code>, <code>throttle</code>, <code>restrictions</code>"
   },
   {
    "name": "page",
    "_content": "Page number for the groups"
   },
   {
    "name": "per_page",
    "_content": "Number of groups per page"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The user id passed did not match a Flickr user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.people.getGroups",
  "url": "https://www.flickr.com/services/api/flickr.people.getGroups.html"
 },
 "flickr.people.getInfo": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch information about."
   },
   {
    "name": "url",
    "_content": "As an alternative to user_id, load a member based on URL, either photos or people URL."
   }
  ],
  "optional": [
   {
    "name": "fb_connected",
    "_content": "If set to 1, it checks if the user is connected to Facebook and returns that information back."
   },
   {
    "name": "storage",
    "_content": "If set to 1, it returns the storage information about the user, like the storage used and storage available."
   },
   {
    "name": "datecreate",
    "_content": "If set to 1, it returns the timestamp of the user's account creation, in MySQL DATETIME format."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The user id passed did not match a Flickr user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.people.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.people.getInfo.html"
 },
 "flickr.people.getLimits": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.people.getLimits",
  "url": "https://www.flickr.com/services/api/flickr.people.getLimits.html"
 },
 "flickr.people.getPhotos": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user who's photos to return. A value of \"me\" will return the calling user's photos."
   }
  ],
  "optional": [
   {
    "name": "safe_search",
    "_content": "Safe search setting:\r\n\r\n<ul>\r\n<li>1 for safe.</li>\r\n<li>2 for moderate.</li>\r\n<li>3 for restricted.</li>\r\n</ul>\r\n\r\n(Please note: Un-authed calls can only see Safe content.)"
   },
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   },
   {
    "name": "content_type",
    "_content": "Content Type setting:\r\n<ul>\r\n<li>1 for photos only.</li>\r\n<li>2 for screenshots only.</li>\r\n<li>3 for 'other' only.</li>\r\n<li>4 for photos and screenshots.</li>\r\n<li>5 for screenshots and 'other'.</li>\r\n<li>6 for photos and 'other'.</li>\r\n<li>7 for photos, screenshots, and 'other' (all).</li>\r\n</ul>"
   },
   {
    "name": "privacy_filter",
    "_content": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view photos you own. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends & family</li>\r\n<li>5 completely private photos</li>\r\n</ul>"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required arguments missing",
    "_content": ""
   },
   {
    "code": "2",
    "message": "Unknown user",
    "_content": "A user_id was passed which did not match a valid flickr user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.people.getPhotos",
  "url": "https://www.flickr.com/services/api/flickr.people.getPhotos.html"
 },
 "flickr.people.getPhotosOf": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user you want to find photos of. A value of \"me\" will search against photos of the calling user, for authenticated calls."
   }
  ],
  "optional": [
   {
    "name": "owner_id",
    "_content": "An NSID of a Flickr member. This will restrict the list of photos to those taken by that member."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found.",
    "_content": "A user_id was passed which did not match a valid flickr user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.people.getPhotosOf",
  "url": "https://www.flickr.com/services/api/flickr.people.getPhotosOf.html"
 },
 "flickr.people.getPublicGroups": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch groups for."
   }
  ],
  "optional": [
   {
    "name": "invitation_only",
    "_content": "Include public groups that require <a href=\"http://www.flickr.com/help/groups/#10\">an invitation</a> or administrator approval to join."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The user id passed did not match a Flickr user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.people.getPublicGroups",
  "url": "https://www.flickr.com/services/api/flickr.people.getPublicGroups.html"
 },
 "flickr.people.getPublicPhotos": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user who's photos to return."
   }
  ],
  "optional": [
   {
    "name": "safe_search",
    "_content": "Safe search setting:\r\n\r\n<ul>\r\n<li>1 for safe.</li>\r\n<li>2 for moderate.</li>\r\n<li>3 for restricted.</li>\r\n</ul>\r\n\r\n(Please note: Un-authed calls can only see Safe content.)"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The user NSID passed was not a valid user NSID."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.people.getPublicPhotos",
  "url": "https://www.flickr.com/services/api/flickr.people.getPublicPhotos.html"
 },
 "flickr.people.getUploadStatus": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.people.getUploadStatus",
  "url": "https://www.flickr.com/services/api/flickr.people.getUploadStatus.html"
 },
 "flickr.photos.addTags": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to add tags to."
   },
   {
    "name": "tags",
    "_content": "The tags to add to the photo."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a photo that the calling user can add tags to. It could be an invalid id, or the user may not have permission to add tags to it."
   },
   {
    "code": "2",
    "message": "Maximum number of tags reached",
    "_content": "The maximum number of tags for the photo has been reached - no more tags can be added. If the current count is less than the maximum, but adding all of the tags for this request would go over the limit, the whole request is ignored. I.E. when you get this message, none of the requested tags have been added."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.addTags",
  "url": "https://www.flickr.com/services/api/flickr.photos.addTags.html"
 },
 "flickr.photos.comments.addComment": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to add a comment to."
   },
   {
    "name": "comment_text",
    "_content": "Text of the comment"
   }
  ],
  "optional": [
   {
    "name": "secure_image_embeds",
    "_content": "This argument will secure the external image embeds in all the markup and return a secure<Field> back in addition to the <Field>"
   },
   {
    "name": "expand_bbml",
    "_content": "Expand bbml in response"
   },
   {
    "name": "bbml_need_all_photo_sizes",
    "_content": "If the API needs all photo sizes added as attributes to the bbml. Use this with expand_bbml, but dont use it with use_text_for_links. Also when you give this one, you can specify primary_photo_longest_dimension or a default of 240 will be assumed"
   },
   {
    "name": "primary_photo_longest_dimension",
    "_content": "When used with bbml_need_all_photo_sizes, it specifies the maximum dimension of width and height to be used as the <img src /> url"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found.",
    "_content": "The photo id passed was not a valid photo id"
   },
   {
    "code": "8",
    "message": "Blank comment.",
    "_content": "Comment text can not be blank"
   },
   {
    "code": "9",
    "message": "User is posting comments too fast.",
    "_content": "The user has reached the limit for number of comments posted during a specific time period.  Wait a bit and try again."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.comments.addComment",
  "url": "https://www.flickr.com/services/api/flickr.photos.comments.addComment.html"
 },
 "flickr.photos.comments.deleteComment": {
  "required": [
   {
    "name": "comment_id",
    "_content": "The id of the comment to edit."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found.",
    "_content": "The requested comment is against a photo which no longer exists."
   },
   {
    "code": "2",
    "message": "Comment not found.",
    "_content": "The comment id passed was not a valid comment id"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.comments.deleteComment",
  "url": "https://www.flickr.com/services/api/flickr.photos.comments.deleteComment.html"
 },
 "flickr.photos.comments.editComment": {
  "required": [
   {
    "name": "comment_id",
    "_content": "The id of the comment to edit."
   },
   {
    "name": "comment_text",
    "_content": "Update the comment to this text."
   }
  ],
  "optional": [
   {
    "name": "use_text_for_links",
    "_content": "Use text for links"
   },
   {
    "name": "expand_bbml",
    "_content": "Expand bbml"
   },
   {
    "name": "full_result",
    "_content": "If the caller wants the full result to be returned (as flickr.photos.comments.getComment), then this parameter should be passed in as 1."
   },
   {
    "name": "secure_image_embeds",
    "_content": "This argument will secure the external image embeds in all the markup and return a secure<Field> back in addition to the <Field>"
   },
   {
    "name": "bbml_need_all_photo_sizes",
    "_content": "If the API needs all photo sizes added as attributes to the bbml. Use this with expand_bbml, but dont use it with use_text_for_links. Also when you give this one, you can specify primary_photo_longest_dimension or a default of 240 will be assumed"
   },
   {
    "name": "primary_photo_longest_dimension",
    "_content": "When used with bbml_need_all_photo_sizes, it specifies the maximum dimension of width and height to be used as the <img src /> url"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found.",
    "_content": "The requested comment is against a photo which no longer exists."
   },
   {
    "code": "2",
    "message": "Comment not found.",
    "_content": "The comment id passed was not a valid comment id"
   },
   {
    "code": "8",
    "message": "Blank comment.",
    "_content": "Comment text can not be blank"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.comments.editComment",
  "url": "https://www.flickr.com/services/api/flickr.photos.comments.editComment.html"
 },
 "flickr.photos.comments.getList": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to fetch comments for."
   }
  ],
  "optional": [
   {
    "name": "min_comment_date",
    "_content": "Minimum date that a a comment was added. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_comment_date",
    "_content": "Maximum date that a comment was added. The date should be in the form of a unix timestamp."
   },
   {
    "name": "page",
    "_content": ""
   },
   {
    "name": "per_page",
    "_content": ""
   },
   {
    "name": "include_faves",
    "_content": ""
   },
   {
    "name": "sort",
    "_content": "Get the comments sorted. If value is date-posted-desc,  the comments are returned in reverse chronological order. The default is chronological."
   },
   {
    "name": "secure_image_embeds",
    "_content": "This argument will secure the external image embeds in all the markup and return a secure<Field> back in addition to the <Field>"
   },
   {
    "name": "offset",
    "_content": ""
   },
   {
    "name": "limit",
    "_content": ""
   },
   {
    "name": "bbml_need_all_photo_sizes",
    "_content": "If the API needs all photo sizes added as attributes to the bbml. Use this with expand_bbml, but dont use it with use_text_for_links. Also when you give this one, you can specify primary_photo_longest_dimension or a default of 240 will be assumed"
   },
   {
    "name": "primary_photo_longest_dimension",
    "_content": "When used with bbml_need_all_photo_sizes, it specifies the maximum dimension of width and height to be used as the <img src /> url"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.comments.getList",
  "url": "https://www.flickr.com/services/api/flickr.photos.comments.getList.html"
 },
 "flickr.photos.comments.getRecentForContacts": {
  "optional": [
   {
    "name": "date_lastcomment",
    "_content": "Limits the resultset to photos that have been commented on since this date. The date should be in the form of a Unix timestamp.<br /><br />\r\nThe default, and maximum, offset is (1) hour.\r\n\r\n\r\n"
   },
   {
    "name": "contacts_filter",
    "_content": "A comma-separated list of contact NSIDs to limit the scope of the query to."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.comments.getRecentForContacts",
  "url": "https://www.flickr.com/services/api/flickr.photos.comments.getRecentForContacts.html"
 },
 "flickr.photos.delete": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to delete."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was not the id of a photo belonging to the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 3
  },
  "name": "flickr.photos.delete",
  "url": "https://www.flickr.com/services/api/flickr.photos.delete.html"
 },
 "flickr.photos.geo.batchCorrectLocation": {
  "required": [
   {
    "name": "lat",
    "_content": "The latitude of the photos to be update whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated."
   },
   {
    "name": "lon",
    "_content": "The longitude of the photos to be updated whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated."
   },
   {
    "name": "accuracy",
    "_content": "Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified."
   }
  ],
  "optional": [
   {
    "name": "place_id",
    "_content": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)"
   },
   {
    "name": "woe_id",
    "_content": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required arguments missing",
    "_content": "Some or all of the required arguments were not supplied."
   },
   {
    "code": "2",
    "message": "Not a valid latitude",
    "_content": "The latitude argument failed validation."
   },
   {
    "code": "3",
    "message": "Not a valid longitude",
    "_content": "The longitude argument failed validation."
   },
   {
    "code": "4",
    "message": "Not a valid accuracy",
    "_content": "The accuracy argument failed validation."
   },
   {
    "code": "5",
    "message": "Not a valid Places ID",
    "_content": "An invalid Places (or WOE) ID was passed with the API call."
   },
   {
    "code": "6",
    "message": "No photos geotagged at that location",
    "_content": "There were no geotagged photos found for the authed user at the supplied latitude, longitude and accuracy."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.geo.batchCorrectLocation",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.batchCorrectLocation.html"
 },
 "flickr.photos.geo.correctLocation": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The ID of the photo whose WOE location is being corrected."
   },
   {
    "name": "foursquare_id",
    "_content": "The venue ID for a Foursquare location. (If not passed in with correction, any existing foursquare venue will be removed)."
   }
  ],
  "optional": [
   {
    "name": "place_id",
    "_content": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)"
   },
   {
    "name": "woe_id",
    "_content": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User has not configured default viewing settings for location data.",
    "_content": "Before users may assign location data to a photo they must define who, by default, may view that information. Users can edit this preference at <a href=\"http://www.flickr.com/account/geo/privacy/\">http://www.flickr.com/account/geo/privacy/</a>"
   },
   {
    "code": "2",
    "message": "Missing place ID",
    "_content": "No place ID was passed to the method"
   },
   {
    "code": "3",
    "message": "Not a valid place ID",
    "_content": "The place ID passed to the method could not be identified"
   },
   {
    "code": "4",
    "message": "Server error correcting location.",
    "_content": "There was an error trying to correct the location."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.geo.correctLocation",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.correctLocation.html"
 },
 "flickr.photos.geo.getLocation": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo you want to retrieve location data for."
   }
  ],
  "optional": [
   {
    "name": "extras",
    "_content": "Extra flags."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found.",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   },
   {
    "code": "2",
    "message": "Photo has no location information.",
    "_content": "The photo requested has no location data or is not viewable by the calling user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.geo.getLocation",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.getLocation.html"
 },
 "flickr.photos.geo.getPerms": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to get permissions for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   },
   {
    "code": "2",
    "message": "Photo has no location information",
    "_content": "The photo requested has no location data or is not viewable by the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.geo.getPerms",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.getPerms.html"
 },
 "flickr.photos.geo.photosForLocation": {
  "required": [
   {
    "name": "lat",
    "_content": "The latitude whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated."
   },
   {
    "name": "lon",
    "_content": "The longitude whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated."
   }
  ],
  "optional": [
   {
    "name": "accuracy",
    "_content": "Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required arguments missing",
    "_content": "One or more required arguments was missing from the method call."
   },
   {
    "code": "2",
    "message": "Not a valid latitude",
    "_content": "The latitude argument failed validation."
   },
   {
    "code": "3",
    "message": "Not a valid longitude",
    "_content": "The longitude argument failed validation."
   },
   {
    "code": "4",
    "message": "Not a valid accuracy",
    "_content": "The accuracy argument failed validation."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.geo.photosForLocation",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.photosForLocation.html"
 },
 "flickr.photos.geo.removeLocation": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo you want to remove location data from."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   },
   {
    "code": "2",
    "message": "Photo has no location information",
    "_content": "The specified photo has not been geotagged - there is nothing to remove."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.geo.removeLocation",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.removeLocation.html"
 },
 "flickr.photos.geo.setContext": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to set context data for."
   },
   {
    "name": "context",
    "_content": "Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken \"indoors\" or \"outdoors\". <br /><br />\r\nThe current list of context IDs is :<br /><br/>\r\n<ul>\r\n<li><strong>0</strong>, not defined.</li>\r\n<li><strong>1</strong>, indoors.</li>\r\n<li><strong>2</strong>, outdoors.</li>\r\n</ul>"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   },
   {
    "code": "2",
    "message": "Not a valid context",
    "_content": "The context ID passed to the method is invalid."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.geo.setContext",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.setContext.html"
 },
 "flickr.photos.geo.setLocation": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to set location data for."
   },
   {
    "name": "lat",
    "_content": "The latitude whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated."
   },
   {
    "name": "lon",
    "_content": "The longitude whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated."
   }
  ],
  "optional": [
   {
    "name": "accuracy",
    "_content": "Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified."
   },
   {
    "name": "context",
    "_content": "Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken \"indoors\" or \"outdoors\". <br /><br />\r\nThe current list of context IDs is :<br /><br/>\r\n<ul>\r\n<li><strong>0</strong>, not defined.</li>\r\n<li><strong>1</strong>, indoors.</li>\r\n<li><strong>2</strong>, outdoors.</li>\r\n</ul><br />\r\nThe default context for geotagged photos is 0, or \"not defined\"\r\n"
   },
   {
    "name": "bookmark_id",
    "_content": "Associate a geo bookmark with this photo."
   },
   {
    "name": "is_public",
    "_content": ""
   },
   {
    "name": "is_contact",
    "_content": ""
   },
   {
    "name": "is_friend",
    "_content": ""
   },
   {
    "name": "is_family",
    "_content": ""
   },
   {
    "name": "foursquare_id",
    "_content": "The venue ID for a Foursquare location."
   },
   {
    "name": "woeid",
    "_content": "A Where On Earth (WOE) ID. (If passed in, will override the default venue based on the lat/lon.)"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   },
   {
    "code": "2",
    "message": "Required arguments missing.",
    "_content": "Some or all of the required arguments were not supplied."
   },
   {
    "code": "3",
    "message": "Not a valid latitude.",
    "_content": "The latitude argument failed validation."
   },
   {
    "code": "4",
    "message": "Not a valid longitude.",
    "_content": "The longitude argument failed validation."
   },
   {
    "code": "5",
    "message": "Not a valid accuracy.",
    "_content": "The accuracy argument failed validation."
   },
   {
    "code": "6",
    "message": "Server error.",
    "_content": "There was an unexpected problem setting location information to the photo."
   },
   {
    "code": "7",
    "message": "User has not configured default viewing settings for location data.",
    "_content": "Before users may assign location data to a photo they must define who, by default, may view that information. Users can edit this preference at <a href=\"http://www.flickr.com/account/geo/privacy/\">http://www.flickr.com/account/geo/privacy/</a>"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.geo.setLocation",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.setLocation.html"
 },
 "flickr.photos.geo.setPerms": {
  "required": [
   {
    "name": "is_public",
    "_content": "1 to set viewing permissions for the photo's location data to public, 0 to set it to private."
   },
   {
    "name": "is_contact",
    "_content": "1 to set viewing permissions for the photo's location data to contacts, 0 to set it to private."
   },
   {
    "name": "is_friend",
    "_content": "1 to set viewing permissions for the photo's location data to friends, 0 to set it to private."
   },
   {
    "name": "is_family",
    "_content": "1 to set viewing permissions for the photo's location data to family, 0 to set it to private."
   },
   {
    "name": "photo_id",
    "_content": "The id of the photo to get permissions for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   },
   {
    "code": "2",
    "message": "Photo has no location information",
    "_content": "The photo requested has no location data or is not viewable by the calling user."
   },
   {
    "code": "3",
    "message": "Required arguments missing.",
    "_content": "Some or all of the required arguments were not supplied."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.geo.setPerms",
  "url": "https://www.flickr.com/services/api/flickr.photos.geo.setPerms.html"
 },
 "flickr.photos.getAllContexts": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The photo to return information for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a valid photo."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.getAllContexts",
  "url": "https://www.flickr.com/services/api/flickr.photos.getAllContexts.html"
 },
 "flickr.photos.getContactsPhotos": {
  "optional": [
   {
    "name": "count",
    "_content": "Number of photos to return. Defaults to 10, maximum 50. This is only used if <code>single_photo</code> is not passed."
   },
   {
    "name": "just_friends",
    "_content": "set as 1 to only show photos from friends and family (excluding regular contacts)."
   },
   {
    "name": "single_photo",
    "_content": "Only fetch one photo (the latest) per contact, instead of all photos in chronological order."
   },
   {
    "name": "include_self",
    "_content": "Set to 1 to include photos from the calling user."
   },
   {
    "name": "extras",
    "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields include: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update. For more information see extras under <a href=\"/services/api/flickr.photos.search.html\">flickr.photos.search</a>."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.getContactsPhotos",
  "url": "https://www.flickr.com/services/api/flickr.photos.getContactsPhotos.html"
 },
 "flickr.photos.getContactsPublicPhotos": {
  "required": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch photos for."
   }
  ],
  "optional": [
   {
    "name": "count",
    "_content": "Number of photos to return. Defaults to 10, maximum 50. This is only used if <code>single_photo</code> is not passed."
   },
   {
    "name": "just_friends",
    "_content": "set as 1 to only show photos from friends and family (excluding regular contacts)."
   },
   {
    "name": "single_photo",
    "_content": "Only fetch one photo (the latest) per contact, instead of all photos in chronological order."
   },
   {
    "name": "include_self",
    "_content": "Set to 1 to include photos from the user specified by user_id."
   },
   {
    "name": "extras",
    "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The user NSID passed was not a valid user NSID."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.getContactsPublicPhotos",
  "url": "https://www.flickr.com/services/api/flickr.photos.getContactsPublicPhotos.html"
 },
 "flickr.photos.getContext": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to fetch the context for."
   }
  ],
  "optional": [
   {
    "name": "num_prev",
    "_content": ""
   },
   {
    "name": "num_next",
    "_content": ""
   },
   {
    "name": "extras",
    "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: <code>description, license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_z, url_l, url_o</code>"
   },
   {
    "name": "order_by",
    "_content": "Accepts <code>datetaken</code> or <code>dateposted</code> and returns results in the proper order."
   },
   {
    "name": "view_as",
    "_content": "Can take values public to indicate that the profile has to be viewed as public and returns context only in public setting"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id, or was the id of a photo that the calling user does not have permission to view."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.getContext",
  "url": "https://www.flickr.com/services/api/flickr.photos.getContext.html"
 },
 "flickr.photos.getCounts": {
  "optional": [
   {
    "name": "dates",
    "_content": "A comma delimited list of unix timestamps, denoting the periods to return counts for. They should be specified <b>smallest first</b>."
   },
   {
    "name": "taken_dates",
    "_content": "A comma delimited list of mysql datetimes, denoting the periods to return counts for. They should be specified <b>smallest first</b>."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "No dates specified",
    "_content": "Neither dates nor taken_dates were specified."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.getCounts",
  "url": "https://www.flickr.com/services/api/flickr.photos.getCounts.html"
 },
 "flickr.photos.getExif": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to fetch information for."
   }
  ],
  "optional": [
   {
    "name": "secret",
    "_content": "The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret."
   },
   {
    "name": "extras",
    "_content": ""
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   },
   {
    "code": "2",
    "message": "Permission denied",
    "_content": "The owner of the photo does not want to share EXIF data."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.getExif",
  "url": "https://www.flickr.com/services/api/flickr.photos.getExif.html"
 },
 "flickr.photos.getFavorites": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The ID of the photo to fetch the favoriters list for."
   }
  ],
  "optional": [
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   },
   {
    "name": "per_page",
    "_content": "Number of usres to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The specified photo does not exist, or the calling user does not have permission to view it."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.getFavorites",
  "url": "https://www.flickr.com/services/api/flickr.photos.getFavorites.html"
 },
 "flickr.photos.getInfo": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to get information for."
   }
  ],
  "optional": [
   {
    "name": "secret",
    "_content": "The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret."
   },
   {
    "name": "humandates",
    "_content": ""
   },
   {
    "name": "privacy_filter",
    "_content": ""
   },
   {
    "name": "get_contexts",
    "_content": ""
   },
   {
    "name": "get_geofences",
    "_content": "Return geofence information in the photo's location property"
   },
   {
    "name": "datecreate",
    "_content": "If set to 1, it returns the timestamp of the user's account creation, in MySQL DATETIME format.\r\n"
   },
   {
    "name": "extras",
    "_content": ""
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found.",
    "_content": "The photo id was either invalid or was for a photo not viewable by the calling user."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.photos.getInfo.html"
 },
 "flickr.photos.getNotInSet": {
  "optional": [
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
   },
   {
    "name": "privacy_filter",
    "_content": "Return photos only matching a certain privacy level. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends &amp; family</li>\r\n<li>5 completely private photos</li>\r\n</ul>\r\n"
   },
   {
    "name": "media",
    "_content": "Filter results by media type. Possible values are <code>all</code> (default), <code>photos</code> or <code>videos</code>"
   },
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.getNotInSet",
  "url": "https://www.flickr.com/services/api/flickr.photos.getNotInSet.html"
 },
 "flickr.photos.getPerms": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to get permissions for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id of a photo belonging to the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.getPerms",
  "url": "https://www.flickr.com/services/api/flickr.photos.getPerms.html"
 },
 "flickr.photos.getRecent": {
  "optional": [
   {
    "name": "jump_to",
    "_content": ""
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "bad value for jump_to, must be valid photo id.",
    "_content": ""
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.getRecent",
  "url": "https://www.flickr.com/services/api/flickr.photos.getRecent.html"
 },
 "flickr.photos.getSizes": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to fetch size information for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id."
   },
   {
    "code": "2",
    "message": "Permission denied",
    "_content": "The calling user does not have permission to view the photo."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.getSizes",
  "url": "https://www.flickr.com/services/api/flickr.photos.getSizes.html"
 },
 "flickr.photos.getUntagged": {
  "optional": [
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
   },
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime or unix timestamp."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
   },
   {
    "name": "privacy_filter",
    "_content": "Return photos only matching a certain privacy level. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends &amp; family</li>\r\n<li>5 completely private photos</li>\r\n</ul>\r\n"
   },
   {
    "name": "media",
    "_content": "Filter results by media type. Possible values are <code>all</code> (default), <code>photos</code> or <code>videos</code>"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.getUntagged",
  "url": "https://www.flickr.com/services/api/flickr.photos.getUntagged.html"
 },
 "flickr.photos.getWithGeoData": {
  "optional": [
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   },
   {
    "name": "privacy_filter",
    "_content": "Return photos only matching a certain privacy level. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends & family</li>\r\n<li>5 completely private photos</li>\r\n</ul>\r\n"
   },
   {
    "name": "sort",
    "_content": "The order in which to sort returned photos. Deafults to date-posted-desc. The possible values are: date-posted-asc, date-posted-desc, date-taken-asc, date-taken-desc, interestingness-desc, and interestingness-asc."
   },
   {
    "name": "media",
    "_content": "Filter results by media type. Possible values are <code>all</code> (default), <code>photos</code> or <code>videos</code>"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.getWithGeoData",
  "url": "https://www.flickr.com/services/api/flickr.photos.getWithGeoData.html"
 },
 "flickr.photos.getWithoutGeoData": {
  "optional": [
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
   },
   {
    "name": "privacy_filter",
    "_content": "Return photos only matching a certain privacy level. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends &amp; family</li>\r\n<li>5 completely private photos</li>\r\n</ul>\r\n"
   },
   {
    "name": "sort",
    "_content": "The order in which to sort returned photos. Deafults to date-posted-desc. The possible values are: date-posted-asc, date-posted-desc, date-taken-asc, date-taken-desc, interestingness-desc, and interestingness-asc."
   },
   {
    "name": "media",
    "_content": "Filter results by media type. Possible values are <code>all</code> (default), <code>photos</code> or <code>videos</code>"
   },
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.getWithoutGeoData",
  "url": "https://www.flickr.com/services/api/flickr.photos.getWithoutGeoData.html"
 },
 "flickr.photos.licenses.getInfo": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.licenses.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.photos.licenses.getInfo.html"
 },
 "flickr.photos.licenses.setLicense": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The photo to update the license for."
   },
   {
    "name": "license_id",
    "_content": "The license to apply, or 0 (zero) to remove the current license. Note : as of this writing the \"no known copyright restrictions\" license (7) is not a valid argument."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The specified id was not the id of a valif photo owner by the calling user."
   },
   {
    "code": "2",
    "message": "License not found",
    "_content": "The license id was not valid."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.licenses.setLicense",
  "url": "https://www.flickr.com/services/api/flickr.photos.licenses.setLicense.html"
 },
 "flickr.photos.notes.add": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to add a note to"
   },
   {
    "name": "note_x",
    "_content": "The left coordinate of the note"
   },
   {
    "name": "note_y",
    "_content": "The top coordinate of the note"
   },
   {
    "name": "note_w",
    "_content": "The width of the note"
   },
   {
    "name": "note_h",
    "_content": "The height of the note"
   },
   {
    "name": "note_text",
    "_content": "The description of the note"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id"
   },
   {
    "code": "2",
    "message": "User cannot add notes",
    "_content": "The calling user does not have permission to add a note to this photo"
   },
   {
    "code": "3",
    "message": "Missing required arguments",
    "_content": "One or more of the required arguments were not supplied."
   },
   {
    "code": "4",
    "message": "Maximum number of notes reached",
    "_content": "The maximum number of notes for the photo has been reached."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.notes.add",
  "url": "https://www.flickr.com/services/api/flickr.photos.notes.add.html"
 },
 "flickr.photos.notes.delete": {
  "required": [
   {
    "name": "note_id",
    "_content": "The id of the note to delete"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Note not found",
    "_content": "The note id passed was not a valid note id"
   },
   {
    "code": "2",
    "message": "User cannot delete note",
    "_content": "The calling user does not have permission to delete the specified note"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.notes.delete",
  "url": "https://www.flickr.com/services/api/flickr.photos.notes.delete.html"
 },
 "flickr.photos.notes.edit": {
  "required": [
   {
    "name": "note_id",
    "_content": "The id of the note to edit"
   },
   {
    "name": "note_x",
    "_content": "The left coordinate of the note"
   },
   {
    "name": "note_y",
    "_content": "The top coordinate of the note"
   },
   {
    "name": "note_w",
    "_content": "The width of the note"
   },
   {
    "name": "note_h",
    "_content": "The height of the note"
   },
   {
    "name": "note_text",
    "_content": "The description of the note"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Note not found",
    "_content": "The note id passed was not a valid note id"
   },
   {
    "code": "2",
    "message": "User cannot edit note",
    "_content": "The calling user does not have permission to edit the specified note"
   },
   {
    "code": "3",
    "message": "Missing required arguments",
    "_content": "One or more of the required arguments were not supplied."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.notes.edit",
  "url": "https://www.flickr.com/services/api/flickr.photos.notes.edit.html"
 },
 "flickr.photos.people.add": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to add a person to."
   },
   {
    "name": "user_id",
    "_content": "The NSID of the user to add to the photo."
   }
  ],
  "optional": [
   {
    "name": "person_x",
    "_content": "The left-most pixel co-ordinate of the box around the person."
   },
   {
    "name": "person_y",
    "_content": "The top-most pixel co-ordinate of the box around the person."
   },
   {
    "name": "person_w",
    "_content": "The width (in pixels) of the box around the person."
   },
   {
    "name": "person_h",
    "_content": "The height (in pixels) of the box around the person."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Person not found",
    "_content": "The NSID passed was not a valid user id."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id."
   },
   {
    "code": "3",
    "message": "User cannot add this person to photos",
    "_content": "The person being added to the photo does not allow the calling user to add them."
   },
   {
    "code": "4",
    "message": "User cannot add people to that photo",
    "_content": "The owner of the photo doesn't allow the calling user to add people to their photos."
   },
   {
    "code": "5",
    "message": "Person can't be tagged in that photo",
    "_content": "The person being added to the photo does not want to be identified in this photo."
   },
   {
    "code": "6",
    "message": "Some co-ordinate paramters were blank",
    "_content": "Not all of the co-ordinate parameters (person_x, person_y, person_w, person_h) were passed with valid values."
   },
   {
    "code": "7",
    "message": "Can't add that person to a non-public photo",
    "_content": "You can only add yourself to another member's non-public photos."
   },
   {
    "code": "8",
    "message": "Too many people in that photo",
    "_content": "The maximum number of people has already been added to the photo."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.people.add",
  "url": "https://www.flickr.com/services/api/flickr.photos.people.add.html"
 },
 "flickr.photos.people.delete": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to remove a person from."
   },
   {
    "name": "user_id",
    "_content": "The NSID of the person to remove from the photo."
   }
  ],
  "optional": [
   {
    "name": "email",
    "_content": "An email address for an invited user."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Person not found",
    "_content": "The NSID passed was not a valid user id."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id."
   },
   {
    "code": "3",
    "message": "User cannot remove that person",
    "_content": "The calling user did not have permission to remove this person from this photo."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.people.delete",
  "url": "https://www.flickr.com/services/api/flickr.photos.people.delete.html"
 },
 "flickr.photos.people.deleteCoords": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to edit a person in."
   },
   {
    "name": "user_id",
    "_content": "The NSID of the person whose bounding box you want to remove."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Person not found",
    "_content": "The NSID passed was not a valid user id."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id."
   },
   {
    "code": "3",
    "message": "User cannot edit that person in that photo",
    "_content": "The calling user is neither the person depicted in the photo nor the person who added the bounding box."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.people.deleteCoords",
  "url": "https://www.flickr.com/services/api/flickr.photos.people.deleteCoords.html"
 },
 "flickr.photos.people.editCoords": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to edit a person in."
   },
   {
    "name": "user_id",
    "_content": "The NSID of the person to edit in a photo."
   },
   {
    "name": "person_x",
    "_content": "The left-most pixel co-ordinate of the box around the person."
   },
   {
    "name": "person_y",
    "_content": "The top-most pixel co-ordinate of the box around the person."
   },
   {
    "name": "person_w",
    "_content": "The width (in pixels) of the box around the person."
   },
   {
    "name": "person_h",
    "_content": "The height (in pixels) of the box around the person."
   }
  ],
  "optional": [
   {
    "name": "email",
    "_content": "An email address for an 'invited' person in a photo"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Person not found",
    "_content": "The NSID passed was not a valid user id."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id."
   },
   {
    "code": "3",
    "message": "User cannot edit that person in that photo",
    "_content": "The calling user did not originally add this person to the photo, and is not the person in question."
   },
   {
    "code": "4",
    "message": "Some co-ordinate paramters were blank",
    "_content": "Not all of the co-ordinate parameters (person_x, person_y, person_w, person_h) were passed with valid values."
   },
   {
    "code": "5",
    "message": "No co-ordinates given",
    "_content": "None of the co-ordinate parameters were valid."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.people.editCoords",
  "url": "https://www.flickr.com/services/api/flickr.photos.people.editCoords.html"
 },
 "flickr.photos.people.getList": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to get a list of people for."
   }
  ],
  "optional": [
   {
    "name": "extras",
    "_content": "Accepts the following extras: icon_urls, icon_urls_deep, paid_products\r\n\r\nicon_urls, icon_urls_deep: returns the persons buddy icon urls\r\npaid_products: returns if the person is pro or has a add on."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.people.getList",
  "url": "https://www.flickr.com/services/api/flickr.photos.people.getList.html"
 },
 "flickr.photos.recentlyUpdated": {
  "required": [
   {
    "name": "min_date",
    "_content": "A Unix timestamp or any English textual datetime description indicating the date from which modifications should be compared."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required argument missing.",
    "_content": "Some or all of the required arguments were not supplied."
   },
   {
    "code": "2",
    "message": "Not a valid date",
    "_content": "The date argument did not pass validation."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.recentlyUpdated",
  "url": "https://www.flickr.com/services/api/flickr.photos.recentlyUpdated.html"
 },
 "flickr.photos.removeTag": {
  "required": [
   {
    "name": "tag_id",
    "_content": "The tag to remove from the photo. This parameter should contain a tag id, as returned by <a href=\"/services/api/flickr.photos.getInfo.html\">flickr.photos.getInfo</a>."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Tag not found",
    "_content": "The calling user doesn't have permission to delete the specified tag. This could mean it belongs to someone else, or doesn't exist."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.removeTag",
  "url": "https://www.flickr.com/services/api/flickr.photos.removeTag.html"
 },
 "flickr.photos.search": {
  "optional": [
   {
    "name": "user_id",
    "_content": "The NSID of the user who's photo to search. If this parameter isn't passed then everybody's public photos will be searched. A value of \"me\" will search against the calling user's photos for authenticated calls."
   },
   {
    "name": "tags",
    "_content": "A comma-delimited list of tags. Photos with one or more of the tags listed will be returned. You can exclude results that match a term by prepending it with a - character."
   },
   {
    "name": "tag_mode",
    "_content": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified."
   },
   {
    "name": "text",
    "_content": "A free text search. Photos who's title, description or tags contain the text will be returned. You can exclude results that match a term by prepending it with a - character."
   },
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
   },
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp."
   },
   {
    "name": "license",
    "_content": "The license id for photos (for possible values see the flickr.photos.licenses.getInfo method). Multiple licenses may be comma-separated."
   },
   {
    "name": "sort",
    "_content": "The order in which to sort returned photos. Deafults to date-posted-desc (unless you are doing a radial geo query, in which case the default sorting is by ascending distance from the point specified). The possible values are: date-posted-asc, date-posted-desc, date-taken-asc, date-taken-desc, interestingness-desc, interestingness-asc, and relevance."
   },
   {
    "name": "privacy_filter",
    "_content": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view photos you own. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends & family</li>\r\n<li>5 completely private photos</li>\r\n</ul>\r\n"
   },
   {
    "name": "bbox",
    "_content": "A comma-delimited list of 4 values defining the Bounding Box of the area that will be searched.\r\n<br /><br />\r\nThe 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude.\r\n<br /><br />\r\nLongitude has a range of -180 to 180 , latitude of -90 to 90. Defaults to -180, -90, 180, 90 if not specified.\r\n<br /><br />\r\nUnlike standard photo queries, geo (or bounding box) queries will only return 250 results per page.\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &#8212; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
   },
   {
    "name": "accuracy",
    "_content": "Recorded accuracy level of the location information.  Current range is 1-16 : \r\n\r\n<ul>\r\n<li>World level is 1</li>\r\n<li>Country is ~3</li>\r\n<li>Region is ~6</li>\r\n<li>City is ~11</li>\r\n<li>Street is ~16</li>\r\n</ul>\r\n\r\nDefaults to maximum value if not specified."
   },
   {
    "name": "safe_search",
    "_content": "Safe search setting:\r\n\r\n<ul>\r\n<li>1 for safe.</li>\r\n<li>2 for moderate.</li>\r\n<li>3 for restricted.</li>\r\n</ul>\r\n\r\n(Please note: Un-authed calls can only see Safe content.)"
   },
   {
    "name": "content_type",
    "_content": "Content Type setting:\r\n<ul>\r\n<li>1 for photos only.</li>\r\n<li>2 for screenshots only.</li>\r\n<li>3 for 'other' only.</li>\r\n<li>4 for photos and screenshots.</li>\r\n<li>5 for screenshots and 'other'.</li>\r\n<li>6 for photos and 'other'.</li>\r\n<li>7 for photos, screenshots, and 'other' (all).</li>\r\n</ul>"
   },
   {
    "name": "machine_tags",
    "_content": "Aside from passing in a fully formed machine tag, there is a special syntax for searching on specific properties :\r\n\r\n<ul>\r\n  <li>Find photos using the 'dc' namespace :    <code>\"machine_tags\" => \"dc:\"</code></li>\r\n\r\n  <li> Find photos with a title in the 'dc' namespace : <code>\"machine_tags\" => \"dc:title=\"</code></li>\r\n\r\n  <li>Find photos titled \"mr. camera\" in the 'dc' namespace : <code>\"machine_tags\" => \"dc:title=\\\"mr. camera\\\"</code></li>\r\n\r\n  <li>Find photos whose value is \"mr. camera\" : <code>\"machine_tags\" => \"*:*=\\\"mr. camera\\\"\"</code></li>\r\n\r\n  <li>Find photos that have a title, in any namespace : <code>\"machine_tags\" => \"*:title=\"</code></li>\r\n\r\n  <li>Find photos that have a title, in any namespace, whose value is \"mr. camera\" : <code>\"machine_tags\" => \"*:title=\\\"mr. camera\\\"\"</code></li>\r\n\r\n  <li>Find photos, in the 'dc' namespace whose value is \"mr. camera\" : <code>\"machine_tags\" => \"dc:*=\\\"mr. camera\\\"\"</code></li>\r\n\r\n </ul>\r\n\r\nMultiple machine tags may be queried by passing a comma-separated list. The number of machine tags you can pass in a single query depends on the tag mode (AND or OR) that you are querying with. \"AND\" queries are limited to (16) machine tags. \"OR\" queries are limited\r\nto (8)."
   },
   {
    "name": "machine_tag_mode",
    "_content": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified."
   },
   {
    "name": "group_id",
    "_content": "The id of a group who's pool to search.  If specified, only matching photos posted to the group's pool will be returned."
   },
   {
    "name": "faves",
    "_content": "boolean. Pass faves=1 along with your user_id to search within your favorites"
   },
   {
    "name": "camera",
    "_content": "Limit results by camera.  Camera names must be in the <a href=\"http://www.flickr.com/cameras\">Camera Finder</a> normalized form.  <a href=\"http://flickr.com/services/api/flickr.cameras.getList\">flickr.cameras.getList()</a> returns a list of searchable cameras."
   },
   {
    "name": "jump_to",
    "_content": "Jump, jump!"
   },
   {
    "name": "contacts",
    "_content": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Experimental)"
   },
   {
    "name": "woe_id",
    "_content": "A 32-bit identifier that uniquely represents spatial entities. (not used if bbox argument is present). \r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
   },
   {
    "name": "place_id",
    "_content": "A Flickr place id.  (not used if bbox argument is present).\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
   },
   {
    "name": "media",
    "_content": "Filter results by media type. Possible values are <code>all</code> (default), <code>photos</code> or <code>videos</code>"
   },
   {
    "name": "has_geo",
    "_content": "Any photo that has been geotagged, or if the value is \"0\" any photo that has <i>not</i> been geotagged.\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
   },
   {
    "name": "geo_context",
    "_content": "Geo context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to search for photos that were taken \"indoors\" or \"outdoors\". <br /><br />\r\nThe current list of context IDs is :<br /><br/>\r\n<ul>\r\n<li><strong>0</strong>, not defined.</li>\r\n<li><strong>1</strong>, indoors.</li>\r\n<li><strong>2</strong>, outdoors.</li>\r\n</ul>\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
   },
   {
    "name": "lat",
    "_content": "A valid latitude, in decimal format, for doing radial geo queries.\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
   },
   {
    "name": "lon",
    "_content": "A valid longitude, in decimal format, for doing radial geo queries.\r\n<br /><br />\r\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\r\n<br /><br />\r\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters &mdash; If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future)."
   },
   {
    "name": "radius",
    "_content": "A valid radius used for geo queries, greater than zero and less than 20 miles (or 32 kilometers), for use with point-based geo queries. The default value is 5 (km)."
   },
   {
    "name": "radius_units",
    "_content": "The unit of measure when doing radial geo queries. Valid options are \"mi\" (miles) and \"km\" (kilometers). The default is \"km\"."
   },
   {
    "name": "is_commons",
    "_content": "Limit the scope of the search to only photos that are part of the <a href=\"http://flickr.com/commons\">Flickr Commons project</a>. Default is false."
   },
   {
    "name": "in_gallery",
    "_content": "Limit the scope of the search to only photos that are in a <a href=\"http://www.flickr.com/help/galleries/\">gallery</a>?  Default is false, search all photos."
   },
   {
    "name": "person_id",
    "_content": "The id of a user.  Will return photos where the user has been people tagged.  A call signed as the person_id in question will return *all* photos the user in, otherwise returns public photos."
   },
   {
    "name": "is_getty",
    "_content": "Limit the scope of the search to only photos that are for sale on Getty. Default is false."
   },
   {
    "name": "username",
    "_content": "username/character name of the person whose photos you want to search. "
   },
   {
    "name": "exif_min_exposure",
    "_content": ""
   },
   {
    "name": "exif_max_exposure",
    "_content": ""
   },
   {
    "name": "exif_min_aperture",
    "_content": ""
   },
   {
    "name": "exif_max_aperture",
    "_content": ""
   },
   {
    "name": "exif_min_focallen",
    "_content": ""
   },
   {
    "name": "exif_max_focallen",
    "_content": ""
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Too many tags in ALL query",
    "_content": "When performing an 'all tags' search, you may not specify more than 20 tags to join together."
   },
   {
    "code": "2",
    "message": "Unknown user",
    "_content": "A user_id was passed which did not match a valid flickr user."
   },
   {
    "code": "3",
    "message": "Parameterless searches have been disabled",
    "_content": "To perform a search with no parameters (to get the latest public photos, please use flickr.photos.getRecent instead)."
   },
   {
    "code": "4",
    "message": "You don't have permission to view this pool",
    "_content": "The logged in user (if any) does not have permission to view the pool for this group."
   },
   {
    "code": "10",
    "message": "Sorry, the Flickr search API is not currently available.",
    "_content": "The Flickr API search databases are temporarily unavailable."
   },
   {
    "code": "11",
    "message": "No valid machine tags",
    "_content": "The query styntax for the machine_tags argument did not validate."
   },
   {
    "code": "12",
    "message": "Exceeded maximum allowable machine tags",
    "_content": "The maximum number of machine tags in a single query was exceeded."
   },
   {
    "code": "13",
    "message": "jump_to not avaiable for this query",
    "_content": "jump_to only supported for some query types."
   },
   {
    "code": "14",
    "message": "Bad value for jump_to",
    "_content": "jump_to must be valid photo ID."
   },
   {
    "code": "15",
    "message": "Photo not found",
    "_content": ""
   },
   {
    "code": "16",
    "message": "You can only search within your own favorites",
    "_content": ""
   },
   {
    "code": "17",
    "message": "You can only search within your own contacts",
    "_content": "The call tried to use the contacts parameter with no user ID or a user ID other than that of the authenticated user."
   },
   {
    "code": "18",
    "message": "Illogical arguments",
    "_content": "The request contained contradictory arguments."
   },
   {
    "code": "20",
    "message": "Excessive photo offset in search",
    "_content": "The search requested photos beyond an allowable offset. Reduce the page number or number of results per page for this search."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.search",
  "url": "https://www.flickr.com/services/api/flickr.photos.search.html"
 },
 "flickr.photos.setContentType": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to set the adultness of."
   },
   {
    "name": "content_type",
    "_content": "The content type of the photo. Must be one of: 1 for Photo, 2 for Screenshot, and 3 for Other."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id of a photo belonging to the calling user."
   },
   {
    "code": "2",
    "message": "Required arguments missing",
    "_content": "Some or all of the required arguments were not supplied."
   },
   {
    "code": "3",
    "message": "Change not allowed",
    "_content": "Changing the content type of this photo is not allowed."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.setContentType",
  "url": "https://www.flickr.com/services/api/flickr.photos.setContentType.html"
 },
 "flickr.photos.setDates": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to edit dates for."
   }
  ],
  "optional": [
   {
    "name": "date_posted",
    "_content": "The date the photo was uploaded to flickr (see the <a href=\"/services/api/misc.dates.html\">dates documentation</a>)"
   },
   {
    "name": "date_taken",
    "_content": "The date the photo was taken (see the <a href=\"/services/api/misc.dates.html\">dates documentation</a>)"
   },
   {
    "name": "date_taken_granularity",
    "_content": "The granularity of the date the photo was taken (see the <a href=\"/services/api/misc.dates.html\">dates documentation</a>)"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was not the id of a valid photo belonging to the calling user."
   },
   {
    "code": "2",
    "message": "Not enough arguments",
    "_content": "No dates were specified to be changed."
   },
   {
    "code": "3",
    "message": "Invalid granularity",
    "_content": "The value passed for 'granularity' was not a valid flickr date granularity."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.setDates",
  "url": "https://www.flickr.com/services/api/flickr.photos.setDates.html"
 },
 "flickr.photos.setMeta": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to set information for."
   },
   {
    "name": "title",
    "_content": "The title for the photo."
   },
   {
    "name": "description",
    "_content": "The description for the photo."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a photo belonging to the calling user. It might be an invalid id, or the photo might be owned by another user. "
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.setMeta",
  "url": "https://www.flickr.com/services/api/flickr.photos.setMeta.html"
 },
 "flickr.photos.setPerms": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to set permissions for."
   },
   {
    "name": "is_public",
    "_content": "1 to set the photo to public, 0 to set it to private."
   },
   {
    "name": "is_friend",
    "_content": "1 to make the photo visible to friends when private, 0 to not."
   },
   {
    "name": "is_family",
    "_content": "1 to make the photo visible to family when private, 0 to not."
   },
   {
    "name": "perm_comment",
    "_content": "who can add comments to the photo and it's notes. one of:<br />\r\n<code>0</code>: nobody<br />\r\n<code>1</code>: friends &amp; family<br />\r\n<code>2</code>: contacts<br />\r\n<code>3</code>: everybody"
   },
   {
    "name": "perm_addmeta",
    "_content": "who can add notes and tags to the photo. one of:<br />\r\n<code>0</code>: nobody / just the owner<br />\r\n<code>1</code>: friends &amp; family<br />\r\n<code>2</code>: contacts<br />\r\n<code>3</code>: everybody\r\n"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id of a photo belonging to the calling user."
   },
   {
    "code": "2",
    "message": "Required arguments missing",
    "_content": "Some or all of the required arguments were not supplied."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.setPerms",
  "url": "https://www.flickr.com/services/api/flickr.photos.setPerms.html"
 },
 "flickr.photos.setSafetyLevel": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to set the adultness of."
   }
  ],
  "optional": [
   {
    "name": "safety_level",
    "_content": "The safety level of the photo.  Must be one of:\r\n\r\n1 for Safe, 2 for Moderate, and 3 for Restricted."
   },
   {
    "name": "hidden",
    "_content": "Whether or not to additionally hide the photo from public searches.  Must be either 1 for Yes or 0 for No."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id of a photo belonging to the calling user."
   },
   {
    "code": "2",
    "message": "Invalid or missing arguments",
    "_content": "Neither a valid safety level nor a hidden value were passed."
   },
   {
    "code": "3",
    "message": "Change not allowed",
    "_content": "Changing the safety level of this photo is not allowed."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.setSafetyLevel",
  "url": "https://www.flickr.com/services/api/flickr.photos.setSafetyLevel.html"
 },
 "flickr.photos.setTags": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to set tags for.\r\n"
   },
   {
    "name": "tags",
    "_content": "All tags for the photo (as a single space-delimited string)."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a photo belonging to the calling user. It might be an invalid id, or the photo might be owned by another user. "
   },
   {
    "code": "2",
    "message": "Maximum number of tags reached",
    "_content": "The number of tags specified exceeds the limit for the photo. No tags were modified."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.setTags",
  "url": "https://www.flickr.com/services/api/flickr.photos.setTags.html"
 },
 "flickr.photos.suggestions.approveSuggestion": {
  "required": [
   {
    "name": "suggestion_id",
    "_content": "The unique ID for the location suggestion to approve."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.suggestions.approveSuggestion",
  "url": "https://www.flickr.com/services/api/flickr.photos.suggestions.approveSuggestion.html"
 },
 "flickr.photos.suggestions.getList": {
  "optional": [
   {
    "name": "photo_id",
    "_content": "Only show suggestions for a single photo."
   },
   {
    "name": "status_id",
    "_content": "Only show suggestions with a given status.\r\n\r\n<ul>\r\n<li><strong>0</strong>, pending</li>\r\n<li><strong>1</strong>, approved</li>\r\n<li><strong>2</strong>, rejected</li>\r\n</ul>\r\n\r\nThe default is pending (or \"0\")."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.photos.suggestions.getList",
  "url": "https://www.flickr.com/services/api/flickr.photos.suggestions.getList.html"
 },
 "flickr.photos.suggestions.rejectSuggestion": {
  "required": [
   {
    "name": "suggestion_id",
    "_content": "The unique ID of the suggestion to reject."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.suggestions.rejectSuggestion",
  "url": "https://www.flickr.com/services/api/flickr.photos.suggestions.rejectSuggestion.html"
 },
 "flickr.photos.suggestions.removeSuggestion": {
  "required": [
   {
    "name": "suggestion_id",
    "_content": "The unique ID for the location suggestion to approve."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.suggestions.removeSuggestion",
  "url": "https://www.flickr.com/services/api/flickr.photos.suggestions.removeSuggestion.html"
 },
 "flickr.photos.suggestions.suggestLocation": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The photo whose location you are suggesting."
   },
   {
    "name": "lat",
    "_content": "The latitude whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated."
   },
   {
    "name": "lon",
    "_content": "The longitude whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated."
   }
  ],
  "optional": [
   {
    "name": "accuracy",
    "_content": "Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified."
   },
   {
    "name": "woe_id",
    "_content": "The WOE ID of the location used to build the location hierarchy for the photo."
   },
   {
    "name": "place_id",
    "_content": "The Flickr Places ID of the location used to build the location hierarchy for the photo."
   },
   {
    "name": "note",
    "_content": "A short note or history to include with the suggestion."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.suggestions.suggestLocation",
  "url": "https://www.flickr.com/services/api/flickr.photos.suggestions.suggestLocation.html"
 },
 "flickr.photos.transform.rotate": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to rotate."
   },
   {
    "name": "degrees",
    "_content": "The amount of degrees by which to rotate the photo (clockwise) from it's current orientation. Valid values are 90, 180 and 270."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id was invalid or did not belong to the calling user."
   },
   {
    "code": "2",
    "message": "Invalid rotation",
    "_content": "The rotation degrees were an invalid value."
   },
   {
    "code": "3",
    "message": "Temporary failure",
    "_content": "There was a problem either rotating the image or storing the rotated versions."
   },
   {
    "code": "4",
    "message": "Rotation disabled",
    "_content": "The rotation service is currently disabled."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photos.transform.rotate",
  "url": "https://www.flickr.com/services/api/flickr.photos.transform.rotate.html"
 },
 "flickr.photos.upload.checkTickets": {
  "required": [
   {
    "name": "tickets",
    "_content": "A comma-delimited list of ticket ids"
   }
  ],
  "optional": [
   {
    "name": "batch_id",
    "_content": ""
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photos.upload.checkTickets",
  "url": "https://www.flickr.com/services/api/flickr.photos.upload.checkTickets.html"
 },
 "flickr.photosets.addPhoto": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to add a photo to."
   },
   {
    "name": "photo_id",
    "_content": "The id of the photo to add to the set."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not the id of avalid photoset owned by the calling user."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a valid photo owned by the calling user."
   },
   {
    "code": "3",
    "message": "Photo already in set",
    "_content": "The photo is already a member of the photoset."
   },
   {
    "code": "10",
    "message": "Maximum number of photos in set",
    "_content": "A set has reached the upper limit for the number of photos allowed."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.addPhoto",
  "url": "https://www.flickr.com/services/api/flickr.photosets.addPhoto.html"
 },
 "flickr.photosets.comments.addComment": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to add a comment to."
   },
   {
    "name": "comment_text",
    "_content": "Text of the comment"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": ""
   },
   {
    "code": "8",
    "message": "Blank comment",
    "_content": ""
   },
   {
    "code": "9",
    "message": "User is posting comments too fast.",
    "_content": "The user has reached the limit for number of comments posted during a specific time period. Wait a bit and try again."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.comments.addComment",
  "url": "https://www.flickr.com/services/api/flickr.photosets.comments.addComment.html"
 },
 "flickr.photosets.comments.deleteComment": {
  "required": [
   {
    "name": "comment_id",
    "_content": "The id of the comment to delete from a photoset."
   }
  ],
  "errors": [
   {
    "code": "2",
    "message": "Comment not found.",
    "_content": "The comment id passed was not a valid comment id"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.comments.deleteComment",
  "url": "https://www.flickr.com/services/api/flickr.photosets.comments.deleteComment.html"
 },
 "flickr.photosets.comments.editComment": {
  "required": [
   {
    "name": "comment_id",
    "_content": "The id of the comment to edit."
   },
   {
    "name": "comment_text",
    "_content": "Update the comment to this text."
   }
  ],
  "errors": [
   {
    "code": "2",
    "message": "Comment not found.",
    "_content": "The comment id passed was not a valid comment id."
   },
   {
    "code": "8",
    "message": "Blank comment.",
    "_content": "Comment text can't be blank."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.comments.editComment",
  "url": "https://www.flickr.com/services/api/flickr.photosets.comments.editComment.html"
 },
 "flickr.photosets.comments.getList": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to fetch comments for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found.",
    "_content": "The photoset id was invalid."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photosets.comments.getList",
  "url": "https://www.flickr.com/services/api/flickr.photosets.comments.getList.html"
 },
 "flickr.photosets.create": {
  "required": [
   {
    "name": "title",
    "_content": "A title for the photoset."
   },
   {
    "name": "primary_photo_id",
    "_content": "The id of the photo to represent this set. The photo must belong to the calling user."
   }
  ],
  "optional": [
   {
    "name": "description",
    "_content": "A description of the photoset. May contain limited html."
   },
   {
    "name": "full_result",
    "_content": "If this is set, we get the same result as a getList API would give, along with extras: url_sq,url_t,url_s,url_m"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "No title specified",
    "_content": "No title parameter was passed in the request."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The primary photo id passed was not a valid photo id or does not belong to the calling user."
   },
   {
    "code": "3",
    "message": "Can't create any more sets",
    "_content": "The user has reached their maximum number of photosets limit."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.create",
  "url": "https://www.flickr.com/services/api/flickr.photosets.create.html"
 },
 "flickr.photosets.delete": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to delete. It must be owned by the calling user."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not a valid photoset id or did not belong to the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.delete",
  "url": "https://www.flickr.com/services/api/flickr.photosets.delete.html"
 },
 "flickr.photosets.editMeta": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to modify."
   },
   {
    "name": "title",
    "_content": "The new title for the photoset."
   }
  ],
  "optional": [
   {
    "name": "description",
    "_content": "A description of the photoset. May contain limited html."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not a valid photoset id or did not belong to the calling user."
   },
   {
    "code": "2",
    "message": "No title specified",
    "_content": "No title parameter was passed in the request. "
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.editMeta",
  "url": "https://www.flickr.com/services/api/flickr.photosets.editMeta.html"
 },
 "flickr.photosets.editPhotos": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to modify. The photoset must belong to the calling user."
   },
   {
    "name": "primary_photo_id",
    "_content": "The id of the photo to use as the 'primary' photo for the set. This id must also be passed along in photo_ids list argument."
   },
   {
    "name": "photo_ids",
    "_content": "A comma-delimited list of photo ids to include in the set. They will appear in the set in the order sent. This list <b>must</b> contain the primary photo id. All photos must belong to the owner of the set. This list of photos replaces the existing list. Call flickr.photosets.addPhoto to append a photo to a set."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not a valid photoset id or did not belong to the calling user."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "One or more of the photo ids passed was not a valid photo id or does not belong to the calling user."
   },
   {
    "code": "3",
    "message": "Primary photo not found",
    "_content": "The primary photo id passed was not a valid photo id or does not belong to the calling user."
   },
   {
    "code": "4",
    "message": "Primary photo not in list",
    "_content": "The primary photo id passed did not appear in the photo id list."
   },
   {
    "code": "5",
    "message": "Empty photos list",
    "_content": "No photo ids were passed."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.editPhotos",
  "url": "https://www.flickr.com/services/api/flickr.photosets.editPhotos.html"
 },
 "flickr.photosets.getContext": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to fetch the context for."
   },
   {
    "name": "photoset_id",
    "_content": "The id of the photoset for which to fetch the photo's context."
   }
  ],
  "optional": [
   {
    "name": "num_prev",
    "_content": ""
   },
   {
    "name": "num_next",
    "_content": ""
   },
   {
    "name": "extras",
    "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description, license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_z, url_l, url_o"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id, or was the id of a photo that the calling user does not have permission to view."
   },
   {
    "code": "2",
    "message": "Photo not in set",
    "_content": "The specified photo is not in the specified set."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photosets.getContext",
  "url": "https://www.flickr.com/services/api/flickr.photosets.getContext.html"
 },
 "flickr.photosets.getInfo": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The ID of the photoset to fetch information for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id was not valid."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photosets.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.photosets.getInfo.html"
 },
 "flickr.photosets.getList": {
  "optional": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to get a photoset list for. If none is specified, the calling user is assumed."
   },
   {
    "name": "page",
    "_content": "The page of results to get. Currently, if this is not provided, all sets are returned, but this behaviour may change in future."
   },
   {
    "name": "per_page",
    "_content": "The number of sets to get per page. If paging is enabled, the maximum number of sets per page is 500."
   },
   {
    "name": "primary_photo_extras",
    "_content": "A comma-delimited list of extra information to fetch for the primary photo. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_o"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The user NSID passed was not a valid user NSID and the calling user was not logged in.\r\n"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photosets.getList",
  "url": "https://www.flickr.com/services/api/flickr.photosets.getList.html"
 },
 "flickr.photosets.getPhotos": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to return the photos for."
   }
  ],
  "optional": [
   {
    "name": "extras",
    "_content": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_o"
   },
   {
    "name": "privacy_filter",
    "_content": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view a photoset you own. Valid values are:\r\n<ul>\r\n<li>1 public photos</li>\r\n<li>2 private photos visible to friends</li>\r\n<li>3 private photos visible to family</li>\r\n<li>4 private photos visible to friends &amp; family</li>\r\n<li>5 completely private photos</li>\r\n</ul>\r\n"
   },
   {
    "name": "per_page",
    "_content": "Number of photos to return per page. If this argument is omitted, it defaults to 500. The maximum allowed value is 500."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   },
   {
    "name": "media",
    "_content": "Filter results by media type. Possible values are <code>all</code> (default), <code>photos</code> or <code>videos</code>"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not a valid photoset id."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.photosets.getPhotos",
  "url": "https://www.flickr.com/services/api/flickr.photosets.getPhotos.html"
 },
 "flickr.photosets.orderSets": {
  "required": [
   {
    "name": "photoset_ids",
    "_content": "A comma delimited list of photoset IDs, ordered with the set to show first, first in the list. Any set IDs not given in the list will be set to appear at the end of the list, ordered by their IDs."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Set not found",
    "_content": "One of the photoset ids passed was not the id of a valid photoset belonging to the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.orderSets",
  "url": "https://www.flickr.com/services/api/flickr.photosets.orderSets.html"
 },
 "flickr.photosets.removePhoto": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to remove a photo from."
   },
   {
    "name": "photo_id",
    "_content": "The id of the photo to remove from the set."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not the id of avalid photoset owned by the calling user."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a valid photo belonging to the calling user."
   },
   {
    "code": "3",
    "message": "Photo not in set",
    "_content": "The photo is not a member of the photoset."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.removePhoto",
  "url": "https://www.flickr.com/services/api/flickr.photosets.removePhoto.html"
 },
 "flickr.photosets.removePhotos": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to remove photos from."
   },
   {
    "name": "photo_ids",
    "_content": "Comma-delimited list of photo ids to remove from the photoset."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not the id of available photosets owned by the calling user."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a valid photo belonging to the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.removePhotos",
  "url": "https://www.flickr.com/services/api/flickr.photosets.removePhotos.html"
 },
 "flickr.photosets.reorderPhotos": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to reorder. The photoset must belong to the calling user."
   },
   {
    "name": "photo_ids",
    "_content": "Ordered, comma-delimited list of photo ids. Photos that are not in the list will keep their original order"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not a valid photoset id or did not belong to the calling user."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "One or more of the photo ids passed was not a valid photo id or does not belong to the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.reorderPhotos",
  "url": "https://www.flickr.com/services/api/flickr.photosets.reorderPhotos.html"
 },
 "flickr.photosets.setPrimaryPhoto": {
  "required": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to set primary photo to."
   },
   {
    "name": "photo_id",
    "_content": "The id of the photo to set as primary."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photoset not found",
    "_content": "The photoset id passed was not the id of avalid photoset owned by the calling user."
   },
   {
    "code": "2",
    "message": "Photo not found",
    "_content": "The photo id passed was not the id of a valid photo owned by the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 2
  },
  "name": "flickr.photosets.setPrimaryPhoto",
  "url": "https://www.flickr.com/services/api/flickr.photosets.setPrimaryPhoto.html"
 },
 "flickr.places.find": {
  "required": [
   {
    "name": "query",
    "_content": "The query string to use for place ID lookups"
   }
  ],
  "optional": [
   {
    "name": "bbox",
    "_content": "A bounding box for limiting the area to query."
   },
   {
    "name": "extras",
    "_content": "Secret sauce."
   },
   {
    "name": "safe",
    "_content": "Do we want sexy time words in our venue results?"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more required parameters was not included with the API call."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.find",
  "url": "https://www.flickr.com/services/api/flickr.places.find.html"
 },
 "flickr.places.findByLatLon": {
  "required": [
   {
    "name": "lat",
    "_content": "The latitude whose valid range is -90 to 90. Anything more than 4 decimal places will be truncated."
   },
   {
    "name": "lon",
    "_content": "The longitude whose valid range is -180 to 180. Anything more than 4 decimal places will be truncated."
   }
  ],
  "optional": [
   {
    "name": "accuracy",
    "_content": "Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. The default is 16."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required arguments missing",
    "_content": "One or more required parameters was not included with the API request."
   },
   {
    "code": "2",
    "message": "Not a valid latitude",
    "_content": "The latitude argument failed validation."
   },
   {
    "code": "3",
    "message": "Not a valid longitude",
    "_content": "The longitude argument failed validation."
   },
   {
    "code": "4",
    "message": "Not a valid accuracy",
    "_content": "The accuracy argument failed validation."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.findByLatLon",
  "url": "https://www.flickr.com/services/api/flickr.places.findByLatLon.html"
 },
 "flickr.places.getChildrenWithPhotosPublic": {
  "optional": [
   {
    "name": "place_id",
    "_content": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)"
   },
   {
    "name": "woe_id",
    "_content": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more required parameter is missing from the API call."
   },
   {
    "code": "2",
    "message": "Not a valid Places ID",
    "_content": "An invalid Places (or WOE) ID was passed with the API call."
   },
   {
    "code": "3",
    "message": "Place not found",
    "_content": "No place could be found for the Places (or WOE) ID passed to the API call."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.getChildrenWithPhotosPublic",
  "url": "https://www.flickr.com/services/api/flickr.places.getChildrenWithPhotosPublic.html"
 },
 "flickr.places.getInfo": {
  "optional": [
   {
    "name": "place_id",
    "_content": "A Flickr Places ID. <span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "woe_id",
    "_content": "A Where On Earth (WOE) ID. <span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more required parameter is missing from the API call."
   },
   {
    "code": "2",
    "message": "Not a valid Places ID",
    "_content": "An invalid Places (or WOE) ID was passed with the API call."
   },
   {
    "code": "3",
    "message": "Place not found",
    "_content": "No place could be found for the Places (or WOE) ID passed to the API call."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.getInfo",
  "url": "https://www.flickr.com/services/api/flickr.places.getInfo.html"
 },
 "flickr.places.getInfoByUrl": {
  "required": [
   {
    "name": "url",
    "_content": "A flickr.com/places URL in the form of /country/region/city. For example: /Canada/Quebec/Montreal"
   }
  ],
  "errors": [
   {
    "code": "2",
    "message": "Place URL required.",
    "_content": "The flickr.com/places URL was not passed with the API method."
   },
   {
    "code": "3",
    "message": "Place not found.",
    "_content": "Unable to find a valid place for the places URL."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.getInfoByUrl",
  "url": "https://www.flickr.com/services/api/flickr.places.getInfoByUrl.html"
 },
 "flickr.places.getPlaceTypes": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.getPlaceTypes",
  "url": "https://www.flickr.com/services/api/flickr.places.getPlaceTypes.html"
 },
 "flickr.places.getShapeHistory": {
  "optional": [
   {
    "name": "place_id",
    "_content": "A Flickr Places ID. <span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "woe_id",
    "_content": "A Where On Earth (WOE) ID. <span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more required parameter is missing from the API call."
   },
   {
    "code": "2",
    "message": "Not a valid Places ID",
    "_content": "An invalid Places (or WOE) ID was passed with the API call."
   },
   {
    "code": "3",
    "message": "Place not found",
    "_content": "No place could be found for the Places (or WOE) ID passed to the API call."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.getShapeHistory",
  "url": "https://www.flickr.com/services/api/flickr.places.getShapeHistory.html"
 },
 "flickr.places.getTopPlacesList": {
  "required": [
   {
    "name": "place_type_id",
    "_content": "The numeric ID for a specific place type to cluster photos by. <br /><br />\r\n\r\nValid place type IDs are :\r\n\r\n<ul>\r\n<li><strong>22</strong>: neighbourhood</li>\r\n<li><strong>7</strong>: locality</li>\r\n<li><strong>8</strong>: region</li>\r\n<li><strong>12</strong>: country</li>\r\n<li><strong>29</strong>: continent</li>\r\n</ul>"
   }
  ],
  "optional": [
   {
    "name": "date",
    "_content": "A valid date in YYYY-MM-DD format. The default is yesterday."
   },
   {
    "name": "woe_id",
    "_content": "Limit your query to only those top places belonging to a specific Where on Earth (WOE) identifier."
   },
   {
    "name": "place_id",
    "_content": "Limit your query to only those top places belonging to a specific Flickr Places identifier."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more required parameters with missing from your request."
   },
   {
    "code": "2",
    "message": "Not a valid place type.",
    "_content": "An unknown or unsupported place type ID was passed with your request."
   },
   {
    "code": "3",
    "message": "Not a valid date.",
    "_content": "The date argument passed with your request is invalid."
   },
   {
    "code": "4",
    "message": "Not a valid Place ID",
    "_content": "An invalid Places (or WOE) identifier was included with your request."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.getTopPlacesList",
  "url": "https://www.flickr.com/services/api/flickr.places.getTopPlacesList.html"
 },
 "flickr.places.placesForBoundingBox": {
  "required": [
   {
    "name": "bbox",
    "_content": "A comma-delimited list of 4 values defining the Bounding Box of the area that will be searched. The 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude."
   }
  ],
  "optional": [
   {
    "name": "place_type",
    "_content": "The name of place type to using as the starting point to search for places in a bounding box. Valid placetypes are:\r\n\r\n<ul>\r\n<li>neighbourhood</li>\r\n<li>locality</li>\r\n<li>county</li>\r\n<li>region</li>\r\n<li>country</li>\r\n<li>continent</li>\r\n</ul>\r\n<br />\r\n<span style=\"font-style:italic;\">The \"place_type\" argument has been deprecated in favor of the \"place_type_id\" argument. It won't go away but it will not be added to new methods. A complete list of place type IDs is available using the <a href=\"http://www.flickr.com/services/api/flickr.places.getPlaceTypes.html\">flickr.places.getPlaceTypes</a> method. (While optional, you must pass either a valid place type or place type ID.)</span>"
   },
   {
    "name": "place_type_id",
    "_content": "The numeric ID for a specific place type to cluster photos by. <br /><br />\r\n\r\nValid place type IDs are :\r\n\r\n<ul>\r\n<li><strong>22</strong>: neighbourhood</li>\r\n<li><strong>7</strong>: locality</li>\r\n<li><strong>8</strong>: region</li>\r\n<li><strong>12</strong>: country</li>\r\n<li><strong>29</strong>: continent</li>\r\n</ul>\r\n<br /><span style=\"font-style:italic;\">(While optional, you must pass either a valid place type or place type ID.)</span>\r\n"
   },
   {
    "name": "recursive",
    "_content": "Perform a recursive place type search. For example, if you search for neighbourhoods in a given bounding box but there are no results the method will also query for localities and so on until one or more valid places are found.<br /<br /> \r\nRecursive searches do not change the bounding box size restrictions for the initial place type passed to the method."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameters missing",
    "_content": "One or more required parameter is missing from the API call."
   },
   {
    "code": "2",
    "message": "Not a valid bbox",
    "_content": "The bbox argument was incomplete or incorrectly formatted"
   },
   {
    "code": "3",
    "message": "Not a valid place type",
    "_content": "An invalid place type was included with your request."
   },
   {
    "code": "4",
    "message": "Bounding box exceeds maximum allowable size for place type",
    "_content": "The bounding box passed along with your request was too large for the request place type."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.placesForBoundingBox",
  "url": "https://www.flickr.com/services/api/flickr.places.placesForBoundingBox.html"
 },
 "flickr.places.placesForContacts": {
  "optional": [
   {
    "name": "place_type",
    "_content": "A specific place type to cluster photos by. <br /><br />\r\n\r\nValid place types are :\r\n\r\n<ul>\r\n<li><strong>neighbourhood</strong> (and neighborhood)</li>\r\n<li><strong>locality</strong></li>\r\n<li><strong>region</strong></li>\r\n<li><strong>country</strong></li>\r\n<li><strong>continent</strong></li>\r\n</ul>\r\n<br />\r\n<span style=\"font-style:italic;\">The \"place_type\" argument has been deprecated in favor of the \"place_type_id\" argument. It won't go away but it will not be added to new methods. A complete list of place type IDs is available using the <a href=\"http://www.flickr.com/services/api/flickr.places.getPlaceTypes.html\">flickr.places.getPlaceTypes</a> method. (While optional, you must pass either a valid place type or place type ID.)</span>"
   },
   {
    "name": "place_type_id",
    "_content": "The numeric ID for a specific place type to cluster photos by. <br /><br />\r\n\r\nValid place type IDs are :\r\n\r\n<ul>\r\n<li><strong>22</strong>: neighbourhood</li>\r\n<li><strong>7</strong>: locality</li>\r\n<li><strong>8</strong>: region</li>\r\n<li><strong>12</strong>: country</li>\r\n<li><strong>29</strong>: continent</li>\r\n</ul>\r\n<br /><span style=\"font-style:italic;\">(While optional, you must pass either a valid place type or place type ID.)</span>"
   },
   {
    "name": "woe_id",
    "_content": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by <strong>locality</strong> in the United States (WOE ID <strong>23424977</strong>).<br /><br />\r\n<span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "place_id",
    "_content": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by <strong>locality</strong> in the United States (Place ID <strong>4KO02SibApitvSBieQ</strong>).\r\n<br /><br />\r\n<span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "threshold",
    "_content": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.<br /><br />\r\n\r\nFor example if your contacts only have <strong>3</strong> photos taken in the locality of Montreal</strong> (WOE ID 3534) but your threshold is set to <strong>5</strong> then those photos will be \"rolled up\" and included instead with a place record for the region of Quebec (WOE ID 2344924)."
   },
   {
    "name": "contacts",
    "_content": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Default is all)"
   },
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Places for contacts are not available at this time",
    "_content": "Places for contacts have been disabled or are otherwise not available."
   },
   {
    "code": "2",
    "message": "Required parameter missing",
    "_content": "One or more of the required parameters was not included with your request."
   },
   {
    "code": "3",
    "message": "Not a valid place type.",
    "_content": "An invalid place type was included with your request."
   },
   {
    "code": "4",
    "message": "Not a valid Place ID",
    "_content": "An invalid Places (or WOE) identifier was included with your request."
   },
   {
    "code": "5",
    "message": "Not a valid threshold",
    "_content": "The threshold passed was invalid. "
   },
   {
    "code": "6",
    "message": "Not a valid contacts type",
    "_content": "Contacts must be either \"all\" or \"ff\" (friends and family)."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.places.placesForContacts",
  "url": "https://www.flickr.com/services/api/flickr.places.placesForContacts.html"
 },
 "flickr.places.placesForTags": {
  "required": [
   {
    "name": "place_type_id",
    "_content": "The numeric ID for a specific place type to cluster photos by. <br /><br />\r\n\r\nValid place type IDs are :\r\n\r\n<ul>\r\n<li><strong>22</strong>: neighbourhood</li>\r\n<li><strong>7</strong>: locality</li>\r\n<li><strong>8</strong>: region</li>\r\n<li><strong>12</strong>: country</li>\r\n<li><strong>29</strong>: continent</li>\r\n</ul>"
   }
  ],
  "optional": [
   {
    "name": "woe_id",
    "_content": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by <strong>locality</strong> in the United States (WOE ID <strong>23424977</strong>).\r\n<br /><br />\r\n<span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "place_id",
    "_content": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by <strong>locality</strong> in the United States (Place ID <strong>4KO02SibApitvSBieQ</strong>).\r\n<br /><br />\r\n<span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "threshold",
    "_content": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.<br /><br />\r\n\r\nFor example if you only have <strong>3</strong> photos taken in the locality of Montreal</strong> (WOE ID 3534) but your threshold is set to <strong>5</strong> then those photos will be \"rolled up\" and included instead with a place record for the region of Quebec (WOE ID 2344924)."
   },
   {
    "name": "tags",
    "_content": "A comma-delimited list of tags. Photos with one or more of the tags listed will be returned."
   },
   {
    "name": "tag_mode",
    "_content": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified."
   },
   {
    "name": "machine_tags",
    "_content": "Aside from passing in a fully formed machine tag, there is a special syntax for searching on specific properties :\r\n\r\n<ul>\r\n  <li>Find photos using the 'dc' namespace :    <code>\"machine_tags\" => \"dc:\"</code></li>\r\n\r\n  <li> Find photos with a title in the 'dc' namespace : <code>\"machine_tags\" => \"dc:title=\"</code></li>\r\n\r\n  <li>Find photos titled \"mr. camera\" in the 'dc' namespace : <code>\"machine_tags\" => \"dc:title=\\\"mr. camera\\\"</code></li>\r\n\r\n  <li>Find photos whose value is \"mr. camera\" : <code>\"machine_tags\" => \"*:*=\\\"mr. camera\\\"\"</code></li>\r\n\r\n  <li>Find photos that have a title, in any namespace : <code>\"machine_tags\" => \"*:title=\"</code></li>\r\n\r\n  <li>Find photos that have a title, in any namespace, whose value is \"mr. camera\" : <code>\"machine_tags\" => \"*:title=\\\"mr. camera\\\"\"</code></li>\r\n\r\n  <li>Find photos, in the 'dc' namespace whose value is \"mr. camera\" : <code>\"machine_tags\" => \"dc:*=\\\"mr. camera\\\"\"</code></li>\r\n\r\n </ul>\r\n\r\nMultiple machine tags may be queried by passing a comma-separated list. The number of machine tags you can pass in a single query depends on the tag mode (AND or OR) that you are querying with. \"AND\" queries are limited to (16) machine tags. \"OR\" queries are limited\r\nto (8)."
   },
   {
    "name": "machine_tag_mode",
    "_content": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified."
   },
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.placesForTags",
  "url": "https://www.flickr.com/services/api/flickr.places.placesForTags.html"
 },
 "flickr.places.placesForUser": {
  "optional": [
   {
    "name": "place_type_id",
    "_content": "The numeric ID for a specific place type to cluster photos by. <br /><br />\r\n\r\nValid place type IDs are :\r\n\r\n<ul>\r\n<li><strong>22</strong>: neighbourhood</li>\r\n<li><strong>7</strong>: locality</li>\r\n<li><strong>8</strong>: region</li>\r\n<li><strong>12</strong>: country</li>\r\n<li><strong>29</strong>: continent</li>\r\n</ul>\r\n<br />\r\n<span style=\"font-style:italic;\">The \"place_type\" argument has been deprecated in favor of the \"place_type_id\" argument. It won't go away but it will not be added to new methods. A complete list of place type IDs is available using the <a href=\"http://www.flickr.com/services/api/flickr.places.getPlaceTypes.html\">flickr.places.getPlaceTypes</a> method. (While optional, you must pass either a valid place type or place type ID.)</span>"
   },
   {
    "name": "place_type",
    "_content": "A specific place type to cluster photos by. <br /><br />\r\n\r\nValid place types are :\r\n\r\n<ul>\r\n<li><strong>neighbourhood</strong> (and neighborhood)</li>\r\n<li><strong>locality</strong></li>\r\n<li><strong>region</strong></li>\r\n<li><strong>country</strong></li>\r\n<li><strong>continent</strong></li>\r\n</ul>\r\n<br /><span style=\"font-style:italic;\">(While optional, you must pass either a valid place type or place type ID.)</span>"
   },
   {
    "name": "woe_id",
    "_content": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by <strong>locality</strong> in the United States (WOE ID <strong>23424977</strong>).<br /><br />\r\n<span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "place_id",
    "_content": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by <strong>locality</strong> in the United States (Place ID <strong>4KO02SibApitvSBieQ</strong>).<br /><br />\r\n<span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "threshold",
    "_content": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.<br /><br />\r\n\r\nFor example if you only have <strong>3</strong> photos taken in the locality of Montreal</strong> (WOE ID 3534) but your threshold is set to <strong>5</strong> then those photos will be \"rolled up\" and included instead with a place record for the region of Quebec (WOE ID 2344924)."
   },
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Places for user are not available at this time",
    "_content": "Places for user have been disabled or are otherwise not available."
   },
   {
    "code": "2",
    "message": "Required parameter missing",
    "_content": "One or more of the required parameters was not included with your request."
   },
   {
    "code": "3",
    "message": "Not a valid place type",
    "_content": "An invalid place type was included with your request."
   },
   {
    "code": "4",
    "message": "Not a valid Place ID",
    "_content": "An invalid Places (or WOE) identifier was included with your request."
   },
   {
    "code": "5",
    "message": "Not a valid threshold",
    "_content": "The threshold passed was invalid. "
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.places.placesForUser",
  "url": "https://www.flickr.com/services/api/flickr.places.placesForUser.html"
 },
 "flickr.places.resolvePlaceId": {
  "required": [
   {
    "name": "place_id",
    "_content": "A Flickr Places ID"
   }
  ],
  "errors": [
   {
    "code": "2",
    "message": "Place ID required.",
    "_content": ""
   },
   {
    "code": "3",
    "message": "Place not found.",
    "_content": ""
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.resolvePlaceId",
  "url": "https://www.flickr.com/services/api/flickr.places.resolvePlaceId.html"
 },
 "flickr.places.resolvePlaceURL": {
  "required": [
   {
    "name": "url",
    "_content": "A Flickr Places URL.  \r\n<br /><br />\r\nFlickr Place URLs are of the form /country/region/city"
   }
  ],
  "errors": [
   {
    "code": "2",
    "message": "Place URL required.",
    "_content": ""
   },
   {
    "code": "3",
    "message": "Place not found.",
    "_content": ""
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.resolvePlaceURL",
  "url": "https://www.flickr.com/services/api/flickr.places.resolvePlaceURL.html"
 },
 "flickr.places.tagsForPlace": {
  "optional": [
   {
    "name": "woe_id",
    "_content": "A Where on Earth identifier to use to filter photo clusters.<br /><br />\r\n<span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "place_id",
    "_content": "A Flickr Places identifier to use to filter photo clusters.<br /><br />\r\n<span style=\"font-style:italic;\">(While optional, you must pass either a valid Places ID or a WOE ID.)</span>"
   },
   {
    "name": "min_upload_date",
    "_content": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "max_upload_date",
    "_content": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp."
   },
   {
    "name": "min_taken_date",
    "_content": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   },
   {
    "name": "max_taken_date",
    "_content": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One or more parameters was not included with the API request"
   },
   {
    "code": "2",
    "message": "Not a valid Places ID",
    "_content": "An invalid Places (or WOE) identifier was included with your request."
   },
   {
    "code": "3",
    "message": "Place not found",
    "_content": "An invalid Places (or WOE) identifier was included with your request."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.places.tagsForPlace",
  "url": "https://www.flickr.com/services/api/flickr.places.tagsForPlace.html"
 },
 "flickr.prefs.getContentType": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.prefs.getContentType",
  "url": "https://www.flickr.com/services/api/flickr.prefs.getContentType.html"
 },
 "flickr.prefs.getGeoPerms": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.prefs.getGeoPerms",
  "url": "https://www.flickr.com/services/api/flickr.prefs.getGeoPerms.html"
 },
 "flickr.prefs.getHidden": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.prefs.getHidden",
  "url": "https://www.flickr.com/services/api/flickr.prefs.getHidden.html"
 },
 "flickr.prefs.getPrivacy": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.prefs.getPrivacy",
  "url": "https://www.flickr.com/services/api/flickr.prefs.getPrivacy.html"
 },
 "flickr.prefs.getSafetyLevel": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.prefs.getSafetyLevel",
  "url": "https://www.flickr.com/services/api/flickr.prefs.getSafetyLevel.html"
 },
 "flickr.push.getSubscriptions": {
  "errors": [
   {
    "code": "5",
    "message": "Service currently available only to pro accounts",
    "_content": "PuSH subscriptions are currently restricted to Pro account holders."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.push.getSubscriptions",
  "url": "https://www.flickr.com/services/api/flickr.push.getSubscriptions.html"
 },
 "flickr.push.getTopics": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.push.getTopics",
  "url": "https://www.flickr.com/services/api/flickr.push.getTopics.html"
 },
 "flickr.push.subscribe": {
  "required": [
   {
    "name": "topic",
    "_content": "The type of subscription. See <a href=\"http://www.flickr.com/services/api/flickr.push.getTopics.htm\">flickr.push.getTopics</a>."
   },
   {
    "name": "callback",
    "_content": "The url for the subscription endpoint. Limited to 255 bytes, and must be unique for this user, i.e. no two subscriptions for a given user may use the same callback url."
   },
   {
    "name": "verify",
    "_content": "The verification mode, either <code>sync</code> or <code>async</code>. See the <a href=\"http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html#subscribingl\">Google PubSubHubbub spec</a> for details."
   }
  ],
  "optional": [
   {
    "name": "verify_token",
    "_content": "The verification token to be echoed back to the subscriber during the verification callback, as per the <a href=\"http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html#subscribing\">Google PubSubHubbub spec</a>. Limited to 200 bytes."
   },
   {
    "name": "lease_seconds",
    "_content": "Number of seconds for which the subscription will be valid. Legal values are 60 to 86400 (1 minute to 1 day). If not present, the subscription will be auto-renewing."
   },
   {
    "name": "woe_ids",
    "_content": "A 32-bit integer for a <a href=\"http://developer.yahoo.com/geo/geoplanet/\">Where on Earth ID</a>. Only valid if <code>topic</code> is <code>geo</code>.\r\n<br/><br/>\r\nThe order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present."
   },
   {
    "name": "place_ids",
    "_content": "A comma-separated list of Flickr place IDs. Only valid if <code>topic</code> is <code>geo</code>.\r\n<br/><br/>\r\nThe order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present."
   },
   {
    "name": "lat",
    "_content": "A latitude value, in decimal format. Only valid if <code>topic</code> is <code>geo</code>. Defines the latitude for a radial query centered around (lat, lon).\r\n<br/><br/>\r\nThe order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present."
   },
   {
    "name": "lon",
    "_content": "A longitude value, in decimal format. Only valid if <code>topic</code> is <code>geo</code>. Defines the longitude for a radial query centered around (lat, lon).\r\n<br/><br/>\r\nThe order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present."
   },
   {
    "name": "radius",
    "_content": "A radius value, in the units defined by radius_units. Only valid if <code>topic</code> is <code>geo</code>. Defines the radius of a circle for a radial query centered around (lat, lon). Default is 5 km.\r\n<br/><br/>\r\nThe order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present."
   },
   {
    "name": "radius_units",
    "_content": "Defines the units for the radius parameter. Only valid if <code>topic</code> is <code>geo</code>. Options are <code>mi</code> and <code>km</code>. Default is <code>km</code>.\r\n<br/><br/>\r\nThe order of precedence for geo subscriptions is : woe ids, place ids, radial i.e. the <code>lat, lon</code> parameters will be ignored if <code>place_ids</code> is present, which will be ignored if <code>woe_ids</code> is present."
   },
   {
    "name": "accuracy",
    "_content": "Defines the minimum accuracy required for photos to be included in a subscription. Only valid if <code>topic</code> is <code>geo</code> Legal values are 1-16, default is 1 (i.e. any accuracy level).\r\n<ul>\r\n<li>World level is 1</li>\r\n<li>Country is ~3</li>\r\n<li>Region is ~6</li>\r\n<li>City is ~11</li>\r\n<li>Street is ~16</li>\r\n</ul>"
   },
   {
    "name": "nsids",
    "_content": "A comma-separated list of nsids representing Flickr Commons institutions (see <a href=\"http://www.flickr.com/services/api/flickr.commons.getInstitutions.html\">flickr.commons.getInstitutions</a>). Only valid if <code>topic</code> is <code>commons</code>. If not present this argument defaults to all Flickr Commons institutions."
   },
   {
    "name": "tags",
    "_content": "A comma-separated list of strings to be used for tag subscriptions. Photos with one or more of the tags listed will be included in the subscription. Only valid if the <code>topic</code> is <code>tags</code>."
   },
   {
    "name": "machine_tags",
    "_content": "A comma-separated list of strings to be used for machine tag subscriptions. Photos with one or more of the machine tags listed will be included in the subscription. Currently the format must be <code>namespace:tag_name=value</code> Only valid if the <code>topic</code> is <code>tags</code>."
   },
   {
    "name": "update_type",
    "_content": ""
   },
   {
    "name": "output_format",
    "_content": ""
   },
   {
    "name": "mailto",
    "_content": ""
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One of the required arguments for the method was not provided."
   },
   {
    "code": "2",
    "message": "Invalid parameter value",
    "_content": "One of the arguments was specified with an illegal value."
   },
   {
    "code": "3",
    "message": "Callback URL already in use for a different subscription",
    "_content": "A different subscription already exists that uses the same callback URL."
   },
   {
    "code": "4",
    "message": "Callback failed or invalid response",
    "_content": "The verification callback failed, or failed to return the expected response to confirm the subscription."
   },
   {
    "code": "5",
    "message": "Service currently available only to pro accounts",
    "_content": "PuSH subscriptions are currently restricted to Pro account holders."
   },
   {
    "code": "6",
    "message": "Subscription awaiting verification callback response - try again later",
    "_content": "A subscription with those details exists already, but it is in a pending (non-verified) state. Please wait a bit for the verification callback to complete before attempting to update the subscription."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.push.subscribe",
  "url": "https://www.flickr.com/services/api/flickr.push.subscribe.html"
 },
 "flickr.push.unsubscribe": {
  "required": [
   {
    "name": "topic",
    "_content": "The type of subscription. See <a href=\"http://www.flickr.com/services/api/flickr.push.getTopics.htm\">flickr.push.getTopics</a>."
   },
   {
    "name": "callback",
    "_content": "The url for the subscription endpoint (must be the same url as was used when creating the subscription)."
   },
   {
    "name": "verify",
    "_content": "The verification mode, either 'sync' or 'async'. See the <a href=\"http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html#subscribingl\">Google PubSubHubbub spec</a> for details."
   }
  ],
  "optional": [
   {
    "name": "verify_token",
    "_content": "The verification token to be echoed back to the subscriber during the verification callback, as per the <a href=\"http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html#subscribing\">Google PubSubHubbub spec</a>. Limited to 200 bytes."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Required parameter missing",
    "_content": "One of the required arguments for the method was not provided."
   },
   {
    "code": "2",
    "message": "Invalid parameter value",
    "_content": "One of the arguments was specified with an illegal value."
   },
   {
    "code": "4",
    "message": "Callback failed or invalid response",
    "_content": "The verification callback failed, or failed to return the expected response to confirm the un-subscription."
   },
   {
    "code": "6",
    "message": "Subscription awaiting verification callback response - try again later",
    "_content": "A subscription with those details exists already, but it is in a pending (non-verified) state. Please wait a bit for the verification callback to complete before attempting to update the subscription."
   },
   {
    "code": "7",
    "message": "Subscription not found",
    "_content": "No subscription matching the provided details for this user could be found."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.push.unsubscribe",
  "url": "https://www.flickr.com/services/api/flickr.push.unsubscribe.html"
 },
 "flickr.reflection.getMethodInfo": {
  "required": [
   {
    "name": "method_name",
    "_content": "The name of the method to fetch information for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Method not found",
    "_content": "The requested method was not found."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.reflection.getMethodInfo",
  "url": "https://www.flickr.com/services/api/flickr.reflection.getMethodInfo.html"
 },
 "flickr.reflection.getMethods": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.reflection.getMethods",
  "url": "https://www.flickr.com/services/api/flickr.reflection.getMethods.html"
 },
 "flickr.stats.getCollectionDomains": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   }
  ],
  "optional": [
   {
    "name": "collection_id",
    "_content": "The id of the collection to get stats for. If not provided, stats for all collections will be returned."
   },
   {
    "name": "per_page",
    "_content": "Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Collection not found",
    "_content": "The collection id was either invalid or was for a collection not owned by the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getCollectionDomains",
  "url": "https://www.flickr.com/services/api/flickr.stats.getCollectionDomains.html"
 },
 "flickr.stats.getCollectionReferrers": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. \r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   },
   {
    "name": "domain",
    "_content": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname."
   }
  ],
  "optional": [
   {
    "name": "collection_id",
    "_content": "The id of the collection to get stats for. If not provided, stats for all collections will be returned."
   },
   {
    "name": "per_page",
    "_content": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Collection not found",
    "_content": "The collection id was either invalid or was for a collection not owned by the calling user."
   },
   {
    "code": "5",
    "message": "Invalid domain",
    "_content": "The domain provided is not in the expected format."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getCollectionReferrers",
  "url": "https://www.flickr.com/services/api/flickr.stats.getCollectionReferrers.html"
 },
 "flickr.stats.getCollectionStats": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   },
   {
    "name": "collection_id",
    "_content": "The id of the collection to get stats for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Collection not found",
    "_content": "The collection id was either invalid or was for a collection not owned by the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getCollectionStats",
  "url": "https://www.flickr.com/services/api/flickr.stats.getCollectionStats.html"
 },
 "flickr.stats.getCSVFiles": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getCSVFiles",
  "url": "https://www.flickr.com/services/api/flickr.stats.getCSVFiles.html"
 },
 "flickr.stats.getPhotoDomains": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   }
  ],
  "optional": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to get stats for. If not provided, stats for all photos will be returned."
   },
   {
    "name": "per_page",
    "_content": "Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not owned by the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotoDomains",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotoDomains.html"
 },
 "flickr.stats.getPhotoReferrers": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   },
   {
    "name": "domain",
    "_content": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname."
   }
  ],
  "optional": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to get stats for. If not provided, stats for all photos will be returned."
   },
   {
    "name": "per_page",
    "_content": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not owned by the calling user."
   },
   {
    "code": "5",
    "message": "Invalid domain",
    "_content": "The domain provided is not in the expected format."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotoReferrers",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotoReferrers.html"
 },
 "flickr.stats.getPhotosetDomains": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   }
  ],
  "optional": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to get stats for. If not provided, stats for all sets will be returned."
   },
   {
    "name": "per_page",
    "_content": "Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Photoset not found",
    "_content": "The photoset id was either invalid or was for a set not owned by the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotosetDomains",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotosetDomains.html"
 },
 "flickr.stats.getPhotosetReferrers": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. \r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   },
   {
    "name": "domain",
    "_content": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname."
   }
  ],
  "optional": [
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to get stats for. If not provided, stats for all sets will be returned."
   },
   {
    "name": "per_page",
    "_content": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Photoset not found",
    "_content": "The photoset id was either invalid or was for a set not owned by the calling user."
   },
   {
    "code": "5",
    "message": "Invalid domain",
    "_content": "The domain provided is not in the expected format."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotosetReferrers",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotosetReferrers.html"
 },
 "flickr.stats.getPhotosetStats": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   },
   {
    "name": "photoset_id",
    "_content": "The id of the photoset to get stats for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Photoset not found",
    "_content": "The photoset id was either invalid or was for a set not owned by the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotosetStats",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotosetStats.html"
 },
 "flickr.stats.getPhotoStats": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   },
   {
    "name": "photo_id",
    "_content": "The id of the photo to get stats for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "4",
    "message": "Photo not found",
    "_content": "The photo id was either invalid or was for a photo not owned by the calling user."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotoStats",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotoStats.html"
 },
 "flickr.stats.getPhotostreamDomains": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   }
  ],
  "optional": [
   {
    "name": "per_page",
    "_content": "Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100"
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotostreamDomains",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotostreamDomains.html"
 },
 "flickr.stats.getPhotostreamReferrers": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. \r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   },
   {
    "name": "domain",
    "_content": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname."
   }
  ],
  "optional": [
   {
    "name": "per_page",
    "_content": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "5",
    "message": "Invalid domain",
    "_content": "The domain provided is not in the expected format."
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotostreamReferrers",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotostreamReferrers.html"
 },
 "flickr.stats.getPhotostreamStats": {
  "required": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPhotostreamStats",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPhotostreamStats.html"
 },
 "flickr.stats.getPopularPhotos": {
  "optional": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. \r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.\r\n\r\nIf no date is provided, all time view counts will be returned."
   },
   {
    "name": "sort",
    "_content": "The order in which to sort returned photos. Defaults to views. The possible values are views, comments and favorites. \r\n\r\nOther sort options are available through <a href=\"/services/api/flickr.photos.search.html\">flickr.photos.search</a>."
   },
   {
    "name": "per_page",
    "_content": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100."
   },
   {
    "name": "page",
    "_content": "The page of results to return. If this argument is omitted, it defaults to 1."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   },
   {
    "code": "5",
    "message": "Invalid sort",
    "_content": "The sort provided is not valid"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getPopularPhotos",
  "url": "https://www.flickr.com/services/api/flickr.stats.getPopularPhotos.html"
 },
 "flickr.stats.getTotalViews": {
  "optional": [
   {
    "name": "date",
    "_content": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format.\r\n\r\nA day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.\r\n\r\nIf no date is provided, all time view counts will be returned."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User does not have stats",
    "_content": "The user you have requested stats has not enabled stats on their account."
   },
   {
    "code": "2",
    "message": "No stats for that date",
    "_content": "No stats are available for the date requested. Flickr only keeps stats data for the last 28 days."
   },
   {
    "code": "3",
    "message": "Invalid date",
    "_content": "The date provided could not be parsed"
   }
  ],
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.stats.getTotalViews",
  "url": "https://www.flickr.com/services/api/flickr.stats.getTotalViews.html"
 },
 "flickr.tags.getClusterPhotos": {
  "required": [
   {
    "name": "tag",
    "_content": "The tag that this cluster belongs to."
   },
   {
    "name": "cluster_id",
    "_content": "The top three tags for the cluster, separated by dashes (just like the url)."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.tags.getClusterPhotos",
  "url": "https://www.flickr.com/services/api/flickr.tags.getClusterPhotos.html"
 },
 "flickr.tags.getClusters": {
  "required": [
   {
    "name": "tag",
    "_content": "The tag to fetch clusters for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Tag cluster not found",
    "_content": "The tag was invalid or no cluster exists for that tag."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.tags.getClusters",
  "url": "https://www.flickr.com/services/api/flickr.tags.getClusters.html"
 },
 "flickr.tags.getHotList": {
  "optional": [
   {
    "name": "period",
    "_content": "The period for which to fetch hot tags. Valid values are <code>day</code> and <code>week</code> (defaults to <code>day</code>)."
   },
   {
    "name": "count",
    "_content": "The number of tags to return. Defaults to 20. Maximum allowed value is 200."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Invalid period",
    "_content": "The specified period was not understood."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.tags.getHotList",
  "url": "https://www.flickr.com/services/api/flickr.tags.getHotList.html"
 },
 "flickr.tags.getListPhoto": {
  "required": [
   {
    "name": "photo_id",
    "_content": "The id of the photo to return tags for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Photo not found",
    "_content": "The photo id passed was not a valid photo id."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.tags.getListPhoto",
  "url": "https://www.flickr.com/services/api/flickr.tags.getListPhoto.html"
 },
 "flickr.tags.getListUser": {
  "optional": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The user NSID passed was not a valid user NSID and the calling user was not logged in.\r\n"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.tags.getListUser",
  "url": "https://www.flickr.com/services/api/flickr.tags.getListUser.html"
 },
 "flickr.tags.getListUserPopular": {
  "optional": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed."
   },
   {
    "name": "count",
    "_content": "Number of popular tags to return. defaults to 10 when this argument is not present."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The user NSID passed was not a valid user NSID and the calling user was not logged in.\r\n"
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.tags.getListUserPopular",
  "url": "https://www.flickr.com/services/api/flickr.tags.getListUserPopular.html"
 },
 "flickr.tags.getListUserRaw": {
  "optional": [
   {
    "name": "tag",
    "_content": "The tag you want to retrieve all raw versions for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The calling user was not logged in."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.tags.getListUserRaw",
  "url": "https://www.flickr.com/services/api/flickr.tags.getListUserRaw.html"
 },
 "flickr.tags.getMostFrequentlyUsed": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.tags.getMostFrequentlyUsed",
  "url": "https://www.flickr.com/services/api/flickr.tags.getMostFrequentlyUsed.html"
 },
 "flickr.tags.getRelated": {
  "required": [
   {
    "name": "tag",
    "_content": "The tag to fetch related tags for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Tag not found",
    "_content": "The tag argument was missing."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.tags.getRelated",
  "url": "https://www.flickr.com/services/api/flickr.tags.getRelated.html"
 },
 "flickr.test.echo": {
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.test.echo",
  "url": "https://www.flickr.com/services/api/flickr.test.echo.html"
 },
 "flickr.test.login": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.test.login",
  "url": "https://www.flickr.com/services/api/flickr.test.login.html"
 },
 "flickr.test.null": {
  "security": {
   "needslogin": 1,
   "needssigning": 1,
   "requiredperms": 1
  },
  "name": "flickr.test.null",
  "url": "https://www.flickr.com/services/api/flickr.test.null.html"
 },
 "flickr.urls.getGroup": {
  "required": [
   {
    "name": "group_id",
    "_content": "The NSID of the group to fetch the url for."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Group not found",
    "_content": "The NSID specified was not a valid group."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.urls.getGroup",
  "url": "https://www.flickr.com/services/api/flickr.urls.getGroup.html"
 },
 "flickr.urls.getUserPhotos": {
  "optional": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch the url for. If omitted, the calling user is assumed."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The NSID specified was not a valid user."
   },
   {
    "code": "2",
    "message": "No user specified",
    "_content": "No user_id was passed and the calling user was not logged in."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.urls.getUserPhotos",
  "url": "https://www.flickr.com/services/api/flickr.urls.getUserPhotos.html"
 },
 "flickr.urls.getUserProfile": {
  "optional": [
   {
    "name": "user_id",
    "_content": "The NSID of the user to fetch the url for. If omitted, the calling user is assumed."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The NSID specified was not a valid user."
   },
   {
    "code": "2",
    "message": "No user specified",
    "_content": "No user_id was passed and the calling user was not logged in."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.urls.getUserProfile",
  "url": "https://www.flickr.com/services/api/flickr.urls.getUserProfile.html"
 },
 "flickr.urls.lookupGallery": {
  "required": [
   {
    "name": "url",
    "_content": "The gallery's URL."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.urls.lookupGallery",
  "url": "https://www.flickr.com/services/api/flickr.urls.lookupGallery.html"
 },
 "flickr.urls.lookupGroup": {
  "required": [
   {
    "name": "url",
    "_content": "The url to the group's page or photo pool."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "Group not found",
    "_content": "The passed URL was not a valid group page or photo pool url."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.urls.lookupGroup",
  "url": "https://www.flickr.com/services/api/flickr.urls.lookupGroup.html"
 },
 "flickr.urls.lookupUser": {
  "required": [
   {
    "name": "url",
    "_content": "The url to the user's profile or photos page."
   }
  ],
  "errors": [
   {
    "code": "1",
    "message": "User not found",
    "_content": "The passed URL was not a valid user profile or photos url."
   }
  ],
  "security": {
   "needslogin": 0,
   "needssigning": 0,
   "requiredperms": 0
  },
  "name": "flickr.urls.lookupUser",
  "url": "https://www.flickr.com/services/api/flickr.urls.lookupUser.html"
 }
};

(function () {
  Object.keys(Flickr.methods).forEach(function(method) {
    var level = method.split(".").slice(1);
    var e = Flickr.prototype, key;
    while(level.length > 1) {
      key = level.splice(0,1)[0];
      if(!e[key]) { e[key] = {}; }
      e = e[key];
    }
    e[level] = Utils.generateAPIDevFunction(Flickr.methods[method]);
  });
}());

 Flickr.prototype.bindOptions = function (flickrOptions) {
  this.flickrOptions = flickrOptions;
  (function bindOptions(obj, props) {
    Object.keys(props).forEach(function(key) {
      if (key === "flickrOptions") return;
      if (typeof obj[key] === "object") {
        bindOptions(obj[key], props[key]);
        obj[key].flickrOptions = flickrOptions;
      }
    });
  }(this, Flickr.prototype));
};

 window.Flickr = Flickr;
}());

var gCountyTopojson = {"type":"Topology","objects":{"districts":{"type":"GeometryCollection","bbox":[-179.14733999999999,17.926875,179.77847,71.352561],"geometries":[{"type":"MultiPolygon","id":2013,"arcs":[[[0,1]],[[2]],[[3]],[[4]],[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]]]},{"type":"MultiPolygon","id":2016,"arcs":[[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]],[[51]],[[52]],[[53]],[[54]],[[55]],[[56]]]},{"type":"Polygon","id":28107,"arcs":[[57,58,59,60,61,62]]},{"type":"Polygon","id":28101,"arcs":[[63,64,65,66,67]]},{"type":"Polygon","id":28027,"arcs":[[68,69,70,71,72,73]]},{"type":"MultiPolygon","id":22065,"arcs":[[[74,75]],[[76,77,78,79,80]]]},{"type":"Polygon","id":51540,"arcs":[[81]]},{"type":"Polygon","id":51510,"arcs":[[82,83,84,85]]},{"type":"Polygon","id":51530,"arcs":[[86]]},{"type":"Polygon","id":51600,"arcs":[[87],[88]]},{"type":"Polygon","id":48113,"arcs":[[89,90,91,92,93,94]]},{"type":"Polygon","id":48227,"arcs":[[95,96,97,98,99]]},{"type":"Polygon","id":48155,"arcs":[[100,101,102,103,104,105]]},{"type":"Polygon","id":48153,"arcs":[[106,107,108,109,110]]},{"type":"Polygon","id":48043,"arcs":[[111,112,113,114,115]]},{"type":"Polygon","id":48159,"arcs":[[116,117,118,119,120,121]]},{"type":"Polygon","id":48231,"arcs":[[122,123,124,125,126,127,128,129]]},{"type":"Polygon","id":48351,"arcs":[[130,131,132,133,134,135,136]]},{"type":"Polygon","id":48427,"arcs":[[137,138,139,140,141]]},{"type":"Polygon","id":48271,"arcs":[[142,143,144,145,146]]},{"type":"Polygon","id":48087,"arcs":[[147,148,149,150,151,152]]},{"type":"Polygon","id":48451,"arcs":[[153,154,155,156,157,158,159]]},{"type":"Polygon","id":48083,"arcs":[[160,161,162,163,164,165]]},{"type":"Polygon","id":48039,"arcs":[[166,167,168,169,170,171,172,173]]},{"type":"Polygon","id":48289,"arcs":[[174,175,176,177,178,179]]},{"type":"Polygon","id":48131,"arcs":[[180,181,182,183,184,185]]},{"type":"Polygon","id":48279,"arcs":[[186,187,188,189,190]]},{"type":"Polygon","id":48343,"arcs":[[191,192,193,194,195,196,197]]},{"type":"Polygon","id":48423,"arcs":[[198,199,200,201,202,203,204]]},{"type":"Polygon","id":48239,"arcs":[[205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222]]},{"type":"Polygon","id":48325,"arcs":[[223,224,225,226,227]]},{"type":"Polygon","id":48483,"arcs":[[228,229,230,-148,231]]},{"type":"Polygon","id":48111,"arcs":[[232,233,234,235]]},{"type":"Polygon","id":48059,"arcs":[[236,237,-162,238,239,240]]},{"type":"Polygon","id":48277,"arcs":[[241,242,243,244,245]]},{"type":"Polygon","id":48099,"arcs":[[246,247,248,249,250]]},{"type":"Polygon","id":48165,"arcs":[[251,252,253,254,255,256]]},{"type":"Polygon","id":48259,"arcs":[[257,258,259,260,261,262]]},{"type":"Polygon","id":48347,"arcs":[[263,264,265,266,267]]},{"type":"Polygon","id":48331,"arcs":[[268,269,270,271,272,273]]},{"type":"Polygon","id":48209,"arcs":[[274,275,276,277,278]]},{"type":"MultiPolygon","id":48489,"arcs":[[[279,280,281,282]],[[283,284,285,286]]]},{"type":"MultiPolygon","id":34017,"arcs":[[[287,288,289,290,291,292,293,294]],[[295,296,297,298]],[[299,300]],[[301,302]],[[303,304]]]},{"type":"Polygon","id":34011,"arcs":[[305,306,307,308,309]]},{"type":"Polygon","id":23019,"arcs":[[310,311,312,313,314,315]]},{"type":"Polygon","id":50009,"arcs":[[316,317,318,319,320]]},{"type":"Polygon","id":50011,"arcs":[[321,322,323,324,325]]},{"type":"Polygon","id":56001,"arcs":[[326,327,328,329,330,331]]},{"type":"Polygon","id":56015,"arcs":[[332,333,334,335,336,337]]},{"type":"Polygon","id":56045,"arcs":[[338,339,340,341,342,343,344]]},{"type":"Polygon","id":56017,"arcs":[[345,346,347]]},{"type":"Polygon","id":56039,"arcs":[[348,349,350,351,352,353,354,355]]},{"type":"Polygon","id":56003,"arcs":[[356,357,358,359,360,361]]},{"type":"Polygon","id":56027,"arcs":[[362,363,364,-333,365,366,-343]]},{"type":"Polygon","id":56033,"arcs":[[-359,367,368,369,370]]},{"type":"Polygon","id":56043,"arcs":[[371,-361,372,373,374,-347]]},{"type":"Polygon","id":56005,"arcs":[[-370,375,376,-345,377,378]]},{"type":"Polygon","id":56025,"arcs":[[379,-374,380,381,382]]},{"type":"MultiPolygon","id":50005,"arcs":[[[383,384]],[[385,386,387,388,-318,389]]]},{"type":"Polygon","id":56031,"arcs":[[-366,-338,390,-328,391]]},{"type":"Polygon","id":56009,"arcs":[[392,-382,393,-378,-344,-367,-392,-327]]},{"type":"Polygon","id":56011,"arcs":[[394,395,396,397,-339,-377]]},{"type":"Polygon","id":50001,"arcs":[[398,399,400,401,402,403,404]]},{"type":"Polygon","id":56019,"arcs":[[-360,-371,-379,-394,-381,-373]]},{"type":"Polygon","id":56021,"arcs":[[-337,405,406,407,408,-329,-391]]},{"type":"Polygon","id":50021,"arcs":[[409,410,411,-403]]},{"type":"Polygon","id":50025,"arcs":[[412,413,414,415,416]]},{"type":"Polygon","id":56029,"arcs":[[-353,417,418,419,-362,-372,-346,420]]},{"type":"Polygon","id":50027,"arcs":[[421,-410,-402,422,423,424,-413]]},{"type":"Polygon","id":50023,"arcs":[[-400,425,426,-387,427]]},{"type":"Polygon","id":50013,"arcs":[[428,-325,429,430]]},{"type":"Polygon","id":50015,"arcs":[[-323,431,-388,-427,432]]},{"type":"Polygon","id":29099,"arcs":[[433,434,435,436,437,438]]},{"type":"Polygon","id":29079,"arcs":[[439,440,441,442,443,444]]},{"type":"Polygon","id":29510,"arcs":[[445,446,447]]},{"type":"Polygon","id":29093,"arcs":[[448,449,450,451,452,453,454]]},{"type":"Polygon","id":29185,"arcs":[[455,456,457,458,459,460,461]]},{"type":"Polygon","id":29037,"arcs":[[462,463,464,465,466,467]]},{"type":"Polygon","id":29229,"arcs":[[468,469,470,471]]},{"type":"Polygon","id":29153,"arcs":[[472,473,474,475,476,477]]},{"type":"Polygon","id":29083,"arcs":[[478,479,480,-461,481,-467]]},{"type":"Polygon","id":17009,"arcs":[[482,483,484,485,486]]},{"type":"Polygon","id":17033,"arcs":[[487,488,489,490,491,492]]},{"type":"Polygon","id":17085,"arcs":[[493,494,495,496,497,498]]},{"type":"Polygon","id":17065,"arcs":[[499,500,501,502,503,504]]},{"type":"Polygon","id":17109,"arcs":[[505,506,507,508,509]]},{"type":"Polygon","id":17135,"arcs":[[510,511,512,513,514,515,516]]},{"type":"Polygon","id":17041,"arcs":[[517,518,519,520,521]]},{"type":"Polygon","id":17181,"arcs":[[522,523,524,525,526,527,528]]},{"type":"Polygon","id":17115,"arcs":[[529,530,531,532,533,534,535]]},{"type":"Polygon","id":17201,"arcs":[[536,537,538,539,540]]},{"type":"Polygon","id":17133,"arcs":[[541,542,-434,543,544]]},{"type":"Polygon","id":17129,"arcs":[[545,546,547,548,549,550]]},{"type":"Polygon","id":17083,"arcs":[[551,552,553,554,555]]},{"type":"Polygon","id":17171,"arcs":[[556,557,558]]},{"type":"Polygon","id":17131,"arcs":[[559,560,561,562,563,564,565]]},{"type":"Polygon","id":17047,"arcs":[[566,567,568,569]]},{"type":"Polygon","id":17035,"arcs":[[570,571,572,573,574]]},{"type":"Polygon","id":17197,"arcs":[[575,576,577,578,579,580]]},{"type":"Polygon","id":6059,"arcs":[[581,582,583,584,585]]},{"type":"Polygon","id":6103,"arcs":[[586,587,588,589,590,591]]},{"type":"Polygon","id":6011,"arcs":[[592,593,594,595,596]]},{"type":"MultiPolygon","id":6083,"arcs":[[[597,598,599,600]],[[601]],[[602]],[[603]]]},{"type":"Polygon","id":6051,"arcs":[[604,605,606,607,608,609,610,611,612]]},{"type":"Polygon","id":6053,"arcs":[[613,614,615,616,617,618]]},{"type":"Polygon","id":49003,"arcs":[[619,620,621,622,623,624]]},{"type":"Polygon","id":6061,"arcs":[[625,626,627,628,629,630,631,632]]},{"type":"Polygon","id":6005,"arcs":[[633,634,635,636,637]]},{"type":"Polygon","id":6009,"arcs":[[638,-636,639,640,641]]},{"type":"Polygon","id":6025,"arcs":[[642,643,644,645,646]]},{"type":"Polygon","id":37069,"arcs":[[647,648,649,650,651]]},{"type":"Polygon","id":37031,"arcs":[[652,653,654,655]]},{"type":"Polygon","id":37057,"arcs":[[656,657,658,659,660,661]]},{"type":"Polygon","id":42021,"arcs":[[662,663,664,665,666,667]]},{"type":"Polygon","id":37163,"arcs":[[668,669,670,671,672,673,674]]},{"type":"Polygon","id":37101,"arcs":[[675,676,677,678,-670,679]]},{"type":"Polygon","id":37027,"arcs":[[680,681,682,683,684,685]]},{"type":"Polygon","id":42003,"arcs":[[686,687,688,689,690]]},{"type":"Polygon","id":37153,"arcs":[[691,692,693,694,695]]},{"type":"Polygon","id":37123,"arcs":[[696,-693,697,-660,698]]},{"type":"Polygon","id":37179,"arcs":[[699,700,701,702,703,704]]},{"type":"Polygon","id":37051,"arcs":[[-675,705,706,707,708,709]]},{"type":"Polygon","id":42001,"arcs":[[710,711,712,713,714]]},{"type":"Polygon","id":42061,"arcs":[[715,716,717,718,719,720,721]]},{"type":"Polygon","id":37023,"arcs":[[722,723,-686,724,725,726,727]]},{"type":"Polygon","id":37097,"arcs":[[728,729,730,731,732,733,734,735,736]]},{"type":"Polygon","id":37063,"arcs":[[737,738,739,740,741]]},{"type":"Polygon","id":42039,"arcs":[[742,743,744,745,746,747]]},{"type":"Polygon","id":42045,"arcs":[[748,749,750,751,752,753,754]]},{"type":"Polygon","id":37079,"arcs":[[755,756,757,758]]},{"type":"Polygon","id":42035,"arcs":[[759,760,761,762,763,764]]},{"type":"Polygon","id":37143,"arcs":[[765,766,767,768]]},{"type":"Polygon","id":37083,"arcs":[[769,770,771,772,773,774]]},{"type":"Polygon","id":37037,"arcs":[[775,-741,776,777,778,779,780,781]]},{"type":"Polygon","id":37171,"arcs":[[782,783,784,785,786,787,788,789]]},{"type":"Polygon","id":42073,"arcs":[[790,791,792,793,794]]},{"type":"Polygon","id":42093,"arcs":[[795,796,797]]},{"type":"Polygon","id":37155,"arcs":[[798,799,800,-707,801,802,803]]},{"type":"Polygon","id":37121,"arcs":[[804,805,806,807,808]]},{"type":"Polygon","id":42117,"arcs":[[809,810,811,812,813]]},{"type":"Polygon","id":42009,"arcs":[[814,-722,815,816,817,-666]]},{"type":"Polygon","id":37013,"arcs":[[818,819,820,821,822,823,824]]},{"type":"Polygon","id":42089,"arcs":[[825,826,827,828,829,830,831,832]]},{"type":"Polygon","id":42131,"arcs":[[833,834,835,836,837]]},{"type":"Polygon","id":37127,"arcs":[[-770,838,839,-677,-648]]},{"type":"Polygon","id":42083,"arcs":[[840,841,842,843,844,845]]},{"type":"Polygon","id":42133,"arcs":[[846,847,848,-712,849,850,851]]},{"type":"Polygon","id":42049,"arcs":[[852,853,854,-748,855]]},{"type":"Polygon","id":37067,"arcs":[[-787,856,857,-657,858,859]]},{"type":"Polygon","id":42051,"arcs":[[860,861,862,863,864,865,866,867,868]]},{"type":"Polygon","id":42099,"arcs":[[869,870,871,872]]},{"type":"Polygon","id":42085,"arcs":[[-745,873,874,-795,875,876]]},{"type":"Polygon","id":42033,"arcs":[[-764,877,878,-664,879,880,881,882]]},{"type":"Polygon","id":39049,"arcs":[[883,884,885,886,887,888]]},{"type":"Polygon","id":37107,"arcs":[[889,890,891,892,893,-756]]},{"type":"Polygon","id":42037,"arcs":[[894,895,896,897,-797,898]]},{"type":"Polygon","id":42059,"arcs":[[899,900,901,902,903,-868,866,-866,904]]},{"type":"Polygon","id":42053,"arcs":[[905,906,907,908,909]]},{"type":"Polygon","id":37119,"arcs":[[910,-730,911,-705,912,913,914]]},{"type":"Polygon","id":37089,"arcs":[[915,916,917,918,919,920]]},{"type":"Polygon","id":37081,"arcs":[[-658,-858,921,922,923]]},{"type":"Polygon","id":42017,"arcs":[[924,925,926,927,928,929,930,931]]},{"type":"Polygon","id":36053,"arcs":[[932,933,934,935,936,937]]},{"type":"Polygon","id":42011,"arcs":[[938,939,940,941,942,943]]},{"type":"Polygon","id":2240,"arcs":[[944,945,946,947,948,949]]},{"type":"MultiPolygon","id":2070,"arcs":[[[950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969]],[[970,971]],[[972]]]},{"type":"MultiPolygon","id":2164,"arcs":[[[-2,973,974,975,976,977,978,-970,979,980,981,982]],[[983]],[[984]],[[985]],[[986]],[[987]]]},{"type":"Polygon","id":2185,"arcs":[[988,989,990]]},{"type":"MultiPolygon","id":2105,"arcs":[[[991]],[[992,993,994,995]],[[996,997]],[[998,999]],[[1000,1001,1002,1003]],[[1004,1005]],[[1006]],[[1007]],[[1008]]]},{"type":"MultiPolygon","id":2150,"arcs":[[[1009,-982,1010]],[[1011]],[[1012]],[[1013]],[[1014]],[[1015]],[[1016]],[[1017]],[[1018]],[[1019]],[[1020]],[[1021]]]},{"type":"Polygon","id":2230,"arcs":[[1022,1023]]},{"type":"Polygon","id":2188,"arcs":[[1024,1025,-989,1026]]},{"type":"MultiPolygon","id":2130,"arcs":[[[1027,1028,1029,1030]],[[1031]],[[1032]],[[1033]]]},{"type":"MultiPolygon","id":2270,"arcs":[[[1034,1035,1036,1037]]]},{"type":"Polygon","id":28145,"arcs":[[1038,1039,1040,1041,1042,1043,1044]]},{"type":"Polygon","id":28053,"arcs":[[1045,1046,1047,1048,1049,1050]]},{"type":"Polygon","id":28141,"arcs":[[1051,1052,1053,1054,1055,1056,1057]]},{"type":"Polygon","id":28087,"arcs":[[1058,1059,1060,1061,1062,1063]]},{"type":"Polygon","id":22089,"arcs":[[1064,1065,1066]]},{"type":"Polygon","id":22073,"arcs":[[1067,1068,1069,1070,1071,1072]]},{"type":"Polygon","id":22007,"arcs":[[1073,1074,1075,1076,1077,1078,1079,1080]]},{"type":"Polygon","id":22027,"arcs":[[1081,1082,1083,1084,1085,1086]]},{"type":"Polygon","id":22019,"arcs":[[1087,-132,1088,1089,1090]]},{"type":"Polygon","id":22001,"arcs":[[1091,1092,1093,1094,1095]]},{"type":"Polygon","id":22079,"arcs":[[1096,1097,1098,1099,1100,1101,1102]]},{"type":"Polygon","id":22127,"arcs":[[1103,1104,1105,1106,1107,1108]]},{"type":"Polygon","id":22021,"arcs":[[1109,-1070,1110,1111,1112,1113,-1106]]},{"type":"Polygon","id":22029,"arcs":[[1114,1115,1116,1117,1118,1119,1120,1121]]},{"type":"Polygon","id":51610,"arcs":[[1122,1123]]},{"type":"Polygon","id":51185,"arcs":[[1124,1125,1126,1127,1128,1129]]},{"type":"Polygon","id":51683,"arcs":[[1130,1131],[1132]]},{"type":"Polygon","id":51820,"arcs":[[1133]]},{"type":"Polygon","id":51790,"arcs":[[1134]]},{"type":"Polygon","id":51183,"arcs":[[1135,1136,1137,1138,1139]]},{"type":"Polygon","id":51171,"arcs":[[1140,1141,1142,1143,1144]]},{"type":"Polygon","id":51750,"arcs":[[1145,1146],[1147]]},{"type":"Polygon","id":48251,"arcs":[[1148,1149,1150,1151,1152,1153,1154]]},{"type":"Polygon","id":48383,"arcs":[[1155,-158,1156,1157,1158,1159]]},{"type":"Polygon","id":48479,"arcs":[[1160,1161,1162,-186,1163,1164,1165]]},{"type":"Polygon","id":48417,"arcs":[[1166,-241,1167,1168,1169,1170]]},{"type":"Polygon","id":48037,"arcs":[[1171,1172,-193,1173,1174,1175]]},{"type":"Polygon","id":48415,"arcs":[[1176,1177,1178,1179,1180]]},{"type":"MultiPolygon","id":48261,"arcs":[[[1181,-284,1182,1183]],[[-281,1184,1185,1186,1187]]]},{"type":"Polygon","id":48425,"arcs":[[-1155,1188,1189,1190]]},{"type":"Polygon","id":48359,"arcs":[[1191,1192,1193,1194,1195]]},{"type":"Polygon","id":48441,"arcs":[[1196,-239,-161,1197,1198]]},{"type":"Polygon","id":48269,"arcs":[[1199,1200,1201,-101,1202]]},{"type":"Polygon","id":48033,"arcs":[[1203,1204,-1180,1205,-99,1206]]},{"type":"Polygon","id":48471,"arcs":[[1207,1208,1209,1210,1211,1212]]},{"type":"Polygon","id":48429,"arcs":[[1213,1214,1215,1216,-1171]]},{"type":"Polygon","id":48117,"arcs":[[1217,1218,1219,-1194,1220,1221]]},{"type":"Polygon","id":48393,"arcs":[[1222,1223,1224,1225,1226,1227,1228]]},{"type":"Polygon","id":48457,"arcs":[[1229,1230,1231,1232]]},{"type":"Polygon","id":48465,"arcs":[[1233,1234,1235,1236,-145,1237]]},{"type":"Polygon","id":48049,"arcs":[[-238,1238,1239,1240,1241,1242,-163]]},{"type":"Polygon","id":48367,"arcs":[[1243,-1150,1244,1245,1246,1247]]},{"type":"Polygon","id":48201,"arcs":[[1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,-172,1278,1279,1280]]},{"type":"Polygon","id":48505,"arcs":[[-1165,1281,-141,1282]]},{"type":"Polygon","id":48387,"arcs":[[1283,1284,-1174,-192,1285,-118,1286,-244]]},{"type":"Polygon","id":48255,"arcs":[[1287,1288,1289,1290,1291,1292,1293]]},{"type":"Polygon","id":48363,"arcs":[[1294,1295,-1246,1296,1297,1298,-1216]]},{"type":"Polygon","id":48173,"arcs":[[1299,-97,1300,-1160,1301]]},{"type":"Polygon","id":48419,"arcs":[[-266,1302,1303,1304,1305,1306,1307]]},{"type":"Polygon","id":48499,"arcs":[[1308,-121,1309,1310,-199,1311,1312]]},{"type":"Polygon","id":34021,"arcs":[[1313,1314,1315,1316,1317,-925]]},{"type":"Polygon","id":34007,"arcs":[[1318,1319,1320,1321]]},{"type":"Polygon","id":34031,"arcs":[[1322,1323,1324,1325,1326,1327]]},{"type":"Polygon","id":4019,"arcs":[[1328,1329,1330,1331,1332,1333,1334]]},{"type":"Polygon","id":4017,"arcs":[[1335,1336,1337,1338,1339]]},{"type":"Polygon","id":4012,"arcs":[[1340,1341,1342,1343,-643,1344,1345]]},{"type":"Polygon","id":23029,"arcs":[[1346,-313,1347,1348]]},{"type":"Polygon","id":35021,"arcs":[[1349,1350,1351,1352,1353]]},{"type":"Polygon","id":35051,"arcs":[[1354,1355,1356,1357,1358,1359,1360]]},{"type":"Polygon","id":35025,"arcs":[[1361,1362,1363,1364,-256,1365,1366,1367,1368]]},{"type":"Polygon","id":56023,"arcs":[[1369,1370,1371,1372,-356,1373,1374,1375]]},{"type":"Polygon","id":35019,"arcs":[[1376,1377,1378,1379,1380]]},{"type":"Polygon","id":56037,"arcs":[[1381,1382,1383,-1375,1384,1385,1386,1387]]},{"type":"Polygon","id":35057,"arcs":[[1388,1389,1390,-1381,1391,1392,1393]]},{"type":"Polygon","id":23003,"arcs":[[1394,1395,1396,-1348,-312]]},{"type":"Polygon","id":56041,"arcs":[[1397,-1376,-1384,1398]]},{"type":"Polygon","id":56035,"arcs":[[-355,1399,-1385,-1374]]},{"type":"Polygon","id":35017,"arcs":[[-1359,1400,1401,1402,1403]]},{"type":"Polygon","id":35035,"arcs":[[-1356,1404,1405,1406,1407,1408,1409,1410]]},{"type":"Polygon","id":35045,"arcs":[[1411,1412,1413,1414,1415,1416,1417]]},{"type":"Polygon","id":56007,"arcs":[[1418,-1387,1419,-383,-393,-332,1420,1421]]},{"type":"Polygon","id":35041,"arcs":[[1422,1423,1424,1425,1426,-1363,1427]]},{"type":"Polygon","id":35009,"arcs":[[-1219,1428,1429,-1425,1430]]},{"type":"Polygon","id":35055,"arcs":[[1431,1432,1433,1434,1435]]},{"type":"Polygon","id":35023,"arcs":[[1436,-1402,1437,1438,1439]]},{"type":"Polygon","id":35015,"arcs":[[-1407,1440,-1369,1441,1442,1443]]},{"type":"Polygon","id":35011,"arcs":[[1444,-1379,1445,-1423,1446]]},{"type":"Polygon","id":35006,"arcs":[[1447,1448,1449,1450,1451,1452,1453]]},{"type":"Polygon","id":35037,"arcs":[[-1220,-1431,-1424,-1446,-1378,1454,-1353,1455,1456,-1195]]},{"type":"Polygon","id":35007,"arcs":[[-1433,1457,1458,1459,-1351,1460]]},{"type":"Polygon","id":35028,"arcs":[[1461,1462,1463,1464,1465]]},{"type":"Polygon","id":35001,"arcs":[[1466,-1450,1467,1468,-1389]]},{"type":"MultiPolygon","id":23009,"arcs":[[[1469,-314,-1347,1470]],[[1471]],[[1472]],[[1473]],[[1474]],[[1475]],[[1476]],[[1477]],[[1478]],[[1479]]]},{"type":"Polygon","id":56013,"arcs":[[-375,-380,-1420,-1386,-1400,-354,-421,-348]]},{"type":"Polygon","id":29071,"arcs":[[1480,1481,1482,-438,1483,1484,1485]]},{"type":"Polygon","id":24029,"arcs":[[1486,1487,1488,1489,1490]]},{"type":"Polygon","id":44003,"arcs":[[1491,1492,1493,1494,1495,1496]]},{"type":"MultiPolygon","id":24017,"arcs":[[[1497,1498]],[[1499,-1500,1500]],[[1501,1502]],[[1503,-1504,1504]],[[1505,1506]],[[1507,1508]],[[1509,1510]],[[1511,1512,1513,1514]],[[1515,1516]],[[1517,1518]],[[1519,1520]],[[1521,1522]],[[1523,1524]],[[1525,1526]],[[1527,1528]],[[1529,1530]],[[1531,-1532,1532]],[[1533,1534]],[[1535,1536]],[[1537,1538]],[[1539,1540]],[[1541,1542]],[[1543,1544]],[[1545,1546]],[[1547,1548]],[[1549,1550]],[[1551,1552,1553,1554,1555]],[[1556,1557]],[[1558,1559]],[[1560,1561]],[[1562,1563]],[[1564,1565]],[[1566,1567]],[[1568,1569]],[[1570,1571]],[[1572,1573,1574,1575]],[[1576,1577]],[[1578,1579]],[[1580,1581]],[[1582,1583]],[[1584,1585]],[[1586,1587]],[[1588,1589]],[[1590,1591]],[[1592,1593]],[[1594,1595]],[[1596,1597]]]},{"type":"Polygon","id":24011,"arcs":[[1598,1599,1600,1601,1602]]},{"type":"Polygon","id":29141,"arcs":[[1603,1604,1605,1606,1607,1608]]},{"type":"MultiPolygon","id":44009,"arcs":[[[-1495,1609,1610]],[[1611]]]},{"type":"Polygon","id":44001,"arcs":[[-1493,1612,1613,1614,1615,1616]]},{"type":"Polygon","id":29137,"arcs":[[1617,1618,1619,1620,1621,1622]]},{"type":"Polygon","id":29215,"arcs":[[1623,-470,1624,1625,1626,1627,1628,1629]]},{"type":"Polygon","id":29095,"arcs":[[1630,1631,1632,-465,1633,1634,1635]]},{"type":"Polygon","id":41049,"arcs":[[1636,1637,1638,1639,1640,1641]]},{"type":"Polygon","id":53077,"arcs":[[1642,1643,1644,1645,1646,1647,1648]]},{"type":"MultiPolygon","id":41007,"arcs":[[[1649,1650]],[[1651,1652,1653,1654]]]},{"type":"Polygon","id":41003,"arcs":[[1655,1656,1657,1658]]},{"type":"Polygon","id":41027,"arcs":[[1659,1660,1661,1662,1663]]},{"type":"Polygon","id":53007,"arcs":[[1664,1665,1666,1667,1668,1669]]},{"type":"Polygon","id":53035,"arcs":[[1670,1671,1672]]},{"type":"Polygon","id":53043,"arcs":[[1673,1674,1675,1676,1677,1678,1679]]},{"type":"Polygon","id":17143,"arcs":[[1680,1681,1682,1683,1684,1685]]},{"type":"Polygon","id":17195,"arcs":[[1686,1687,1688,1689,1690,1691,1692]]},{"type":"Polygon","id":17005,"arcs":[[-515,1693,1694,1695]]},{"type":"Polygon","id":17099,"arcs":[[1696,1697,1698,1699,1700,1701,1702,1703,1704]]},{"type":"Polygon","id":17043,"arcs":[[-576,1705,1706,1707]]},{"type":"Polygon","id":17091,"arcs":[[1708,1709,1710,-579,1711,1712,1713]]},{"type":"Polygon","id":72091,"arcs":[[1714,1715,1716,1717,1718,1719]]},{"type":"Polygon","id":72049,"arcs":[[1720]]},{"type":"Polygon","id":72005,"arcs":[[1721,1722,1723,1724,1725,1726]]},{"type":"Polygon","id":72043,"arcs":[[1727,1728,1729,1730,1731,1732,1733]]},{"type":"Polygon","id":72083,"arcs":[[1734,1735,1736,1737,1738]]},{"type":"Polygon","id":72013,"arcs":[[1739,1740,1741,1742,1743,1744]]},{"type":"Polygon","id":72015,"arcs":[[1745,1746,1747]]},{"type":"Polygon","id":72053,"arcs":[[1748,1749,1750]]},{"type":"Polygon","id":72033,"arcs":[[1751,1752,1753,1754,1755,1756,1757,1758]]},{"type":"Polygon","id":72045,"arcs":[[1759,1760,1761,1762,1763]]},{"type":"Polygon","id":72027,"arcs":[[1764,1765,1766,1767,1768]]},{"type":"Polygon","id":72059,"arcs":[[1769,1770,1771,1772]]},{"type":"Polygon","id":72113,"arcs":[[1773,1774,1775,1776,1777,1778]]},{"type":"Polygon","id":72077,"arcs":[[1779,1780,1781,1782]]},{"type":"Polygon","id":55011,"arcs":[[1783,1784,1785,1786,1787]]},{"type":"Polygon","id":55051,"arcs":[[1788,1789,1790,1791,1792]]},{"type":"Polygon","id":42047,"arcs":[[-908,1793,-845,1794,-882,1795]]},{"type":"Polygon","id":55019,"arcs":[[1796,1797,1798,1799,1800,1801]]},{"type":"Polygon","id":42107,"arcs":[[-897,1802,1803,1804,-943,1805,1806,1807]]},{"type":"Polygon","id":42057,"arcs":[[1808,1809,-816,-721,1810]]},{"type":"MultiPolygon","id":42029,"arcs":[[[1811,-753]],[[-940,1812,-755,1813,1814,1815]]]},{"type":"Polygon","id":55049,"arcs":[[1816,1817,1818,1819,1820,1821]]},{"type":"Polygon","id":42121,"arcs":[[1822,1823,-874,-744,1824,-906]]},{"type":"Polygon","id":42113,"arcs":[[1825,-836,1826,-895,1827]]},{"type":"Polygon","id":55047,"arcs":[[1828,1829,1830,1831,1832,1833]]},{"type":"Polygon","id":55055,"arcs":[[1834,1835,1836,1837,1838]]},{"type":"Polygon","id":55015,"arcs":[[1839,1840,1841,1842,1843,1844]]},{"type":"Polygon","id":55031,"arcs":[[1845,1846,1847,1848,1849,1850,1851]]},{"type":"Polygon","id":55083,"arcs":[[1852,1853,1854,1855,1856,1857,1858]]},{"type":"Polygon","id":55061,"arcs":[[1859,1860,1861,1862,1863]]},{"type":"Polygon","id":55057,"arcs":[[1864,1865,1866,1867,1868,1869]]},{"type":"Polygon","id":42105,"arcs":[[1870,1871,-813,1872,-760,1873,-843]]},{"type":"Polygon","id":55063,"arcs":[[1874,1875,1876,1877,1878,1879]]},{"type":"Polygon","id":55085,"arcs":[[1880,1881,1882,1883,1884]]},{"type":"Polygon","id":55095,"arcs":[[1885,1886,1887,1888,1889]]},{"type":"Polygon","id":55059,"arcs":[[1890,1891,1892,1893,1894]]},{"type":"Polygon","id":55093,"arcs":[[1895,1896,1897,1898,1899,1900]]},{"type":"Polygon","id":55037,"arcs":[[1901,1902,1903,1904]]},{"type":"Polygon","id":55023,"arcs":[[1905,1906,1907,1908,1909]]},{"type":"Polygon","id":42081,"arcs":[[-796,1910,1911,-761,-1873,-812,1912,-1828,-899]]},{"type":"Polygon","id":42015,"arcs":[[1913,-837,-1826,-1913,-811,1914,1915]]},{"type":"Polygon","id":42007,"arcs":[[1916,-687,1917,1918,1919,-792]]},{"type":"Polygon","id":42013,"arcs":[[-879,1920,-716,-815,-665]]},{"type":"Polygon","id":42077,"arcs":[[-1805,1921,1922,-929,1923,-944]]},{"type":"Polygon","id":39069,"arcs":[[1924,1925,1926,1927,1928,1929]]},{"type":"Polygon","id":42025,"arcs":[[-829,1930,-1922,-1804,1931]]},{"type":"Polygon","id":42087,"arcs":[[1932,1933,1934,1935,-718]]},{"type":"Polygon","id":42119,"arcs":[[1936,1937,-1934,1938,-762,-1912]]},{"type":"Polygon","id":42123,"arcs":[[-1825,-743,-855,1939,1940,-846,-1794,-907]]},{"type":"Polygon","id":42075,"arcs":[[1941,1942,-1806,-942]]},{"type":"Polygon","id":42125,"arcs":[[-869,-904,902,-902,1943,1944,1945,1946,-1918,-691,1947]]},{"type":"Polygon","id":42069,"arcs":[[-834,1948,1949,-831,1950]]},{"type":"Polygon","id":42043,"arcs":[[1951,-873,1952,-1807,-1943,1953,-851]]},{"type":"Polygon","id":42097,"arcs":[[-898,-1808,-1953,1954,1955,-1937,-1911,-798]]},{"type":"Polygon","id":42079,"arcs":[[-1827,-835,-1951,-830,-1932,-1803,-896]]},{"type":"Polygon","id":42101,"arcs":[[1956,-1319,1957,-750,1958,-927]]},{"type":"Polygon","id":42091,"arcs":[[-1959,-749,-1813,-939,-1924,-928]]},{"type":"Polygon","id":42041,"arcs":[[-870,-1952,-850,-711,1959]]},{"type":"Polygon","id":42111,"arcs":[[-667,-818,1960,1961,-862,1962]]},{"type":"Polygon","id":42023,"arcs":[[-844,-1874,-765,-883,-1795]]},{"type":"Polygon","id":42055,"arcs":[[-715,1963,1964,-1811,-720,1965,-871,-1960]]},{"type":"Polygon","id":42067,"arcs":[[1966,-1955,-872,-1966,-719,-1936]]},{"type":"Polygon","id":42027,"arcs":[[-1921,-878,-763,-1939,-1933,-717]]},{"type":"Polygon","id":42005,"arcs":[[1967,1968,1969,-689,1970,1971]]},{"type":"Polygon","id":39145,"arcs":[[1972,1973,1974,1975,1976,1977]]},{"type":"Polygon","id":42071,"arcs":[[-941,-1816,1978,1979,-852,-1954,-1942]]},{"type":"Polygon","id":42127,"arcs":[[1980,-832,-1950,1981,1982,1983,1984]]},{"type":"Polygon","id":42115,"arcs":[[1985,1986,-1982,-1949,-838,-1914]]},{"type":"Polygon","id":42129,"arcs":[[-690,-1970,1987,-668,-1963,-861,-1948]]},{"type":"Polygon","id":42103,"arcs":[[-833,-1981,1988,1989,1990]]},{"type":"Polygon","id":42063,"arcs":[[-1969,1991,-880,-663,-1988]]},{"type":"Polygon","id":42031,"arcs":[[1992,-1823,-910,1993,-1972]]},{"type":"Polygon","id":39103,"arcs":[[1994,1995,1996,1997,1998]]},{"type":"Polygon","id":42095,"arcs":[[-1931,-828,1999,-930,-1923]]},{"type":"Polygon","id":2090,"arcs":[[-949,2000,2001]]},{"type":"MultiPolygon","id":2110,"arcs":[[[-1001,2002,-999,2003,2004,2005]],[[-997,2006]],[[2007]]]},{"type":"MultiPolygon","id":2180,"arcs":[[[-1038,2008,-1025,2009]],[[2010]],[[2011]],[[2012]],[[2013]]]},{"type":"MultiPolygon","id":2198,"arcs":[[[2014,-1030]],[[2015]],[[2016]],[[2017]],[[2018]],[[2019]],[[2020]]]},{"type":"MultiPolygon","id":2220,"arcs":[[[2021,2022]],[[-1005,2023]],[[2024]],[[2025]]]},{"type":"Polygon","id":28049,"arcs":[[2026,2027,2028,2029,2030,2031]]},{"type":"Polygon","id":22085,"arcs":[[-1306,2032,2033,2034,-136,2035]]},{"type":"Polygon","id":22081,"arcs":[[2036,2037,2038,2039,2040]]},{"type":"MultiPolygon","id":51001,"arcs":[[[2041,2042,2043,2044,2045]],[[2046,2047]],[[2048]]]},{"type":"Polygon","id":51073,"arcs":[[2049,2050,2051,2052,2053,2054]]},{"type":"Polygon","id":51690,"arcs":[[2055]]},{"type":"Polygon","id":51193,"arcs":[[2056,2057,-1573,2058,-1571,2059,-1569,2060,-1567,2061,-1565,2062,-1563,2063,-1561,2064,-1559,2065,-1557,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090]]},{"type":"Polygon","id":51660,"arcs":[[2091]]},{"type":"Polygon","id":48107,"arcs":[[2092,2093,2094,-110]]},{"type":"Polygon","id":48391,"arcs":[[2095,2096,2097,2098,2099,2100,2101,2102,2103,2104,2105,2106,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,2118,2119]]},{"type":"Polygon","id":48053,"arcs":[[2120,2121,2122,2123,2124,2125,2126]]},{"type":"Polygon","id":48431,"arcs":[[-1156,-1301,-96,2127,2128,-159]]},{"type":"Polygon","id":48339,"arcs":[[2129,2130,-1211,2131,2132,-1281]]},{"type":"Polygon","id":48405,"arcs":[[-1308,2133,2134,2135,-267]]},{"type":"Polygon","id":48379,"arcs":[[-124,2136,-1313,2137]]},{"type":"MultiPolygon","id":48355,"arcs":[[[2138,2139,2140,2141]],[[2142,2143,2144,2145]],[[2146,2147]],[[2148,2149]],[[-2151,-2152,-2153]],[[-2154,-2155,-2156]],[[-2157,-2158,-2159,-2160,-2161,-2162]],[[2162,2163]],[[2164,2165,2166]],[[2167,2168,2169]],[[2170,2171,2172]],[[2173,2174]],[[2175,2176,2177]],[[-2179,-2180,-2181]],[[2181,2182,2183,2184]],[[2185,2186,2187,2188]],[[2189]]]},{"type":"Polygon","id":48237,"arcs":[[2190,2191,2192,2193,2194,-1247,-1296]]},{"type":"Polygon","id":48437,"arcs":[[2195,2196,2197,-107,2198,2199]]},{"type":"Polygon","id":48063,"arcs":[[-197,2200,-1310,-120,2201]]},{"type":"Polygon","id":48041,"arcs":[[2202,2203,2204,2205,2206]]},{"type":"Polygon","id":48361,"arcs":[[2207,2208,-133,-1088,2209,2210]]},{"type":"Polygon","id":48089,"arcs":[[2211,2212,2213,-220,2214]]},{"type":"Polygon","id":48371,"arcs":[[2215,2216,2217,2218,-116,2219,2220]]},{"type":"Polygon","id":48079,"arcs":[[-1364,-1427,2221,2222,2223]]},{"type":"Polygon","id":48369,"arcs":[[-1218,2224,-188,2225,-1429]]},{"type":"Polygon","id":48161,"arcs":[[2226,2227,2228,-176,2229]]},{"type":"Polygon","id":48495,"arcs":[[2230,-1367,2231,2232,2233]]},{"type":"Polygon","id":48485,"arcs":[[2234,2235,2236,2237,2238]]},{"type":"Polygon","id":48179,"arcs":[[-232,2239,2240,-1229]]},{"type":"Polygon","id":48413,"arcs":[[2241,2242,2243,2244,-156]]},{"type":"Polygon","id":48197,"arcs":[[2245,2246,2247,2248,2249,-103]]},{"type":"Polygon","id":38029,"arcs":[[2250,2251,2252,2253,2254,2255,2256,2257]]},{"type":"Polygon","id":38039,"arcs":[[2258,2259,2260,2261,2262,2263,2264,2265]]},{"type":"Polygon","id":38097,"arcs":[[2266,2267,2268,2269,2270]]},{"type":"Polygon","id":34029,"arcs":[[2271,2272,2273,2274]]},{"type":"Polygon","id":38025,"arcs":[[2275,2276,2277,2278,2279,2280]]},{"type":"Polygon","id":38065,"arcs":[[2281,2282,2283,2284]]},{"type":"Polygon","id":38087,"arcs":[[2285,2286,2287,2288,2289,2290,2291]]},{"type":"Polygon","id":38035,"arcs":[[-2268,2292,2293,2294,2295,2296]]},{"type":"Polygon","id":38041,"arcs":[[-2289,2297,2298,2299]]},{"type":"Polygon","id":38037,"arcs":[[2300,-2299,2301,2302,2303]]},{"type":"Polygon","id":38013,"arcs":[[2304,2305,2306,2307,2308,2309]]},{"type":"Polygon","id":38027,"arcs":[[2310,2311,2312,-2259,2313]]},{"type":"Polygon","id":38073,"arcs":[[2314,2315,2316,2317,2318,2319]]},{"type":"Polygon","id":38103,"arcs":[[-2311,2320,2321,2322,2323,2324,2325]]},{"type":"Polygon","id":38067,"arcs":[[2326,2327,2328,2329,2330]]},{"type":"Polygon","id":38007,"arcs":[[2331,-2281,2332,-2287,2333]]},{"type":"Polygon","id":38019,"arcs":[[2334,2335,2336,-2327,2337]]},{"type":"Polygon","id":38079,"arcs":[[2338,2339,2340,2341]]},{"type":"Polygon","id":38071,"arcs":[[2342,-2335,2343,2344,2345]]},{"type":"Polygon","id":38011,"arcs":[[2346,2347,2348,-2291]]},{"type":"Polygon","id":32013,"arcs":[[2349,2350,2351,2352,2353,2354,2355]]},{"type":"Polygon","id":4007,"arcs":[[2356,2357,-1339,2358,2359,2360]]},{"type":"Polygon","id":4027,"arcs":[[-644,-1344,2361,-1334,2362]]},{"type":"Polygon","id":32009,"arcs":[[2363,2364,2365,-609]]},{"type":"Polygon","id":32019,"arcs":[[2366,2367,2368,2369,2370,-607,2371]]},{"type":"Polygon","id":32031,"arcs":[[2372,2373,2374,2375,2376,2377,-2354,2378,2379,-2369,2380,2381,-626]]},{"type":"Polygon","id":4025,"arcs":[[-2357,2382,-1342,2383,2384]]},{"type":"Polygon","id":32021,"arcs":[[-2371,2385,2386,-2364,-608]]},{"type":"Polygon","id":32005,"arcs":[[2387,-628,2388,-2372,-606,2389]]},{"type":"Polygon","id":32011,"arcs":[[2390,2391,2392,2393]]},{"type":"Polygon","id":32015,"arcs":[[-2352,2394,-2394,2395,2396,2397]]},{"type":"Polygon","id":4021,"arcs":[[-2360,2398,-1329,2399]]},{"type":"Polygon","id":32017,"arcs":[[2400,2401,2402,2403,2404,2405,2406,2407]]},{"type":"Polygon","id":32033,"arcs":[[2408,-2392,2409,2410,2411,2412,-2401]]},{"type":"Polygon","id":32003,"arcs":[[2413,2414,2415,-2407,2416]]},{"type":"Polygon","id":35013,"arcs":[[-1357,-1411,2417,2418,2419,2420,2421]]},{"type":"Polygon","id":35005,"arcs":[[-1428,-1362,-1441,-1406,2422,-1447]]},{"type":"Polygon","id":35061,"arcs":[[-1394,2423,-1451,-1467]]},{"type":"Polygon","id":35039,"arcs":[[2424,-1435,2425,2426,-1462,2427,-1416,2428]]},{"type":"Polygon","id":35047,"arcs":[[2429,-1354,-1455,-1377,-1391,2430]]},{"type":"Polygon","id":35003,"arcs":[[-1453,2431,-1360,-1404,2432,2433]]},{"type":"MultiPolygon","id":35043,"arcs":[[[2434,-1464]],[[-1466,2435,-1468,-1449,2436,-1417,-2428]]]},{"type":"Polygon","id":35049,"arcs":[[-2435,-1463,-2427,2437,-2431,-1390,-1469,-2436,-1465]]},{"type":"Polygon","id":35053,"arcs":[[-2432,-1452,-2424,-1393,2438,-1361]]},{"type":"Polygon","id":35027,"arcs":[[-1392,-1380,-1445,-2423,-1405,-1355,-2439]]},{"type":"Polygon","id":35031,"arcs":[[2439,-1418,-2437,-1448]]},{"type":"Polygon","id":35029,"arcs":[[-1358,-2422,2440,-1438,-1401]]},{"type":"Polygon","id":35033,"arcs":[[-2438,-2426,-1434,-1461,-1350,-2430]]},{"type":"Polygon","id":35059,"arcs":[[2441,2442,2443,-236,2444,-1456,-1352,-1460]]},{"type":"Polygon","id":24001,"arcs":[[-1810,2445,2446,2447,2448,2449,-1961,-817]]},{"type":"Polygon","id":24510,"arcs":[[2450,2451,2452,2453,2454]]},{"type":"Polygon","id":24021,"arcs":[[-1964,-714,2455,2456,2457,2458,2459]]},{"type":"MultiPolygon","id":44005,"arcs":[[[-1615,2460,2461,2462]],[[2463]],[[2464]],[[2465]],[[2466]]]},{"type":"Polygon","id":44007,"arcs":[[2467,2468,-1613,-1492,2469,2470]]},{"type":"Polygon","id":24047,"arcs":[[2471,-2046,2472,2473,2474]]},{"type":"Polygon","id":41053,"arcs":[[2475,2476,-1659,2477,2478,2479]]},{"type":"Polygon","id":41039,"arcs":[[2480,2481,-1657,2482,2483,2484,2485]]},{"type":"Polygon","id":41063,"arcs":[[2486,2487,2488,2489,2490,2491,2492,2493,2494]]},{"type":"Polygon","id":41025,"arcs":[[2495,2496,2497,2498,-2355,-2378,2499]]},{"type":"Polygon","id":41013,"arcs":[[2500,2501,2502,-2497,2503]]},{"type":"Polygon","id":41071,"arcs":[[2504,2505,2506,-2480,2507]]},{"type":"Polygon","id":41041,"arcs":[[2508,-2478,-1658,-2482,2509]]},{"type":"Polygon","id":41059,"arcs":[[2510,2511,2512,-2487,2513,2514,-1639]]},{"type":"Polygon","id":41029,"arcs":[[2515,2516,2517,2518]]},{"type":"Polygon","id":41015,"arcs":[[2519,2520,2521,2522,2523]]},{"type":"Polygon","id":41057,"arcs":[[-1654,2524,-2508,-2479,-2509,2525]]},{"type":"Polygon","id":41009,"arcs":[[2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2542,-1653]]},{"type":"Polygon","id":41011,"arcs":[[2543,-2520,2544]]},{"type":"Polygon","id":41051,"arcs":[[2545,-1664,2546,2547,-2542,2548]]},{"type":"Polygon","id":41045,"arcs":[[2549,-2356,-2499,2550,2551,2552,2553,2554]]},{"type":"Polygon","id":41019,"arcs":[[2555,-2486,2556,-2519,2557,-2521,-2544]]},{"type":"Polygon","id":41065,"arcs":[[2558,2559,2560,2561,2562,2563,-1662,2564]]},{"type":"Polygon","id":41043,"arcs":[[2565,2566,-2483,-1656,-2477,2567]]},{"type":"Polygon","id":41055,"arcs":[[2568,2569,-2559]]},{"type":"Polygon","id":41031,"arcs":[[-2566,2570,-2562,2571,-2501,2572]]},{"type":"Polygon","id":41037,"arcs":[[2573,-2500,-2377,2574,2575]]},{"type":"Polygon","id":41061,"arcs":[[2576,2577,-2514,-2495]]},{"type":"Polygon","id":41021,"arcs":[[2578,-1642,2579,-2560,-2570]]},{"type":"Polygon","id":17121,"arcs":[[2580,2581,2582,2583,2584,2585]]},{"type":"Polygon","id":17127,"arcs":[[2586,2587,2588,2589,2590]]},{"type":"Polygon","id":17019,"arcs":[[2591,2592,2593,-521,2594]]},{"type":"Polygon","id":17069,"arcs":[[2595,2596,2597,2598,2599,2600]]},{"type":"Polygon","id":17111,"arcs":[[-1895,2601,2602,2603,2604,2605,2606,2607,2608]]},{"type":"Polygon","id":17149,"arcs":[[-487,2609,-559,2610,2611,2612,2613,2614,2615]]},{"type":"Polygon","id":17049,"arcs":[[2616,2617,-573,2618,2619]]},{"type":"Polygon","id":72105,"arcs":[[2620,2621,-1764,2622,2623]]},{"type":"Polygon","id":72145,"arcs":[[-1716,2624,2625,2626]]},{"type":"Polygon","id":72117,"arcs":[[2627,2628,2629]]},{"type":"Polygon","id":72129,"arcs":[[2630,-1782,2631,2632,2633,2634,2635]]},{"type":"MultiPolygon","id":72097,"arcs":[[[2636,2637,2638,-1739,2639,2640,2641]],[[2642]]]},{"type":"Polygon","id":72147,"arcs":[[2643]]},{"type":"Polygon","id":72039,"arcs":[[2644,-1743,2645,-1718,2646,2647,2648]]},{"type":"Polygon","id":72111,"arcs":[[2649,-1775,2650,-1771]]},{"type":"Polygon","id":72007,"arcs":[[2651,2652,2653,-1761,2654,2655]]},{"type":"Polygon","id":72011,"arcs":[[2656,2657,2658,-1735,-2639,2659,-2628]]},{"type":"Polygon","id":72115,"arcs":[[-1769,2660,2661,2662]]},{"type":"Polygon","id":72079,"arcs":[[2663,2664,2665,2666,2667]]},{"type":"MultiPolygon","id":72137,"arcs":[[[-1757,2668,2669]],[[-1755,2670,2671,2672,2673]]]},{"type":"Polygon","id":72019,"arcs":[[-1763,2674,2675,-1733,2676,2677,-2623]]},{"type":"Polygon","id":72133,"arcs":[[2678,-1729,2679,2680]]},{"type":"Polygon","id":72123,"arcs":[[-2680,-1728,2681,2682,2683,2684]]},{"type":"Polygon","id":72089,"arcs":[[2685,-1751,2686,2687]]},{"type":"Polygon","id":72037,"arcs":[[2688,-2687,-1750,2689,2690]]},{"type":"Polygon","id":72054,"arcs":[[-1742,2691,-1719,-2646]]},{"type":"Polygon","id":72041,"arcs":[[2692,2693,2694,-2675,-1762,-2654]]},{"type":"Polygon","id":72031,"arcs":[[2695,2696,2697,2698,2699,2700]]},{"type":"Polygon","id":72069,"arcs":[[2701,2702,2703,2704]]},{"type":"Polygon","id":72003,"arcs":[[-1727,2705,-2657,-2630,2706]]},{"type":"Polygon","id":72103,"arcs":[[2707,2708,-2691,2709,-2703]]},{"type":"Polygon","id":72125,"arcs":[[2710,2711,-2641,2712,2713,-2665]]},{"type":"Polygon","id":72135,"arcs":[[2714,2715,-2672,2716,-2621,2717]]},{"type":"Polygon","id":72139,"arcs":[[2718,2719,-2700,2720]]},{"type":"Polygon","id":72087,"arcs":[[2721,2722,2723,-2697]]},{"type":"Polygon","id":72061,"arcs":[[-1753,2724,-2656,2725]]},{"type":"Polygon","id":72047,"arcs":[[-2718,-2624,-2678,2726,2727,2728]]},{"type":"Polygon","id":72151,"arcs":[[2729,-2633,2730,-2705,2731,2732]]},{"type":"Polygon","id":72057,"arcs":[[2733,2734,-1747,2735,-2684]]},{"type":"Polygon","id":72017,"arcs":[[-1720,-2692,-1741,2736]]},{"type":"Polygon","id":72149,"arcs":[[-1731,2737,2738]]},{"type":"Polygon","id":72081,"arcs":[[-1767,2739,2740,2741,2742,2743,-1737,2744]]},{"type":"Polygon","id":72065,"arcs":[[2745,-1745,2746,-2740,-1766]]},{"type":"Polygon","id":72071,"arcs":[[2747,-2662,2748,2749,-1723]]},{"type":"Polygon","id":72029,"arcs":[[2750,2751,-1780,-2698,-2724]]},{"type":"Polygon","id":72095,"arcs":[[-2733,2752,2753]]},{"type":"Polygon","id":6093,"arcs":[[2754,2755,2756,2757,2758,2759,2760,-2517]]},{"type":"Polygon","id":6097,"arcs":[[2761,2762,2763,2764,2765,2766,2767]]},{"type":"Polygon","id":6085,"arcs":[[2768,2769,2770,2771,2772,2773]]},{"type":"Polygon","id":13173,"arcs":[[2774,2775,2776,2777,2778]]},{"type":"Polygon","id":13029,"arcs":[[2779,2780,2781,2782,2783,2784,2785]]},{"type":"Polygon","id":13001,"arcs":[[2786,2787,2788,2789,2790,2791]]},{"type":"Polygon","id":13241,"arcs":[[2792,2793,2794,2795,2796]]},{"type":"Polygon","id":13023,"arcs":[[2797,2798,2799,2800,2801]]},{"type":"Polygon","id":13113,"arcs":[[2802,2803,2804,2805]]},{"type":"Polygon","id":13163,"arcs":[[2806,2807,2808,2809,2810,2811,2812,2813]]},{"type":"Polygon","id":13253,"arcs":[[2814,2815,2816,2817,2818,2819]]},{"type":"Polygon","id":13039,"arcs":[[2820,2821,2822,2823,2824]]},{"type":"Polygon","id":13127,"arcs":[[2825,2826,2827,2828,-2823]]},{"type":"Polygon","id":13233,"arcs":[[2829,2830,2831,2832,2833,2834]]},{"type":"Polygon","id":13211,"arcs":[[2835,2836,2837,2838,2839,2840]]},{"type":"Polygon","id":13263,"arcs":[[2841,2842,2843,2844,2845,2846,2847]]},{"type":"Polygon","id":13249,"arcs":[[2848,2849,2850,2851,2852],[2853]]},{"type":"Polygon","id":13291,"arcs":[[2854,2855,2856,2857,2858,2859]]},{"type":"Polygon","id":13315,"arcs":[[2860,2861,2862,2863,2864,2865,2866]]},{"type":"Polygon","id":13299,"arcs":[[2867,2868,2869,2870,2871,2872,2873,2874]]},{"type":"Polygon","id":13059,"arcs":[[2875,2876,2877,2878]]},{"type":"Polygon","id":13169,"arcs":[[2879,2880,2881,2882,2883,2884,2885]]},{"type":"Polygon","id":13045,"arcs":[[2886,2887,2888,2889,2890,2891,2892,2893]]},{"type":"Polygon","id":13247,"arcs":[[2894,2895,2896,2897,2898]]},{"type":"Polygon","id":13083,"arcs":[[2899,2900,2901,2902,2903]]},{"type":"Polygon","id":13213,"arcs":[[2904,2905,2906,2907,2908,2909]]},{"type":"Polygon","id":6029,"arcs":[[2910,2911,2912,2913,2914,2915,-598,2916]]},{"type":"Polygon","id":55001,"arcs":[[2917,2918,-1869,2919,2920,2921]]},{"type":"Polygon","id":55121,"arcs":[[2922,-1875,2923,-1787,2924]]},{"type":"Polygon","id":55123,"arcs":[[2925,-1865,2926,2927,-1906,2928,2929,-1878]]},{"type":"Polygon","id":55141,"arcs":[[-2920,-1868,2930,-1797,2931,2932]]},{"type":"Polygon","id":55107,"arcs":[[2933,2934,2935,2936,2937]]},{"type":"Polygon","id":55133,"arcs":[[2938,2939,2940,2941,2942,-1838]]},{"type":"Polygon","id":55113,"arcs":[[2943,2944,2945,-2936,2946]]},{"type":"Polygon","id":55131,"arcs":[[2947,2948,2949,2950,-2940]]},{"type":"Polygon","id":55033,"arcs":[[-1899,2951,2952,2953,2954,2955]]},{"type":"Polygon","id":55125,"arcs":[[2956,-1791,2957,2958,2959,-1883]]},{"type":"Polygon","id":55067,"arcs":[[-1885,2960,-1857,2961,2962,2963,2964]]},{"type":"Polygon","id":36007,"arcs":[[2965,-1983,-1987,2966,2967,2968]]},{"type":"Polygon","id":36099,"arcs":[[2969,2970,2971,2972,2973,2974]]},{"type":"Polygon","id":55039,"arcs":[[-1831,2975,-1844,2976,-2949,2977]]},{"type":"Polygon","id":55035,"arcs":[[-1799,2978,-2925,-1786,2979,-2955,2980]]},{"type":"Polygon","id":55101,"arcs":[[-2942,2981,2982,-1892,2983]]},{"type":"Polygon","id":36093,"arcs":[[2984,2985,2986,2987]]},{"type":"Polygon","id":36063,"arcs":[[2988,2989,2990,2991]]},{"type":"Polygon","id":55119,"arcs":[[2992,-2938,2993,2994,2995,-1801]]},{"type":"Polygon","id":36083,"arcs":[[2996,2997,2998,2999,3000,3001]]},{"type":"Polygon","id":36111,"arcs":[[3002,3003,3004,3005,3006,3007]]},{"type":"Polygon","id":55081,"arcs":[[-1866,-2926,-1877,3008]]},{"type":"MultiPolygon","id":36085,"arcs":[[[3009,3010]],[[3011,3012]],[[3013,3014]],[[3015,3016]],[[3017,3018]],[[3019,3020]],[[-3022,291,-3023]],[[-290,3023]],[[3024]]]},{"type":"MultiPolygon","id":55007,"arcs":[[[-1846,3025,3026,-2944]],[[3027]]]},{"type":"Polygon","id":36075,"arcs":[[3028,3029,3030,3031,3032,-937,3033]]},{"type":"Polygon","id":55075,"arcs":[[3034,-1859,3035,-1904,3036,3037]]},{"type":"Polygon","id":55017,"arcs":[[-2981,-2954,3038,-2934,-2993,-1800]]},{"type":"Polygon","id":36113,"arcs":[[3039,3040,3041,3042]]},{"type":"Polygon","id":55078,"arcs":[[-2962,-1856,3043]]},{"type":"Polygon","id":55025,"arcs":[[3044,3045,3046,-1836,3047,3048,-1819]]},{"type":"Polygon","id":36019,"arcs":[[3049,-431,3050,3051,3052]]},{"type":"Polygon","id":55137,"arcs":[[3053,-2922,3054,3055,3056,-1829]]},{"type":"Polygon","id":55139,"arcs":[[3057,3058,-1845,-2976,-1830,-3057]]},{"type":"Polygon","id":55091,"arcs":[[-2956,-2980,-1785,3059,3060,-1900]]},{"type":"Polygon","id":55129,"arcs":[[3061,-1847,-2947,3062]]},{"type":"Polygon","id":55103,"arcs":[[-2928,3063,-1817,3064,-1907]]},{"type":"Polygon","id":36013,"arcs":[[3065,3066,3067,-1940,-854]]},{"type":"Polygon","id":36035,"arcs":[[3068,3069,3070,3071]]},{"type":"Polygon","id":36055,"arcs":[[3072,3073,3074,3075,3076,3077]]},{"type":"Polygon","id":36033,"arcs":[[3078,-3053,3079,3080,3081]]},{"type":"Polygon","id":36015,"arcs":[[3082,3083,3084,-1915,-810,3085]]},{"type":"Polygon","id":55053,"arcs":[[-2979,-1798,-2931,-1867,-3009,-1876,-2923]]},{"type":"Polygon","id":55135,"arcs":[[3086,-3058,-3056,3087,3088]]},{"type":"Polygon","id":55045,"arcs":[[3089,-1820,-3049,3090,-537,3091]]},{"type":"Polygon","id":55105,"arcs":[[-3048,-1835,3092,3093,-538,-3091]]},{"type":"MultiPolygon","id":55029,"arcs":[[[3094,-1864]],[[3095]],[[3096]]]},{"type":"Polygon","id":55099,"arcs":[[-2937,-2946,3097,-1792,-2957,-1882,3098,-2994]]},{"type":"Polygon","id":55013,"arcs":[[3099,3100,-1848,-3062,3101,-1886]]},{"type":"Polygon","id":55079,"arcs":[[3102,3103,-2982,-2941]]},{"type":"MultiPolygon","id":55003,"arcs":[[[3104,-1793,-3098,-2945,-3027]],[[3105]],[[3106]],[[3107]],[[3108]],[[3109]],[[3110]]]},{"type":"Polygon","id":55021,"arcs":[[-2919,3111,-1833,3112,-3046,3113]]},{"type":"Polygon","id":55111,"arcs":[[-2927,-1870,-3114,-3045,-1818,-3064]]},{"type":"Polygon","id":55005,"arcs":[[-2953,-1887,-3102,-3063,-2935,-3039]]},{"type":"Polygon","id":55077,"arcs":[[-3054,-1834,-3112,-2918]]},{"type":"Polygon","id":55087,"arcs":[[-3059,-3087,3114,3115,-1840]]},{"type":"Polygon","id":36009,"arcs":[[3116,3117,3118,-841,-1941,-3068]]},{"type":"Polygon","id":55109,"arcs":[[-1888,-2952,-1898,3119]]},{"type":"Polygon","id":55043,"arcs":[[3120,-495,3121,3122,-1908,-3065,-1822]]},{"type":"Polygon","id":55115,"arcs":[[3123,-2963,-3044,-1855,3124,-3115,-3089]]},{"type":"MultiPolygon","id":36061,"arcs":[[[-300,3125,-299,3126,-302,3127]],[[3128,-304,3129,-297]],[[3130,-288,3131,3132,3133,3134]]]},{"type":"Polygon","id":55065,"arcs":[[-1821,-3090,3135,-496,-3121]]},{"type":"Polygon","id":55009,"arcs":[[3136,-1841,-3116,-3125,-1854,3137,-1862]]},{"type":"Polygon","id":55117,"arcs":[[-2950,-2977,-1843,3138,3139,3140]]},{"type":"Polygon","id":55071,"arcs":[[-3137,-1861,3141,-3139,-1842]]},{"type":"Polygon","id":55089,"arcs":[[-3141,3142,-3103,-2951]]},{"type":"Polygon","id":55097,"arcs":[[3143,-3088,-3055,-2921,-2933]]},{"type":"Polygon","id":36043,"arcs":[[3144,3145,3146,-3069,3147,3148,3149]]},{"type":"Polygon","id":55073,"arcs":[[-2932,-1802,-2996,3150,-2964,-3124,-3144]]},{"type":"Polygon","id":55127,"arcs":[[-2609,3151,-3093,-1839,-2943,-2984,-1891]]},{"type":"Polygon","id":55041,"arcs":[[-1884,-2960,3152,-1905,-3036,-1858,-2961]]},{"type":"Polygon","id":55027,"arcs":[[-3047,-3113,-1832,-2978,-2948,-2939,-1837]]},{"type":"Polygon","id":55069,"arcs":[[-2965,-3151,-2995,-3099,-1881]]},{"type":"Polygon","id":28021,"arcs":[[3153,3154,3155,3156,3157,-2028,3158]]},{"type":"Polygon","id":28055,"arcs":[[3159,3160,3161,3162,3163,3164]]},{"type":"Polygon","id":28023,"arcs":[[3165,3166,3167,3168]]},{"type":"MultiPolygon","id":2195,"arcs":[[[3169,3170,3171]],[[-2022,3172]],[[-1003,3173,3174,3175]],[[3176]],[[3177]],[[3178]]]},{"type":"MultiPolygon","id":2275,"arcs":[[[-3170,3179,3180]],[[-3175,3181,-1028,3182]],[[3183]],[[3184]],[[3185]],[[3186]]]},{"type":"Polygon","id":2170,"arcs":[[3187,3188,3189,3190,-947,3191,3192,3193]]},{"type":"Polygon","id":2290,"arcs":[[-1027,-991,3194,-950,-2002,3195,-3190,3196,-1035,-2010]]},{"type":"Polygon","id":2282,"arcs":[[-994,3197,3198,3199]]},{"type":"MultiPolygon","id":2122,"arcs":[[[3200,3201,3202]],[[-1011,-981,3203,-3188,3204]],[[3205]],[[3206]],[[3207]],[[3208]]]},{"type":"MultiPolygon","id":2261,"arcs":[[[-946,3209,-3199,3210,-3202,3211,-3192]],[[3212]],[[3213]],[[3214]],[[3215]],[[3216]],[[3217]]]},{"type":"Polygon","id":28147,"arcs":[[3218,3219,3220,3221,3222]]},{"type":"Polygon","id":28009,"arcs":[[-1044,3223,3224,3225,3226]]},{"type":"Polygon","id":22055,"arcs":[[3227,3228,-1092,3229,3230]]},{"type":"Polygon","id":22093,"arcs":[[3231,3232,-1077,3233]]},{"type":"Polygon","id":22109,"arcs":[[3234,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,-1079,3272]]},{"type":"MultiPolygon","id":22099,"arcs":[[[3273,3274,-1081]],[[3275,-3231,3276,3277,3278]]]},{"type":"Polygon","id":51775,"arcs":[[3279,3280]]},{"type":"Polygon","id":51810,"arcs":[[3281,3282,3283,3284]]},{"type":"MultiPolygon","id":51179,"arcs":[[[-1524,3285,-1522,3286,-1520,3287,-1518,3288,-1516,3289,-1513,3290,3291,3292,3293,3294,3295,3296,3297,3298,-1530,3299,-1528,3300,-1526,3301]],[[3302,3303]]]},{"type":"Polygon","id":48453,"arcs":[[3304,3305,3306,-276,3307,-2125]]},{"type":"Polygon","id":48171,"arcs":[[3308,3309,-258,3310,3311,3312]]},{"type":"Polygon","id":48501,"arcs":[[-2224,3313,-257,-1365]]},{"type":"Polygon","id":48149,"arcs":[[3314,3315,3316,-2212,3317,3318,3319,3320]]},{"type":"Polygon","id":48463,"arcs":[[3321,-224,3322,-147,3323,3324]]},{"type":"Polygon","id":48185,"arcs":[[3325,-1212,-2131,3326,3327,-2204]]},{"type":"Polygon","id":48467,"arcs":[[-1312,-205,3328,3329,3330,3331,-125,-2138]]},{"type":"Polygon","id":48447,"arcs":[[3332,3333,3334,-1214,-1170]]},{"type":"Polygon","id":48145,"arcs":[[3335,-270,3336,3337,3338]]},{"type":"Polygon","id":48181,"arcs":[[3339,3340,3341,3342,3343,3344,3345]]},{"type":"Polygon","id":48139,"arcs":[[3346,-90,3347,3348,3349,3350,-1152]]},{"type":"Polygon","id":48191,"arcs":[[-152,3351,3352,3353,3354,3355]]},{"type":"Polygon","id":48125,"arcs":[[3356,-1201,3357,-2093]]},{"type":"Polygon","id":48455,"arcs":[[3358,3359,3360,-1209,3361]]},{"type":"Polygon","id":48389,"arcs":[[3362,-1443,3363,3364,-2221,3365]]},{"type":"Polygon","id":48315,"arcs":[[3366,-195,3367,3368,3369]]},{"type":"Polygon","id":48443,"arcs":[[-112,-2219,3370,-1234,3371]]},{"type":"Polygon","id":48305,"arcs":[[3372,3373,-1204,3374,3375]]},{"type":"Polygon","id":48283,"arcs":[[3376,3377,3378,3379,-1163]]},{"type":"Polygon","id":48241,"arcs":[[3380,-2135,3381,-134,-2209,3382,-1231]]},{"type":"Polygon","id":48253,"arcs":[[3383,3384,-1168,-240,-1197,3385]]},{"type":"Polygon","id":48069,"arcs":[[-1222,3386,-2200,3387,-189,-2225]]},{"type":"Polygon","id":48469,"arcs":[[3388,3389,3390,-2097,3391,3392,3393,-218]]},{"type":"MultiPolygon","id":48273,"arcs":[[[-2141,3394,-1187,3395,3396]],[[-2188,3397,-1184,3398]]]},{"type":"Polygon","id":48045,"arcs":[[3399,-3355,3400,-108,-2198,3401]]},{"type":"Polygon","id":48077,"arcs":[[-2236,3402,3403,3404,-2193,3405]]},{"type":"Polygon","id":48321,"arcs":[[-169,3406,3407,3408,3409,3410,3411,-222,3412]]},{"type":"Polygon","id":48047,"arcs":[[-184,3413,-3396,-1186,3414,-138,3415]]},{"type":"Polygon","id":48399,"arcs":[[-154,3416,3417,-1198,-166,3418]]},{"type":"Polygon","id":48065,"arcs":[[3419,3420,3421,-1223,-2241,3422]]},{"type":"Polygon","id":5107,"arcs":[[3423,3424,3425,3426,3427,3428,-70]]},{"type":"Polygon","id":5111,"arcs":[[3429,3430,3431,3432,3433]]},{"type":"Polygon","id":5143,"arcs":[[3434,3435,3436,3437]]},{"type":"Polygon","id":5081,"arcs":[[3438,3439,3440,3441,3442,-1176]]},{"type":"Polygon","id":5121,"arcs":[[3443,3444,3445,3446,3447,3448]]},{"type":"Polygon","id":5005,"arcs":[[-475,3449,3450,3451,3452,3453,3454,3455]]},{"type":"Polygon","id":5013,"arcs":[[3456,3457,3458,3459,3460]]},{"type":"Polygon","id":5105,"arcs":[[3461,3462,3463,3464,3465,3466]]},{"type":"Polygon","id":5027,"arcs":[[3467,-1082,3468,3469,3470,3471]]},{"type":"Polygon","id":5053,"arcs":[[3472,3473,3474,3475,3476,3477]]},{"type":"Polygon","id":5131,"arcs":[[3478,3479,3480,3481,3482,3483,3484,3485]]},{"type":"Polygon","id":5085,"arcs":[[3486,3487,3488,3489,3490,3491]]},{"type":"Polygon","id":5101,"arcs":[[3492,3493,3494,3495,3496,3497]]},{"type":"Polygon","id":5109,"arcs":[[3498,3499,3500,3501,3502]]},{"type":"Polygon","id":5031,"arcs":[[3503,3504,3505,3506,3507,-3434]]},{"type":"Polygon","id":5079,"arcs":[[3508,3509,3510,3511,3512]]},{"type":"Polygon","id":5123,"arcs":[[3513,3514,3515,3516,3517]]},{"type":"Polygon","id":5023,"arcs":[[3518,3519,3520,3521,3522]]},{"type":"Polygon","id":5017,"arcs":[[3523,3524,3525,-3160,3526,3527,3528,3529,3530]]},{"type":"Polygon","id":5025,"arcs":[[-3509,3531,3532,-3458,3533,-3475,3534]]},{"type":"Polygon","id":5015,"arcs":[[3535,3536,3537,3538,-3493,3539,3540]]},{"type":"Polygon","id":5021,"arcs":[[-3445,3541,3542,3543,3544,3545,3546]]},{"type":"Polygon","id":38003,"arcs":[[-2262,3547,3548,-2315,3549,3550]]},{"type":"Polygon","id":38033,"arcs":[[3551,-2334,-2286,3552,3553]]},{"type":"Polygon","id":38091,"arcs":[[3554,-2293,-2267,3555,-3548,-2261]]},{"type":"Polygon","id":38099,"arcs":[[-2338,-2331,3556,-2295,3557,-2344]]},{"type":"Polygon","id":38051,"arcs":[[3558,-2255,3559,3560,3561,3562]]},{"type":"Polygon","id":38075,"arcs":[[3563,3564,3565,-2306,3566]]},{"type":"Polygon","id":38001,"arcs":[[3567,-2347,-2290,-2300,-2301,3568,3569,3570]]},{"type":"Polygon","id":38059,"arcs":[[3571,-2251,3572,-2303,3573,3574,-2284]]},{"type":"Polygon","id":38105,"arcs":[[3575,3576,-2309,3577,3578,3579]]},{"type":"Polygon","id":38005,"arcs":[[-2326,3580,3581,-2346,3582,-2312]]},{"type":"Polygon","id":38017,"arcs":[[3583,3584,3585,-2316,-3549,-3556,-2271]]},{"type":"Polygon","id":38057,"arcs":[[-2285,-3575,3586,-2279,3587]]},{"type":"Polygon","id":38021,"arcs":[[3588,-3562,3589,-2319,3590,3591]]},{"type":"Polygon","id":38023,"arcs":[[-3577,3592,3593,-2310]]},{"type":"Polygon","id":38063,"arcs":[[-2313,-3583,-2345,-3558,-2294,-3555,-2260]]},{"type":"Polygon","id":38069,"arcs":[[3594,3595,3596,-2341,3597,-3581,-2325]]},{"type":"Polygon","id":38047,"arcs":[[3598,3599,-3560,-2254,3600]]},{"type":"Polygon","id":38031,"arcs":[[-2266,3601,-2321,-2314]]},{"type":"Polygon","id":38053,"arcs":[[-3552,3602,3603,-3579,3604,-2276,-2332]]},{"type":"Polygon","id":38093,"arcs":[[-2322,-3602,-2265,2263,-2263,-3551,3605,-3599,3606]]},{"type":"Polygon","id":38055,"arcs":[[3607,3608,3609,-2282,-3588,-2278,3610,3611]]},{"type":"Polygon","id":38083,"arcs":[[3612,-3595,-2324,3613,3614,-3609]]},{"type":"Polygon","id":38085,"arcs":[[-3573,-2258,3615,-3569,-2304]]},{"type":"Polygon","id":38077,"arcs":[[3616,-2317,-3586,3617,3618,3619,3620]]},{"type":"Polygon","id":38089,"arcs":[[-3587,-3574,-2302,-2298,-2288,-2333,-2280]]},{"type":"Polygon","id":38015,"arcs":[[-2283,-3610,-3615,3621,-2252,-3572]]},{"type":"Polygon","id":38009,"arcs":[[-3564,3622,-2342,-3597,3623]]},{"type":"Polygon","id":38095,"arcs":[[-2343,-3582,-3598,-2340,3624,-2336]]},{"type":"Polygon","id":38081,"arcs":[[-3617,3625,3626,-3591,-2318]]},{"type":"Polygon","id":38101,"arcs":[[-2307,-3566,3627,-3612,3628]]},{"type":"Polygon","id":20071,"arcs":[[3629,3630,3631,3632,3633,3634]]},{"type":"Polygon","id":20059,"arcs":[[3635,3636,3637,3638,3639]]},{"type":"Polygon","id":20147,"arcs":[[3640,3641,3642,3643,3644,3645]]},{"type":"Polygon","id":20085,"arcs":[[3646,3647,3648,3649,3650,3651]]},{"type":"Polygon","id":20145,"arcs":[[3652,3653,3654,3655,3656,3657]]},{"type":"Polygon","id":20027,"arcs":[[3658,3659,3660,3661,3662,3663]]},{"type":"Polygon","id":20011,"arcs":[[3664,3665,3666,3667,3668]]},{"type":"Polygon","id":20157,"arcs":[[3669,3670,3671,3672,3673]]},{"type":"Polygon","id":20043,"arcs":[[3674,3675,3676,3677,3678,3679]]},{"type":"Polygon","id":20175,"arcs":[[3680,3681,3682,3683,3684]]},{"type":"Polygon","id":20057,"arcs":[[3685,3686,3687,3688,3689,3690]]},{"type":"Polygon","id":20125,"arcs":[[3691,3692,3693,3694,3695,3696,3697]]},{"type":"Polygon","id":20117,"arcs":[[3698,3699,3700,3701,3702,3703]]},{"type":"Polygon","id":20207,"arcs":[[3704,3705,3706,3707]]},{"type":"Polygon","id":20105,"arcs":[[3708,3709,3710,3711,3712,3713]]},{"type":"Polygon","id":20055,"arcs":[[3714,3715,3716,3717,3718,3719,3720]]},{"type":"Polygon","id":20187,"arcs":[[3721,3722,3723,3724,3725,3726]]},{"type":"Polygon","id":20179,"arcs":[[3727,3728,3729,3730,3731]]},{"type":"Polygon","id":20017,"arcs":[[3732,3733,3734,3735,3736]]},{"type":"Polygon","id":20051,"arcs":[[3737,3738,3739,3740,3741,3742]]},{"type":"Polygon","id":20209,"arcs":[[3743,3744,3745,-1635,3746]]},{"type":"Polygon","id":20035,"arcs":[[3747,3748,3749,3750,3751,3752]]},{"type":"Polygon","id":20021,"arcs":[[3753,3754,3755,3756,3757,3758]]},{"type":"Polygon","id":20155,"arcs":[[3759,3760,3761,3762,3763,3764,3765]]},{"type":"Polygon","id":20197,"arcs":[[3766,3767,3768,3769,3770,3771,3772,3773,3774]]},{"type":"Polygon","id":20033,"arcs":[[3775,3776,3777,3778,3779]]},{"type":"Polygon","id":20109,"arcs":[[3780,3781,3782,3783,3784,3785]]},{"type":"Polygon","id":24041,"arcs":[[3786,-1599,3787,3788]]},{"type":"Polygon","id":24023,"arcs":[[-863,-1962,-2450,3789,3790,3791]]},{"type":"Polygon","id":24015,"arcs":[[3792,-1979,-1815,3793,-1487,3794]]},{"type":"MultiPolygon","id":24039,"arcs":[[[3795,-2473,-2045,3796]],[[-2047,3797]],[[3798,3799]]]},{"type":"Polygon","id":24043,"arcs":[[-2460,3800,3801,3802,3803,-2446,-1809,-1965]]},{"type":"Polygon","id":24033,"arcs":[[3804,3805,3806,-1553,3807,-85,3808,3809]]},{"type":"Polygon","id":24005,"arcs":[[3810,-848,3811,3812,3813,-2455,3814,3815]]},{"type":"Polygon","id":31021,"arcs":[[3816,3817,3818,3819,3820,3821]]},{"type":"Polygon","id":31047,"arcs":[[3822,3823,3824,3825,3826,3827]]},{"type":"Polygon","id":31155,"arcs":[[3828,3829,3830,3831,3832,3833]]},{"type":"Polygon","id":31171,"arcs":[[3834,3835,3836,3837,3838]]},{"type":"Polygon","id":31003,"arcs":[[3839,3840,3841,3842,3843,3844]]},{"type":"Polygon","id":31071,"arcs":[[3845,3846,3847,3848,3849]]},{"type":"Polygon","id":31165,"arcs":[[-365,3850,3851,3852,3853,-334]]},{"type":"Polygon","id":31049,"arcs":[[3854,3855,3856,3857,3858]]},{"type":"Polygon","id":41005,"arcs":[[-2547,-1663,-2564,3859,-2506,3860]]},{"type":"Polygon","id":41067,"arcs":[[-2525,-2543,-2548,-3861,-2505]]},{"type":"Polygon","id":41023,"arcs":[[-1640,-2515,-2578,3861,-2551,-2498,-2503,3862]]},{"type":"Polygon","id":41047,"arcs":[[-2476,-2507,-3860,-2563,-2571,-2568]]},{"type":"Polygon","id":31133,"arcs":[[-3700,3863,3864,3865,3866,3867]]},{"type":"Polygon","id":31015,"arcs":[[3868,3869,3870,3871,3872]]},{"type":"Polygon","id":31169,"arcs":[[3873,3874,-3671,3875]]},{"type":"Polygon","id":31087,"arcs":[[3876,3877,3878,3879,3880]]},{"type":"Polygon","id":41035,"arcs":[[-2516,-2557,-2485,3881,-2576,3882,-2755]]},{"type":"Polygon","id":41069,"arcs":[[-2561,-2580,-1641,-3863,-2502,-2572]]},{"type":"Polygon","id":31007,"arcs":[[3883,3884,3885,-406,-336,3886]]},{"type":"Polygon","id":31065,"arcs":[[3887,3888,3889,3890,3891,3892,3893]]},{"type":"Polygon","id":31035,"arcs":[[3894,3895,3896,3897,3898,3899]]},{"type":"Polygon","id":31121,"arcs":[[3900,3901,3902,3903,3904,3905]]},{"type":"Polygon","id":31017,"arcs":[[3906,3907,3908,3909,3910]]},{"type":"Polygon","id":31037,"arcs":[[3911,3912,3913,3914,3915]]},{"type":"Polygon","id":31043,"arcs":[[3916,3917,3918,3919]]},{"type":"Polygon","id":41017,"arcs":[[-2496,-2574,-3882,-2484,-2567,-2573,-2504]]},{"type":"Polygon","id":41001,"arcs":[[-2494,3920,3921,-2552,-3862,-2577]]},{"type":"Polygon","id":31005,"arcs":[[3922,3923,3924,3925,3926]]},{"type":"Polygon","id":31161,"arcs":[[3927,3928,3929,3930,3931,3932,3933]]},{"type":"Polygon","id":31159,"arcs":[[3934,3935,3936,3937]]},{"type":"Polygon","id":41033,"arcs":[[-2558,-2518,-2761,3938,-2522]]},{"type":"Polygon","id":31179,"arcs":[[3939,3940,3941,3942,3943,3944]]},{"type":"Polygon","id":17011,"arcs":[[3945,-1689,3946,-1698,3947,3948,3949]]},{"type":"Polygon","id":17039,"arcs":[[3950,-533,3951,3952]]},{"type":"Polygon","id":17157,"arcs":[[3953,3954,3955,3956,3957,3958,-542]]},{"type":"Polygon","id":17117,"arcs":[[3959,3960,3961,-517,3962,-553]]},{"type":"Polygon","id":17169,"arcs":[[3963,-484,3964,3965,-507,3966,3967]]},{"type":"Polygon","id":17153,"arcs":[[-525,3968,-2587,3969,3970,3971]]},{"type":"Polygon","id":17161,"arcs":[[3972,-1691,3973,-566,3974,3975,3976]]},{"type":"Polygon","id":17055,"arcs":[[3977,3978,3979,3980,3981,-500]]},{"type":"Polygon","id":17023,"arcs":[[3982,3983,3984,3985,-493,3986,-571]]},{"type":"Polygon","id":17051,"arcs":[[3987,-2617,3988,-2581,3989,-1694,-514]]},{"type":"Polygon","id":17021,"arcs":[[3990,-530,3991,-512]]},{"type":"Polygon","id":17187,"arcs":[[3992,-562,3993,3994,-510]]},{"type":"Polygon","id":17139,"arcs":[[-519,3995,3996,-535,3997]]},{"type":"Polygon","id":17015,"arcs":[[-498,3998,3999,-1693,4000,4001]]},{"type":"Polygon","id":17191,"arcs":[[-502,4002,-2583,4003,4004,-567,4005]]},{"type":"Polygon","id":17185,"arcs":[[4006,4007,-569,4008,4009,4010]]},{"type":"Polygon","id":49009,"arcs":[[4011,4012,-1382,4013,4014]]},{"type":"Polygon","id":72085,"arcs":[[-2752,4015,-2708,-2702,-2731,-2632,-1781]]},{"type":"Polygon","id":49007,"arcs":[[4016,4017,4018,4019,4020]]},{"type":"Polygon","id":72001,"arcs":[[-1776,-2650,-1770,4021,-2742,4022]]},{"type":"Polygon","id":72121,"arcs":[[-2666,-2714,4023,4024,4025]]},{"type":"Polygon","id":72153,"arcs":[[-2743,-4022,-1773,4026,4027,-4025,4028]]},{"type":"Polygon","id":49001,"arcs":[[-2403,4029,4030,4031,4032,4033]]},{"type":"Polygon","id":72119,"arcs":[[-2723,4034,-2688,-2689,-2709,-4016,-2751]]},{"type":"Polygon","id":72101,"arcs":[[4035,-2728,4036,-2647,-1717,-2627]]},{"type":"Polygon","id":72073,"arcs":[[-2649,4037,4038,-1778,4039]]},{"type":"Polygon","id":72067,"arcs":[[-2642,-2712,4040]]},{"type":"Polygon","id":72023,"arcs":[[-2664,4041,-2637,-4041,-2711]]},{"type":"Polygon","id":72131,"arcs":[[-2659,4042,-2749,-2661,-1768,-2745,-1736]]},{"type":"Polygon","id":72143,"arcs":[[4043,-2715,-2729,-4036,-2626,4044]]},{"type":"Polygon","id":72075,"arcs":[[-4039,4045,-2738,-1730,-2679,4046,-1779]]},{"type":"Polygon","id":72051,"arcs":[[-2716,-4044,4047,-2673]]},{"type":"Polygon","id":72035,"arcs":[[-2694,4048,-2635,4049,-2734,-2683,4050]]},{"type":"Polygon","id":72099,"arcs":[[-2706,-1726,1724,-1724,-2750,-4043,-2658]]},{"type":"Polygon","id":72025,"arcs":[[-2653,4051,-2719,4052,-2636,-4049,-2693]]},{"type":"Polygon","id":72107,"arcs":[[-2727,-2677,-1732,-2739,-4046,-4038,-2648,-4037]]},{"type":"Polygon","id":72055,"arcs":[[-2667,-4026,-4028,4053]]},{"type":"Polygon","id":72009,"arcs":[[-1734,-2676,-2695,-4051,-2682]]},{"type":"Polygon","id":72141,"arcs":[[-2741,-2747,-1744,-2645,-4040,-1777,-4023]]},{"type":"Polygon","id":72063,"arcs":[[-2721,-2699,-1783,-2631,-4053]]},{"type":"Polygon","id":72093,"arcs":[[-2713,-2640,-1738,-2744,-4029,-4024]]},{"type":"Polygon","id":72127,"arcs":[[-2720,-4052,-2652,-2725,-1752,4054,-2701]]},{"type":"Polygon","id":72021,"arcs":[[-2671,-1754,-2726,-2655,-1760,-2622,-2717]]},{"type":"Polygon","id":72109,"arcs":[[-2735,-4050,-2634,-2730,-2754,4055,-1748]]},{"type":"Polygon","id":6113,"arcs":[[4056,4057,-595,4058,4059,4060]]},{"type":"Polygon","id":13067,"arcs":[[4061,4062,4063,4064,4065]]},{"type":"Polygon","id":13073,"arcs":[[4066,4067,4068,4069,4070]]},{"type":"Polygon","id":13117,"arcs":[[4071,4072,4073,4074,4075,4076]]},{"type":"Polygon","id":13009,"arcs":[[4077,4078,4079,4080,-2882]]},{"type":"Polygon","id":13295,"arcs":[[4081,4082,4083,4084,4085,-2903,4086,4087]]},{"type":"Polygon","id":13107,"arcs":[[4088,4089,4090,4091,4092,-2811,4093,4094]]},{"type":"Polygon","id":13123,"arcs":[[4095,-2908,4096,4097,4098]]},{"type":"Polygon","id":13301,"arcs":[[4099,4100,-2807,4101,4102,4103]]},{"type":"Polygon","id":13105,"arcs":[[4104,4105,4106,4107,4108,4109,4110,4111]]},{"type":"Polygon","id":13063,"arcs":[[4112,4113,4114,-2803,4115]]},{"type":"Polygon","id":13025,"arcs":[[-2826,-2822,4116,-2868,4117,4118]]},{"type":"Polygon","id":13051,"arcs":[[4119,4120,-2784,4121]]},{"type":"Polygon","id":13225,"arcs":[[4122,4123,4124,4125,4126]]},{"type":"Polygon","id":13101,"arcs":[[4127,-2778,4128,4129,4130]]},{"type":"Polygon","id":13109,"arcs":[[4131,4132,-2781,-2780,4133,4134]]},{"type":"Polygon","id":13239,"arcs":[[4135,4136,4137,4138]]},{"type":"Polygon","id":13155,"arcs":[[4139,4140,4141,4142,4143]]},{"type":"Polygon","id":36067,"arcs":[[-936,4144,4145,-3034]]},{"type":"Polygon","id":36001,"arcs":[[4146,-3000,4147,4148,-2988]]},{"type":"Polygon","id":36109,"arcs":[[-3084,4149,-2970,4150,4151,4152]]},{"type":"Polygon","id":36045,"arcs":[[4153,4154,-3031,4155]]},{"type":"Polygon","id":36069,"arcs":[[4156,-2973,4157,4158,4159,-3076]]},{"type":"Polygon","id":36047,"arcs":[[4160,4161,-3135]]},{"type":"Polygon","id":36027,"arcs":[[4162,4163,4164,4165,4166,4167,-3006]]},{"type":"Polygon","id":36017,"arcs":[[4168,-934,4169,4170,-2969]]},{"type":"Polygon","id":36021,"arcs":[[-3005,4171,-2999,4172,-4163]]},{"type":"MultiPolygon","id":36059,"arcs":[[[4173,4174,4175,4176]],[[4177,4178,4179,4180]],[[4181,4182]],[[-4184,-4185,-4186]],[[4186,4187]]]},{"type":"MultiPolygon","id":36119,"arcs":[[[4188,4189,4190,4191,4192,4193]],[[4194]]]},{"type":"Polygon","id":36025,"arcs":[[-4171,4195,4196,4197,-3003,4198,-1984,-2966]]},{"type":"Polygon","id":36081,"arcs":[[4199,-4161,-3134,4200,4201,-4177]]},{"type":"Polygon","id":36089,"arcs":[[-4154,4202,-3082,4203,-3146,4204]]},{"type":"Polygon","id":36051,"arcs":[[4205,-3077,-4160,4206,4207,4208]]},{"type":"Polygon","id":36087,"arcs":[[4209,-4194,4210,-1326,4211]]},{"type":"Polygon","id":36029,"arcs":[[-3067,4212,-2991,4213,4214,-3117]]},{"type":"Polygon","id":36121,"arcs":[[4215,-3118,-4215,4216,-4209]]},{"type":"Polygon","id":36107,"arcs":[[-3085,-4153,4217,-2967,-1986,-1916]]},{"type":"Polygon","id":36039,"arcs":[[4218,-4148,-4172,-3004,-4198]]},{"type":"MultiPolygon","id":36103,"arcs":[[[-4175,4219,4220,-4187,4221,4222,-4186,4223,-4182,4224,-4178,4225,4226]],[[4227]],[[4228]]]},{"type":"Polygon","id":36097,"arcs":[[4229,-2971,-4150,-3083,4230]]},{"type":"Polygon","id":36077,"arcs":[[4231,4232,-4196,-4170,-933,4233,-3149]]},{"type":"Polygon","id":36003,"arcs":[[-4216,-4208,4234,-1871,-842,-3119]]},{"type":"Polygon","id":36031,"arcs":[[-3052,4235,-405,4236,-3040,4237,-3080]]},{"type":"Polygon","id":36105,"arcs":[[-1985,-4199,-3008,4238,-1989]]},{"type":"Polygon","id":36117,"arcs":[[-3075,4239,4240,-2974,-4157]]},{"type":"Polygon","id":36073,"arcs":[[4241,-2989,4242,-3073]]},{"type":"Polygon","id":36091,"arcs":[[-2987,4243,-3071,4244,-3042,4245,-3001,-4147]]},{"type":"Polygon","id":28011,"arcs":[[4246,-3525,4247,-3424,-69,4248]]},{"type":"Polygon","id":28013,"arcs":[[4249,4250,4251,4252,4253,4254]]},{"type":"Polygon","id":28077,"arcs":[[4255,4256,4257,4258,-3222,4259]]},{"type":"Polygon","id":39165,"arcs":[[4260,4261,4262,4263,4264,4265]]},{"type":"Polygon","id":28045,"arcs":[[4266,4267,4268,4269]]},{"type":"Polygon","id":28007,"arcs":[[4270,4271,4272,4273,4274,4275,4276]]},{"type":"Polygon","id":28093,"arcs":[[4277,4278,-3224,-1043,4279,4280,4281,4282,4283]]},{"type":"Polygon","id":28043,"arcs":[[-4254,4284,4285,4286,4287,4288,4289]]},{"type":"Polygon","id":28003,"arcs":[[4290,-1055,4291,4292,4293,4294]]},{"type":"Polygon","id":28029,"arcs":[[-2027,4295,-4256,4296,4297,-3159]]},{"type":"Polygon","id":28025,"arcs":[[4298,4299,4300,-1059,4301]]},{"type":"Polygon","id":28039,"arcs":[[4302,4303,4304,4305,4306]]},{"type":"Polygon","id":28001,"arcs":[[4307,4308,4309,4310,-1116]]},{"type":"Polygon","id":28005,"arcs":[[4311,4312,4313,4314,4315,4316,4317]]},{"type":"MultiPolygon","id":22087,"arcs":[[[4318,4319,4320]],[[4321,4322]],[[4323,4324]],[[4325,4326]],[[4327,4328]],[[4329,4330]],[[4331,4332]],[[4333,4334]],[[4335,4336]],[[4337,4338]],[[4339,4340]],[[4341,4342]],[[4343,4344]],[[4345,4346]],[[4347,4348,4349]],[[4350,4351]],[[4352,4353]],[[4354,4355]],[[4356,4357]],[[4358,4359]],[[4360,4361]],[[4362,4363]],[[4364,4365]],[[4366,4367]],[[4368,4369]],[[4370,4371]],[[4372,4373]],[[4374,4375]],[[4376,4377]],[[4378,4379]],[[4380,4381]],[[4382,4383]],[[4384,4385]],[[4386,4387]],[[4388,4389]],[[4390,4391]],[[4392,4393]],[[4394,4395]],[[4396,4397]],[[4398,4399]],[[4400,4401]],[[4402,4403]],[[4404,4405]],[[4406,4407]],[[4408,4409]],[[4410,4411]],[[4412,4413,4414]],[[4415]]]},{"type":"Polygon","id":22123,"arcs":[[4416,4417,-3528,4418]]},{"type":"Polygon","id":22075,"arcs":[[4419,4420,-4320,4421]]},{"type":"Polygon","id":22103,"arcs":[[4422,4423,4424,-4270,4425,-4414,4426,4427]]},{"type":"Polygon","id":22047,"arcs":[[4428,4429,-1075,4430,-3279,4431,4432]]},{"type":"Polygon","id":22059,"arcs":[[-1107,-1114,4433,4434,-1097,4435]]},{"type":"Polygon","id":22095,"arcs":[[4436,4437,4438,4439,-1067,4440,-3232]]},{"type":"Polygon","id":22063,"arcs":[[4441,4442,4438,-4439,-4438,4443,4444]]},{"type":"Polygon","id":48291,"arcs":[[4445,4446,4447,4448,-1249,-2133,4449]]},{"type":"Polygon","id":48287,"arcs":[[4450,-273,4451,4452,-3315,4453]]},{"type":"Polygon","id":48189,"arcs":[[4454,-190,-3388,-2199,-111]]},{"type":"Polygon","id":48029,"arcs":[[4455,-261,4456,4457,4458,4459,-226]]},{"type":"Polygon","id":48169,"arcs":[[4460,-1181,-1205,-3374,-2094]]},{"type":"Polygon","id":48337,"arcs":[[-2194,-3405,4461,4462,4463,4464]]},{"type":"Polygon","id":48461,"arcs":[[4465,4466,4467,-1159,4468]]},{"type":"Polygon","id":48193,"arcs":[[4469,4470,-250,4471,4472,4473]]},{"type":"Polygon","id":48151,"arcs":[[4474,4475,-3386,4476,-1178]]},{"type":"Polygon","id":48115,"arcs":[[4477,-3375,-1207,4478,-253]]},{"type":"Polygon","id":48127,"arcs":[[-1162,4479,4480,4481,-3377]]},{"type":"Polygon","id":48293,"arcs":[[4482,4483,4484,-2230,-175,4485,-3339]]},{"type":"Polygon","id":48233,"arcs":[[4486,-1224,-3422,4487]]},{"type":"Polygon","id":5001,"arcs":[[-3490,4488,4489,-3426,4490,-3511,4491]]},{"type":"Polygon","id":5119,"arcs":[[-3473,4492,-3463,4493,-3492,4494]]},{"type":"Polygon","id":5061,"arcs":[[4495,-3503,4496,-3441,4497]]},{"type":"Polygon","id":5139,"arcs":[[-3460,4498,4499,4500,-1083,-3468,4501]]},{"type":"Polygon","id":5099,"arcs":[[-3501,4502,4503,-3471,4504,4505]]},{"type":"Polygon","id":5035,"arcs":[[-3431,4506,4507,4508,4509,4510,4511,-3515,4512]]},{"type":"Polygon","id":5049,"arcs":[[-3450,-474,4513,4514,4515,4516]]},{"type":"Polygon","id":5115,"arcs":[[4517,4518,4519,4520,-3496,4521,4522]]},{"type":"Polygon","id":5041,"arcs":[[-3512,-4491,-3425,-4248,-3524,4523]]},{"type":"Polygon","id":5051,"arcs":[[4524,4525,-3465,4526,4527]]},{"type":"Polygon","id":38049,"arcs":[[-3565,-3624,-3596,-3613,-3608,-3628]]},{"type":"Polygon","id":5091,"arcs":[[-1172,-3443,4528,4529,4530,4531,4532]]},{"type":"Polygon","id":5145,"arcs":[[4533,4534,4535,4536,-3488,4537,-3523]]},{"type":"Polygon","id":5039,"arcs":[[4538,4539,-3476,-3534,-3457,4540]]},{"type":"Polygon","id":5075,"arcs":[[-3447,4541,-3505,4542,4543,4544]]},{"type":"Polygon","id":5137,"arcs":[[4545,4546,-3452,4547,4548,-3521]]},{"type":"Polygon","id":5095,"arcs":[[4549,-3517,4550,-3427,-4490,4551]]},{"type":"Polygon","id":5087,"arcs":[[-3498,4552,4553,4554,-3436,4555,-3540]]},{"type":"Polygon","id":5089,"arcs":[[4556,4557,-476,-3456,3454,-3454,4558]]},{"type":"Polygon","id":40119,"arcs":[[4559,4560,4561,4562,4563]]},{"type":"Polygon","id":40015,"arcs":[[4564,4565,4566,4567,4568,4569,4570]]},{"type":"Polygon","id":40041,"arcs":[[4571,4572,4573,4574,4575,4576,4577]]},{"type":"Polygon","id":40095,"arcs":[[4578,4579,4580,4581,-3341]]},{"type":"Polygon","id":38043,"arcs":[[-3614,-2323,-3607,-3601,-2253,-3622]]},{"type":"Polygon","id":40055,"arcs":[[4582,4583,4584,4585]]},{"type":"Polygon","id":40029,"arcs":[[4586,4587,4588,4589,4590]]},{"type":"Polygon","id":40133,"arcs":[[4591,4592,4593,4594]]},{"type":"Polygon","id":40099,"arcs":[[4595,4596,4597,4598]]},{"type":"Polygon","id":40067,"arcs":[[4599,4600,4601,4602,-4462,-3404]]},{"type":"Polygon","id":40141,"arcs":[[4603,4604,4605,4606,4607,-2239]]},{"type":"Polygon","id":40091,"arcs":[[4608,4609,4610,4611,4612,4613]]},{"type":"Polygon","id":40023,"arcs":[[4614,4615,4616,4617,-1284,-243]]},{"type":"Polygon","id":40059,"arcs":[[-3778,4618,4619,4620,4621,4622]]},{"type":"Polygon","id":38061,"arcs":[[-2308,-3629,-3611,-2277,-3605,-3578]]},{"type":"Polygon","id":38045,"arcs":[[-3561,-3600,-3606,-3550,-2320,-3590]]},{"type":"Polygon","id":40053,"arcs":[[4623,4624,4625,4626,4627]]},{"type":"Polygon","id":40043,"arcs":[[4628,4629,4630,4631,4632,4633]]},{"type":"Polygon","id":40109,"arcs":[[4634,4635,4636,4637,4638]]},{"type":"Polygon","id":40079,"arcs":[[4639,4640,-3486,-3485,-3484,4641,4642,4643,4644,4645]]},{"type":"Polygon","id":40105,"arcs":[[4646,-3696,4647,4648,4649]]},{"type":"Polygon","id":40139,"arcs":[[4650,4651,4652,-3684,4653,4654,4655,4656]]},{"type":"Polygon","id":54061,"arcs":[[-865,4657,4658,4659,4660,-905]]},{"type":"Polygon","id":54005,"arcs":[[4661,4662,4663,4664,4665]]},{"type":"Polygon","id":54051,"arcs":[[4666,-1944,-901,4667,4668,4669]]},{"type":"Polygon","id":54001,"arcs":[[4670,4671,4672,4673,4674,4675]]},{"type":"Polygon","id":32001,"arcs":[[-2370,-2380,4676,-2397,4677,-2386]]},{"type":"Polygon","id":54095,"arcs":[[4678,4679,4680,4681,4682,4683]]},{"type":"Polygon","id":54049,"arcs":[[4684,-4660,4685,4686]]},{"type":"Polygon","id":32510,"arcs":[[-2389,-627,-2382,-2367]]},{"type":"Polygon","id":54105,"arcs":[[4687,4688,4689,4690,4691]]},{"type":"Polygon","id":54063,"arcs":[[4692,4693,4694,4695,4696]]},{"type":"Polygon","id":32023,"arcs":[[-2387,-4678,-2396,-2393,-2409,-2408,-2416,4697,-2365]]},{"type":"Polygon","id":54043,"arcs":[[4698,4699,-4666,4700,4701,4702,4703]]},{"type":"Polygon","id":54075,"arcs":[[4704,4705,4706,4707,4708,4709]]},{"type":"Polygon","id":32029,"arcs":[[-2368,-2381]]},{"type":"Polygon","id":54033,"arcs":[[-4675,4710,4711,4712,4713,4714,4715,-4687,4716]]},{"type":"Polygon","id":54069,"arcs":[[4717,4718,4719,-1945,-4667]]},{"type":"Polygon","id":54067,"arcs":[[4720,4721,4722,4723,4724,4725]]},{"type":"Polygon","id":54023,"arcs":[[4726,4727,4728,-3791,4729,4730,4731,-4732,4732]]},{"type":"Polygon","id":54015,"arcs":[[4733,4734,-4722,4735,4736]]},{"type":"Polygon","id":54059,"arcs":[[4737,4738,4739,4740,4741,4742,4743,4744,-4702,4745]]},{"type":"Polygon","id":54009,"arcs":[[4746,-1946,-4720,4747]]},{"type":"Polygon","id":54029,"arcs":[[-1947,-4747,4748,4749,-1919]]},{"type":"Polygon","id":54053,"arcs":[[4750,4751,4752,4753,4754]]},{"type":"Polygon","id":54055,"arcs":[[4755,4756,4757,4758,4759,-1127,4760]]},{"type":"Polygon","id":32027,"arcs":[[-2353,-2398,-4677,-2379]]},{"type":"Polygon","id":54021,"arcs":[[4761,4762,4763,4764,4765]]},{"type":"Polygon","id":54031,"arcs":[[4766,-1144,4767,4768,-4732,-4731,4769]]},{"type":"Polygon","id":54037,"arcs":[[4770,4771,4772,-3802]]},{"type":"Polygon","id":54065,"arcs":[[4773,-2447,-3804,4774,4775]]},{"type":"Polygon","id":32007,"arcs":[[-2391,-2395,-2351,4776,4777,4778,-623,4779,-2410]]},{"type":"Polygon","id":20077,"arcs":[[-4624,4780,4781,4782,4783]]},{"type":"Polygon","id":20037,"arcs":[[-3666,4784,4785,4786,-3759,4787,4788]]},{"type":"Polygon","id":20001,"arcs":[[4789,-3668,4790,-3705]]},{"type":"Polygon","id":20111,"arcs":[[4791,-3771,4792,4793,4794,-3734]]},{"type":"Polygon","id":20149,"arcs":[[-3702,4795,-3651,4796,-3768,3766,-3775,4797]]},{"type":"Polygon","id":20005,"arcs":[[4798,-3648,4799,-3679,4800,4801,4802]]},{"type":"Polygon","id":20137,"arcs":[[4803,-3646,4804,-3729,4805,-3892]]},{"type":"Polygon","id":20193,"arcs":[[4806,4807,4808,-3732,4809,-3784]]},{"type":"Polygon","id":20091,"arcs":[[4810,4811,-3747,-1634,-464,4812]]},{"type":"Polygon","id":20075,"arcs":[[-3724,4813,-3631,4814,4815]]},{"type":"Polygon","id":20141,"arcs":[[-3741,4816,4817,4818,4819,-3709,4820]]},{"type":"Polygon","id":20083,"arcs":[[4821,-3718,4822,-3658,4823,-3688]]},{"type":"Polygon","id":20195,"arcs":[[4824,-3739,4825,4826,4827]]},{"type":"Polygon","id":20029,"arcs":[[4828,4829,-3673,4830,-3659,4831]]},{"type":"Polygon","id":20013,"arcs":[[-3647,4832,4833,-3680,-4800]]},{"type":"Polygon","id":20087,"arcs":[[4834,4835,4836,-3649,-4799]]},{"type":"Polygon","id":20041,"arcs":[[4837,-3663,4838,4839,4840,4841]]},{"type":"Polygon","id":20101,"arcs":[[4842,4843,-3716,4844]]},{"type":"Polygon","id":20015,"arcs":[[4845,4846,-3736,4847,4848,-3749,4849]]},{"type":"Polygon","id":20023,"arcs":[[4850,4851,4852,4853,4854]]},{"type":"Polygon","id":20199,"arcs":[[-3782,4855,-3635,4856,4857,4858]]},{"type":"Polygon","id":20019,"arcs":[[4859,-3698,4860,4861,-3751]]},{"type":"Polygon","id":20097,"arcs":[[4862,4863,-3780,4864,-3690,4865]]},{"type":"Polygon","id":20081,"arcs":[[4866,4867,-3720,4868,4869,-3681]]},{"type":"Polygon","id":20159,"arcs":[[4870,4871,4872,-3766,4873]]},{"type":"Polygon","id":20129,"arcs":[[4874,-4652,4875,4876,-3727]]},{"type":"Polygon","id":20165,"arcs":[[4877,-3743,4878,4879,-3654]]},{"type":"Polygon","id":24045,"arcs":[[4880,-2474,-3796,4881,4882]]},{"type":"Polygon","id":24013,"arcs":[[-2456,-713,-849,-3811,4883]]},{"type":"Polygon","id":24031,"arcs":[[4884,4885,4886,-2458,4887,-3810,4888,4889]]},{"type":"Polygon","id":24035,"arcs":[[-1490,4890,-1600,-3787,4891]]},{"type":"MultiPolygon","id":24019,"arcs":[[[-1603,4892,-4883,4893,-3788]],[[-3799,4894]]]},{"type":"Polygon","id":24025,"arcs":[[-847,-1980,-3793,4895,-3812]]},{"type":"MultiPolygon","id":24037,"arcs":[[[4896,4897,-1555]],[[4898,4899]],[[4900,4901]],[[4902,4903]],[[4904,4905]],[[4906,4907]],[[4908,4909]],[[4910,4911]],[[4912,4913]],[[4914,4915]],[[4916,4917]],[[4918,4919]],[[4920,4921]],[[-2088,4922]],[[-2086,4923]],[[-2084,4924]],[[-2082,4925]],[[-2080,4926]],[[-2078,4927]],[[-2076,4928]],[[-2074,4929]],[[-2072,4930]],[[-2070,4931]],[[-2068,4932]]]},{"type":"Polygon","id":31039,"arcs":[[-3912,4933,-3945,4934,-3822,4935]]},{"type":"Polygon","id":31069,"arcs":[[4936,-3932,4937,-3926,4938,-3855,4939]]},{"type":"Polygon","id":31101,"arcs":[[-3856,-4939,-3925,4940,4941,4942]]},{"type":"Polygon","id":31173,"arcs":[[-3944,4943,-3920,4944,4945,-3817,-4935]]},{"type":"Polygon","id":31139,"arcs":[[4946,4947,-3941,4948,-3842]]},{"type":"Polygon","id":31147,"arcs":[[-3867,4949,4950,-3675,-4834,4951]]},{"type":"Polygon","id":31151,"arcs":[[-3938,4952,4953,4954,4955]]},{"type":"Polygon","id":31163,"arcs":[[4956,4957,4958,4959,4960]]},{"type":"Polygon","id":31057,"arcs":[[4961,4962,4963,-3877,4964,-4855]]},{"type":"Polygon","id":31167,"arcs":[[-3940,-4934,-3916,4965,4966]]},{"type":"Polygon","id":31033,"arcs":[[4967,-3885,4968,-4940,-3859,4969,4970]]},{"type":"Polygon","id":31013,"arcs":[[4971,-3934,4972,4973,-3853]]},{"type":"Polygon","id":31183,"arcs":[[4974,-3845,4975,4976,4977,-3846]]},{"type":"Polygon","id":31095,"arcs":[[-4955,4978,4979,-3875]]},{"type":"Polygon","id":31131,"arcs":[[4980,4981,4982,4983,4984,4985]]},{"type":"Polygon","id":31111,"arcs":[[4986,4987,-3824,4988,4989,4990,-4942,4991]]},{"type":"Polygon","id":31091,"arcs":[[-3836,4992,-3923,4993,4994]]},{"type":"Polygon","id":31145,"arcs":[[4995,-3880,4996,-3894,4997]]},{"type":"Polygon","id":31075,"arcs":[[-4994,-3927,-4938,-3931,4998]]},{"type":"Polygon","id":31053,"arcs":[[4999,-3830,5000,-3913,-4936,-3821,5001]]},{"type":"Polygon","id":31029,"arcs":[[5002,-4963,5003,5004,5005]]},{"type":"Polygon","id":31153,"arcs":[[5006,-3832,5007,5008,5009]]},{"type":"Polygon","id":31157,"arcs":[[-4974,5010,-3887,-335,-3854]]},{"type":"Polygon","id":31177,"arcs":[[5011,5012,-5002,-3820,5013]]},{"type":"Polygon","id":31077,"arcs":[[-4977,5014,5015,5016,-4959,5017]]},{"type":"Polygon","id":31181,"arcs":[[5018,5019,-3899,5020,5021,5022,5023]]},{"type":"Polygon","id":31055,"arcs":[[-5000,-5013,5024,-5008,-3831]]},{"type":"Polygon","id":31025,"arcs":[[-3833,-5007,5025,5026,-4982,5027]]},{"type":"Polygon","id":31031,"arcs":[[-4995,-4999,-3930,5028,5029,5030,-5031,5030,5031,5032,5033,-3910,5034,-3837]]},{"type":"Polygon","id":31011,"arcs":[[5035,-5015,-4976,-3844,5036,5037]]},{"type":"Polygon","id":31097,"arcs":[[5038,-4986,5039,-3865]]},{"type":"Polygon","id":31045,"arcs":[[5040,5041,-3928,-4972,-3852]]},{"type":"Polygon","id":31063,"arcs":[[-4989,-3823,5042,-3888,-4997,-3879,5043]]},{"type":"Polygon","id":31129,"arcs":[[-3898,5044,-3876,-3670,5045,-5021]]},{"type":"Polygon","id":31099,"arcs":[[5046,-5019,5047,5048,5049]]},{"type":"Polygon","id":31051,"arcs":[[5050,5051,5052,-3917,-4944,-3943]]},{"type":"Polygon","id":31093,"arcs":[[5053,-3906,5054,5055,-4960,-5017]]},{"type":"Polygon","id":31103,"arcs":[[-5034,-5033,5056,5057,-3872,5058,-3911]]},{"type":"Polygon","id":31113,"arcs":[[5059,-3839,5060,5061,-4987]]},{"type":"Polygon","id":31027,"arcs":[[-3942,-4948,5062,5063,5064,-5051]]},{"type":"Polygon","id":31115,"arcs":[[5065,-3908,5066,5067,-3849,5068]]},{"type":"Polygon","id":31143,"arcs":[[5069,5070,5071,5072,-3903]]},{"type":"Polygon","id":31009,"arcs":[[-5035,-3909,-5066,5073,-5061,-3838]]},{"type":"Polygon","id":31105,"arcs":[[5074,-407,-3886,-4968,5075]]},{"type":"Polygon","id":31073,"arcs":[[-3889,-5043,-3828,5076]]},{"type":"Polygon","id":31083,"arcs":[[-4804,-3891,5077,5078,-3641]]},{"type":"Polygon","id":31137,"arcs":[[-5078,-3890,-5077,-3827,5079,-5049]]},{"type":"Polygon","id":31081,"arcs":[[-3895,5080,5081,-3904,-5073,5082]]},{"type":"Polygon","id":31023,"arcs":[[-5071,5083,-3914,-5001,-3829,5084,-3936]]},{"type":"Polygon","id":17077,"arcs":[[-3957,5085,-3980,5086,-529,5087]]},{"type":"Polygon","id":17107,"arcs":[[5088,-3952,-532,5089,-547,5090,5091]]},{"type":"Polygon","id":17067,"arcs":[[5092,5093,-508,-3966,5094,5095,5096]]},{"type":"Polygon","id":17037,"arcs":[[-1700,5097,5098,5099,-2607,5100,5101]]},{"type":"Polygon","id":17119,"arcs":[[-446,5102,5103,-554,-3963,-516,-1696,5104,5105]]},{"type":"Polygon","id":17137,"arcs":[[5106,-3961,5107,-557,-2610,-486,5108]]},{"type":"Polygon","id":17155,"arcs":[[-3948,-1697,5109]]},{"type":"Polygon","id":17203,"arcs":[[-1682,5110,-1704,5111,5112,5113]]},{"type":"Polygon","id":17053,"arcs":[[-1709,5114,5115,-2593,5116,5117]]},{"type":"Polygon","id":17045,"arcs":[[5118,5119,-3984,5120,-522,5121]]},{"type":"Polygon","id":17165,"arcs":[[-3978,-505,5122,-2597,5123,5124]]},{"type":"Polygon","id":17147,"arcs":[[5125,-2595,-520,-3998,-534,-3951]]},{"type":"Polygon","id":17095,"arcs":[[-561,5126,5127,-1685,5128,-3994]]},{"type":"Polygon","id":17189,"arcs":[[-3955,5129,5130,-2585,5131,5132]]},{"type":"Polygon","id":17105,"arcs":[[-1703,5133,-1710,-5118,5134,-5112]]},{"type":"Polygon","id":17079,"arcs":[[5135,-2619,-572,-3987,-492,5136]]},{"type":"Polygon","id":49035,"arcs":[[5137,5138,5139,5140,5141,5142]]},{"type":"Polygon","id":49053,"arcs":[[5143,5144,5145,-2405]]},{"type":"Polygon","id":49005,"arcs":[[5146,5147,5148,5149,-620]]},{"type":"Polygon","id":49023,"arcs":[[-2412,5150,5151,5152,5153]]},{"type":"Polygon","id":6045,"arcs":[[-2768,5154,5155,5156,-590,5157,5158]]},{"type":"Polygon","id":6067,"arcs":[[5159,5160,5161,-4060,5162,-630,5163,-638]]},{"type":"Polygon","id":6039,"arcs":[[5164,5165,5166,5167,-612,5168,5169,5170,5171]]},{"type":"Polygon","id":6115,"arcs":[[-632,5172,5173,5174,5175,5176]]},{"type":"Polygon","id":6107,"arcs":[[5177,5178,5179,5180,5181,5182,-2912,5183]]},{"type":"Polygon","id":13033,"arcs":[[-4094,-2810,5184,5185,5186,5187,5188,5189,5190]]},{"type":"Polygon","id":13151,"arcs":[[5191,-2895,5192,5193,5194,-4114]]},{"type":"Polygon","id":13179,"arcs":[[5195,5196,-4134,-2786,5197,5198]]},{"type":"Polygon","id":13195,"arcs":[[5199,-4112,5200,-2877,5201,5202,5203]]},{"type":"Polygon","id":13279,"arcs":[[5204,-4091,5205,-2787,5206,5207]]},{"type":"Polygon","id":13207,"arcs":[[5208,5209,-2886,5210,5211,5212,5213]]},{"type":"Polygon","id":13065,"arcs":[[5214,-2871,5215,5216,-4129,-2777]]},{"type":"Polygon","id":13219,"arcs":[[5217,5218,-2879,5219,5220,-2838]]},{"type":"Polygon","id":13019,"arcs":[[5221,-4140,5222,5223,-2775,5224,5225]]},{"type":"Polygon","id":13049,"arcs":[[-4117,-2821,5226,5227,-2869]]},{"type":"Polygon","id":13075,"arcs":[[5228,-5226,5229,5230,5231]]},{"type":"Polygon","id":13229,"arcs":[[5232,-4118,-2875,5233,-2790]]},{"type":"Polygon","id":13099,"arcs":[[5234,5235,-2819,5236,5237,5238,5239]]},{"type":"Polygon","id":13167,"arcs":[[-2812,-4093,5240,5241,5242]]},{"type":"MultiPolygon","id":13269,"arcs":[[[-2854]],[[5243,-4125,5244]],[[-2853,5245,-2844,5246,5247,5248,5249,-2849]]]},{"type":"Polygon","id":13093,"arcs":[[5250,5251,5252,-2867,5253,5254]]},{"type":"Polygon","id":13085,"arcs":[[-4098,5255,5256,5257,-4073,5258,5259]]},{"type":"MultiPolygon","id":13177,"arcs":[[[5260]],[[5261,5262,5263,5264,5265,5266]]]},{"type":"Polygon","id":13015,"arcs":[[5267,5268,-4062,5269,-2834,5270]]},{"type":"Polygon","id":13317,"arcs":[[5271,-4110,5272,5273,-4100,5274]]},{"type":"Polygon","id":13171,"arcs":[[5275,5276,-5214,5277,5278]]},{"type":"Polygon","id":13143,"arcs":[[5279,-2893,5280,-2830]]},{"type":"Polygon","id":13069,"arcs":[[5281,-2873,5282,-5223,-4144,5283,5284,5285]]},{"type":"Polygon","id":13125,"arcs":[[-2814,5286,5287,-4102]]},{"type":"Polygon","id":13245,"arcs":[[5288,-4070,5289,5290,5291,-5185,-2809]]},{"type":"Polygon","id":13289,"arcs":[[-2884,5292,-2802,5293,5294]]},{"type":"Polygon","id":13311,"arcs":[[5295,5296,5297,5298,5299,-2858]]},{"type":"Polygon","id":13201,"arcs":[[5300,5301,-2820,-5236]]},{"type":"Polygon","id":13199,"arcs":[[5302,5303,5304,5305,-2842,5306,5307]]},{"type":"Polygon","id":13217,"arcs":[[-2836,5308,5309,-5193,-2899,5310]]},{"type":"Polygon","id":13205,"arcs":[[5311,5312,5313,5314,5315,5316,5317]]},{"type":"Polygon","id":13135,"arcs":[[5318,5319,5320,-2897,5321,5322,-4076,-4075]]},{"type":"Polygon","id":13133,"arcs":[[-2839,-5221,5323,5324,5325,5326]]},{"type":"Polygon","id":13261,"arcs":[[5327,-5255,5328,-5263,5329,5330,5331,-2851]]},{"type":"Polygon","id":13243,"arcs":[[5332,5333,-4137,5334,5335,5336]]},{"type":"Polygon","id":13119,"arcs":[[5337,5338,5339,-5204,5340]]},{"type":"Polygon","id":13235,"arcs":[[-5253,5341,-2800,5342,-2861]]},{"type":"MultiPolygon","id":13027,"arcs":[[[5343,5344]],[[5345,5346,-5231,5347,5348,5349]]]},{"type":"Polygon","id":13055,"arcs":[[5350,-4085,5351,5352]]},{"type":"Polygon","id":36057,"arcs":[[-3072,-4244,-2986,5353,-4232,-3148]]},{"type":"Polygon","id":26123,"arcs":[[5354,5355,5356,5357,5358,5359]]},{"type":"Polygon","id":26157,"arcs":[[5360,5361,5362,5363,5364,5365,5366]]},{"type":"Polygon","id":26141,"arcs":[[5367,5368,5369,5370]]},{"type":"Polygon","id":26025,"arcs":[[5371,5372,5373,5374,5375,5376]]},{"type":"Polygon","id":26111,"arcs":[[5377,5378,5379,5380,5381]]},{"type":"Polygon","id":26019,"arcs":[[5382,5383,5384,5385]]},{"type":"Polygon","id":26069,"arcs":[[5386,5387,5388,5389]]},{"type":"Polygon","id":26001,"arcs":[[5390,-5388,5391,5392]]},{"type":"Polygon","id":26045,"arcs":[[5393,5394,-5374,5395,5396,5397]]},{"type":"Polygon","id":36079,"arcs":[[5398,-4189,-4210,5399,-4167]]},{"type":"Polygon","id":26053,"arcs":[[-1790,5400,5401,5402,-2958]]},{"type":"Polygon","id":36023,"arcs":[[-2968,-4218,-4152,5403,-4145,-935,-4169]]},{"type":"Polygon","id":26011,"arcs":[[5404,5405,-5390,5406,5407]]},{"type":"Polygon","id":26063,"arcs":[[5408,-5363,5409]]},{"type":"Polygon","id":26137,"arcs":[[5410,5411,5412,5413,5414]]},{"type":"Polygon","id":26153,"arcs":[[5415,5416,5417,5418,5419]]},{"type":"Polygon","id":26081,"arcs":[[5420,-5359,5421,5422,5423,5424,5425]]},{"type":"Polygon","id":26051,"arcs":[[5426,5427,-5405,5428,-5381,5429]]},{"type":"Polygon","id":26027,"arcs":[[5430,5431,5432,5433,5434]]},{"type":"Polygon","id":26071,"arcs":[[5435,5436,5437,5438,5439,-1902,-3153,-2959,-5403]]},{"type":"Polygon","id":26033,"arcs":[[5440,5441,5442]]},{"type":"Polygon","id":36041,"arcs":[[-4204,-3081,-4238,-3043,-4245,-3070,-3147]]},{"type":"Polygon","id":26023,"arcs":[[5443,5444,-5377,5445,5446]]},{"type":"Polygon","id":26103,"arcs":[[-5439,5447,5448,5449,5450,5451,5452]]},{"type":"Polygon","id":26155,"arcs":[[5453,5454,5455,5456,5457,5458]]},{"type":"Polygon","id":26005,"arcs":[[-5425,5459,5460,5461,5462,5463]]},{"type":"Polygon","id":26131,"arcs":[[5464,5465,-5436,-5402]]},{"type":"Polygon","id":26099,"arcs":[[5466,5467,5468,5469,5470]]},{"type":"Polygon","id":26159,"arcs":[[5471,5472,-5462,5473,-5435]]},{"type":"Polygon","id":26147,"arcs":[[5474,5475,5476,-5471]]},{"type":"Polygon","id":26085,"arcs":[[5477,5478,5479,-5356,5480]]},{"type":"Polygon","id":26113,"arcs":[[5481,5482,5483,5484,5485]]},{"type":"Polygon","id":26003,"arcs":[[5486,5487,-5416,5488,-5450]]},{"type":"Polygon","id":36071,"arcs":[[-4168,-5400,-4212,-1325,5489,-1990,-4239,-3007]]},{"type":"MultiPolygon","id":36005,"arcs":[[[-4201,-3133,5490,-4192,5491]],[[5492]]]},{"type":"Polygon","id":26073,"arcs":[[-5380,5493,5494,5495,5496]]},{"type":"Polygon","id":26009,"arcs":[[5497,5498,-5411,5499,5500]]},{"type":"Polygon","id":36011,"arcs":[[-4241,5501,-3029,-4146,-5404,-4151,-2975]]},{"type":"Polygon","id":26047,"arcs":[[5502,5503,5504]]},{"type":"Polygon","id":26095,"arcs":[[-5488,5505,-5441,5506,-5417]]},{"type":"Polygon","id":26143,"arcs":[[-5484,5507,5508,-5427,5509]]},{"type":"Polygon","id":36123,"arcs":[[5510,-4158,-2972,-4230]]},{"type":"Polygon","id":26075,"arcs":[[-5395,5511,5512,5513,5514,5515,-5375]]},{"type":"MultiPolygon","id":26083,"arcs":[[[5516,5517]],[[5518]]]},{"type":"Polygon","id":26061,"arcs":[[5519,-5518,5520,5521,-5437,-5466]]},{"type":"Polygon","id":26109,"arcs":[[-5452,5522,5523,-3038,5524]]},{"type":"MultiPolygon","id":26041,"arcs":[[[-5489,-5420,5525,-5523,-5451]],[[5526]]]},{"type":"Polygon","id":26149,"arcs":[[-5445,5527,5528,-5431,5529]]},{"type":"Polygon","id":26031,"arcs":[[5530,-5371,5531,-5413,5532,-5504]]},{"type":"Polygon","id":26139,"arcs":[[-5464,5533,5534,-5426]]},{"type":"Polygon","id":26091,"arcs":[[-5515,5535,5536,5537,5538,5539]]},{"type":"Polygon","id":36095,"arcs":[[-2985,-4149,-4219,-4197,-4233,-5354]]},{"type":"Polygon","id":36037,"arcs":[[-2990,-4242,-3078,-4206,-4217,-4214]]},{"type":"Polygon","id":26043,"arcs":[[-5525,-3037,-1903,-5440,-5453]]},{"type":"Polygon","id":26007,"arcs":[[5540,-5369,5541,-5393]]},{"type":"Polygon","id":26049,"arcs":[[5542,-5366,5543,5544,5545,-5456]]},{"type":"Polygon","id":26129,"arcs":[[5546,-5387,-5406,-5428,-5509]]},{"type":"Polygon","id":36101,"arcs":[[-3086,-814,-1872,-4235,-4207,-4159,-5511,-4231]]},{"type":"Polygon","id":26115,"arcs":[[5547,5548,5549,-5537,5550]]},{"type":"Polygon","id":26165,"arcs":[[-5482,5551,-5479,5552,5553]]},{"type":"Polygon","id":26037,"arcs":[[5554,5555,-5459,5556,-5398]]},{"type":"Polygon","id":26015,"arcs":[[-5373,5557,-5460,-5424,5558,-5396]]},{"type":"Polygon","id":26119,"arcs":[[5559,-5414,-5532,-5370,-5541]]},{"type":"Polygon","id":26107,"arcs":[[5560,-5496,5561,-5357]]},{"type":"Polygon","id":26013,"arcs":[[-5438,-5522,5562,-5448]]},{"type":"Polygon","id":26055,"arcs":[[-5384,5563,5564,-5501,5565,-5554]]},{"type":"Polygon","id":26017,"arcs":[[-5382,-5429,-5408,5566,-5361,5567]]},{"type":"Polygon","id":26151,"arcs":[[-5409,5568,-5476,5569,-5364]]},{"type":"Polygon","id":26127,"arcs":[[5570,5571,-5355,5572]]},{"type":"Polygon","id":26067,"arcs":[[5573,-5555,-5397,-5559,-5423]]},{"type":"Polygon","id":26093,"arcs":[[-5457,-5546,5574,5575,-5513,5576]]},{"type":"Polygon","id":26163,"arcs":[[5577,5578,-5468,5579,-5548]]},{"type":"Polygon","id":36065,"arcs":[[-4234,-938,-3033,5580,-3150]]},{"type":"Polygon","id":26021,"arcs":[[5581,5582,5583,-5472,-5434]]},{"type":"Polygon","id":36115,"arcs":[[-3041,-4237,-404,-412,5584,-3002,-4246]]},{"type":"MultiPolygon","id":26089,"arcs":[[[-5383,5585,-5564]],[[5586]],[[5587]],[[5588]]]},{"type":"Polygon","id":28105,"arcs":[[5589,-4302,-1064,5590,5591,5592]]},{"type":"MultiPolygon","id":28059,"arcs":[[[5593,5594,5595,5596,5597,5598,-4304]],[[5599]],[[5600]]]},{"type":"Polygon","id":28095,"arcs":[[5601,5602,5603,5604,-1060,-4301,5605]]},{"type":"Polygon","id":28071,"arcs":[[5606,-4282,4280,-4280,-1042,5607,-4250,5608,-60]]},{"type":"Polygon","id":28079,"arcs":[[5609,-4272,5610,-67,5611]]},{"type":"Polygon","id":28069,"arcs":[[5612,5613,5614,5615,5616]]},{"type":"Polygon","id":28081,"arcs":[[-1040,5617,5618,-5602,5619,5620]]},{"type":"Polygon","id":28109,"arcs":[[5621,5622,-4267,-4425,5623,5624,5625]]},{"type":"Polygon","id":28051,"arcs":[[5626,5627,-4274,5628,-1048]]},{"type":"MultiPolygon","id":22051,"arcs":[[[5629,-4428,5630,-4420,5631,5632,-1065]],[[5633,5634,5635]],[[-5637,-5638,-5639,-5640]],[[5640,5641,5642]],[[5643,5644]]]},{"type":"Polygon","id":22113,"arcs":[[5645,5646,-1093,-3229,5647,5648,5649,5650]]},{"type":"Polygon","id":22083,"arcs":[[5651,-4417,5652,-81,5653,-1111,-1069]]},{"type":"Polygon","id":22097,"arcs":[[-3277,-3230,-1096,5654,5655,5656]]},{"type":"Polygon","id":48299,"arcs":[[5657,-2127,5658,-3309,5659]]},{"type":"Polygon","id":48377,"arcs":[[5660,-114,5661]]},{"type":"Polygon","id":48133,"arcs":[[-1299,5662,5663,-1239,-237,-1167,-1217]]},{"type":"Polygon","id":48403,"arcs":[[-1307,-2036,-135,-3382,-2134]]},{"type":"Polygon","id":48481,"arcs":[[-221,-2214,5664,5665,-170,-3413]]},{"type":"Polygon","id":48401,"arcs":[[-202,5666,5667,5668,-1303,-265,5669]]},{"type":"Polygon","id":48439,"arcs":[[-91,-3347,-1151,-1244,5670,5671]]},{"type":"Polygon","id":48285,"arcs":[[-3318,-2215,-219,-3394,5672,5673]]},{"type":"Polygon","id":48075,"arcs":[[-151,5674,-2247,5675,-3352]]},{"type":"Polygon","id":5047,"arcs":[[-4554,5676,5677,-3481,5678]]},{"type":"Polygon","id":5117,"arcs":[[-4537,5679,-4552,-4489,-3489]]},{"type":"Polygon","id":5057,"arcs":[[-4529,-3442,-4497,-3502,-4506,5680]]},{"type":"Polygon","id":5077,"arcs":[[-4512,5681,-3428,-4551,-3516]]},{"type":"Polygon","id":5029,"arcs":[[5682,-3467,5683,-4518,5684]]},{"type":"Polygon","id":5067,"arcs":[[-4543,-3504,-3433,5685,5686,-4535,5687]]},{"type":"Polygon","id":5043,"arcs":[[5688,-3532,-3513,-4524,-3531,5689]]},{"type":"Polygon","id":5037,"arcs":[[-5686,-3432,-4513,-3514,5690]]},{"type":"Polygon","id":5019,"arcs":[[5691,-4503,-3500,5692,5693,-4539]]},{"type":"Polygon","id":5033,"arcs":[[-4555,-5679,-3480,5694,5695,-3437]]},{"type":"Polygon","id":5065,"arcs":[[-3451,-4517,5696,5697,-4548]]},{"type":"Polygon","id":5127,"arcs":[[5698,5699,5700,5701,-4642,-3483]]},{"type":"Polygon","id":5073,"arcs":[[-4530,-5681,-4505,-3470,5702,5703]]},{"type":"Polygon","id":5093,"arcs":[[-4507,-3430,-3508,5704,5705,5706,5707,5708,5709,5710]]},{"type":"Polygon","id":5055,"arcs":[[5711,-3506,-4542,-3446,-3547]]},{"type":"Polygon","id":5045,"arcs":[[5712,-3519,-4538,-3487,-4494,-3462,-5683]]},{"type":"Polygon","id":5069,"arcs":[[-4495,-3491,-4492,-3510,-3535,-3474]]},{"type":"Polygon","id":5113,"arcs":[[-4496,5713,5714,-4643,-5702,5715]]},{"type":"Polygon","id":5009,"arcs":[[-3539,5716,-4557,5717,-3494]]},{"type":"Polygon","id":5071,"arcs":[[-5677,-4553,-3497,-4521,5718]]},{"type":"Polygon","id":5103,"arcs":[[-3472,-4504,-5692,-4541,-3461,-4502]]},{"type":"Polygon","id":5007,"arcs":[[5719,-3541,-4556,-3435,5720,-4577,5721]]},{"type":"Polygon","id":5125,"arcs":[[-3464,-4493,-3478,5722,-4527]]},{"type":"Polygon","id":5129,"arcs":[[-5718,-4559,-3453,-4547,5723,-4522,-3495]]},{"type":"Polygon","id":5011,"arcs":[[-3533,-5689,5724,-4499,-3459]]},{"type":"Polygon","id":5149,"arcs":[[5725,-4519,-5684,-3466,-4526,5726,-5700]]},{"type":"Polygon","id":5135,"arcs":[[-4545,5727,-5697,-4516,5728,-3448]]},{"type":"Polygon","id":40107,"arcs":[[5729,5730,5731,5732,-4613,5733,-4592]]},{"type":"Polygon","id":40123,"arcs":[[5734,5735,5736,5737,-4594,5738,-4588,5739,-4597,5740]]},{"type":"Polygon","id":40129,"arcs":[[5741,-4634,5742,5743,-230,5744]]},{"type":"Polygon","id":40075,"arcs":[[-4583,5745,5746,-4565,5747,-4606,5748]]},{"type":"Polygon","id":40143,"arcs":[[5749,5750,5751,5752,5753,5754,5755]]},{"type":"Polygon","id":40009,"arcs":[[5756,5757,-5746,-4586,5758,-149,-231,-5744]]},{"type":"Polygon","id":40005,"arcs":[[5759,5760,-4616,5761,5762,-4591]]},{"type":"Polygon","id":40001,"arcs":[[-5696,5763,5764,-4578,-5721,-3438]]},{"type":"Polygon","id":40103,"arcs":[[5765,5766,-4562,5767,5768,5769]]},{"type":"Polygon","id":40057,"arcs":[[-5675,-150,-5759,-4585,5770,-2248]]},{"type":"Polygon","id":40093,"arcs":[[5771,5772,5773,5774,-4631,5775,5776]]},{"type":"Polygon","id":40003,"arcs":[[5777,-4781,-4628,5778,-5772,5779]]},{"type":"Polygon","id":40035,"arcs":[[5780,-3757,5781,-4574,5782,5783,-4649]]},{"type":"Polygon","id":40085,"arcs":[[-4463,-4603,5784,-4579,-3340,5785]]},{"type":"Polygon","id":40007,"arcs":[[-3683,5786,5787,-4622,5788,5789,5790,-4654]]},{"type":"Polygon","id":40127,"arcs":[[5791,5792,5793,5794,-4645,5795,-4617,-5761]]},{"type":"Polygon","id":40137,"arcs":[[5796,-4601,5797,5798,5799,5800]]},{"type":"Polygon","id":40097,"arcs":[[-5783,-4573,5801,5802,5803]]},{"type":"Polygon","id":40013,"arcs":[[-3342,-4582,5804,-5762,-4615,-242,5805]]},{"type":"Polygon","id":40071,"arcs":[[5806,-3753,5807,-5770,5808,-4626]]},{"type":"Polygon","id":40101,"arcs":[[5809,5810,5811,5812,5813,-4609]]},{"type":"Polygon","id":40065,"arcs":[[-2249,-5771,-4584,-5749,-4605,5814]]},{"type":"Polygon","id":40025,"arcs":[[-4876,-4651,5815,-233,-2444,5816]]},{"type":"Polygon","id":40045,"arcs":[[-5789,-4621,5817,-4629,-5742,5818,5819]]},{"type":"Polygon","id":40115,"arcs":[[-3756,5820,5821,-4575,-5782]]},{"type":"Polygon","id":40087,"arcs":[[5822,5823,5824,-5737,5735,-5735,5825,5826]]},{"type":"Polygon","id":54093,"arcs":[[-4672,5827,-4728,5828]]},{"type":"Polygon","id":54011,"arcs":[[5829,-4752,5830,-4704,5831,5832]]},{"type":"Polygon","id":54057,"arcs":[[5833,-4730,-3790,-2449]]},{"type":"Polygon","id":54027,"arcs":[[-5834,-2448,-4774,5834,-4770]]},{"type":"Polygon","id":54039,"arcs":[[-4700,5835,5836,5837,-4736,-4721,5838,5839,-4662]]},{"type":"Polygon","id":54041,"arcs":[[5840,5841,5842,-4766,5843,-4714,-4713,-4712]]},{"type":"Polygon","id":54013,"arcs":[[-4689,5844,-4763,5845,-4734,5846]]},{"type":"Polygon","id":54107,"arcs":[[5847,5848,5849,5850,5851,-4692,5852]]},{"type":"Polygon","id":54073,"arcs":[[-4683,5853,-5851,5854]]},{"type":"Polygon","id":54017,"arcs":[[5855,-4715,-5844,-4765,5856,-4681]]},{"type":"Polygon","id":54081,"arcs":[[-4663,-5840,5857,5858,-4757,5859]]},{"type":"Polygon","id":54091,"arcs":[[-4659,5860,-4676,-4717,-4686]]},{"type":"Polygon","id":8069,"arcs":[[5861,5862,5863,-330,-409,5864]]},{"type":"Polygon","id":8071,"arcs":[[5865,5866,5867,-2442,-1459,5868,5869,5870]]},{"type":"Polygon","id":54019,"arcs":[[-5839,-4726,5871,5872,-5858]]},{"type":"Polygon","id":54083,"arcs":[[5873,5874,-4673,-5829,-4727,5875,-4705]]},{"type":"Polygon","id":8043,"arcs":[[5876,5877,5878,5879,5880,5881,5882]]},{"type":"Polygon","id":54099,"arcs":[[5883,-5832,-4703,-4745,5884,5885,5886]]},{"type":"Polygon","id":54003,"arcs":[[-4773,5887,-4775,-3803]]},{"type":"Polygon","id":54045,"arcs":[[-4665,5888,-4746,-4701]]},{"type":"Polygon","id":54035,"arcs":[[-5853,-4691,5889,-5837,5890,-4755,5891]]},{"type":"Polygon","id":54025,"arcs":[[-5872,-4725,5892,-4709,5893,5894,-4694,5895]]},{"type":"Polygon","id":8051,"arcs":[[5896,5897,5898,5899,5900,5901,5902,5903]]},{"type":"Polygon","id":54109,"arcs":[[-4738,-5889,-4664,-5860,-4756,5904]]},{"type":"Polygon","id":54079,"arcs":[[-4699,-5831,-4751,-5891,-5836]]},{"type":"Polygon","id":8021,"arcs":[[5905,5906,-1436,-2425,5907,5908]]},{"type":"Polygon","id":54077,"arcs":[[-4658,-864,-3792,-4729,-5828,-4671,-5861]]},{"type":"Polygon","id":54101,"arcs":[[-4710,-5893,-4724,5909,-5842,5910,-5874]]},{"type":"Polygon","id":54071,"arcs":[[-4706,-5876,-4733,4731,-4769,5911,5912,5913]]},{"type":"Polygon","id":54085,"arcs":[[-5852,-5854,-4682,-5857,-4764,-5845,-4688]]},{"type":"Polygon","id":54103,"arcs":[[-4668,-900,-4661,-4685,-4716,-5856,-4680,5914]]},{"type":"Polygon","id":8037,"arcs":[[5915,5916,5917,5918,5919,5920]]},{"type":"Polygon","id":54087,"arcs":[[-4690,-5847,-4737,-5838,-5890]]},{"type":"Polygon","id":54007,"arcs":[[-5843,-5910,-4723,-4735,-5846,-4762]]},{"type":"Polygon","id":54097,"arcs":[[-4711,-4674,-5875,-5911,-5841]]},{"type":"Polygon","id":54047,"arcs":[[-4761,-1126,5921,-4741,4739,-4739,-5905]]},{"type":"Polygon","id":54089,"arcs":[[-4758,-5859,-5873,-5896,-4693,5922]]},{"type":"Polygon","id":20201,"arcs":[[-4831,-3672,-4980,5923,-3704,5924,-3660]]},{"type":"Polygon","id":20131,"arcs":[[-3868,-4952,-4833,-3652,-4796,-3701]]},{"type":"Polygon","id":20113,"arcs":[[-4873,5925,5926,5927,5928,-3760]]},{"type":"Polygon","id":20135,"arcs":[[-3717,-4844,5929,-4826,-3738,-4878,-3653,-4823]]},{"type":"Polygon","id":20067,"arcs":[[5930,-4868,5931,-3725]]},{"type":"Polygon","id":20139,"arcs":[[5932,-3639,5933,-4793,-3770,5934]]},{"type":"Polygon","id":20099,"arcs":[[-4788,-3758,-5781,-4648,-3695,5935]]},{"type":"Polygon","id":20047,"arcs":[[-4824,-3657,5936,5937,-4866,-3689]]},{"type":"Polygon","id":20103,"arcs":[[-4803,5938,-3744,-4812,5939,-4835]]},{"type":"Polygon","id":20107,"arcs":[[5940,5941,5942,5943,-3669]]},{"type":"Polygon","id":20127,"arcs":[[-3772,-4792,-3733,5944,-4840,5945]]},{"type":"Polygon","id":20163,"arcs":[[-3644,5946,-4817,-3740,-4825,5947]]},{"type":"Polygon","id":20007,"arcs":[[-4864,5948,5949,-4782,-5778,5950,-3776]]},{"type":"Polygon","id":20003,"arcs":[[5951,-3637,-5941,-4790]]},{"type":"Polygon","id":20039,"arcs":[[-4809,5952,-4998,-3893,-4806,-3728]]},{"type":"Polygon","id":20181,"arcs":[[5953,-4807,-3783,-4859,5954,-4852]]},{"type":"Polygon","id":20069,"arcs":[[5955,-4869,-3719,-4822,-3687]]},{"type":"Polygon","id":20009,"arcs":[[5956,5957,-4871,5958,-3655,-4880]]},{"type":"Polygon","id":20025,"arcs":[[-5788,5959,-3691,-4865,-3779,-4623]]},{"type":"Polygon","id":20169,"arcs":[[-5927,5960,-3712,5961,-4842]]},{"type":"Polygon","id":20095,"arcs":[[-3763,5962,5963,-4783,-5950,5964]]},{"type":"Polygon","id":20079,"arcs":[[-4846,5965,-3761,-5929,5966]]},{"type":"Polygon","id":20061,"arcs":[[-4839,-3662,5967,-3773,-5946]]},{"type":"Polygon","id":20171,"arcs":[[5968,-4845,-3715,5969,5970,-3786]]},{"type":"Polygon","id":20089,"arcs":[[-3674,-4830,5971,-4819,5972,-5022,-5046]]},{"type":"Polygon","id":20205,"arcs":[[5973,-3706,5974,-3693,5975]]},{"type":"MultiPolygon","id":24003,"arcs":[[[-3815,-2454,5976,5977,-3806,5978]],[[-2451,-3814,5979]]]},{"type":"Polygon","id":31107,"arcs":[[-3870,5980,5981,5982,-5063,-4947,-3841,5983]]},{"type":"Polygon","id":31127,"arcs":[[5984,5985,-4950,-3866,-5040,-4985]]},{"type":"Polygon","id":31123,"arcs":[[-3884,-5011,-4973,-3933,-4937,-4969]]},{"type":"Polygon","id":31079,"arcs":[[5986,-5055,-3905,-5082,5987]]},{"type":"Polygon","id":31175,"arcs":[[-3847,-4978,-5018,-4958,5988]]},{"type":"Polygon","id":31119,"arcs":[[-3843,-4949,-4967,5989,-5037]]},{"type":"Polygon","id":31061,"arcs":[[5990,-3642,-5079,-5048,-5024]]},{"type":"Polygon","id":31125,"arcs":[[-5054,-5016,-5036,5991,-3901]]},{"type":"Polygon","id":31085,"arcs":[[-5044,-3878,-4964,-5003,5992,-4990]]},{"type":"Polygon","id":31067,"arcs":[[-5924,-4979,-4954,5993,-5039,-3864,-3699]]},{"type":"Polygon","id":31185,"arcs":[[-3935,5994,-3896,-5083,-5072]]},{"type":"Polygon","id":31117,"arcs":[[-4941,-3924,-4993,-3835,-5060,-4992]]},{"type":"Polygon","id":31135,"arcs":[[-4991,-5993,-5006,5995,5996,-3857,-4943]]},{"type":"Polygon","id":31149,"arcs":[[-5067,-3907,-5059,5997]]},{"type":"Polygon","id":31109,"arcs":[[-4953,-3937,-5085,-3834,-5028,-4981,-5994]]},{"type":"Polygon","id":31001,"arcs":[[-5081,-3900,-5020,-5047,5998,-5988]]},{"type":"Polygon","id":17183,"arcs":[[-5116,5999,6000,6001,6002,-5122,-2594]]},{"type":"Polygon","id":17177,"arcs":[[-3136,-3092,-541,6003,-3999,-497]]},{"type":"Polygon","id":17159,"arcs":[[-491,6004,-4009,-568,-4005,6005,-5137]]},{"type":"Polygon","id":17081,"arcs":[[-4003,-501,-3982,6006,-5132,-2584]]},{"type":"Polygon","id":17179,"arcs":[[6007,-5092,6008,6009,-1683,-5114]]},{"type":"Polygon","id":17173,"arcs":[[-3997,6010,-574,-2618,-3988,-513,-3992,-536]]},{"type":"Polygon","id":17087,"arcs":[[6011,-2588,-3969,-524,6012]]},{"type":"Polygon","id":17175,"arcs":[[-5128,6013,-3950,6014,-1686]]},{"type":"Polygon","id":17193,"arcs":[[6015,-503,-4006,-570,-4008,6016,6017]]},{"type":"Polygon","id":17167,"arcs":[[548,-548,-5090,-531,-3991,-511,-3962,-5107,6018,-550]]},{"type":"Polygon","id":17061,"arcs":[[-2611,-558,-5108,-3960,-552,6019]]},{"type":"Polygon","id":17141,"arcs":[[-540,-5099,6020,-1687,-4000,-6004]]},{"type":"Polygon","id":17093,"arcs":[[-1706,-581,6021,-1701,-5102,6022]]},{"type":"Polygon","id":49027,"arcs":[[6023,6024,-4030,-2402,-2413,-5154]]},{"type":"Polygon","id":49057,"arcs":[[-5150,6025,6026,6027,-621]]},{"type":"Polygon","id":49047,"arcs":[[6028,6029,6030,6031,6032,-4020,6033,-4015]]},{"type":"Polygon","id":49041,"arcs":[[6034,6035,6036,6037,-4031,-6025]]},{"type":"Polygon","id":49051,"arcs":[[6038,6039,-5141,6040]]},{"type":"Polygon","id":49019,"arcs":[[6041,-6032,6042,6043,6044]]},{"type":"Polygon","id":49025,"arcs":[[6045,6046,6047,6048,6049,-5145]]},{"type":"Polygon","id":49021,"arcs":[[6050,-6046,-5144,-2404,-4034]]},{"type":"Polygon","id":49043,"arcs":[[-5140,6051,6052,-1399,-1383,-4013,6053,-6041]]},{"type":"Polygon","id":49013,"arcs":[[-6039,-6054,-4012,-6034,-4019,6054]]},{"type":"Polygon","id":49031,"arcs":[[-6038,6055,6056,-4032]]},{"type":"Polygon","id":49055,"arcs":[[6057,6058,6059,-6056,-6037]]},{"type":"Polygon","id":49011,"arcs":[[-5138,6060,-6028,6061]]},{"type":"Polygon","id":49039,"arcs":[[-6024,-5153,6062,-4017,6063,-6035]]},{"type":"Polygon","id":49049,"arcs":[[-5142,-6040,-6055,-4018,-6063,-5152,6064]]},{"type":"Polygon","id":6073,"arcs":[[-584,6065,-646,6066]]},{"type":"Polygon","id":6063,"arcs":[[-587,6067,6068,6069,-5175,6070]]},{"type":"Polygon","id":6069,"arcs":[[6071,-2773,6072,6073,-615]]},{"type":"Polygon","id":6089,"arcs":[[6074,6075,-6068,-592,6076,-2757]]},{"type":"Polygon","id":6099,"arcs":[[6077,6078,-2771,6079,6080,-642,6081]]},{"type":"Polygon","id":13005,"arcs":[[-2791,-5234,-2874,-5282,6082]]},{"type":"Polygon","id":13287,"arcs":[[-2865,6083,-4142,6084,6085,6086]]},{"type":"Polygon","id":13185,"arcs":[[-5344,6087,-5348,-5230,-5225,-2779,-4128,6088]]},{"type":"Polygon","id":13003,"arcs":[[-2776,-5224,-5283,-2872,-5215]]},{"type":"Polygon","id":13281,"arcs":[[-2797,6089,-5296,-2857,6090]]},{"type":"Polygon","id":13251,"arcs":[[6091,-5190,6092,6093,6094,6095]]},{"type":"Polygon","id":13285,"arcs":[[6096,-5308,6097,6098,6099,6100]]},{"type":"Polygon","id":13175,"arcs":[[6101,-5241,6102,6103,6104,-2798]]},{"type":"Polygon","id":13111,"arcs":[[-2907,6105,6106,-2860,6107,-5256,-4097]]},{"type":"Polygon","id":13275,"arcs":[[-5346,6108,6109,6110,-5317,6111]]},{"type":"Polygon","id":13121,"arcs":[[-2806,6112,-2888,6113,-4064,6114,-4077,-4076,4075,-5323,6115,-4116]]},{"type":"Polygon","id":13043,"arcs":[[6116,-4132,6117,-4090]]},{"type":"Polygon","id":13037,"arcs":[[6118,-5333,6119,6120,6121,-5240]]},{"type":"Polygon","id":13007,"arcs":[[6122,-5313,6123,-5301,-5235,-6122]]},{"type":"Polygon","id":13181,"arcs":[[-4109,6124,-4067,6125,-5273]]},{"type":"Polygon","id":13081,"arcs":[[6126,-5264,-5329,-5254,-2866,-6087]]},{"type":"Polygon","id":13153,"arcs":[[-4123,6127,6128,-5294,-2801,-5342,-5252,6129]]},{"type":"Polygon","id":13227,"arcs":[[-5260,6130,6131,-4099]]},{"type":"Polygon","id":13307,"arcs":[[6132,-5331,6133,-5336,6134]]},{"type":"Polygon","id":13305,"arcs":[[6135,6136,6137,-2827,-4119,-5233,-2789]]},{"type":"Polygon","id":13103,"arcs":[[-4122,-2783,6138,-6095,6139,6140]]},{"type":"Polygon","id":13139,"arcs":[[6141,6142,-5319,-4074,-5258,6143,5298,-5298,6144]]},{"type":"Polygon","id":13271,"arcs":[[-2863,6145,6146,6147,-5285,6148]]},{"type":"Polygon","id":39159,"arcs":[[6149,6150,6151,-884,6152,6153,6154]]},{"type":"Polygon","id":39031,"arcs":[[6155,6156,6157,6158,6159,6160]]},{"type":"Polygon","id":26087,"arcs":[[-5570,-5475,-5470,6161,-5544,-5365]]},{"type":"MultiPolygon","id":26097,"arcs":[[[-5507,-5443,6162,-5418]],[[6163]]]},{"type":"Polygon","id":39149,"arcs":[[6164,6165,6166,6167,6168,6169]]},{"type":"Polygon","id":39027,"arcs":[[6170,6171,-4264,6172,6173,6174]]},{"type":"Polygon","id":39107,"arcs":[[-6165,6175,6176,6177,6178,6179]]},{"type":"Polygon","id":26065,"arcs":[[-5557,-5458,-5577,-5512,-5394]]},{"type":"Polygon","id":39075,"arcs":[[-6161,6180,6181,6182,6183,6184]]},{"type":"Polygon","id":39143,"arcs":[[6185,6186,6187,6188,6189]]},{"type":"Polygon","id":39105,"arcs":[[6190,6191,-5848,-5892,-4754,6192]]},{"type":"Polygon","id":39007,"arcs":[[6193,6194,6195,-856,-747,6196]]},{"type":"Polygon","id":26039,"arcs":[[6197,-5415,6198,-5508]]},{"type":"Polygon","id":39111,"arcs":[[6199,6200,-4669,-5915,-4679,6201]]},{"type":"Polygon","id":39015,"arcs":[[-6171,6202,6203,6204,6205,6206]]},{"type":"Polygon","id":39113,"arcs":[[6207,6208,-4262,6209,6210,6211,6212]]},{"type":"Polygon","id":39067,"arcs":[[6213,6214,6215,6216,6217]]},{"type":"Polygon","id":26077,"arcs":[[-5461,-5558,-5372,-5530,-5474]]},{"type":"Polygon","id":39003,"arcs":[[6218,6219,6220,6221,6222]]},{"type":"Polygon","id":39053,"arcs":[[-4753,-5830,6223,6224,6225,-6193]]},{"type":"Polygon","id":42019,"arcs":[[-1993,-1971,-688,-1917,-791,-875,-1824]]},{"type":"Polygon","id":39139,"arcs":[[6226,6227,6228,6229,6230]]},{"type":"Polygon","id":39093,"arcs":[[6231,6232,6233,-1999,6234,6235]]},{"type":"Polygon","id":39023,"arcs":[[-6208,6236,6237,6238,6239]]},{"type":"Polygon","id":39061,"arcs":[[6240,6241,6242,6243,-4266,6244,6245]]},{"type":"Polygon","id":39161,"arcs":[[6246,6247,6248,6249,-6223,6250,-6179]]},{"type":"Polygon","id":39047,"arcs":[[6251,6252,6253,-6174,6254,6255]]},{"type":"Polygon","id":39051,"arcs":[[6256,-5539,6257,-1930,6258]]},{"type":"Polygon","id":39175,"arcs":[[6259,6260,6261,6262,6263]]},{"type":"Polygon","id":39087,"arcs":[[6264,-1977,6265,-6224,-5833,-5884,6266]]},{"type":"Polygon","id":39039,"arcs":[[6267,6268,6269,-1928,6270,6271]]},{"type":"Polygon","id":39085,"arcs":[[-6195,6272,6273,6274]]},{"type":"Polygon","id":26059,"arcs":[[-5516,-5540,-6257,6275,6276,-5446,-5376]]},{"type":"Polygon","id":26121,"arcs":[[-5360,-5421,-5535,6277,-5573]]},{"type":"Polygon","id":39073,"arcs":[[6278,6279,6280,6281,6282,6283]]},{"type":"Polygon","id":39115,"arcs":[[6284,6285,6286,6287,6288]]},{"type":"Polygon","id":26125,"arcs":[[6289,-5575,-5545,-6162,-5469,-5579]]},{"type":"Polygon","id":26057,"arcs":[[6290,-5494,-5379,6291,-5454,-5556]]},{"type":"Polygon","id":39155,"arcs":[[6292,6293,-6197,-746,-877,6294]]},{"type":"Polygon","id":39013,"arcs":[[6295,-4718,-4670,-6201,6296,6297,-6215]]},{"type":"Polygon","id":26133,"arcs":[[-5480,-5552,-5486,6298,-5561]]},{"type":"Polygon","id":26145,"arcs":[[-5568,-5367,-5543,-5455,-6292,-5378]]},{"type":"Polygon","id":39125,"arcs":[[6299,-6249,6300,-6272]]},{"type":"Polygon","id":39091,"arcs":[[-6167,6301,6302,-6155,6303]]},{"type":"Polygon","id":39151,"arcs":[[6304,6305,6306,6307,-6184,6308,6309,6310]]},{"type":"Polygon","id":39077,"arcs":[[6311,6312,6313,-6236,6314,-6228,6315,6316,-6188]]},{"type":"Polygon","id":26135,"arcs":[[-5547,-6199,-5560,-5392]]},{"type":"MultiPolygon","id":26029,"arcs":[[[6317,-5505,-5533,-5412,-5499]],[[6318]],[[6319]],[[6320]],[[6321]]]},{"type":"Polygon","id":26117,"arcs":[[-5574,-5422,-5358,-5562,-5495,-6291]]},{"type":"Polygon","id":26105,"arcs":[[-5481,-5572,6322,6323]]},{"type":"Polygon","id":39029,"arcs":[[-793,-1920,-4750,6324,6325,-6306,6326]]},{"type":"Polygon","id":39045,"arcs":[[6327,6328,-6284,6329,-887]]},{"type":"Polygon","id":39117,"arcs":[[-6231,6330,6331,6332,6333]]},{"type":"Polygon","id":26035,"arcs":[[-5497,-6299,-5485,-5510,-5430]]},{"type":"Polygon","id":26079,"arcs":[[-5500,-6198,-5483,-5566]]},{"type":"Polygon","id":39135,"arcs":[[6334,-6211,6335,6336,6337]]},{"type":"Polygon","id":42109,"arcs":[[-1956,-1967,-1935,-1938]]},{"type":"Polygon","id":26101,"arcs":[[-5385,-5553,-5478,-6324,6338]]},{"type":"Polygon","id":26161,"arcs":[[-5576,-6290,-5578,-5551,-5536,-5514]]},{"type":"MultiPolygon","id":39123,"arcs":[[[6339,6340,6341,6342,-6186]],[[6343]]]},{"type":"MultiPolygon","id":2100,"arcs":[[[6344,-996,6345,-1024,6346,-2005],[-992]],[[6347]]]},{"type":"MultiPolygon","id":2060,"arcs":[[[6348,-975]],[[6349,-966]],[[6350,-964]],[[-978,6351]],[[-951,-979,6352]],[[-953,6353]],[[-954,6354]],[[-956,6355]],[[-957,6356]],[[6357,-959]],[[6358,-961]]]},{"type":"Polygon","id":28083,"arcs":[[6359,-4288,6360,-5627,-1047,6361]]},{"type":"Polygon","id":28073,"arcs":[[6362,6363,6364,-5626,6365]]},{"type":"Polygon","id":28153,"arcs":[[6366,-3168,6367,6368,6369,6370,6371]]},{"type":"Polygon","id":28149,"arcs":[[6372,-3164,6373,-2029,-3158,6374,-75,6375,-78]]},{"type":"Polygon","id":28117,"arcs":[[-4292,-1054,6376,-5618,-1039,6377]]},{"type":"Polygon","id":28091,"arcs":[[-3223,-4259,6378,-6366,-5625,6379]]},{"type":"Polygon","id":28143,"arcs":[[-4511,6380,6381,-58,6382,-71,-3429,-5682]]},{"type":"Polygon","id":28031,"arcs":[[6383,6384,6385,6386,-6364,6387]]},{"type":"Polygon","id":28061,"arcs":[[-65,-3169,-6367,6388,6389]]},{"type":"Polygon","id":28129,"arcs":[[6390,6391,-6390,6392,-6385,6393]]},{"type":"Polygon","id":28133,"arcs":[[-74,6394,-6362,-1046,6395,-4249]]},{"type":"Polygon","id":28125,"arcs":[[6396,-1050,6397,-3162]]},{"type":"Polygon","id":22009,"arcs":[[6398,-1098,-4435,6399,-1121,6400,6401,-5656]]},{"type":"Polygon","id":22053,"arcs":[[-1090,6402,6403,6404,-1094,-5647,6405]]},{"type":"Polygon","id":22061,"arcs":[[6406,-1085,6407,-1072,6408]]},{"type":"Polygon","id":22077,"arcs":[[-6402,6409,-1119,6410,6411,-4432,-3278,-5657]]},{"type":"Polygon","id":22105,"arcs":[[6412,-4315,6413,6414,-4423,-5630,-4440,-4439,-4443]]},{"type":"Polygon","id":22069,"arcs":[[6415,-1109,6416,-1102,6417,-2034,6418,-2040]]},{"type":"Polygon","id":51143,"arcs":[[6419,6420,6421,6422,6423,6424,6425,6426,6427]]},{"type":"Polygon","id":51680,"arcs":[[6428,6429,6430]]},{"type":"Polygon","id":51005,"arcs":[[6431,6432,6433,-4695,-5895,6434],[6435]]},{"type":"Polygon","id":51011,"arcs":[[6436,6437,6438,6439,6440,6441]]},{"type":"Polygon","id":51169,"arcs":[[6442,6443,6444,6445,6446,6447,6448]]},{"type":"Polygon","id":51595,"arcs":[[6449]]},{"type":"Polygon","id":51079,"arcs":[[6450,6451,6452,6453,6454]]},{"type":"Polygon","id":51101,"arcs":[[6455,6456,6457,6458]]},{"type":"Polygon","id":48215,"arcs":[[-139,-3415,-1185,-280,6459,6460]]},{"type":"Polygon","id":48257,"arcs":[[-95,6461,-126,-3332,6462,-3348]]},{"type":"Polygon","id":48341,"arcs":[[-4488,-3421,6463,-1192,6464,6465]]},{"type":"Polygon","id":48327,"arcs":[[6466,6467,6468,-2242,6469]]},{"type":"Polygon","id":48137,"arcs":[[6470,6471,6472,-3324,-146,-1237,6473]]},{"type":"MultiPolygon","id":48409,"arcs":[[[-2119,6474,-2182,6475,6476,6477,-2181,6478,-2176,6479,-2174,6480,6481,-2171,6482,-2168,6483,-2165,6484,-2163,6485,6486,-2162,6487,6488,-2156,6489,-2153,6490,6491,-2149,6492,6493,-2147,6494,6495,-2143,6496,-2139,6497,6498,6499]],[[-2160,6500]]]},{"type":"Polygon","id":48445,"arcs":[[6501,-3376,-4478,-252,-3314]]},{"type":"Polygon","id":48105,"arcs":[[-3371,-2218,6502,-4469,-1158,6503,-2244,6504,-1235]]},{"type":"Polygon","id":48225,"arcs":[[6505,6506,6507,-3362,-1208,6508,-178]]},{"type":"Polygon","id":48473,"arcs":[[-2130,-1280,6509,6510,6511,-3327]]},{"type":"Polygon","id":48081,"arcs":[[-2129,6512,6513,-3417,-160]]},{"type":"Polygon","id":48475,"arcs":[[6514,6515,-2216,-3365,6516,-2234]]},{"type":"Polygon","id":48449,"arcs":[[-119,-1286,-198,-2202]]},{"type":"Polygon","id":48281,"arcs":[[6517,-4472,-249,6518,-2122,6519]]},{"type":"Polygon","id":48207,"arcs":[[6520,-3333,-1169,-3385,6521]]},{"type":"Polygon","id":48317,"arcs":[[-1300,6522,6523,-254,-4479,-98]]},{"type":"Polygon","id":5083,"arcs":[[-3482,-5678,-5719,-4520,-5726,-5699]]},{"type":"Polygon","id":34001,"arcs":[[-1321,6524,-2274,6525,6526,-310,6527]]},{"type":"Polygon","id":10001,"arcs":[[-4891,-1489,6528,6529,6530,-1601]]},{"type":"Polygon","id":34041,"arcs":[[-827,6531,6532,6533,-931,-2000]]},{"type":"Polygon","id":5063,"arcs":[[-3522,-4549,-5698,-5728,-4544,-5688,-4534]]},{"type":"Polygon","id":34033,"arcs":[[6534,6535,6536,-308,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548,6549,6550,6551,6552,6553,6554,6555,6556,6557,6558,6559,6560,6561,6562,6563,6564,6565,6566,6567,6568,6569,6570,6571,6572,6573,6574,6575,6576,6577,6578,6579,6580,6581,6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592,6593,6594,6595,6596,6597]]},{"type":"Polygon","id":5147,"arcs":[[-5687,-5691,-3518,-4550,-5680,-4536]]},{"type":"Polygon","id":42065,"arcs":[[-1968,-1994,-909,-1796,-881,-1992]]},{"type":"Polygon","id":5003,"arcs":[[-3530,6598,-4500,-5725,-5690]]},{"type":"Polygon","id":10005,"arcs":[[-4893,-1602,-6531,6599,-2475,-4881]]},{"type":"Polygon","id":5097,"arcs":[[6600,-5693,-3499,-5716,-5701,-5727,-4525]]},{"type":"MultiPolygon","id":10003,"arcs":[[[-6529,-1488,-3794,-1814,-754,-1812,-752,6601,-6598,6602]],[[-6539,6603]],[[-6541,6604]],[[-6543,6605]],[[-6545,6606]],[[-6547,6546,6607]],[[-6549,6608]],[[-6551,6609]],[[-6553,6610]],[[-6555,6611]],[[-6556,6612]],[[-6558,6613]],[[-6560,6614]],[[-6562,6615]],[[-6564,6616]],[[-6566,6617]],[[-6568,6618]],[[-6570,6619]],[[-6572,6620]],[[-6574,6621]],[[-6576,6622]],[[-6578,6623]],[[-6580,6624]],[[-6582,6625]],[[-6584,6626]],[[-6586,6627]],[[-6588,6628]],[[-6590,6629]],[[-6592,6630]],[[-6594,6631]],[[-6596,6632]],[[6633]]]},{"type":"Polygon","id":5133,"arcs":[[-4498,-3440,6634,-5714]]},{"type":"Polygon","id":5141,"arcs":[[-5724,-4546,-3520,-5713,-5685,-4523]]},{"type":"Polygon","id":5059,"arcs":[[-5694,-6601,-4528,-5723,-3477,-4540]]},{"type":"Polygon","id":40051,"arcs":[[6635,-5827,6636,-5800,6637,-4570]]},{"type":"Polygon","id":30069,"arcs":[[6638,6639,6640,6641,6642]]},{"type":"Polygon","id":40011,"arcs":[[-4632,-5775,6643,6644,-4568,6645]]},{"type":"Polygon","id":30073,"arcs":[[6646,6647,6648,6649,6650,6651]]},{"type":"Polygon","id":40121,"arcs":[[-4611,6652,6653,-5792,-5760,-4590,6654]]},{"type":"Polygon","id":40153,"arcs":[[6655,-5776,-4630,-5818,-4620]]},{"type":"Polygon","id":40147,"arcs":[[6656,-5752,6657,-4861,-3697,-4647]]},{"type":"Polygon","id":40073,"arcs":[[-5774,6658,6659,6660,-6644]]},{"type":"Polygon","id":40031,"arcs":[[-4571,-6638,-5799,6661,-4607,-5748]]},{"type":"Polygon","id":40033,"arcs":[[-6662,-5798,-4600,-3403,-2235,-4608]]},{"type":"Polygon","id":40039,"arcs":[[-5757,-5743,-4633,-6646,-4567,6662]]},{"type":"Polygon","id":40047,"arcs":[[-5779,-4627,-5809,-5769,6663,-6659,-5773]]},{"type":"Polygon","id":40077,"arcs":[[6664,-4646,-5795,5793,-5793,-6654]]},{"type":"Polygon","id":40149,"arcs":[[-6663,-4566,-5747,-5758]]},{"type":"Polygon","id":40037,"arcs":[[6665,-5732,6666,-4564,6667,-5756]]},{"type":"Polygon","id":40063,"arcs":[[-4589,-5739,-4593,-5734,-4612,-6655]]},{"type":"Polygon","id":40135,"arcs":[[-5695,-3479,-4641,6668,-5813,6669,-5764]]},{"type":"Polygon","id":40061,"arcs":[[-6669,-4640,-6665,-6653,-4610,-5814]]},{"type":"Polygon","id":40083,"arcs":[[-6664,-5768,-4561,6670,-4639,-6660]]},{"type":"Polygon","id":40113,"arcs":[[-5766,-5808,-3752,-4862,-6658,-5751,6671]]},{"type":"Polygon","id":40021,"arcs":[[-5812,6672,-5802,-4572,-5765,-6670]]},{"type":"Polygon","id":40145,"arcs":[[-5803,-6673,-5811,6673,-5754,6674]]},{"type":"Polygon","id":40049,"arcs":[[-5826,-5741,-4596,6675,-5801,-6637]]},{"type":"Polygon","id":40081,"arcs":[[-6671,-4560,-6667,-5731,6676,-4635]]},{"type":"Polygon","id":40027,"arcs":[[6677,-4637,6678,-5824]]},{"type":"Polygon","id":40017,"arcs":[[-4569,-6645,-6661,-4638,-6678,-5823,-6636]]},{"type":"Polygon","id":40111,"arcs":[[-6674,-5810,-4614,-5733,-6666,-5755]]},{"type":"Polygon","id":40151,"arcs":[[-4619,-3777,-5951,-5780,-5777,-6656]]},{"type":"Polygon","id":40019,"arcs":[[-4602,-5797,-6676,-4599,6679,-4580,-5785]]},{"type":"Polygon","id":40069,"arcs":[[-6680,-4598,-5740,-4587,-5763,-5805,-4581]]},{"type":"Polygon","id":40117,"arcs":[[-5750,-6668,-4563,-5767,-6672]]},{"type":"Polygon","id":40131,"arcs":[[-6675,-5753,-6657,-4650,-5784,-5804]]},{"type":"Polygon","id":40125,"arcs":[[-4636,-6677,-5730,-4595,-5738,-5825,-6679]]},{"type":"Polygon","id":40089,"arcs":[[-4618,-5796,-4644,-5715,-6635,-3439,-1175,-1285]]},{"type":"Polygon","id":8089,"arcs":[[6680,6681,-5866,6682,6683]]},{"type":"Polygon","id":8067,"arcs":[[-1414,6684,6685,6686,6687]]},{"type":"Polygon","id":8117,"arcs":[[6688,6689,6690,6691,-5918]]},{"type":"Polygon","id":8027,"arcs":[[-5883,6692,6693,6694]]},{"type":"Polygon","id":8097,"arcs":[[6695,6696,-5920,6697,6698,-5904]]},{"type":"Polygon","id":8025,"arcs":[[6699,-6684,6700,6701]]},{"type":"Polygon","id":8017,"arcs":[[-4857,-3634,6702,6703,6704]]},{"type":"Polygon","id":8011,"arcs":[[6705,6706,6707,-5867,-6682]]},{"type":"Polygon","id":8001,"arcs":[[6708,6709,6710,6711,6712,6713,6714]]},{"type":"Polygon","id":8039,"arcs":[[6715,6716,6717,6718]]},{"type":"Polygon","id":8125,"arcs":[[6719,6720,-5004,-4962,-4854,6721,6722]]},{"type":"Polygon","id":8065,"arcs":[[-5919,-6692,6723,6724,-6698]]},{"type":"Polygon","id":8029,"arcs":[[6725,-5902,6726]]},{"type":"Polygon","id":8023,"arcs":[[6727,6728,-5869,-1458,-1432,-5907]]},{"type":"Polygon","id":8045,"arcs":[[-6043,-6031,6729,6730,-5921,-6697,6731]]},{"type":"Polygon","id":8087,"arcs":[[6732,6733,-6713,6734]]},{"type":"Polygon","id":8099,"arcs":[[6735,-3632,-4814,-3723,6736,-6707]]},{"type":"Polygon","id":8083,"arcs":[[6737,-6685,-1413,6738]]},{"type":"Polygon","id":8079,"arcs":[[6739,6740,6741,6742]]},{"type":"Polygon","id":8073,"arcs":[[-6704,6743,-6702,6744,-6716,6745,6746,6747]]},{"type":"MultiPolygon","id":8059,"arcs":[[[6748]],[[6749]],[[6750]],[[6751,6752]],[[6753,6754]],[[6755,-6710,6756,6757,6758,6759,6760,6761,6762,6763]]]},{"type":"Polygon","id":8103,"arcs":[[6764,-6730,-6030,6765]]},{"type":"Polygon","id":8115,"arcs":[[-4970,-3858,-5997,6766,6767]]},{"type":"Polygon","id":8113,"arcs":[[6768,6769,6770,6771,6772]]},{"type":"Polygon","id":8003,"arcs":[[6773,6774,-6728,-5906,6775]]},{"type":"Polygon","id":20203,"arcs":[[-4815,-3630,-4856,-3781,-5971,6776]]},{"type":"Polygon","id":20189,"arcs":[[-3726,-5932,-4867,-3685,-4653,-4875]]},{"type":"Polygon","id":20065,"arcs":[[-3645,-5948,-4828,6777,-3730,-4805]]},{"type":"Polygon","id":20093,"arcs":[[-6777,-5970,-3721,-5931,-4816]]},{"type":"Polygon","id":20063,"arcs":[[-6778,-4827,-5930,-4843,-5969,-3785,-4810,-3731]]},{"type":"Polygon","id":20133,"arcs":[[-4791,-3667,-4789,-5936,-3694,-5975]]},{"type":"Polygon","id":20183,"arcs":[[-5991,-5023,-5973,-4818,-5947,-3643]]},{"type":"Polygon","id":20167,"arcs":[[-3714,6778,-5957,-4879,-3742,-4821]]},{"type":"Polygon","id":20153,"arcs":[[-4808,-5954,-4851,-4965,-3881,-4996,-5953]]},{"type":"Polygon","id":20177,"arcs":[[-4837,6779,-5935,-3769,-4797,-3650]]},{"type":"Polygon","id":20161,"arcs":[[-5925,-3703,-4798,-3774,-5968,-3661]]},{"type":"Polygon","id":20031,"arcs":[[-5934,-3638,-5952,-3708,6780,-4794]]},{"type":"Polygon","id":20185,"arcs":[[-4874,-3765,6781,-5937,-3656,-5959]]},{"type":"Polygon","id":20049,"arcs":[[-3750,-4849,6782,-5976,-3692,-4860]]},{"type":"Polygon","id":20143,"arcs":[[-3711,6783,-4832,-3664,-4838,-5962]]},{"type":"Polygon","id":20173,"arcs":[[6784,-5963,-3762,-5966,-4850]]},{"type":"Polygon","id":20073,"arcs":[[-3735,-4795,-6781,-3707,-5974,-6783,-4848]]},{"type":"Polygon","id":20119,"arcs":[[-4870,-5956,-3686,-5960,-5787,-3682]]},{"type":"Polygon","id":53045,"arcs":[[6785,6786,6787,-1673,6788,6789,6790]]},{"type":"Polygon","id":53051,"arcs":[[6791,6792,6793,6794,6795]]},{"type":"MultiPolygon","id":53057,"arcs":[[[6796,6797,-1667,6798,6799]],[[6800]],[[6801]],[[6802]]]},{"type":"Polygon","id":53009,"arcs":[[6803,6804]]},{"type":"Polygon","id":53019,"arcs":[[6805,6806,-1675,6807]]},{"type":"Polygon","id":24009,"arcs":[[-1554,-3807,-5978,6808,-4897]]},{"type":"Polygon","id":53003,"arcs":[[6809,6810,-2490,6811]]},{"type":"Polygon","id":53021,"arcs":[[6812,6813,6814,6815,6816,6817]]},{"type":"Polygon","id":53011,"arcs":[[6818,6819,-2549,-2541]]},{"type":"Polygon","id":53037,"arcs":[[6820,-1670,6821,6822,-1644]]},{"type":"Polygon","id":24027,"arcs":[[-5979,-3805,-4888,-2457,-4884,-3816]]},{"type":"Polygon","id":53039,"arcs":[[6823,-1637,-2579,-2569,-2565,-1661,6824,-1647]]},{"type":"Polygon","id":31089,"arcs":[[-3871,-5984,-3840,-4975,-3850,-5068,-5998]]},{"type":"Polygon","id":31141,"arcs":[[-5038,-5990,-4966,-3915,-5084,-5070,-3902,-5992]]},{"type":"Polygon","id":9001,"arcs":[[6825,6826,-4190,-5399,-4166,6827]]},{"type":"Polygon","id":31059,"arcs":[[-5995,-4956,-3874,-5045,-3897]]},{"type":"Polygon","id":9011,"arcs":[[6828,6829,6830,6831,-1496,-1611,6832]]},{"type":"Polygon","id":31041,"arcs":[[-4988,-5062,-5074,-5069,-3848,-5989,-4957,6833,-3825]]},{"type":"Polygon","id":31019,"arcs":[[-5080,-3826,-6834,-4961,-5056,-5987,-5999,-5050]]},{"type":"Polygon","id":17125,"arcs":[[-6009,-5091,-546,6834,-3968,6835]]},{"type":"Polygon","id":17031,"arcs":[[-1708,6836,-2603,6837,6838,6839,-577]]},{"type":"Polygon","id":17163,"arcs":[[-5106,6840,-5130,-3954,-545,6841,-447]]},{"type":"Polygon","id":17199,"arcs":[[-523,-5087,-3979,-5125,-6013]]},{"type":"Polygon","id":49017,"arcs":[[-6060,6842,-6047,-6051,-4033,-6057]]},{"type":"Polygon","id":49033,"arcs":[[6843,-1370,-1398,-6053,6844,-6026,-5149]]},{"type":"Polygon","id":6043,"arcs":[[-6078,6845,-5167,6846]]},{"type":"Polygon","id":6019,"arcs":[[5169,-5169,-611,6847,-5182,5180,-5180,5178,-5178,6848,-616,-6074,6849,-5171]]},{"type":"Polygon","id":6003,"arcs":[[6850,-2390,-605,6851,-640,-635]]},{"type":"MultiPolygon","id":6041,"arcs":[[[6852,6853,6854]],[[6855,6856,6857,6858,6859,6860,6861,-2766,6862,6863]]]},{"type":"Polygon","id":6021,"arcs":[[-589,6864,-597,6865,-5158]]},{"type":"Polygon","id":49015,"arcs":[[-6033,-6042,-6058,-6036,-6064,-4021]]},{"type":"Polygon","id":6035,"arcs":[[-2375,6866,-6069,-6076,6867]]},{"type":"Polygon","id":6015,"arcs":[[-2523,-3939,-2760,6868,6869]]},{"type":"Polygon","id":13221,"arcs":[[-2878,-5201,-4111,-5272,6870,-5324,-5220]]},{"type":"MultiPolygon","id":25023,"arcs":[[[6871,6872,6873,6874,6875,6876,6877]],[[6878,-6879,6879]]]},{"type":"Polygon","id":25003,"arcs":[[-2998,6880,6881,6882,6883,6884,-4164,-4173]]},{"type":"Polygon","id":13303,"arcs":[[6885,-4080,6886,-5287,-2813,-5243]]},{"type":"Polygon","id":13021,"arcs":[[-5211,-2885,-5295,-6129,6887]]},{"type":"Polygon","id":13255,"arcs":[[6888,-5304,6889,-2804,-4115,-5195,6890,-5276]]},{"type":"Polygon","id":13091,"arcs":[[-2799,-6105,6891,-6146,-2862,-5343]]},{"type":"Polygon","id":25001,"arcs":[[6892,6893,-6875,6894]]},{"type":"Polygon","id":13265,"arcs":[[-4104,6895,-5325,-6871,-5275]]},{"type":"Polygon","id":21217,"arcs":[[6896,6897,6898,6899,6900]]},{"type":"Polygon","id":21121,"arcs":[[6901,6902,6903,6904]]},{"type":"Polygon","id":13087,"arcs":[[-2815,-5302,-6124,-5312,6905,6906]]},{"type":"Polygon","id":21071,"arcs":[[6907,6908,6909,6910,6911]]},{"type":"Polygon","id":21125,"arcs":[[-6902,6912,6913,6914,6915,6916,6917]]},{"type":"Polygon","id":21035,"arcs":[[6918,6919,6920,6921,6922]]},{"type":"Polygon","id":13187,"arcs":[[-5300,-6144,-5257,-6108,-2859]]},{"type":"Polygon","id":13047,"arcs":[[6923,-4088,6924]]},{"type":"MultiPolygon","id":25021,"arcs":[[[6925,6926]],[[6927,-6873]],[[6928,6929,6930,6931,-6878,6932,-2468]]]},{"type":"Polygon","id":13031,"arcs":[[-4089,6933,-6096,-6139,-2782,-2781,2780,-4133,-6117]]},{"type":"MultiPolygon","id":25005,"arcs":[[[-2461,-1614,-2469,-6933,-6877,6934,-6879,6935,6936]],[[6937]]]},{"type":"Polygon","id":21107,"arcs":[[6938,6939,6940,6941,6942]]},{"type":"Polygon","id":21005,"arcs":[[6943,6944,6945,6946,6947,6948,6949]]},{"type":"Polygon","id":21097,"arcs":[[6950,6951,6952,6953,6954,6955,6956]]},{"type":"Polygon","id":21103,"arcs":[[6957,6958,6959,6960,6961,6962]]},{"type":"Polygon","id":13165,"arcs":[[-5191,-6092,-6934,-4095]]},{"type":"Polygon","id":13141,"arcs":[[-4103,-5288,-6887,-4079,6963,-5326,-6896]]},{"type":"Polygon","id":25025,"arcs":[[-6931,6964,-6926,6965,6966,6967]]},{"type":"MultiPolygon","id":13293,"arcs":[[[6968]],[[6969,-5278,-5213,6970,-5247,-2843,-5306,6971]]]},{"type":"Polygon","id":13095,"arcs":[[6972,-5314,-6123,-6121,6973,-5266]]},{"type":"Polygon","id":13215,"arcs":[[6974,6975,6976,-2847,6977]]},{"type":"Polygon","id":21013,"arcs":[[-6904,6978,6979,6980,6981,6982,6983]]},{"type":"Polygon","id":21137,"arcs":[[6984,6985,6986,6987,6988]]},{"type":"Polygon","id":13061,"arcs":[[6989,-4138,-5334,-6119,-5239,6990]]},{"type":"Polygon","id":13197,"arcs":[[-2845,-5246,-2852,-5332,-6133,6991,6992]]},{"type":"Polygon","id":13097,"arcs":[[-4065,-6114,-2887,6993]]},{"type":"Polygon","id":13077,"arcs":[[-6890,-5303,-6097,6994,-2889,-6113,-2805]]},{"type":"Polygon","id":13259,"arcs":[[6995,-6992,-6135,-5335,-4136,6996,6997]]},{"type":"Polygon","id":13149,"arcs":[[-6995,-6101,6998,-2890]]},{"type":"Polygon","id":21111,"arcs":[[6999,7000,7001,7002,7003,7004,7005,7006]]},{"type":"Polygon","id":13319,"arcs":[[-6886,-5242,-6102,-5293,-2883,-4081]]},{"type":"Polygon","id":13309,"arcs":[[-6892,-6104,7007,7008,7009,-6147]]},{"type":"Polygon","id":25011,"arcs":[[-6882,7010,-416,7011,7012,7013]]},{"type":"Polygon","id":25015,"arcs":[[7014,7015,-6883,-7014]]},{"type":"Polygon","id":13191,"arcs":[[-6138,7016,-5199,7017,-2828]]},{"type":"Polygon","id":25009,"arcs":[[7018,7019,7020,-6967,7021]]},{"type":"Polygon","id":13321,"arcs":[[-5265,-6127,-6086,7022,7023,-5315,-6973]]},{"type":"Polygon","id":13035,"arcs":[[-5194,-5310,7024,-5209,-5277,-6891]]},{"type":"Polygon","id":21117,"arcs":[[-6241,7025,7026,7027,7028]]},{"type":"Polygon","id":13159,"arcs":[[-5309,-2841,7029,-2880,-5210,-7025]]},{"type":"MultiPolygon","id":13193,"arcs":[[[-5249,-4126,-5244]],[[-5250,-5245,-4124,-6130,-5251,-5328,-2850]]]},{"type":"Polygon","id":13145,"arcs":[[7030,7031,-6098,-5307,-2848,-6977]]},{"type":"Polygon","id":21227,"arcs":[[7032,7033,7034,7035,7036,7037]]},{"type":"Polygon","id":21015,"arcs":[[7038,7039,-6242,-7029,7040,7041,7042]]},{"type":"Polygon","id":13277,"arcs":[[-6085,-4141,-5222,-5229,7043,-7023]]},{"type":"Polygon","id":13161,"arcs":[[-7010,7044,-5207,-2792,-6083,-5286,-6148]]},{"type":"Polygon","id":21101,"arcs":[[7045,7046,7047,7048,7049,7050,7051]]},{"type":"Polygon","id":21063,"arcs":[[7052,7053,7054,7055]]},{"type":"Polygon","id":21233,"arcs":[[7056,-7049,7057,-6943,7058,7059]]},{"type":"Polygon","id":21019,"arcs":[[7060,-6267,-5887,7061,7062]]},{"type":"Polygon","id":13257,"arcs":[[7063,-5338,7064,7065]]},{"type":"Polygon","id":21073,"arcs":[[-6960,7066,7067,7068,-6950,7069]]},{"type":"Polygon","id":13071,"arcs":[[-5316,-7024,-7044,-5232,-5347,-6112]]},{"type":"Polygon","id":21051,"arcs":[[7070,7071,-6979,-6903,-6918,7072,7073]]},{"type":"Polygon","id":21129,"arcs":[[7074,7075,7076,7077,7078,7079]]},{"type":"Polygon","id":21157,"arcs":[[7080,7081,7082,-6920,7083,7084]]},{"type":"Polygon","id":21095,"arcs":[[7085,7086,-6981,7087,7088,7089]]},{"type":"Polygon","id":21053,"arcs":[[7090,7091,7092,7093,7094]]},{"type":"Polygon","id":21087,"arcs":[[7095,7096,-6901,7097,7098]]},{"type":"Polygon","id":21171,"arcs":[[7099,7100,7101,7102,7103,7104]]},{"type":"Polygon","id":21191,"arcs":[[-6952,7105,-7027,7106,7107,7108]]},{"type":"Polygon","id":21061,"arcs":[[7109,7110,7111,-7035,7112]]},{"type":"Polygon","id":21135,"arcs":[[-1973,7113,7114,7115,7116,7117,7118]]},{"type":"Polygon","id":13283,"arcs":[[-4092,-5205,7119,-7008,-6103]]},{"type":"Polygon","id":13189,"arcs":[[-5274,-6126,-4071,-5289,-2808,-4101]]},{"type":"Polygon","id":21139,"arcs":[[-2601,7120,7121,-7081,7122,-2590,7123]]},{"type":"Polygon","id":21231,"arcs":[[-7092,7124,7125,7126,7127,7128]]},{"type":"Polygon","id":21169,"arcs":[[7129,-7099,7130,7131,-7103,7132]]},{"type":"Polygon","id":21079,"arcs":[[7133,7134,7135,7136,7137,-6986]]},{"type":"Polygon","id":13089,"arcs":[[-4113,-6116,-5322,-2896,-5192]]},{"type":"MultiPolygon","id":21075,"arcs":[[[7138,7139]],[[7140,7141,7142,7143,7144]]]},{"type":"Polygon","id":21237,"arcs":[[-7076,7145,7146,7147,7148,7149]]},{"type":"Polygon","id":21109,"arcs":[[7150,7151,-7079,7152,-7073,-6917,7153]]},{"type":"Polygon","id":21205,"arcs":[[7154,-7116,7155,-7055,7156,7157,7158]]},{"type":"Polygon","id":21127,"arcs":[[7159,-7053,7160,-7062,-5886,7161,7162]]},{"type":"Polygon","id":21181,"arcs":[[-6955,7163,7164,7165,7166]]},{"type":"Polygon","id":21183,"arcs":[[7167,7168,7169,7170,7171,7172,7173]]},{"type":"Polygon","id":21187,"arcs":[[7174,7175,7176,7177,-7067,-6959]]},{"type":"Polygon","id":21185,"arcs":[[7178,-6962,7179,-7002,7180]]},{"type":"Polygon","id":21215,"arcs":[[-6948,7181,7182,-7004,7183]]},{"type":"Polygon","id":21153,"arcs":[[7184,-6909,7185,7186,-7149,7187]]},{"type":"Polygon","id":21007,"arcs":[[-3971,7188,7189,7190,7191]]},{"type":"Polygon","id":21115,"arcs":[[7192,-6910,-7185,7193,-7163]]},{"type":"Polygon","id":21089,"arcs":[[-7114,-1978,-6265,-7061,7194]]},{"type":"Polygon","id":21141,"arcs":[[-7033,7195,7196,7197,7198,7199]]},{"type":"Polygon","id":21151,"arcs":[[7200,7201,-7151,7202,-7137,7203,7204]]},{"type":"Polygon","id":13115,"arcs":[[-4084,7205,-5271,-2833,7206,-5352]]},{"type":"Polygon","id":21123,"arcs":[[7207,-6897,-7097,7208,7209,7210]]},{"type":"Polygon","id":21143,"arcs":[[7211,7212,7213,-7082,-7122]]},{"type":"Polygon","id":13237,"arcs":[[-5327,-6964,-4078,-2881,-7030,-2840]]},{"type":"Polygon","id":13273,"arcs":[[-5267,-6974,-6120,-5337,-6134,-5330,-5262],[-5261]]},{"type":"Polygon","id":21179,"arcs":[[7214,7215,-7182,-6947,7216,7217,-7211]]},{"type":"Polygon","id":21085,"arcs":[[7218,7219,7220,-7110,7221,-7172]]},{"type":"Polygon","id":21017,"arcs":[[-7167,7222,7223,7224,7225,-6956]]},{"type":"Polygon","id":21093,"arcs":[[7226,7227,7228,-7006,7229,-7215,-7210,7230,-7220]]},{"type":"Polygon","id":21057,"arcs":[[-7132,7231,7232,-7095,7233,-7104]]},{"type":"Polygon","id":21173,"arcs":[[-7223,7234,7235,7236,7237]]},{"type":"Polygon","id":21161,"arcs":[[7238,-6205,7239,-7118,7240,7241]]},{"type":"Polygon","id":13267,"arcs":[[-5206,-6118,-4135,-5197,7242,-6136,-2788]]},{"type":"Polygon","id":21145,"arcs":[[7243,-7189,-3970,-2591,-7123,-7085,7244]]},{"type":"Polygon","id":21229,"arcs":[[-6946,7245,7246,7247,-7217]]},{"type":"Polygon","id":13079,"arcs":[[-6971,-5212,-6888,-6128,-4127,-5248]]},{"type":"Polygon","id":13183,"arcs":[[-7243,-5196,-7017,-6137]]},{"type":"Polygon","id":21043,"arcs":[[-7195,-7063,-7161,-7056,-7156,-7115]]},{"type":"Polygon","id":21003,"arcs":[[-7037,7248,-7101,7249,7250,7251]]},{"type":"Polygon","id":21219,"arcs":[[7252,7253,7254,7255,-7198]]},{"type":"Polygon","id":21011,"arcs":[[-7159,7256,-7235,-7166,7257]]},{"type":"Polygon","id":21049,"arcs":[[7258,-7224,-7238,7259,7260,-7201]]},{"type":"Polygon","id":25013,"arcs":[[7261,7262,7263,7264,-6884,-7016]]},{"type":"MultiPolygon","id":25007,"arcs":[[[-6893,7265]],[[7266]]]},{"type":"Polygon","id":13147,"arcs":[[7267,7268,-4105,-5200,-5340]]},{"type":"Polygon","id":13057,"arcs":[[-6131,-5259,-4072,-6115,-4063,-5269]]},{"type":"Polygon","id":13053,"arcs":[[-6978,-2846,-6993,-6996,7269]]},{"type":"Polygon","id":13209,"arcs":[[-7045,-7009,-7120,-5208]]},{"type":"Polygon","id":25019,"arcs":[[7270]]},{"type":"Polygon","id":25017,"arcs":[[7271,-7022,-6966,-6927,-6965,-6930,7272]]},{"type":"Polygon","id":21083,"arcs":[[7273,7274,-7245,-7084,-6919,7275,7276]]},{"type":"Polygon","id":21039,"arcs":[[7277,-7190,-7244,-7275,7278]]},{"type":"Polygon","id":21091,"arcs":[[7279,7280,7281,-7170,7282]]},{"type":"Polygon","id":13297,"arcs":[[7283,-5218,-2837,-5311,-2898,-5321]]},{"type":"Polygon","id":25027,"arcs":[[-7015,-7013,7284,7285,-7273,-6929,-2471,7286,7287,-7262]]},{"type":"MultiPolygon","id":13231,"arcs":[[[-6970,-6972,-5305,-6889,-5279]],[[-6969]]]},{"type":"Polygon","id":13017,"arcs":[[-6084,-2864,-6149,-5284,-4143]]},{"type":"Polygon","id":13013,"arcs":[[7288,-5219,-7284,-5320]]},{"type":"Polygon","id":13011,"arcs":[[-6142,7289,-7065,-5341,-5203,7290]]},{"type":"Polygon","id":13223,"arcs":[[-2894,-5280,-2835,-5270,-4066,-6994]]},{"type":"Polygon","id":13131,"arcs":[[-5318,-6111,7291,7292,-6906]]},{"type":"Polygon","id":21223,"arcs":[[7293,-6963,-7179,7294,7295]]},{"type":"Polygon","id":21029,"arcs":[[-7005,-7183,-7216,-7230]]},{"type":"Polygon","id":21225,"arcs":[[7296,-7050,-7057,7297,-2599,7298]]},{"type":"Polygon","id":21065,"arcs":[[-7261,7299,-7080,-7152,-7202]]},{"type":"Polygon","id":13129,"arcs":[[-5268,-7206,-4083,7300,-2909,-4096,-6132]]},{"type":"Polygon","id":21167,"arcs":[[-6945,7301,7302,-7135,7303,-7246]]},{"type":"Polygon","id":21105,"arcs":[[7304,-7279,-7274,7305,7306,-7145]]},{"type":"Polygon","id":21133,"arcs":[[7307,-7090,7308,7309,7310]]},{"type":"Polygon","id":13157,"arcs":[[-7291,-5202,-2876,-7289,-6143]]},{"type":"Polygon","id":21193,"arcs":[[7311,-7309,-7089,7312,-7071,7313,7314]]},{"type":"Polygon","id":21177,"arcs":[[-6940,7315,-7174,7316,-7199,-7256,7317]]},{"type":"Polygon","id":21067,"arcs":[[7318,7319,-7225,-7259,-7205,7320]]},{"type":"Polygon","id":13313,"arcs":[[-4082,-6924,7321,7322,-2910,-7301]]},{"type":"Polygon","id":13137,"arcs":[[-6090,-2796,7323,-7066,-7290,-6145,-5297]]},{"type":"Polygon","id":21199,"arcs":[[7324,7325,-6988,7326,-6915,7327,-7126]]},{"type":"Polygon","id":21069,"arcs":[[-7117,-7155,-7258,-7165,7328,-7241]]},{"type":"Polygon","id":21077,"arcs":[[7329,7330,-7042,7331,-7176]]},{"type":"Polygon","id":39021,"arcs":[[7332,-6168,-6304,-6154,7333,-6238]]},{"type":"Polygon","id":39131,"arcs":[[7334,7335,7336,7337,-1975]]},{"type":"Polygon","id":39081,"arcs":[[-4719,-6296,-6214,7338,-6325,-4749,-4748]]},{"type":"Polygon","id":12017,"arcs":[[7339,7340,7341,7342,7343]]},{"type":"Polygon","id":39147,"arcs":[[-6189,-6317,7344,-6261,7345,7346]]},{"type":"Polygon","id":39109,"arcs":[[7347,-6169,-7333,-6237,-6213]]},{"type":"Polygon","id":12009,"arcs":[[7348,7349,7350,7351,7352]]},{"type":"MultiPolygon","id":12037,"arcs":[[[7353,7354,7355,7356]],[[7357]],[[7358]]]},{"type":"Polygon","id":12011,"arcs":[[7359,7360,7361,7362,7363]]},{"type":"Polygon","id":39033,"arcs":[[-6316,-6227,-6334,7364,-6262,-7345]]},{"type":"Polygon","id":39169,"arcs":[[7365,-6309,-6183,7366,-1997]]},{"type":"Polygon","id":39141,"arcs":[[7367,-6253,7368,-6282,7369,7370,-7337]]},{"type":"MultiPolygon","id":39043,"arcs":[[[6312,-6312,-6187,-6343,7371,-6232,-6314]],[[7372]]]},{"type":"Polygon","id":39157,"arcs":[[-6185,-6308,7373,-6217,7374,-6156]]},{"type":"Polygon","id":39041,"arcs":[[-6152,7375,-6332,7376,7377,-885]]},{"type":"Polygon","id":39017,"arcs":[[7378,7379,-6336,-6210,-4261,-6244]]},{"type":"Polygon","id":12047,"arcs":[[7380,7381,7382,-6089,-4131]]},{"type":"Polygon","id":12063,"arcs":[[7383,7384,7385,-2817,7386,7387,7388,7389]]},{"type":"Polygon","id":12093,"arcs":[[7390,7391,7392,7393,7394,7395]]},{"type":"MultiPolygon","id":12087,"arcs":[[[7396,7397,7398]],[[7399,7400]],[[7401]],[[7402]],[[7403]],[[7404]],[[7405]],[[7406]],[[7407]],[[7408]],[[7409]]]},{"type":"Polygon","id":12031,"arcs":[[7410,7411,7412,7413,7414]]},{"type":"Polygon","id":39009,"arcs":[[7415,-6280,7416,-6289,7417,-5849,-6192]]},{"type":"Polygon","id":39097,"arcs":[[-6153,-889,7418,-6256,7419,-6239,-7334]]},{"type":"Polygon","id":39089,"arcs":[[-886,-7378,7420,-6159,7421,7422,-6328]]},{"type":"Polygon","id":12081,"arcs":[[7423,7424,7425,7426,7427]]},{"type":"Polygon","id":39057,"arcs":[[-6240,-7420,-6255,-6173,-4263,-6209]]},{"type":"Polygon","id":39167,"arcs":[[-4684,-5855,-5850,-7418,-6288,7428,-6202]]},{"type":"MultiPolygon","id":12071,"arcs":[[[7429,7430,7431,7432]],[[7433,7434]],[[7435,7436,7437]],[[7438]]]},{"type":"MultiPolygon","id":12029,"arcs":[[[7439,7440]],[[7441,7442,7443,7444,7445]]]},{"type":"Polygon","id":39137,"arcs":[[-6219,-6250,-6300,-6271,-1927,7446]]},{"type":"Polygon","id":12069,"arcs":[[7447,7448,7449,7450,7451,7452]]},{"type":"Polygon","id":12065,"arcs":[[-6109,-5350,7453,7454,7455,7456,7457]]},{"type":"Polygon","id":39173,"arcs":[[-1926,7458,-6340,-6190,-7347,7459]]},{"type":"Polygon","id":39059,"arcs":[[-7375,-6216,-6298,7460,7461,-6157]]},{"type":"Polygon","id":39119,"arcs":[[7462,-7422,-6158,-7462,7463,-6286]]},{"type":"Polygon","id":39095,"arcs":[[-5538,-5550,7464,-6341,-7459,-1925,-6258]]},{"type":"Polygon","id":39055,"arcs":[[-6273,-6194,-6294,7465,7466]]},{"type":"Polygon","id":39101,"arcs":[[-7365,-6333,-7376,-6151,7467,-6263]]},{"type":"Polygon","id":39025,"arcs":[[-4265,-6172,-6207,7468,-7108,7469,-6245]]},{"type":"Polygon","id":39071,"arcs":[[-6175,-6254,-7368,-7336,7470,-6203]]},{"type":"Polygon","id":39099,"arcs":[[-6305,7471,-6295,-876,-794,-6327]]},{"type":"Polygon","id":39127,"arcs":[[-6329,-7423,-7463,-6285,-7417,-6279]]},{"type":"Polygon","id":39121,"arcs":[[-7429,-6287,-7464,-7461,-6297,-6200]]},{"type":"Polygon","id":39065,"arcs":[[7472,-6264,-7468,-6150,-6303,7473,-6221]]},{"type":"Polygon","id":39153,"arcs":[[-1996,7474,7475,-6310,-7366]]},{"type":"Polygon","id":39011,"arcs":[[-7474,-6302,-6166,-6180,-6251,-6222]]},{"type":"Polygon","id":39083,"arcs":[[-7377,-6331,-6230,7476,-6181,-6160,-7421]]},{"type":"Polygon","id":39129,"arcs":[[-7419,-888,-6330,-6283,-7369,-6252]]},{"type":"Polygon","id":39171,"arcs":[[-6259,-1929,-6270,7477,7478,-6276]]},{"type":"Polygon","id":39133,"arcs":[[-7476,-7466,-6293,-7472,-6311]]},{"type":"Polygon","id":39001,"arcs":[[-7471,-7335,-1974,-7119,-7240,-6204]]},{"type":"Polygon","id":39037,"arcs":[[7479,7480,-6176,-6170,-7348,-6212,-6335,7481]]},{"type":"Polygon","id":39019,"arcs":[[-6307,-6326,-7339,-6218,-7374]]},{"type":"Polygon","id":39079,"arcs":[[-7338,-7371,7482,-6225,-6266,-1976]]},{"type":"Polygon","id":39005,"arcs":[[-7477,-6229,-6315,-6235,-1998,-7367,-6182]]},{"type":"Polygon","id":39163,"arcs":[[-7370,-6281,-7416,-6191,-6226,-7483]]},{"type":"Polygon","id":39063,"arcs":[[-7460,-7346,-6260,-7473,-6220,-7447]]},{"type":"Polygon","id":39035,"arcs":[[-7475,-1995,-6234,7483,-6274,-7467]]},{"type":"Polygon","id":12033,"arcs":[[7484,7485,7486,7487]]},{"type":"Polygon","id":28057,"arcs":[[-5619,-6377,-1053,7488,7489,-5603]]},{"type":"Polygon","id":48013,"arcs":[[-227,-4460,7490,-1288,7491,7492,-3379,7493]]},{"type":"Polygon","id":28139,"arcs":[[7494,-4293,-6378,-1045,-3227]]},{"type":"Polygon","id":28097,"arcs":[[-4286,7495,7496,-4276,7497]]},{"type":"Polygon","id":28063,"arcs":[[-4309,7498,-3156,3154,-3154,-4298,7499,7500]]},{"type":"Polygon","id":28123,"arcs":[[-66,-6392,7501,7502,-5612]]},{"type":"Polygon","id":28157,"arcs":[[7503,7504,-1117,-4311,7505,-4318]]},{"type":"Polygon","id":28111,"arcs":[[-4306,7506,7507,7508,-6371,7509]]},{"type":"Polygon","id":28119,"arcs":[[-63,7510,-72,-6383]]},{"type":"Polygon","id":28113,"arcs":[[7511,-3220,7512,-6414,-4314]]},{"type":"MultiPolygon","id":51059,"arcs":[[[-89]],[[7513,-4890,7514,-1123,7515,-86,-3808,-1552,7516,-1550,7517,-1548,7518,-1546,7519,7520],[-88]]]},{"type":"Polygon","id":28115,"arcs":[[-5621,7521,-4251,-5608,-1041]]},{"type":"Polygon","id":28121,"arcs":[[7522,-7502,-6391,7523,-2032]]},{"type":"Polygon","id":28085,"arcs":[[-7500,-4297,-4260,-3221,-7512,-4313,7524]]},{"type":"MultiPolygon","id":22101,"arcs":[[[7525,-3274,-1080,-3272,7526]],[[-3237,7527]],[[-3238,7528]],[[-3240,7529]],[[-3241,7530]],[[-3243,7531]],[[-3245,7532]],[[-3248,7533]],[[-3250,7534]],[[-3253,7535]],[[-3255,7536]],[[-3257,7537]],[[-3258,7538]],[[-3260,7539]],[[-3262,7540]],[[-3264,7541]],[[-3266,7542]],[[-3268,7543]],[[-3270,7544]]]},{"type":"Polygon","id":22117,"arcs":[[-6380,-5624,-4424,-6415,-7513,-3219]]},{"type":"Polygon","id":22111,"arcs":[[-4501,7545,-1073,-6408,-1084]]},{"type":"Polygon","id":22057,"arcs":[[-1078,-3233,-4441,-1066,-5633,7546,7547,-5644,7548,-5641,7549,-5640,7550,7551,-5634,7552,7553,-3273]]},{"type":"MultiPolygon","id":22045,"arcs":[[[-4431,-1074,-3275,-7526,7554,-5648,-3228,-3276]],[[-5650,7555]]]},{"type":"Polygon","id":22015,"arcs":[[-4531,-5704,7556,7557,-2038,7558]]},{"type":"Polygon","id":22031,"arcs":[[7559,-2041,-6419,-2033,-1305,7560]]},{"type":"Polygon","id":11001,"arcs":[[-84,7561,7562,7563,-4889,-3809]]},{"type":"Polygon","id":51620,"arcs":[[7564,7565]]},{"type":"Polygon","id":51141,"arcs":[[-785,7566,7567,7568,7569,7570]]},{"type":"Polygon","id":51181,"arcs":[[7571,7572,7573,7574,7575,7576,-1136]]},{"type":"Polygon","id":51117,"arcs":[[7577,7578,7579,7580,7581,7582,7583]]},{"type":"Polygon","id":51053,"arcs":[[7584,-1139,7585,7586,7587,7588,7589,7590]]},{"type":"Polygon","id":51069,"arcs":[[7591,-1145,-4767,-5835,-4776,-5888,7592],[7593]]},{"type":"Polygon","id":51023,"arcs":[[7594,-6433,7595,7596,7597]]},{"type":"Polygon","id":51027,"arcs":[[7598,-4742,-5922,-1125,7599,7600]]},{"type":"Polygon","id":51071,"arcs":[[-4759,-5923,-4697,7601,7602,7603,7604]]},{"type":"Polygon","id":51570,"arcs":[[7605,7606]]},{"type":"Polygon","id":51650,"arcs":[[7607,7608,7609,7610]]},{"type":"Polygon","id":51147,"arcs":[[-6440,7611,7612,7613,7614,7615,7616]]},{"type":"Polygon","id":51075,"arcs":[[7617,7618,7619,7620,7621,7622]]},{"type":"Polygon","id":51133,"arcs":[[7623,-2090,7624,-4921,7625,-4919,7626,-4917,7627,-4915,7628,-4913,7629,-4911,7630,-4909,7631,-4907,7632,-4905,7633,-4903,7634,-4901,7635,-4899,7636,7637]]},{"type":"Polygon","id":51167,"arcs":[[7638,7639,-7600,-1130,7640,7641,-6444]]},{"type":"MultiPolygon","id":51520,"arcs":[[[7642]],[[7643,7644,7645]]]},{"type":"MultiPolygon","id":51149,"arcs":[[[7646,7647]],[[-7572,-1140,-7585,7648,7649,7650,7651,7652]]]},{"type":"Polygon","id":51139,"arcs":[[7653,7654,7655,-6452,7656,-1142]]},{"type":"Polygon","id":51083,"arcs":[[-7583,7657,7658,7659,-6421,7660,7661]]},{"type":"Polygon","id":51003,"arcs":[[7662,7663,-6455,7664,7665,7666,7667,7668],[-82]]},{"type":"Polygon","id":51031,"arcs":[[-6429,7669,-6442,7670,-7661,-6420,7671]]},{"type":"MultiPolygon","id":51153,"arcs":[[[-1133]],[[7672,-7521,7673,-1544,7674,-1542,7675,-1540,7676,-1538,7677,-1536,7678,-1534,7679,-1532,7680,7681,-3303,7682,7683,-3298,7684],[7685,-1132]]]},{"type":"Polygon","id":51175,"arcs":[[7686,7687,-1137,-7577,7688,-7566,7689,7690,7691,7692]]},{"type":"Polygon","id":51127,"arcs":[[7693,7694,-6456,7695,7696,7697]]},{"type":"Polygon","id":51111,"arcs":[[7698,7699,-7578,7700,-7616]]},{"type":"Polygon","id":51065,"arcs":[[7701,-7619,7702,7703,-7667]]},{"type":"Polygon","id":51109,"arcs":[[-7702,-7666,7704,7705,7706,-7620]]},{"type":"Polygon","id":51107,"arcs":[[-7514,-7673,7707,7708,-4771,-3801,-2459,-4887,4885,-4885]]},{"type":"Polygon","id":51155,"arcs":[[7709,-7604,7710,-1146,7711,7712,7713,7714]]},{"type":"Polygon","id":51041,"arcs":[[7715,7716,7717,7718,7719,7720,-7652,7721,-7647,7722,-7650,7723,-7607,7724,-7590,7725,7726]]},{"type":"Polygon","id":51099,"arcs":[[7727,-1506,7728,-1504,7729,-1502,7730,-1500,7731,-1499,7732,-1597,7733,-1595,7734,-1593,7735,-1591,7736,-1589,7737,-1587,7738,-1585,7739,-1583,7740,-1581,7741,-1579,7742,7743,-1577,7744,-1574,-2058,7745,7746,-3291,-1512,7747,-1510,7748,-1508]]},{"type":"Polygon","id":51159,"arcs":[[-2091,-7624,7749,7750,7751]]},{"type":"Polygon","id":51057,"arcs":[[7752,-7746,-2057,-7752,7753,7754,7755]]},{"type":"Polygon","id":51035,"arcs":[[-7567,-784,7756,7757,7758,7759,-7714,7760]]},{"type":"Polygon","id":51161,"arcs":[[7761,7762,7763,-7598,7764,7765],[7766,-3281]]},{"type":"Polygon","id":51720,"arcs":[[7767]]},{"type":"Polygon","id":51043,"arcs":[[7768,7769,-7593,-4772,-7709]]},{"type":"Polygon","id":51630,"arcs":[[7770,-3294]]},{"type":"Polygon","id":51125,"arcs":[[7771,7772,-7669,7773,-6438,7774]]},{"type":"Polygon","id":51067,"arcs":[[7775,-7569,7776,-7766,7777,-6427]]},{"type":"Polygon","id":51685,"arcs":[[-1131,-7686]]},{"type":"Polygon","id":51195,"arcs":[[-7086,-7308,7778,7779,-7639,-6443,7780],[-7768]]},{"type":"Polygon","id":48211,"arcs":[[7781,-5819,-5745,-229,-1228]]},{"type":"Polygon","id":48205,"arcs":[[-2445,-235,-6465,-1196,-1457]]},{"type":"Polygon","id":48503,"arcs":[[7782,-2191,-1295,-1215,-3335]]},{"type":"Polygon","id":48051,"arcs":[[7783,-4452,-272,7784,-2206]]},{"type":"Polygon","id":48199,"arcs":[[-3383,-2208,7785,-4447,7786,-1232]]},{"type":"Polygon","id":48177,"arcs":[[7787,-3319,-5674,7788,-1290,7789,7790]]},{"type":"Polygon","id":48311,"arcs":[[-181,-3380,-7493,7791]]},{"type":"Polygon","id":48143,"arcs":[[-1298,7792,-1190,7793,-4470,7794,-5663]]},{"type":"MultiPolygon","id":48167,"arcs":[[[-173,-1278,7795,7796,7797,7798,7799,7800,7801,7802,7803,7804,7805]],[[-167,7806]],[[7807,7808]],[[-7810,-7811,-7812,-7813]],[[-7814,-7815,-7816,-7817]],[[7817,7818,7819,7820]],[[7821,7822]],[[7823,7824,7825]],[[7826,7827,7828,7829]],[[7830,7831]],[[7832,7833,7834]],[[7835,7836]],[[7837,7838]],[[7839,-7840,7840]],[[7841,7842,7843]],[[7844,7845]],[[7846,7847]]]},{"type":"Polygon","id":48223,"arcs":[[-122,-1309,-2137,-123,7848]]},{"type":"Polygon","id":48309,"arcs":[[7849,-4483,-3338,7850,-247,7851]]},{"type":"Polygon","id":48313,"arcs":[[-3326,-2203,-179,-6509,-1213]]},{"type":"Polygon","id":48307,"arcs":[[7852,-164,-1243,7853,7854,-6467]]},{"type":"Polygon","id":48129,"arcs":[[-3400,7855,-2240,-153,-3356]]},{"type":"Polygon","id":48263,"arcs":[[-3358,7856,-4475,-1177,-4461]]},{"type":"Polygon","id":48385,"arcs":[[-6473,7857,7858,-3325]]},{"type":"Polygon","id":48435,"arcs":[[7859,-6474,-1236,-6505,-2243]]},{"type":"Polygon","id":48329,"arcs":[[7860,-6523,-1302,-4468,7861]]},{"type":"Polygon","id":48229,"arcs":[[-1409,7862,7863,7864,7865]]},{"type":"Polygon","id":48507,"arcs":[[7866,-4481,7867,-3323]]},{"type":"Polygon","id":48203,"arcs":[[-5668,7868,7869,-3370,7870,7871]]},{"type":"Polygon","id":48093,"arcs":[[-1240,-5664,-7795,-4474,7872]]},{"type":"Polygon","id":48335,"arcs":[[-2128,-100,-1206,-1179,7873,-6513]]},{"type":"Polygon","id":48349,"arcs":[[-2227,-4485,7874,-3350,7875]]},{"type":"Polygon","id":48103,"arcs":[[7876,-4466,-6503,-2217,-6516]]},{"type":"Polygon","id":48303,"arcs":[[-2095,-3373,7877,-4455]]},{"type":"Polygon","id":34013,"arcs":[[7878,-1328,7879,-294,7880]]},{"type":"Polygon","id":34035,"arcs":[[7881,7882,7883,-1315,7884]]},{"type":"Polygon","id":34025,"arcs":[[7885,7886,7887,7888,7889,-2272,7890,-1317]]},{"type":"Polygon","id":16061,"arcs":[[7891,7892,7893]]},{"type":"Polygon","id":16049,"arcs":[[7894,-7892,7895,7896,7897,7898,7899,7900,-2492]]},{"type":"Polygon","id":30039,"arcs":[[7901,7902,7903,7904]]},{"type":"Polygon","id":16025,"arcs":[[7905,7906,7907,7908]]},{"type":"Polygon","id":30067,"arcs":[[7909,7910,7911,7912,-419,7913]]},{"type":"Polygon","id":16077,"arcs":[[7914,7915,7916,7917,7918]]},{"type":"Polygon","id":30089,"arcs":[[7919,7920,7921,7922,7923,7924,7925]]},{"type":"Polygon","id":30041,"arcs":[[7926,7927,7928,7929]]},{"type":"Polygon","id":30035,"arcs":[[7930,7931,7932,-6652]]},{"type":"Polygon","id":16007,"arcs":[[7933,-1371,-6844,7934]]},{"type":"Polygon","id":30015,"arcs":[[7935,7936,7937,7938,7939,-6649,7940,-7930]]},{"type":"Polygon","id":30059,"arcs":[[7941,7942,7943,7944,7945,-7910,7946,7947]]},{"type":"Polygon","id":16057,"arcs":[[7948,7949,7950,7951,7952]]},{"type":"Polygon","id":16087,"arcs":[[-2553,-3922,7953,7954,7955]]},{"type":"Polygon","id":16027,"arcs":[[7956,-2555,7957,7958,7959]]},{"type":"Polygon","id":30055,"arcs":[[7960,7961,7962,7963,7964,7965]]},{"type":"Polygon","id":30111,"arcs":[[7966,7967,7968,7969,7970,7971,7972]]},{"type":"Polygon","id":30071,"arcs":[[7973,7974,7975,-6639,7976,7977]]},{"type":"Polygon","id":30011,"arcs":[[7978,7979,7980,7981,-396,7982]]},{"type":"Polygon","id":30077,"arcs":[[7983,7984,7985,7986,7987,-7903]]},{"type":"Polygon","id":16045,"arcs":[[-7959,7988,-7955,7989,7990,7991,7992]]},{"type":"Polygon","id":16029,"arcs":[[7993,-1372,-7934,7994,7995,7996]]},{"type":"Polygon","id":30093,"arcs":[[7997,7998,7999,8000]]},{"type":"Polygon","id":30063,"arcs":[[8001,-7984,-7902,8002,-7897,8003,8004,-7925,8005]]},{"type":"Polygon","id":16033,"arcs":[[8006,8007,8008,8009,8010]]},{"type":"Polygon","id":30079,"arcs":[[8011,-7965,8012,8013,8014,8015]]},{"type":"Polygon","id":30105,"arcs":[[8016,8017,8018,-7961,8019,-7975]]},{"type":"Polygon","id":30009,"arcs":[[-7973,8020,-357,-420,-7913,8021]]},{"type":"Polygon","id":30013,"arcs":[[8022,8023,-7939,8024,-7943]]},{"type":"Polygon","id":30101,"arcs":[[8025,8026,-6647,-7933]]},{"type":"Polygon","id":30065,"arcs":[[8027,-6642,8028,-7969,8029]]},{"type":"Polygon","id":30047,"arcs":[[-8006,-7924,8030]]},{"type":"Polygon","id":16059,"arcs":[[8031,-7899,8032,8033,-8010,8034,8035]]},{"type":"Polygon","id":16043,"arcs":[[8036,-8007,8037,8038,8039,-351,8040,8041]]},{"type":"Polygon","id":30075,"arcs":[[-7983,-395,-376,-369,8042,8043,8044]]},{"type":"Polygon","id":30033,"arcs":[[-7976,-8020,-7966,-8012,8045,8046,-6640]]},{"type":"Polygon","id":30001,"arcs":[[8047,8048,-8000,8049,-8038,-8011,-8034]]},{"type":"Polygon","id":30031,"arcs":[[8050,8051,8052,-7947,-7914,-418,-352,-8040]]},{"type":"Polygon","id":30007,"arcs":[[-7948,-8053,8053,8054]]},{"type":"Polygon","id":30085,"arcs":[[-7962,-8019,8055,8056,-3580,8057]]},{"type":"Polygon","id":30083,"arcs":[[-8058,-3604,8058,8059,-7963]]},{"type":"Polygon","id":30095,"arcs":[[-8022,-7912,8060,8061,-7967]]},{"type":"Polygon","id":16017,"arcs":[[8062,-6794,8063,8064,-7921,8065,8066]]},{"type":"Polygon","id":30051,"arcs":[[-7927,-7941,-6648,-8027,8067]]},{"type":"Polygon","id":30099,"arcs":[[-7940,-8024,8068,8069,-6650]]},{"type":"Polygon","id":30049,"arcs":[[8070,-8069,-8023,-7942,-8055,8071,-7986]]},{"type":"Polygon","id":16083,"arcs":[[8072,8073,8074,8075,8076,-4778]]},{"type":"Polygon","id":30103,"arcs":[[8077,8078,-7971]]},{"type":"Polygon","id":30025,"arcs":[[8079,-8015,8080,-3553,-2292,-2349,8081,-7980]]},{"type":"Polygon","id":30023,"arcs":[[-7988,8082,-8001,-8049,8083,-7904]]},{"type":"Polygon","id":16019,"arcs":[[8084,8085,8086,-349,-1373,-7994,8087]]},{"type":"Polygon","id":30091,"arcs":[[8088,-3593,-3576,-8057,8089]]},{"type":"Polygon","id":30087,"arcs":[[-8078,-7970,-8029,-6641,-8047,8090,-8044,8091]]},{"type":"Polygon","id":30003,"arcs":[[-358,-8021,-7972,-8079,-8092,-8043,-368]]},{"type":"Polygon","id":30005,"arcs":[[8092,-7936,-7929,8093,-7978]]},{"type":"Polygon","id":30053,"arcs":[[-8065,8094,8095,8096,-7922]]},{"type":"Polygon","id":30029,"arcs":[[8097,-7931,-6651,-8070,-8071,-7985,-8002,-8031,-7923,-8097]]},{"type":"Polygon","id":30057,"arcs":[[-7999,8098,-8051,-8039,-8050]]},{"type":"Polygon","id":30045,"arcs":[[-7938,8099,8100,-7944,-8025]]},{"type":"Polygon","id":30107,"arcs":[[8101,8102,8103,-7945,-8101]]},{"type":"Polygon","id":30081,"arcs":[[-8003,-7905,-8084,-8048,-8033,-7898]]},{"type":"Polygon","id":30037,"arcs":[[8104,-8030,-7968,-8062,8105,-8103]]},{"type":"Polygon","id":30021,"arcs":[[-7964,-8060,8106,-8013]]},{"type":"Polygon","id":30019,"arcs":[[8107,-8090,-8056,-8018]]},{"type":"Polygon","id":16067,"arcs":[[8108,8109,8110,8111]]},{"type":"Polygon","id":30017,"arcs":[[-8046,-8016,-8080,-7979,-8045,-8091]]},{"type":"Polygon","id":30109,"arcs":[[-8059,-3603,-3554,-8081,-8014,-8107]]},{"type":"Polygon","id":30061,"arcs":[[8112,-7926,-8005,8113]]},{"type":"Polygon","id":16021,"arcs":[[-8095,-8064,-6793,8114]]},{"type":"Polygon","id":30043,"arcs":[[-8083,-7987,-8072,-8054,-8052,-8099,-7998]]},{"type":"Polygon","id":30027,"arcs":[[-6643,-8028,-8105,-8102,-8100,-7937,-8093,-7977]]},{"type":"Polygon","id":30097,"arcs":[[-7946,-8104,-8106,-8061,-7911]]},{"type":"Polygon","id":16015,"arcs":[[-7992,8115,8116,8117,8118]]},{"type":"Polygon","id":16037,"arcs":[[8119,-8117,8120,-8036,8121,8122]]},{"type":"Polygon","id":8095,"arcs":[[-5996,-5005,-6721,8123,-6767]]},{"type":"Polygon","id":8091,"arcs":[[-5900,8124,8125,-6771,8126]]},{"type":"Polygon","id":8077,"arcs":[[8127,-6044,-6732,-6696,-5903,-6726]]},{"type":"Polygon","id":8109,"arcs":[[8128,-5898,8129,-5877,-6695,8130,-6774,8131,-6743]]},{"type":"Polygon","id":8035,"arcs":[[-6718,8132,8133,-6759,8134]]},{"type":"Polygon","id":8033,"arcs":[[8135,-6738,8136,-6773]]},{"type":"Polygon","id":8105,"arcs":[[-6776,-5909,8137,-6740,-8132]]},{"type":"Polygon","id":8101,"arcs":[[8138,-6701,-6683,-5871,8139,-6693,-5882]]},{"type":"Polygon","id":8063,"arcs":[[-4853,-5955,-4858,-6705,-6748,8140,-6722]]},{"type":"Polygon","id":8009,"arcs":[[-2443,-5868,-6708,-6737,-3722,-4877,-5817]]},{"type":"Polygon","id":8049,"arcs":[[-5863,8141,8142,8143,-6689,-5917,8144,8145]]},{"type":"Polygon","id":8075,"arcs":[[-5076,-4971,-6768,-8124,-6720,8146,-6733,8147]]},{"type":"Polygon","id":8019,"arcs":[[8148,-6762,8149,-6690,-8144]]},{"type":"Polygon","id":8081,"arcs":[[-6029,-4014,-1388,-1419,8150,-6766]]},{"type":"Polygon","id":8119,"arcs":[[-6760,-8134,8151,-5880,8152]]},{"type":"MultiPolygon","id":8013,"arcs":[[[8153]],[[8154,8155,-6764,8156,-8142,-5862],[8157]]]},{"type":"Polygon","id":8061,"arcs":[[-3633,-6736,-6706,-6681,-6700,-6744,-6703]]},{"type":"Polygon","id":8015,"arcs":[[-6699,-6725,8158,-5878,-8130,-5897]]},{"type":"Polygon","id":8053,"arcs":[[-8125,-5899,-8129,-6742,8159,-6687,8160]]},{"type":"Polygon","id":8057,"arcs":[[-1421,-331,-5864,-8146,8161]]},{"type":"Polygon","id":29045,"arcs":[[-5097,8162,8163,8164,8165,8166]]},{"type":"Polygon","id":29025,"arcs":[[8167,8168,8169,8170,8171,8172]]},{"type":"Polygon","id":29149,"arcs":[[-4515,8173,8174,8175,8176,-3449,-5729]]},{"type":"Polygon","id":29115,"arcs":[[8177,8178,8179,8180,-441,8181]]},{"type":"Polygon","id":29165,"arcs":[[-5939,-4802,8182,8183,8184,-3745]]},{"type":"Polygon","id":20121,"arcs":[[-3636,-4813,-463,8185,-5942]]},{"type":"Polygon","id":20123,"arcs":[[-5972,-4829,-6784,-3710,-4820]]},{"type":"Polygon","id":29007,"arcs":[[8186,8187,8188,8189,8190,8191,-1622]]},{"type":"Polygon","id":29207,"arcs":[[8192,8193,8194,8195,8196,8197,8198]]},{"type":"Polygon","id":29087,"arcs":[[-4951,-5986,8199,8200,8201,-3676]]},{"type":"Polygon","id":29085,"arcs":[[8202,8203,8204,8205,-456]]},{"type":"Polygon","id":29219,"arcs":[[8206,-1481,8207,8208,8209]]},{"type":"Polygon","id":29013,"arcs":[[-8186,-468,-482,-460,8210,-5943]]},{"type":"Polygon","id":29089,"arcs":[[8211,8212,8213,8214,8215]]},{"type":"Polygon","id":29197,"arcs":[[8216,8217,8218,8219,8220]]},{"type":"Polygon","id":29133,"arcs":[[8221,8222,-7191,-7278,-7305,-7144,8223]]},{"type":"Polygon","id":29187,"arcs":[[8224,-436,8225,8226,8227,-452]]},{"type":"Polygon","id":29179,"arcs":[[8228,-455,8229,8230,8231]]},{"type":"Polygon","id":29067,"arcs":[[8232,8233,8234,-471,-1624,8235,-478]]},{"type":"Polygon","id":29119,"arcs":[[-5822,8236,8237,-5722,-4576]]},{"type":"Polygon","id":29101,"arcs":[[8238,-479,-466,-1633,8239]]},{"type":"Polygon","id":29125,"arcs":[[8240,8241,8242,8243,8244]]},{"type":"Polygon","id":29075,"arcs":[[8245,8246,8247,8248,8249,8250]]},{"type":"Polygon","id":29033,"arcs":[[-8171,8251,8252,8253,8254,8255]]},{"type":"Polygon","id":20115,"arcs":[[-5928,-4841,-5945,-3737,-4847,-5967]]},{"type":"Polygon","id":29039,"arcs":[[8256,8257,-458,8258,8259]]},{"type":"Polygon","id":29155,"arcs":[[8260,8261,8262,-5706,8263]]},{"type":"Polygon","id":20053,"arcs":[[-3713,-5961,-5926,-4872,-5958,-6779]]},{"type":"Polygon","id":20191,"arcs":[[-5964,-6785,-3748,-5807,-4625,-4784]]},{"type":"Polygon","id":20151,"arcs":[[-3764,-5965,-5949,-4863,-5938,-6782]]},{"type":"Polygon","id":29055,"arcs":[[8264,-1485,8265,-450,8266,8267]]},{"type":"Polygon","id":29015,"arcs":[[8268,-1606,8269,-8203,-462,-481]]},{"type":"Polygon","id":29109,"arcs":[[8270,8271,8272,8273,8274,8275,8276]]},{"type":"Polygon","id":29129,"arcs":[[8277,8278,-445,8279,8280,8281]]},{"type":"Polygon","id":29111,"arcs":[[-8163,-5096,8282,8283,8284,8285]]},{"type":"Polygon","id":29105,"arcs":[[8286,8287,8288,8289,-1625,-469]]},{"type":"Polygon","id":29017,"arcs":[[-8196,8290,8291,8292,8293]]},{"type":"Polygon","id":29049,"arcs":[[8294,-8173,8295,8296,-8184,8297]]},{"type":"Polygon","id":20045,"arcs":[[-4836,-5940,-4811,-3640,-5933,-6780]]},{"type":"Polygon","id":29135,"arcs":[[-1609,8298,8299,8300,8301]]},{"type":"Polygon","id":53015,"arcs":[[8302,8303,8304,-6819,-2540]]},{"type":"Polygon","id":53049,"arcs":[[8305,8306,8307,8308,-1650,8309]]},{"type":"Polygon","id":53067,"arcs":[[-6791,8310,8311,8312,8313]]},{"type":"Polygon","id":53041,"arcs":[[8314,-1649,8315,-8304,8316,-8307,8317,-8313]]},{"type":"Polygon","id":53017,"arcs":[[-6822,-1669,8318,8319]]},{"type":"MultiPolygon","id":53073,"arcs":[[[8320]],[[8321,-6797,8322]],[[8323]]]},{"type":"Polygon","id":53031,"arcs":[[8324,-6787,8325,8326,-6804]]},{"type":"Polygon","id":53005,"arcs":[[8327,-6818,8328,-2511,-1638,-6824,-1646]]},{"type":"Polygon","id":53075,"arcs":[[8329,-6815,8330,-1678,8331,8332,-7951,8333,-6810,8334]]},{"type":"Polygon","id":53065,"arcs":[[8335,-6796,8336,-1676,-6807]]},{"type":"Polygon","id":9005,"arcs":[[-6885,-7265,8337,8338,-6828,-4165]]},{"type":"Polygon","id":9015,"arcs":[[-1497,-6832,8339,-7287,-2470]]},{"type":"Polygon","id":9013,"arcs":[[-7288,-8340,-6831,8340,-7263]]},{"type":"Polygon","id":9003,"arcs":[[-7264,-8341,-6830,8341,8342,-8338]]},{"type":"Polygon","id":6055,"arcs":[[8343,-4057,8344,-2763]]},{"type":"Polygon","id":6079,"arcs":[[-618,8345,-2917,-601,8346]]},{"type":"Polygon","id":6081,"arcs":[[8347,8348,8349,-2769,8350,8351]]},{"type":"Polygon","id":6057,"arcs":[[-2373,-633,-5177,8352]]},{"type":"Polygon","id":6077,"arcs":[[8353,-5160,-637,-639,-6081,8354]]},{"type":"Polygon","id":6071,"arcs":[[-2914,8355,-2414,8356,-1346,8357,-582,8358]]},{"type":"Polygon","id":45015,"arcs":[[8359,8360,8361,8362,8363,8364]]},{"type":"Polygon","id":21235,"arcs":[[8365,8366,8367,-6913,-6905,-6984]]},{"type":"Polygon","id":45007,"arcs":[[8368,8369,8370,8371,8372,8373,-4106,-7269]]},{"type":"Polygon","id":45021,"arcs":[[8374,8375,8376,8377,8378]]},{"type":"Polygon","id":45079,"arcs":[[8379,8380,8381,8382,8383,8384]]},{"type":"Polygon","id":45035,"arcs":[[8385,-8360,8386,8387,8388,8389]]},{"type":"Polygon","id":45067,"arcs":[[8390,8391,8392,8393,8394]]},{"type":"Polygon","id":45075,"arcs":[[8395,8396,8397,8398,8399,8400,8401,-8361,-8386,8402,8403]]},{"type":"Polygon","id":45087,"arcs":[[8404,8405,8406,8407,8408,8409,-8378]]},{"type":"MultiPolygon","id":15003,"arcs":[[[8410]],[[8411]]]},{"type":"Polygon","id":1005,"arcs":[[8412,-6997,-4139,-6990,8413,8414,8415,8416]]},{"type":"Polygon","id":1027,"arcs":[[8417,8418,8419,8420,8421]]},{"type":"Polygon","id":1091,"arcs":[[8422,8423,8424,8425,8426,8427,8428,8429]]},{"type":"Polygon","id":45073,"arcs":[[8430,8431,8432,-8371,8433,-8369,-7268,-5339,-7064,-7324,-2795]]},{"type":"Polygon","id":45055,"arcs":[[8434,8435,8436,8437,8438,-8380,8439]]},{"type":"Polygon","id":45089,"arcs":[[8440,8441,-8393,8442,-8363]]},{"type":"Polygon","id":15001,"arcs":[[8443]]},{"type":"Polygon","id":45047,"arcs":[[8444,8445,8446,8447,8448,8449]]},{"type":"Polygon","id":45083,"arcs":[[8450,8451,8452,-8379,-8410,8453]]},{"type":"Polygon","id":21037,"arcs":[[-6246,-7470,-7107,-7026]]},{"type":"Polygon","id":1069,"arcs":[[-5237,-2818,-7386,8454,8455,8456]]},{"type":"Polygon","id":21201,"arcs":[[-6954,8457,-7242,-7329,-7164]]},{"type":"Polygon","id":21239,"arcs":[[8458,-7319,8459,-7302,-6944,-7069]]},{"type":"Polygon","id":21195,"arcs":[[8460,-4743,-7599,8461,-7779,-7311,8462,-6912]]},{"type":"Polygon","id":21055,"arcs":[[-7298,-7060,8463,-7212,-7121,-2600]]},{"type":"Polygon","id":21119,"arcs":[[8464,-7186,-6908,-8463,-7310,-7312]]},{"type":"Polygon","id":45027,"arcs":[[8465,-8441,-8362,-8402,8466,8467]]},{"type":"MultiPolygon","id":15007,"arcs":[[[8468]],[[8469]]]},{"type":"Polygon","id":15005,"arcs":[[8470,8471]]},{"type":"Polygon","id":21197,"arcs":[[-7260,-7237,8472,-7146,-7075,-7300]]},{"type":"Polygon","id":21165,"arcs":[[-8473,-7236,-7257,-7158,8473,-7147]]},{"type":"Polygon","id":1019,"arcs":[[8474,8475,-5353,-7207,-2832,8476,8477]]},{"type":"Polygon","id":1003,"arcs":[[-7488,8478,8479,8480,8481,8482,8483]]},{"type":"Polygon","id":45013,"arcs":[[8484,8485,8486,8487]]},{"type":"Polygon","id":21001,"arcs":[[8488,8489,-7232,-7131,-7098,-6900]]},{"type":"Polygon","id":1035,"arcs":[[8490,8491,8492,8493]]},{"type":"Polygon","id":1029,"arcs":[[-2892,8494,-8418,8495,8496,-8477,-2831,-5281]]},{"type":"Polygon","id":1073,"arcs":[[8497,8498,8499,8500,8501,8502]]},{"type":"Polygon","id":1067,"arcs":[[-8414,-6991,-5238,-8457,8503]]},{"type":"Polygon","id":1041,"arcs":[[8504,8505,8506,8507,8508,8509]]},{"type":"Polygon","id":1089,"arcs":[[8510,8511,8512,8513,8514,8515]]},{"type":"Polygon","id":1083,"arcs":[[8516,8517,8518,8519,-8511,8520]]},{"type":"Polygon","id":1047,"arcs":[[8521,8522,-8424,8523,8524,8525]]},{"type":"Polygon","id":33011,"arcs":[[8526,8527,8528,-7019,-7272,-7286,8529]]},{"type":"Polygon","id":1039,"arcs":[[8530,8531,8532,8533,8534,-8493,8535,-8506]]},{"type":"Polygon","id":1117,"arcs":[[8536,-8501,8537,8538,8539,8540]]},{"type":"Polygon","id":1007,"arcs":[[8541,8542,8543,8544,-8502,-8537]]},{"type":"Polygon","id":1013,"arcs":[[8545,8546,8547,-8507,-8536,-8492]]},{"type":"Polygon","id":21031,"arcs":[[-7317,-7173,-7222,-7113,-7034,-7200]]},{"type":"Polygon","id":1087,"arcs":[[8548,8549,8550,8551,8552,8553]]},{"type":"Polygon","id":1001,"arcs":[[8554,8555,8556,-8526,8557]]},{"type":"Polygon","id":1059,"arcs":[[8558,8559,8560,-7489,-1052,8561]]},{"type":"MultiPolygon","id":1095,"arcs":[[[8562,-8515,8563,8564,8565,8566,8567,8568]],[[8569]]]},{"type":"Polygon","id":1121,"arcs":[[8570,8571,-8496,-8422,8572,-8539]]},{"type":"Polygon","id":45061,"arcs":[[8573,8574,-8438,8575]]},{"type":"Polygon","id":21045,"arcs":[[-6899,8576,8577,-6989,-7326,8578,-8489]]},{"type":"Polygon","id":1127,"arcs":[[8579,8580,8581,8582,-8498,8583,8584]]},{"type":"Polygon","id":21131,"arcs":[[-7313,-7088,-6980,-7072]]},{"type":"Polygon","id":1077,"arcs":[[-1057,8585,8586,8587,8588,-8518,8589,8590]]},{"type":"Polygon","id":33007,"arcs":[[8591,8592,8593,8594,-321]]},{"type":"Polygon","id":1103,"arcs":[[-8516,-8563,8595,8596,-8521]]},{"type":"Polygon","id":45049,"arcs":[[8597,8598,-8486,8599,-6140,-6094]]},{"type":"Polygon","id":21009,"arcs":[[-7112,8600,-7133,-7102,-7249,-7036]]},{"type":"Polygon","id":1107,"arcs":[[8601,8602,8603,8604,8605,8606,-1062]]},{"type":"Polygon","id":21163,"arcs":[[-7228,8607,8608,8609,8610]]},{"type":"Polygon","id":21025,"arcs":[[8611,-7077,-7150,-7187,-8465,-7315]]},{"type":"Polygon","id":1055,"arcs":[[8612,-8567,8613,-8475,8614,8615]]},{"type":"Polygon","id":21207,"arcs":[[-7233,-8490,-8579,-7325,-7125,-7091]]},{"type":"Polygon","id":21203,"arcs":[[-7203,-7154,-6916,-7327,-6987,-7138]]},{"type":"Polygon","id":1125,"arcs":[[-8584,-8503,-8545,8616,8617,-8604,8618]]},{"type":"Polygon","id":21211,"arcs":[[-7003,-7180,-6961,-7070,-6949,-7184]]},{"type":"Polygon","id":21047,"arcs":[[8619,-6941,-7318,-7255,8620,8621,8622]]},{"type":"Polygon","id":21027,"arcs":[[-7171,-7282,8623,-8608,-7227,-7219]]},{"type":"Polygon","id":45039,"arcs":[[8624,-8440,-8385,8625,-8407,8626]]},{"type":"Polygon","id":45053,"arcs":[[-8485,8627,-4120,-6141,-8600]]},{"type":"Polygon","id":1045,"arcs":[[8628,-8415,-8504,-8456,8629,8630]]},{"type":"Polygon","id":1123,"arcs":[[8631,-8420,8632,8633,8634,-8549,8635]]},{"type":"Polygon","id":45011,"arcs":[[-8396,8636,8637,-5188,8638]]},{"type":"Polygon","id":45063,"arcs":[[8639,8640,-8383,8641,-8398,8642]]},{"type":"Polygon","id":21221,"arcs":[[8643,-6921,-7083,-7214,8644,-8623]]},{"type":"MultiPolygon","id":15009,"arcs":[[[-8472,8645]],[[8646]],[[8647]],[[8648]]]},{"type":"Polygon","id":21021,"arcs":[[-7134,-6985,-8578,8649,-7247,-7304]]},{"type":"Polygon","id":21113,"arcs":[[-7303,-8460,-7321,-7204,-7136]]},{"type":"Polygon","id":1061,"arcs":[[-8630,-8455,-7385,8650,8651,-8532,8652]]},{"type":"MultiPolygon","id":1097,"arcs":[[[-4303,8653,8654,-8480,8655,-5594]],[[-5596,8656]],[[8657]]]},{"type":"Polygon","id":1131,"arcs":[[-8523,8658,-8547,8659,8660,-8425]]},{"type":"Polygon","id":45019,"arcs":[[8661,8662,8663,-8389,8387,-8387,-8365]]},{"type":"Polygon","id":21041,"arcs":[[-7330,-7175,-6958,-7294,8664,8665]]},{"type":"Polygon","id":1119,"arcs":[[8666,-8606,8667,-8428,8668,8669,-5615]]},{"type":"Polygon","id":21099,"arcs":[[-7096,-7130,-8601,-7111,-7221,-7231,-7209]]},{"type":"Polygon","id":21189,"arcs":[[-7153,-7078,-8612,-7314,-7074]]},{"type":"Polygon","id":1079,"arcs":[[8670,8671,-8559,8672,-8590,-8517,-8597]]},{"type":"Polygon","id":1015,"arcs":[[8673,-8615,-8478,-8497,-8572]]},{"type":"MultiPolygon","id":1071,"arcs":[[[-8570]],[[-8564,-8514,8674,8675,-2900,8676,-8565]]]},{"type":"Polygon","id":33017,"arcs":[[8677,8678,8679,8680,8681]]},{"type":"Polygon","id":21213,"arcs":[[-7196,-7038,-7252,8682,8683]]},{"type":"Polygon","id":1093,"arcs":[[-7490,-8561,8684,-8580,8685,8686,-5604]]},{"type":"Polygon","id":1049,"arcs":[[-4086,-5351,-8476,-8614,-8566,-8677,-2904]]},{"type":"Polygon","id":21147,"arcs":[[8687,8688,-7127,-7328,-6914,-8368]]},{"type":"Polygon","id":1109,"arcs":[[8689,8690,-8416,-8629,8691,-8510]]},{"type":"Polygon","id":1105,"arcs":[[8692,-8524,-8423,8693,-8543]]},{"type":"Polygon","id":1033,"arcs":[[-1058,-8591,-8673,-8562]]},{"type":"Polygon","id":45069,"arcs":[[-799,8694,8695,8696,8697,-696,8698]]},{"type":"Polygon","id":21155,"arcs":[[-8650,-8577,-6898,-7208,-7218,-7248]]},{"type":"Polygon","id":1051,"arcs":[[8699,8700,-8636,-8554,8701,-8555]]},{"type":"Polygon","id":45065,"arcs":[[-4108,8702,-8448,8703,-4068,-6125]]},{"type":"Polygon","id":1129,"arcs":[[-8481,-8655,8704,-6369,8705,8706]]},{"type":"Polygon","id":1017,"arcs":[[-6099,-7032,8707,-8634,8708]]},{"type":"Polygon","id":1025,"arcs":[[-8661,8709,-8482,-8707,8710,-8426]]},{"type":"Polygon","id":33005,"arcs":[[-7012,-415,8711,-8530,-7285]]},{"type":"Polygon","id":21081,"arcs":[[-7041,-7028,-7106,-6951,8712,-7177,-7332]]},{"type":"Polygon","id":1115,"arcs":[[-8500,8713,-8616,-8674,-8571,-8538]]},{"type":"Polygon","id":21149,"arcs":[[-7168,-7316,-6939,-7058,-7048,8714]]},{"type":"Polygon","id":21209,"arcs":[[-7178,-8713,-6957,-7226,-7320,-8459,-7068]]},{"type":"Polygon","id":1021,"arcs":[[8715,-8700,-8558,-8525,-8693,-8542,-8541]]},{"type":"Polygon","id":1011,"arcs":[[8716,-8552,8717,-8417,-8691]]},{"type":"Polygon","id":1063,"arcs":[[-8605,-8618,8718,-8429,-8668]]},{"type":"Polygon","id":45091,"arcs":[[-8405,-8377,8719,8720,-914,8721,8722]]},{"type":"Polygon","id":45059,"arcs":[[-8409,8723,-8450,8724,8725,-8454]]},{"type":"Polygon","id":21175,"arcs":[[-7160,-7194,-7188,-7148,-8474,-7157,-7054]]},{"type":"Polygon","id":1009,"arcs":[[-8583,8726,-8568,-8613,-8714,-8499]]},{"type":"Polygon","id":45029,"arcs":[[-8403,-8390,-8664,8727,-8487,-8599,8728]]},{"type":"MultiPolygon","id":45077,"arcs":[[[-8370,-8434]],[[-8372,-8433,8729,8730]]]},{"type":"Polygon","id":21023,"arcs":[[-7469,-6206,-7239,-8458,-6953,-7109]]},{"type":"Polygon","id":1037,"arcs":[[-8540,-8573,-8421,-8632,-8701,-8716]]},{"type":"Polygon","id":45009,"arcs":[[-8637,-8404,-8729,8731]]},{"type":"Polygon","id":45005,"arcs":[[-8732,-8598,-6093,-5189,-8638]]},{"type":"Polygon","id":45043,"arcs":[[8732,-8662,-8364,-8443,-8392,8733]]},{"type":"Polygon","id":45037,"arcs":[[-8447,8734,8735,-5290,-4069,-8704]]},{"type":"Polygon","id":45051,"arcs":[[-8391,8736,8737,8738,8739,-8734]]},{"type":"Polygon","id":45081,"arcs":[[8740,-8640,8741,-8735,-8446]]},{"type":"Polygon","id":21059,"arcs":[[-7283,-7169,-8715,-7047,8742,8743]]},{"type":"Polygon","id":1133,"arcs":[[-8685,-8560,-8672,8744,-8581]]},{"type":"Polygon","id":1113,"arcs":[[-8718,-8551,8745,-6975,-7270,-6998,-8413]]},{"type":"Polygon","id":1031,"arcs":[[-8505,-8692,-8631,-8653,-8531]]},{"type":"Polygon","id":45033,"arcs":[[-8737,-8395,8746,-8695,-804]]},{"type":"Polygon","id":1099,"arcs":[[-8660,-8546,-8491,8747,-8483,-8710]]},{"type":"Polygon","id":21159,"arcs":[[-6911,-7193,-7162,-5885,-4744,-8461]]},{"type":"Polygon","id":45025,"arcs":[[-8436,8748,-703,8749,-8698,8750]]},{"type":"Polygon","id":45017,"arcs":[[-8642,-8382,8751,-8467,-8401,-8400,-8399]]},{"type":"Polygon","id":45001,"arcs":[[-8374,-8725,-8449,-8703,-4107]]},{"type":"Polygon","id":45071,"arcs":[[-8408,-8626,-8384,-8641,-8741,-8445,-8724]]},{"type":"Polygon","id":45023,"arcs":[[8752,-8627,-8406,-8723]]},{"type":"Polygon","id":45057,"arcs":[[-8749,-8435,-8625,-8753,-8722,-913,-704]]},{"type":"Polygon","id":45003,"arcs":[[-8397,-8639,-5187,-5186,-5292,-5291,-8736,-8742,-8643]]},{"type":"Polygon","id":45041,"arcs":[[-8466,8753,-8574,8754,-8696,-8747,-8394,-8442]]},{"type":"Polygon","id":1075,"arcs":[[-8602,-1061,-5605,-8687,8755]]},{"type":"Polygon","id":1023,"arcs":[[8756,-8669,-8427,-8711,-8706,-6368,-3167]]},{"type":"Polygon","id":1043,"arcs":[[-8671,-8596,-8569,-8727,-8582,-8745]]},{"type":"Polygon","id":1101,"arcs":[[-8556,-8702,-8553,-8717,-8690,-8509,8757]]},{"type":"Polygon","id":1053,"arcs":[[-8484,-8748,-8494,-8535,8758,8759,-7485]]},{"type":"Polygon","id":21033,"arcs":[[-8464,-7059,-6942,-8620,-8645,-7213]]},{"type":"Polygon","id":1111,"arcs":[[-6100,-8709,-8633,-8419,-8495,-2891,-6999]]},{"type":"Polygon","id":1057,"arcs":[[-8603,-8756,-8686,-8585,-8619]]},{"type":"Polygon","id":45031,"arcs":[[-8755,-8576,-8437,-8751,-8697]]},{"type":"Polygon","id":45085,"arcs":[[-8754,-8468,-8752,-8381,-8439,-8575]]},{"type":"Polygon","id":45045,"arcs":[[-8726,-8373,-8731,8760,-918,8761,-8451]]},{"type":"Polygon","id":1081,"arcs":[[-7031,-6976,-8746,-8550,-8635,-8708]]},{"type":"Polygon","id":1085,"arcs":[[-8557,-8758,-8508,-8548,-8659,-8522]]},{"type":"Polygon","id":1065,"arcs":[[-8617,-8544,-8694,-8430,-8719]]},{"type":"Polygon","id":12045,"arcs":[[8762,8763,-7357,8764,8765]]},{"type":"MultiPolygon","id":12103,"arcs":[[[8766,8767,8768,8769,8770,8771,8772,8773,8774,8775]],[[8776]]]},{"type":"Polygon","id":12067,"arcs":[[8777,8778,8779,-7440,8780,-7442,8781]]},{"type":"Polygon","id":12023,"arcs":[[-7381,-4130,-5217,8782,8783,8784,8785,8786]]},{"type":"Polygon","id":12129,"arcs":[[-7457,8787,-7355,8788,8789]]},{"type":"Polygon","id":12013,"arcs":[[8790,-8763,8791,-7388]]},{"type":"MultiPolygon","id":12086,"arcs":[[[8792,-7361,8793,-7398]],[[-7400,8794]]]},{"type":"MultiPolygon","id":12057,"arcs":[[[8795,-7425,8796,-8768,8797]],[[-8774,8798]],[[-8771,8799]]]},{"type":"Polygon","id":12117,"arcs":[[8800,-7452,8801]]},{"type":"Polygon","id":12085,"arcs":[[8802,8803,-7394,8804]]},{"type":"Polygon","id":12083,"arcs":[[8805,8806,8807,8808,-7450,8809,-7342]]},{"type":"Polygon","id":12003,"arcs":[[8810,-7413,8811,8812,8813,-8783,-5216,-2870,-5228]]},{"type":"Polygon","id":12073,"arcs":[[8814,8815,-7292,-6110,-7458,-8790]]},{"type":"Polygon","id":12109,"arcs":[[8816,8817,8818,8819,-7411]]},{"type":"Polygon","id":12101,"arcs":[[8820,8821,8822,-8798,-8767,8823]]},{"type":"Polygon","id":12121,"arcs":[[-7382,-8787,8824,-8779,8825]]},{"type":"Polygon","id":12007,"arcs":[[-8813,8826,8827,8828,8829]]},{"type":"Polygon","id":12115,"arcs":[[8830,8831,8832,-7428]]},{"type":"Polygon","id":12019,"arcs":[[-8812,-7412,-8820,8833,-8827]]},{"type":"Polygon","id":12123,"arcs":[[-7455,8834,-8782,-7446,8835]]},{"type":"Polygon","id":12055,"arcs":[[8836,8837,8838,8839,-7396]]},{"type":"Polygon","id":12051,"arcs":[[-7432,8840,8841,-7363,8842]]},{"type":"Polygon","id":12039,"arcs":[[-7387,-2816,-6907,-7293,-8816,8843]]},{"type":"Polygon","id":12015,"arcs":[[-7436,8844,8845,-7434,8846,-8832,8847,8848,-7431,8849,8850]]},{"type":"Polygon","id":12043,"arcs":[[-7395,-8841,-8849,-8837]]},{"type":"Polygon","id":12131,"arcs":[[-8533,-8652,8851,8852,8853,8854,8855]]},{"type":"Polygon","id":12125,"arcs":[[8856,-8784,-8814,-8830]]},{"type":"Polygon","id":12027,"arcs":[[-8838,-8848,-8831,-7427,8857]]},{"type":"Polygon","id":12097,"arcs":[[8858,-7350,8859,-7391,8860]]},{"type":"Polygon","id":12059,"arcs":[[-7384,8861,-8852,-8651]]},{"type":"Polygon","id":12041,"arcs":[[-8781,-7441,-8780,-8825,-8786,8862,8863,-7443]]},{"type":"Polygon","id":12053,"arcs":[[8864,-8821,8865,-7344]]},{"type":"Polygon","id":12001,"arcs":[[8866,-8807,8867,-8863,-8785,-8857,-8829]]},{"type":"Polygon","id":12079,"arcs":[[-7454,-5349,-6088,-5345,-7383,-8826,-8778,-8835]]},{"type":"Polygon","id":12035,"arcs":[[8868,8869,8870,-8818]]},{"type":"Polygon","id":12005,"arcs":[[-8854,8871,-7389,-8792,-8766,8872]]},{"type":"Polygon","id":12061,"arcs":[[-7392,-8860,-7349,8873,8874]]},{"type":"Polygon","id":12075,"arcs":[[-8864,-8868,-8806,-7341,8875,-7444]]},{"type":"Polygon","id":12105,"arcs":[[-8823,8876,-7448,-8861,-8840,8877,-8796]]},{"type":"Polygon","id":12099,"arcs":[[8878,-7364,-8842,-8804]]},{"type":"Polygon","id":12095,"arcs":[[-7351,-8859,-7453,-8801]]},{"type":"Polygon","id":12107,"arcs":[[-8867,-8828,-8834,-8819,-8871,8879,-8808]]},{"type":"Polygon","id":12111,"arcs":[[-7393,-8875,8880,-8805]]},{"type":"Polygon","id":12021,"arcs":[[-8793,-7397,8881,-7433,-8843,-7362]]},{"type":"Polygon","id":12119,"arcs":[[-8810,-7449,-8877,-8822,-8865,-7343]]},{"type":"Polygon","id":12091,"arcs":[[-8759,-8534,-8856,8882,8883]]},{"type":"Polygon","id":12049,"arcs":[[-8839,-8858,-7426,-8878]]},{"type":"Polygon","id":12089,"arcs":[[8884,-7414,-8811,-5227,-2825]]},{"type":"Polygon","id":12127,"arcs":[[-7451,-8809,-8880,-8870,8885,-7352,-8802]]},{"type":"Polygon","id":36049,"arcs":[[-4155,-4205,-3145,-5581,-3032]]},{"type":"Polygon","id":12077,"arcs":[[-8815,-8789,-7354,-8764,-8791,-8844]]},{"type":"Polygon","id":12113,"arcs":[[-8760,-8884,8886,-7486]]},{"type":"Polygon","id":12133,"arcs":[[-8862,-7390,-8872,-8853]]},{"type":"MultiPolygon","id":2050,"arcs":[[[-3197,-3189,-3204,-980,-969,8887,-971,8888,-1036]],[[8889]],[[8890]],[[8891]]]},{"type":"Polygon","id":2068,"arcs":[[-3196,-2001,-948,-3191]]},{"type":"MultiPolygon","id":2020,"arcs":[[[-3212,-3201,8892,-3193]],[[8893]]]},{"type":"Polygon","id":28099,"arcs":[[8894,-5617,-68,-5611]]},{"type":"Polygon","id":28127,"arcs":[[-6394,-6384,8895,-4257,-4296,-7524]]},{"type":"Polygon","id":28103,"arcs":[[-5591,-1063,-8607,-8667,-5614,8896]]},{"type":"Polygon","id":28161,"arcs":[[-4290,8897,-61,-5609,-4255]]},{"type":"Polygon","id":28017,"arcs":[[-7522,-5620,-5606,-4300,8898,-4252]]},{"type":"Polygon","id":28033,"arcs":[[-4510,8899,-4284,8900,-6381]]},{"type":"Polygon","id":28075,"arcs":[[-8670,-8757,-3166,-64,-5616]]},{"type":"Polygon","id":28131,"arcs":[[8901,-7507,-4305,-5599,8902,-5623]]},{"type":"Polygon","id":28067,"arcs":[[8903,-6386,-6393,-6389,-6372,-7509]]},{"type":"Polygon","id":28135,"arcs":[[-73,-7511,-62,-8898,-4289,-6360,-6395]]},{"type":"Polygon","id":28089,"arcs":[[-4273,-5610,-7503,-7523,-2031,8904]]},{"type":"Polygon","id":28159,"arcs":[[-8897,-5613,-8895,-4271,8905,-5592]]},{"type":"Polygon","id":28155,"arcs":[[-4285,-4253,-8899,-4299,-5590,8906,-7496]]},{"type":"Polygon","id":28137,"arcs":[[-4283,-5607,-59,-6382,-8901]]},{"type":"Polygon","id":22025,"arcs":[[-1113,8907,8908,-1122,-6400,-4434]]},{"type":"MultiPolygon","id":22125,"arcs":[[[-1120,-6410,-6401]],[[-1118,-7505,8909,8910,-6411]]]},{"type":"Polygon","id":22011,"arcs":[[8911,-6403,-1089,-131,8912]]},{"type":"Polygon","id":22037,"arcs":[[-7504,-4317,8913,8914,8915,-8910]]},{"type":"Polygon","id":22013,"arcs":[[-1086,-6407,8916,-1104,-6416,-2039,-7558,8917]]},{"type":"Polygon","id":22119,"arcs":[[-8918,-7557,-5703,-3469,-1087]]},{"type":"Polygon","id":22107,"arcs":[[-76,-6375,-3157,-7499,-4308,-1115,-8909,8918,-79,-6376]]},{"type":"Polygon","id":22067,"arcs":[[-7546,-6599,-3529,-4418,-5652,-1068]]},{"type":"Polygon","id":22091,"arcs":[[-4316,-6413,-4442,8919,-8914]]},{"type":"Polygon","id":51710,"arcs":[[-3285,8920,8921,8922]]},{"type":"Polygon","id":51580,"arcs":[[-6436]]},{"type":"Polygon","id":51025,"arcs":[[8923,8924,8925,-7579,-7700,8926,-7587]]},{"type":"Polygon","id":51047,"arcs":[[8927,8928,-3296,8929,8930,8931]]},{"type":"Polygon","id":51033,"arcs":[[8932,-3292,-7747,-7753,8933,-6458,8934]]},{"type":"Polygon","id":51119,"arcs":[[8935,-7755,8936,8937,-2052]]},{"type":"Polygon","id":51165,"arcs":[[-4768,-1143,-7657,-6451,-7664,8938,-5912],[-2092]]},{"type":"Polygon","id":51730,"arcs":[[-7725,-7606,-7724,-7649,-7591]]},{"type":"Polygon","id":51013,"arcs":[[-7564,7562,-7562,-83,-7516,-1124,-7515]]},{"type":"Polygon","id":51145,"arcs":[[-7727,8939,8940,-7623]]},{"type":"Polygon","id":51173,"arcs":[[-7641,-1129,8941,8942,8943,8944]]},{"type":"Polygon","id":51760,"arcs":[[8945,8946,-7717,8947]]},{"type":"Polygon","id":51700,"arcs":[[8948,-7610,8949,8950]]},{"type":"Polygon","id":51735,"arcs":[[-7608,8951,8952]]},{"type":"MultiPolygon","id":51095,"arcs":[[[8953]],[[8954,8955,-8951,8956,-7574,8957,-7697,8958,-2050,8959,8960,8961,8962]]]},{"type":"Polygon","id":51678,"arcs":[[8963]]},{"type":"Polygon","id":51037,"arcs":[[-7671,-6441,-7617,-7701,-7584,-7662]]},{"type":"Polygon","id":51051,"arcs":[[-7640,-7780,-8462,-7601]]},{"type":"Polygon","id":51187,"arcs":[[8964,-7654,-1141,-7592,-7770,8965]]},{"type":"Polygon","id":51045,"arcs":[[-4696,-6434,-7595,-7764,8966,-7602]]},{"type":"Polygon","id":51019,"arcs":[[-6430,-7672,-6428,-7778,-7765,-7597,8967,8968],[8969]]},{"type":"Polygon","id":48497,"arcs":[[-2195,-4465,8970,8971,-5671,-1248]]},{"type":"Polygon","id":48477,"arcs":[[-2205,-3328,-6512,8972,-3316,-4453,-7784]]},{"type":"Polygon","id":48243,"arcs":[[-7864,8973,-3366,-2220,-115,-5661]]},{"type":"Polygon","id":48141,"arcs":[[-2420,2418,-2418,-1410,-7866,8974]]},{"type":"Polygon","id":48183,"arcs":[[-7869,-5667,-201,8975]]},{"type":"Polygon","id":48491,"arcs":[[-274,-4451,8976,-3305,-2124,8977]]},{"type":"Polygon","id":34039,"arcs":[[-293,-3023,8978,-3020,8979,-3018,8980,-3016,8981,-3014,8982,8983,8984,8985,-7883,8986,-7881]]},{"type":"Polygon","id":34019,"arcs":[[-6534,8987,-7885,-1314,-932]]},{"type":"Polygon","id":34015,"arcs":[[-6537,6535,-6535,-6602,-751,-1958,-1322,-6528,-309]]},{"type":"Polygon","id":46049,"arcs":[[8988,8989,8990,8991,8992,8993]]},{"type":"Polygon","id":46073,"arcs":[[8994,8995,8996,8997,8998,8999]]},{"type":"Polygon","id":46099,"arcs":[[9000,9001,9002,9003,9004,9005,9006]]},{"type":"Polygon","id":46033,"arcs":[[-363,-342,9007,9008,9009]]},{"type":"Polygon","id":46129,"arcs":[[9010,9011,9012,9013,9014,9015]]},{"type":"Polygon","id":46011,"arcs":[[9016,9017,9018,9019,9020,9021]]},{"type":"Polygon","id":46017,"arcs":[[9022,9023,9024,9025,-8996]]},{"type":"Polygon","id":16073,"arcs":[[-2350,-2550,-7957,9026,9027,-8073,-4777]]},{"type":"Polygon","id":16081,"arcs":[[9028,-8041,-350,-8087]]},{"type":"Polygon","id":16075,"arcs":[[-7956,-7989,-7958,-2554]]},{"type":"Polygon","id":46039,"arcs":[[9029,9030,9031,9032,9033,-9019,9034]]},{"type":"Polygon","id":46115,"arcs":[[9035,9036,9037,9038,-8993,9039]]},{"type":"Polygon","id":46127,"arcs":[[-3918,-5053,9040,9041,9042,9043,9044]]},{"type":"Polygon","id":16013,"arcs":[[-7909,9045,-8123,9046,9047,-7917,9048,-8109,9049]]},{"type":"Polygon","id":16051,"arcs":[[-8085,9050,9051,-8008,-8037,9052]]},{"type":"Polygon","id":46025,"arcs":[[9053,9054,9055,9056,9057,-9037]]},{"type":"Polygon","id":16069,"arcs":[[9058,-7893,-7895,-2491,-6811,-8334,-7950]]},{"type":"Polygon","id":46085,"arcs":[[9059,9060,9061,9062,9063,-9024,9064,9065,9066,9067]]},{"type":"Polygon","id":46135,"arcs":[[9068,9069,-5064,-5983,9070,9071]]},{"type":"Polygon","id":46035,"arcs":[[9072,9073,9074,9075,9076]]},{"type":"Polygon","id":46071,"arcs":[[9077,9078,9079,9080,9081,9082]]},{"type":"Polygon","id":46119,"arcs":[[9083,9084,9085,9086,9087]]},{"type":"Polygon","id":16047,"arcs":[[9088,-7907,9089,9090,-8075]]},{"type":"Polygon","id":46043,"arcs":[[9091,-9075,9092,9093]]},{"type":"Polygon","id":46109,"arcs":[[9094,-3621,9095,9096,9097,9098]]},{"type":"Polygon","id":46007,"arcs":[[9099,-9080,9100,-5031,-5030]]},{"type":"Polygon","id":46111,"arcs":[[-8999,9101,9102,9103,9104,-9077,9105]]},{"type":"Polygon","id":46097,"arcs":[[9106,9107,9108,-9104,9109]]},{"type":"Polygon","id":16053,"arcs":[[-9091,9110,-8111,9111,-8076]]},{"type":"Polygon","id":16003,"arcs":[[9112,-7990,-7954,-3921,-2493,-7901]]},{"type":"Polygon","id":46053,"arcs":[[-3873,-5058,9113,-9067,9114]]},{"type":"Polygon","id":16035,"arcs":[[-7894,-9059,-7949,9115,-8114,-8004,-7896]]},{"type":"Polygon","id":16039,"arcs":[[9116,-8118,-8120,-9046,-7908,-9089,-8074,-9028]]},{"type":"Polygon","id":16071,"arcs":[[9117,-7915,9118,9119,-5147,-625]]},{"type":"Polygon","id":16085,"arcs":[[-7900,-8032,-8121,-8116,-7991,-9113]]},{"type":"Polygon","id":46047,"arcs":[[9120,-5041,-3851,-364,-9010]]},{"type":"Polygon","id":46093,"arcs":[[9121,9122,9123,9124,9125,9126]]},{"type":"Polygon","id":16055,"arcs":[[-8067,9127,9128,9129]]},{"type":"Polygon","id":16001,"arcs":[[-7993,-8119,-9117,-9027,-7960]]},{"type":"Polygon","id":16009,"arcs":[[9130,-9129,9131,-7952,-8333]]},{"type":"Polygon","id":16063,"arcs":[[-8112,-9111,-9090,-7906,-9050]]},{"type":"Polygon","id":16031,"arcs":[[-9049,-7916,-9118,-624,-4779,-8077,-9112,-8110]]},{"type":"Polygon","id":16041,"arcs":[[-5148,-9120,9132,-7995,-7935]]},{"type":"Polygon","id":16023,"arcs":[[-8035,-8009,-9052,9133,-9047,-8122]]},{"type":"Polygon","id":16065,"arcs":[[-8042,-9029,-8086,-9053]]},{"type":"Polygon","id":16079,"arcs":[[-8113,-9116,-7953,-9132,-9128,-8066,-7920]]},{"type":"Polygon","id":16011,"arcs":[[-7997,9134,-7918,-9048,-9134,-9051,-8088]]},{"type":"Polygon","id":46079,"arcs":[[9135,-9022,9136,-9001,9137,-9107]]},{"type":"Polygon","id":46063,"arcs":[[-8082,-2348,-3568,9138,9139,-7981]]},{"type":"Polygon","id":16005,"arcs":[[-9135,-7996,-9133,-9119,-7919]]},{"type":"Polygon","id":46117,"arcs":[[9140,-9086,9141,-9062,9142,9143]]},{"type":"MultiPolygon","id":8123,"arcs":[[[9144]],[[-5075,-8148,-6735,-6712,9145,-8155,-5865,-408]]]},{"type":"Polygon","id":8111,"arcs":[[-6686,-8136,-6772,-8126,-8161]]},{"type":"Polygon","id":8085,"arcs":[[-6727,-5901,-8127,-6770,9146,-8128]]},{"type":"MultiPolygon","id":8014,"arcs":[[[-8158]],[[-9146,-6711,-6756,-8156],[-9145],[-8154]]]},{"type":"Polygon","id":8121,"arcs":[[9147,-6714,-6734,-8147,-6723,-8141,-6747]]},{"type":"Polygon","id":8107,"arcs":[[-5916,-6731,-6765,-8151,-1422,-8162,-8145]]},{"type":"Polygon","id":8007,"arcs":[[-1415,-6688,-8160,-6741,-8138,-5908,-2429]]},{"type":"Polygon","id":8047,"arcs":[[-6763,-8149,-8143,-8157]]},{"type":"MultiPolygon","id":8031,"arcs":[[[9148]],[[-6709,9149,-6754,9150,-6752,9151,-6757],[-6749],[9152],[9153],[9154],[-6750],[-6751],[9155],[9156],[9157],[9158],[9159],[9160]]]},{"type":"Polygon","id":8093,"arcs":[[-6724,-6691,-8150,-6761,-8153,-5879,-8159]]},{"type":"Polygon","id":29063,"arcs":[[9161,9162,-8249,9163,-8168,-8295]]},{"type":"Polygon","id":29011,"arcs":[[-8257,9164,9165,-4786,9166]]},{"type":"Polygon","id":29035,"arcs":[[-8231,9167,9168,9169,-8176,9170]]},{"type":"Polygon","id":29205,"arcs":[[9171,9172,-8285,9173,-1619]]},{"type":"Polygon","id":29225,"arcs":[[9174,9175,9176,-8287,-472,-8235]]},{"type":"Polygon","id":29163,"arcs":[[9177,9178,9179,-8188,9180,-2613]]},{"type":"Polygon","id":29021,"arcs":[[-4801,-3678,9181,-9162,-8298,-8183]]},{"type":"Polygon","id":29031,"arcs":[[-527,9182,9183,-8197,-8294,9184]]},{"type":"Polygon","id":29203,"arcs":[[9185,-1629,9186,-8232,-9171,-8175]]},{"type":"Polygon","id":29183,"arcs":[[9187,-555,-5104,9188,-1482,-8207,9189]]},{"type":"Polygon","id":29169,"arcs":[[9190,-8243,9191,-1626,-8290,9192]]},{"type":"Polygon","id":29001,"arcs":[[9193,9194,9195,-8178,9196,9197,-8218]]},{"type":"Polygon","id":29173,"arcs":[[-2614,-9181,-8187,-1621,9198]]},{"type":"Polygon","id":29117,"arcs":[[-442,-8181,9199,-8252,-8170,9200]]},{"type":"Polygon","id":29127,"arcs":[[-8284,9201,-2615,-9199,-1620,-9174]]},{"type":"Polygon","id":29189,"arcs":[[-5103,-448,-6842,-544,-439,-1483,-9189]]},{"type":"Polygon","id":29069,"arcs":[[-3546,9202,-8193,9203,-8264,-5705,-3507,-5712]]},{"type":"Polygon","id":29047,"arcs":[[9204,-1636,-3746,-8185,-8297]]},{"type":"Polygon","id":29091,"arcs":[[-8236,-1630,-9186,-8174,-4514,-473]]},{"type":"Polygon","id":29199,"arcs":[[-9194,-8217,9205,9206,-8165,9207]]},{"type":"Polygon","id":29177,"arcs":[[-8296,-8172,-8256,9208,-1631,-9205]]},{"type":"Polygon","id":29019,"arcs":[[9209,-8191,9210,9211,-8300,9212,-8215]]},{"type":"Polygon","id":29121,"arcs":[[9213,-9172,-1618,9214,9215,-8179,-9196]]},{"type":"MultiPolygon","id":53033,"arcs":[[[9216,9217,-1665,-6821,9218]],[[9219]]]},{"type":"Polygon","id":17063,"arcs":[[-580,-1711,-5134,-1702,-6022]]},{"type":"Polygon","id":17003,"arcs":[[-7192,-8223,9220,-9183,-526,-3972]]},{"type":"Polygon","id":17007,"arcs":[[-3152,-2608,-5100,-539,-3094]]},{"type":"Polygon","id":17017,"arcs":[[-551,-6019,-5109,-485,-3964,-6835]]},{"type":"Polygon","id":17025,"arcs":[[-3989,-2620,-5136,-6006,-4004,-2582]]},{"type":"Polygon","id":17073,"arcs":[[-1690,-3946,-6014,-5127,-560,-3974]]},{"type":"Polygon","id":17057,"arcs":[[-6010,-6836,-3967,-506,-3995,-5129,-1684]]},{"type":"Polygon","id":17075,"arcs":[[9221,-6000,-5115,-1714,9222]]},{"type":"Polygon","id":9007,"arcs":[[-8342,-6829,9223,9224]]},{"type":"Polygon","id":17001,"arcs":[[-3965,-483,-2616,-9202,-8283,-5095]]},{"type":"Polygon","id":17097,"arcs":[[-1894,9225,-6838,-2602]]},{"type":"Polygon","id":6101,"arcs":[[9226,-5173,-631,-5163,-4059,-594]]},{"type":"Polygon","id":6065,"arcs":[[-8358,-1345,-647,-6066,-583]]},{"type":"Polygon","id":6105,"arcs":[[-2758,-6077,-591,-5157,9227]]},{"type":"Polygon","id":6013,"arcs":[[-5161,-8354,9228,9229,9230]]},{"type":"Polygon","id":47051,"arcs":[[-8513,9231,9232,9233,9234,9235,-8675]]},{"type":"Polygon","id":18083,"arcs":[[-489,9236,9237,9238,9239,9240,-4011,9241]]},{"type":"Polygon","id":19127,"arcs":[[9242,9243,9244,9245,9246]]},{"type":"Polygon","id":47021,"arcs":[[9247,9248,9249,9250,9251],[9252]]},{"type":"Polygon","id":18175,"arcs":[[9253,9254,9255,9256,9257,9258,9259,9260]]},{"type":"Polygon","id":18081,"arcs":[[9261,9262,9263,9264,9265]]},{"type":"Polygon","id":47029,"arcs":[[9266,9267,9268,9269,9270,9271]]},{"type":"Polygon","id":47007,"arcs":[[9272,9273,9274,9275,9276]]},{"type":"Polygon","id":47155,"arcs":[[9277,9278,-9271,9279,9280,9281]]},{"type":"Polygon","id":47045,"arcs":[[-5707,-8263,9282,9283,9284,9285,9286]]},{"type":"Polygon","id":47061,"arcs":[[9287,9288,9289,9290,-9235]]},{"type":"Polygon","id":18075,"arcs":[[9291,9292,-6177,-7481,9293,9294,9295]]},{"type":"Polygon","id":47023,"arcs":[[9296,9297,9298,9299,9300]]},{"type":"Polygon","id":18039,"arcs":[[-5529,9301,9302,9303,9304,9305,-5432]]},{"type":"Polygon","id":47173,"arcs":[[9306,9307,9308,9309,9310]]},{"type":"Polygon","id":47067,"arcs":[[-6448,9311,9312,9313,9314]]},{"type":"Polygon","id":47131,"arcs":[[-7307,9315,9316,-9284,9317,-7141]]},{"type":"Polygon","id":47139,"arcs":[[9318,-6106,-2906,9319,9320,9321]]},{"type":"Polygon","id":19011,"arcs":[[9322,9323,9324,9325,9326]]},{"type":"Polygon","id":19041,"arcs":[[9327,9328,9329,9330]]},{"type":"Polygon","id":19165,"arcs":[[9331,9332,9333,9334,9335]]},{"type":"Polygon","id":19043,"arcs":[[9336,9337,-1909,-3123,9338,9339]]},{"type":"MultiPolygon","id":47167,"arcs":[[[9340,-4508,-5711]],[[-5709,9341,9342,9343,9344]]]},{"type":"Polygon","id":18045,"arcs":[[9345,9346,9347,9348,9349]]},{"type":"Polygon","id":19097,"arcs":[[9350,-499,-4002,9351,9352]]},{"type":"Polygon","id":19079,"arcs":[[9353,9354,9355,9356,9357]]},{"type":"Polygon","id":19173,"arcs":[[9358,9359,9360,9361,9362]]},{"type":"Polygon","id":19139,"arcs":[[9363,9364,9365,-3976,9366]]},{"type":"Polygon","id":47091,"arcs":[[9367,9368,9369,9370,9371,9372,9373]]},{"type":"Polygon","id":47107,"arcs":[[9374,9375,9376,9377,9378,-9321,9379,9380]]},{"type":"Polygon","id":47069,"arcs":[[9381,-9300,9382,-4294,-7495,-3226,9383,9384]]},{"type":"Polygon","id":47081,"arcs":[[9385,9386,9387,9388,9389,9390]]},{"type":"Polygon","id":19197,"arcs":[[9391,9392,-9355,9393,9394]]},{"type":"Polygon","id":19045,"arcs":[[9395,9396,-9352,-4001,-1692,-3973,9397]]},{"type":"Polygon","id":19095,"arcs":[[-9327,9398,9399,9400,9401]]},{"type":"Polygon","id":19021,"arcs":[[9402,-9329,9403,9404]]},{"type":"Polygon","id":19193,"arcs":[[-9045,9405,9406,9407,9408,-4945,-3919]]},{"type":"Polygon","id":19109,"arcs":[[9409,9410,9411,9412,9413,9414,9415]]},{"type":"Polygon","id":47111,"arcs":[[9416,9417,-7250,-7100,9418,9419,9420]]},{"type":"MultiPolygon","id":47105,"arcs":[[[9421]],[[9422]],[[9423,-9378]],[[-9376,9424,9425,9426,9427,9428]]]},{"type":"Polygon","id":19195,"arcs":[[9429,9430,9431,9432,9433]]},{"type":"Polygon","id":18137,"arcs":[[9434,9435,9436,9437,9438,9439,9440]]},{"type":"Polygon","id":47079,"arcs":[[-7276,-6923,9441,9442,9443,9444]]},{"type":"Polygon","id":19183,"arcs":[[9445,9446,9447,9448,-9400,9449]]},{"type":"Polygon","id":19161,"arcs":[[9450,-9405,9451,9452,9453]]},{"type":"Polygon","id":47071,"arcs":[[9454,-8586,-1056,-4291,9455,-9298,9456,9457]]},{"type":"Polygon","id":18131,"arcs":[[9458,9459,9460,9461,9462]]},{"type":"Polygon","id":47055,"arcs":[[-8589,9463,9464,9465,9466,-8519]]},{"type":"Polygon","id":47179,"arcs":[[9467,9468,9469,9470,9471]]},{"type":"Polygon","id":47187,"arcs":[[9472,9473,9474,-9386,9475,-9250,9476]]},{"type":"Polygon","id":47141,"arcs":[[9477,9478,9479,9480,9481,9482,9483]]},{"type":"Polygon","id":19091,"arcs":[[-9395,9484,9485,-9416]]},{"type":"Polygon","id":47159,"arcs":[[-9421,9486,-9479,9487,9488,9489]]},{"type":"Polygon","id":47115,"arcs":[[-8676,-9236,-9291,9490,9491,-2901]]},{"type":"Polygon","id":47099,"arcs":[[9492,9493,9494,-9464,-8588]]},{"type":"Polygon","id":18105,"arcs":[[9495,9496,9497,9498,9499,9500]]},{"type":"Polygon","id":47125,"arcs":[[9501,-8621,-7254,9502,-9252,9503,9504]]},{"type":"Polygon","id":47149,"arcs":[[9505,9506,9507,9508,9509,-9473,9510]]},{"type":"Polygon","id":47165,"arcs":[[9511,-8683,-7251,-9418,9512,9513,9514]]},{"type":"Polygon","id":47005,"arcs":[[9515,9516,9517,-9443,9518,9519,9520]]},{"type":"Polygon","id":18111,"arcs":[[9521,-9223,-1713,9522,9523]]},{"type":"Polygon","id":18067,"arcs":[[9524,9525,9526,9527,9528,9529]]},{"type":"Polygon","id":47129,"arcs":[[9530,9531,9532,9533,9534]]},{"type":"MultiPolygon","id":47185,"arcs":[[[9535,9536]],[[-9484,9537,9538,9539,9540]]]},{"type":"Polygon","id":19035,"arcs":[[-9403,9541,-9407,9542,9543]]},{"type":"Polygon","id":47121,"arcs":[[9544,9545,9546,9547,-9381]]},{"type":"Polygon","id":18051,"arcs":[[-6017,-4007,-9241,9548,9549,9550,9551]]},{"type":"Polygon","id":47059,"arcs":[[9552,9553,-9470,9554,9555,-9268]]},{"type":"Polygon","id":47147,"arcs":[[-9503,-7253,-7197,-8684,-9512,9556,-9248]]},{"type":"Polygon","id":18013,"arcs":[[9557,-9263,9558,9559,-9499]]},{"type":"Polygon","id":18047,"arcs":[[-7379,9560,-9436,9561,9562,9563,9564]]},{"type":"Polygon","id":18025,"arcs":[[9565,9566,9567,-9260,9568,-8610]]},{"type":"Polygon","id":47033,"arcs":[[9569,-9286,9570,9571,9572]]},{"type":"Polygon","id":47013,"arcs":[[-8688,-8367,9573,-9311,9574,9575]]},{"type":"Polygon","id":47039,"arcs":[[9576,-9458,9577,9578,-9517,9579]]},{"type":"Polygon","id":47101,"arcs":[[-9494,9580,9581,9582,9583,-9388,9584]]},{"type":"Polygon","id":47177,"arcs":[[-9540,9585,9586,-9289,9587,9588,9589]]},{"type":"Polygon","id":19189,"arcs":[[9590,9591,-9430,9592,-9414]]},{"type":"Polygon","id":47053,"arcs":[[-9571,-9285,-9317,9593,9594,9595]]},{"type":"Polygon","id":19119,"arcs":[[9596,-9004,9597,9598,9599,9600]]},{"type":"Polygon","id":18095,"arcs":[[9601,9602,9603,9604,9605,9606]]},{"type":"Polygon","id":18091,"arcs":[[9607,-5583,9608,9609,9610]]},{"type":"Polygon","id":19125,"arcs":[[9611,9612,9613,9614,9615,9616]]},{"type":"Polygon","id":19107,"arcs":[[9617,-9401,-9449,9618,9619,9620]]},{"type":"Polygon","id":19103,"arcs":[[-9364,9621,-9450,-9399,9622,9623]]},{"type":"Polygon","id":47089,"arcs":[[9624,-9272,-9279,9625,9626]]},{"type":"Polygon","id":18019,"arcs":[[9627,-7295,-7181,-7001,9628,-9257,9629]]},{"type":"Polygon","id":18063,"arcs":[[9630,9631,9632,9633,9634]]},{"type":"Polygon","id":18033,"arcs":[[9635,-7478,-6269,9636,9637]]},{"type":"Polygon","id":47171,"arcs":[[9638,9639,-9555,-9469,9640,-805]]},{"type":"Polygon","id":18123,"arcs":[[-8609,-8624,-7281,9641,9642,-9566]]},{"type":"Polygon","id":19135,"arcs":[[9643,9644,9645,9646,-9613]]},{"type":"Polygon","id":18145,"arcs":[[9647,9648,9649,9650,9651,-9266]]},{"type":"Polygon","id":47127,"arcs":[[9652,9653,-9233,9654]]},{"type":"Polygon","id":47047,"arcs":[[9655,-9344,9656,-9384,-3225,-4279]]},{"type":"Polygon","id":18099,"arcs":[[9657,-9305,9658,9659,9660]]},{"type":"Polygon","id":18179,"arcs":[[-9292,9661,9662,9663,9664,9665]]},{"type":"Polygon","id":47137,"arcs":[[-7129,9666,9667,9668,9669,-7093]]},{"type":"Polygon","id":47063,"arcs":[[-9553,-9267,-9625,9670,9671]]},{"type":"Polygon","id":18135,"arcs":[[-9294,-7480,9672,9673,9674]]},{"type":"Polygon","id":18011,"arcs":[[9675,9676,-9634,9677,9678]]},{"type":"Polygon","id":47093,"arcs":[[-9309,9679,-9626,-9278,9680,9681,9682,-9427,9683,9684]]},{"type":"Polygon","id":18041,"arcs":[[-9564,9685,9686,9687,9688]]},{"type":"Polygon","id":47003,"arcs":[[9689,9690,9691,9692,-9509,9693,-9653]]},{"type":"Polygon","id":47049,"arcs":[[9694,-9482,9695,-9668,9696,-9533]]},{"type":"Polygon","id":18153,"arcs":[[9697,9698,9699,-9237,-488,-3986]]},{"type":"Polygon","id":18101,"arcs":[[9700,9701,9702,9703,9704]]},{"type":"Polygon","id":18169,"arcs":[[9705,9706,9707,9708,9709,9710]]},{"type":"Polygon","id":47163,"arcs":[[9711,-7645,9712,-9368,9713,-9472,9714,-6446]]},{"type":"Polygon","id":18059,"arcs":[[9715,9716,-9649,9717,9718,-9606]]},{"type":"Polygon","id":47161,"arcs":[[-9519,-9442,-6922,-8644,-8622,-9502,9719]]},{"type":"Polygon","id":47143,"arcs":[[9720,9721,-9547,9722,-9275]]},{"type":"Polygon","id":18151,"arcs":[[-6277,-7479,-9636,9723,-5447]]},{"type":"Polygon","id":19141,"arcs":[[-9330,-9544,9724,9725]]},{"type":"Polygon","id":47001,"arcs":[[-9535,9726,-9575,-9310,-9685,9727]]},{"type":"Polygon","id":19061,"arcs":[[-9339,-3122,-494,-9351,9728,9729]]},{"type":"Polygon","id":19177,"arcs":[[-9207,9730,9731,9732,9733,-8166]]},{"type":"Polygon","id":19069,"arcs":[[-9393,9734,9735,9736]]},{"type":"Polygon","id":19077,"arcs":[[9737,9738,9739,9740,9741]]},{"type":"Polygon","id":19101,"arcs":[[9742,-9732,9743,-9619,-9448]]},{"type":"Polygon","id":19059,"arcs":[[9744,-9331,9745,9746]]},{"type":"Polygon","id":19067,"arcs":[[9747,9748,9749,9750]]},{"type":"Polygon","id":19007,"arcs":[[-9646,9751,-8220,9752,9753]]},{"type":"Polygon","id":33001,"arcs":[[9754,-8679,9755,9756]]},{"type":"Polygon","id":33015,"arcs":[[-7020,-8529,9757,-8682,9758,9759]]},{"type":"Polygon","id":19051,"arcs":[[-9731,-9206,-8221,-9752,9760]]},{"type":"Polygon","id":19039,"arcs":[[9761,9762,9763,9764,9765]]},{"type":"Polygon","id":19013,"arcs":[[9766,-9324,9767,9768,9769,9770]]},{"type":"Polygon","id":33013,"arcs":[[9771,9772,-9756,-8678,-9758,-8528]]},{"type":"Polygon","id":19163,"arcs":[[-9398,-3977,-9366,9773]]},{"type":"Polygon","id":19149,"arcs":[[-9543,-9406,-9044,9774]]},{"type":"Polygon","id":19131,"arcs":[[9775,-9433,9776,9777,-9749]]},{"type":"Polygon","id":19049,"arcs":[[9778,9779,9780,9781,-9740]]},{"type":"Polygon","id":19147,"arcs":[[-9328,9782,-9410,9783]]},{"type":"Polygon","id":19071,"arcs":[[9784,9785,-4983,-5027,9786]]},{"type":"Polygon","id":19159,"arcs":[[9787,9788,9789,9790,-9363]]},{"type":"Polygon","id":19023,"arcs":[[-9736,-9751,9791,-9770,9792]]},{"type":"Polygon","id":19137,"arcs":[[9793,9794,9795,9796,9797]]},{"type":"Polygon","id":19181,"arcs":[[9798,-9615,9799,-9763,9800]]},{"type":"Polygon","id":19053,"arcs":[[-9765,9801,-8281,9802,-9789]]},{"type":"Polygon","id":19187,"arcs":[[-9394,-9354,9803,9804,9805,9806,-9485]]},{"type":"Polygon","id":19025,"arcs":[[9807,-9806,9808,9809,-9452]]},{"type":"Polygon","id":19123,"arcs":[[9810,-9644,-9612,9811,9812,-9621]]},{"type":"Polygon","id":19015,"arcs":[[-9804,-9358,9813,9814,-9780,9815]]},{"type":"Polygon","id":19113,"arcs":[[-9326,9816,9817,9818,9819,-9623]]},{"type":"Polygon","id":19099,"arcs":[[-9812,-9617,9820,9821,-9243,9822]]},{"type":"Polygon","id":19145,"arcs":[[9823,-9785,-9798,-9361,9824]]},{"type":"Polygon","id":19093,"arcs":[[-9408,-9542,-9451,9825]]},{"type":"Polygon","id":19047,"arcs":[[9826,9827,-9826,-9454,9828,-9336]]},{"type":"Polygon","id":19003,"arcs":[[9829,9830,-9362,-9797,9831]]},{"type":"Polygon","id":19031,"arcs":[[-9624,-9820,9832,-9396,-9774,-9365]]},{"type":"Polygon","id":33009,"arcs":[[-384,-390,-317,-8595,9833,-9757,-9773,9834,-424,9835]]},{"type":"Polygon","id":19027,"arcs":[[9836,-9829,-9453,-9810,9837,-9738]]},{"type":"Polygon","id":19009,"arcs":[[-9837,-9742,9838,-9332]]},{"type":"Polygon","id":19055,"arcs":[[-9340,-9730,9839,-9818,9840]]},{"type":"Polygon","id":19083,"arcs":[[9841,-9245,9842,-9356,-9737]]},{"type":"Polygon","id":19167,"arcs":[[-9725,-9775,-9043,9843,-9601]]},{"type":"Polygon","id":33003,"arcs":[[-9755,-9834,-8594,9844,9845,-8680]]},{"type":"Polygon","id":33019,"arcs":[[-9772,-8527,-8712,-414,-425,-9835]]},{"type":"Polygon","id":19001,"arcs":[[-9830,9846,-9741,9847,9848]]},{"type":"Polygon","id":19175,"arcs":[[9849,-9766,-9788,-9831,-9849]]},{"type":"Polygon","id":19129,"arcs":[[-5026,-5010,9850,-9794,-9787]]},{"type":"Polygon","id":19185,"arcs":[[9851,-9754,9852,-8282,-9802]]},{"type":"Polygon","id":19133,"arcs":[[-3818,-4946,-9409,-9828,9853]]},{"type":"Polygon","id":19085,"arcs":[[-3819,-9854,-9827,-9335,9854,-5014]]},{"type":"Polygon","id":19117,"arcs":[[-9800,-9614,-9647,-9852,-9764]]},{"type":"Polygon","id":19063,"arcs":[[9855,9856,-9411,-9783,-9745]]},{"type":"Polygon","id":19153,"arcs":[[-9781,-9815,9857,-9821,-9616,-9799]]},{"type":"Polygon","id":19019,"arcs":[[-9325,-9767,9858,-9841,-9817]]},{"type":"Polygon","id":19037,"arcs":[[9859,9860,-9750,9861,9862]]},{"type":"Polygon","id":19057,"arcs":[[9863,9864,-564,9865,9866]]},{"type":"Polygon","id":19029,"arcs":[[-9796,9867,-9333,-9839,-9847,-9832]]},{"type":"Polygon","id":19005,"arcs":[[-2929,-1910,-9338,9868,9869]]},{"type":"Polygon","id":19121,"arcs":[[-9850,-9848,-9782,-9801,-9762]]},{"type":"Polygon","id":19033,"arcs":[[9870,-9434,-9776,-9748,-9735]]},{"type":"Polygon","id":19065,"arcs":[[-9337,-9859,9871,-9860,9872]]},{"type":"Polygon","id":19017,"arcs":[[-9792,-9861,-9872,-9771]]},{"type":"Polygon","id":19171,"arcs":[[9873,-9768,-9323,9874,-9247]]},{"type":"Polygon","id":19143,"arcs":[[-9600,9875,9876,-9746,-9726]]},{"type":"Polygon","id":19087,"arcs":[[-9733,-9743,-9447,9877,-9864,9878]]},{"type":"Polygon","id":19157,"arcs":[[-9402,-9618,-9813,-9823,-9875]]},{"type":"Polygon","id":19081,"arcs":[[-9593,-9871,-9392,-9415]]},{"type":"Polygon","id":19191,"arcs":[[9879,9880,-9869,-9873,-9863,9881]]},{"type":"Polygon","id":19105,"arcs":[[-9729,-9353,-9397,-9833,-9819,-9840]]},{"type":"Polygon","id":19151,"arcs":[[-9404,-9784,-9486,-9807,-9808]]},{"type":"Polygon","id":19073,"arcs":[[-9809,-9805,-9816,-9779,-9739,-9838]]},{"type":"Polygon","id":19115,"arcs":[[-9622,-9367,-3975,-565,-9865,-9878,-9446]]},{"type":"Polygon","id":19179,"arcs":[[-9761,-9645,-9811,-9620,-9744]]},{"type":"Polygon","id":19111,"arcs":[[-9867,9882,-5093,-8167,-9734,-9879]]},{"type":"Polygon","id":19169,"arcs":[[-9814,-9357,-9843,-9244,-9822,-9858]]},{"type":"Polygon","id":19075,"arcs":[[-9793,-9769,-9874,-9246,-9842]]},{"type":"Polygon","id":19155,"arcs":[[-5009,-5025,-5012,-9855,-9334,-9868,-9795,-9851]]},{"type":"Polygon","id":19089,"arcs":[[-9882,-9862,-9778,9883,9884]]},{"type":"Polygon","id":28163,"arcs":[[-1049,-5629,-8905,-2030,-6374,-3163,-6398]]},{"type":"Polygon","id":28015,"arcs":[[-4287,-7498,-4275,-5628,-6361]]},{"type":"Polygon","id":28037,"arcs":[[-7506,-4310,-7501,-7525,-4312]]},{"type":"Polygon","id":28041,"arcs":[[-8705,-8654,-4307,-7510,-6370]]},{"type":"Polygon","id":28019,"arcs":[[-7497,-8907,-5593,-8906,-4277]]},{"type":"Polygon","id":28035,"arcs":[[-6387,-8904,-7508,-8902,-5622,-6365]]},{"type":"Polygon","id":28151,"arcs":[[-6396,-1051,-6397,-3161,-3526,-4247]]},{"type":"Polygon","id":22049,"arcs":[[-6409,-1071,-1110,-1105,-8917]]},{"type":"Polygon","id":22003,"arcs":[[9885,-1100,9886,-6404,-8912]]},{"type":"Polygon","id":22043,"arcs":[[-4436,-1103,-6417,-1108]]},{"type":"Polygon","id":22041,"arcs":[[-80,-8919,-8908,-1112,-5654]]},{"type":"Polygon","id":22005,"arcs":[[-4444,-4437,-3234,-1076,-4430,9887]]},{"type":"Polygon","id":22039,"arcs":[[-1099,-6399,-5655,-1095,-6405,-9887]]},{"type":"Polygon","id":22115,"arcs":[[-9886,-8913,-137,-2035,-6418,-1101]]},{"type":"Polygon","id":22071,"arcs":[[-5631,-4427,-4413,9888,9889,9890,-4411,9891,9892,-4409,9893,-4407,9894,9895,-4405,9896,9897,-4403,9898,-4401,9899,9900,-4399,9901,-4397,9902,-4395,9903,-4393,9904,-4391,9905,-4389,9906,9907,-4387,9908,-4385,9909,-4383,9910,-4381,9911,-4379,9912,9913,-4377,9914,9915,-4375,9916,-4373,9917,9918,-4371,9919,-4369,9920,-4367,9921,-4365,9922,-4363,9923,-4361,9924,9925,-4359,9926,-4357,9927,-4355,9928,9929,-4353,9930,-4351,9931,-4348,9932,-4346,9933,-4344,9934,9935,-4342,9936,9937,-4340,9938,-4338,9939,-4336,9940,9941,-4334,9942,9943,9944,-4332,9945,9946,-4330,9947,-4328,9948,-4326,9949,-4324,9950,9951,-4322,9952,-4321,-4421]]},{"type":"Polygon","id":22121,"arcs":[[-6412,-8911,-8916,9953,-4433]]},{"type":"Polygon","id":51770,"arcs":[[-3280,-7767]]},{"type":"Polygon","id":51015,"arcs":[[9954,9955,-5913,-8939,-7663,-7773,9956],[-1134],[-1135]]},{"type":"Polygon","id":51081,"arcs":[[-8924,-7586,-1138,-7688,9957],[-6450]]},{"type":"Polygon","id":51089,"arcs":[[-6426,9958,9959,-7570,-7776],[-2056]]},{"type":"Polygon","id":51740,"arcs":[[9960,9961,9962,-8922,9963]]},{"type":"Polygon","id":51093,"arcs":[[9964,9965,-7690,-7565,-7689,-7576]]},{"type":"Polygon","id":51515,"arcs":[[-8970]]},{"type":"Polygon","id":51049,"arcs":[[-7703,-7618,-8941,9966,-7613,9967]]},{"type":"Polygon","id":51097,"arcs":[[-8934,-7756,-8936,-2051,-8959,-7696,-6459]]},{"type":"Polygon","id":51061,"arcs":[[-3297,-8929,9968,-8966,-7769,-7708,-7685]]},{"type":"Polygon","id":51036,"arcs":[[-7721,9969,-7698,-8958,-7573,-7653]]},{"type":"Polygon","id":51197,"arcs":[[-7760,9970,-8943,9971,-7715]]},{"type":"Polygon","id":51103,"arcs":[[-7750,-7638,9972]]},{"type":"Polygon","id":51177,"arcs":[[9973,-8930,-3295,-7771,-3293,-8933,9974,-7706]]},{"type":"Polygon","id":51063,"arcs":[[-7713,9975,-7762,-7777,-7568,-7761]]},{"type":"Polygon","id":51199,"arcs":[[-8956,9976,-8960,-2055,9977,-8952,-7611,-8949]]},{"type":"Polygon","id":51840,"arcs":[[-7594]]},{"type":"Polygon","id":48295,"arcs":[[-5790,-5820,-7782,-1227,9978]]},{"type":"Polygon","id":48319,"arcs":[[9979,-6468,-7855,9980,-5660,-3313]]},{"type":"Polygon","id":48213,"arcs":[[-204,9981,9982,-2228,-7876,-3349,-6463,-3331,3329,-3329]]},{"type":"Polygon","id":48195,"arcs":[[-4656,9983,-1225,-4487,9984]]},{"type":"MultiPolygon","id":48071,"arcs":[[[-4449,9985,9986,-7808,9987,-7813,9988,-7817,9989,-7818,9990,-7822,9991,-7824,9992,-7827,9993,9994,-7831,9995,-7833,9996,-7836,9997,-7838,9998,-7840,9999,-7842,10000,-7845,10001,-7847,10002,10003,-1250]],[[-7804,10004]],[[-7802,10005]],[[-10007,-10008,7797]],[[-7796,-1277,10008]],[[-10010,-10011,1273]],[[-10012,-10013,-10014,1271]],[[-1270,10014,10015]],[[-1268,10016,10017]],[[-1266,10018]],[[-1264,10019]],[[-1261,10020]],[[-1258,10021]],[[-1255,10022]],[[-10024,-10025,1252]]]},{"type":"Polygon","id":48217,"arcs":[[-3351,-7875,-4484,-7850,10025,-1153]]},{"type":"Polygon","id":48375,"arcs":[[-1193,-6464,-3420,10026]]},{"type":"Polygon","id":48249,"arcs":[[10027,-6498,-2142,-3397,-3414,-183]]},{"type":"Polygon","id":48119,"arcs":[[-1287,-117,-7849,-130,10028,-245]]},{"type":"Polygon","id":48433,"arcs":[[-1200,-6522,-3384,-4476,-7857]]},{"type":"Polygon","id":48135,"arcs":[[-7862,-4467,-7877,-6515,-2233,10029]]},{"type":"MultiPolygon","id":48061,"arcs":[[[10030,-6460,-283]],[[-286,10031]],[[10032]]]},{"type":"Polygon","id":48323,"arcs":[[-143,-7868,-4480,-1161,10033]]},{"type":"Polygon","id":48085,"arcs":[[10034,-128,10035,-93,10036,-3344]]},{"type":"Polygon","id":48023,"arcs":[[10037,-3334,10038,-105,10039]]},{"type":"Polygon","id":48365,"arcs":[[-7872,10040,-7561,-1304,-5669]]},{"type":"Polygon","id":48187,"arcs":[[-278,10041,-7791,10042,-4458,10043]]},{"type":"Polygon","id":34003,"arcs":[[-4211,-4193,-5491,-3132,-295,-7880,-1327]]},{"type":"Polygon","id":34009,"arcs":[[-6527,10044,-306]]},{"type":"Polygon","id":34037,"arcs":[[-6532,-826,-1991,-5490,-1324,10045]]},{"type":"Polygon","id":46103,"arcs":[[-9127,10046,-9082,10047,-9008,-341,10048]]},{"type":"Polygon","id":46137,"arcs":[[10049,-9125,10050,10051,10052]]},{"type":"Polygon","id":46091,"arcs":[[10053,-3626,-9095,10054]]},{"type":"Polygon","id":46095,"arcs":[[10055,-9079,10056,-9060,10057]]},{"type":"Polygon","id":46045,"arcs":[[10058,-9015,10059,10060,-8991]]},{"type":"Polygon","id":46021,"arcs":[[-2256,-3559,10061,-9013,10062]]},{"type":"Polygon","id":46061,"arcs":[[-9105,-9109,10063,10064,-9073]]},{"type":"Polygon","id":46029,"arcs":[[-9055,10065,10066,-9030,10067]]},{"type":"Polygon","id":46023,"arcs":[[-9066,10068,10069,-9094,10070,10071,-5981,-3869,-9115]]},{"type":"Polygon","id":46105,"arcs":[[-3571,10072,-10051,-9124,10073,-9139]]},{"type":"Polygon","id":46075,"arcs":[[-9078,10074,-9143,-9061,-10057]]},{"type":"Polygon","id":46121,"arcs":[[10075,-5033,-5032,-5031,5030,-9101,-10056]]},{"type":"Polygon","id":46055,"arcs":[[-9144,-10075,-9083,-10047,-9126,-10050]]},{"type":"Polygon","id":46069,"arcs":[[10076,-8989,10077,-9025,-9064,10078,-9084]]},{"type":"Polygon","id":46081,"arcs":[[10079,-9122,-10049,-340,-398]]},{"type":"Polygon","id":46067,"arcs":[[10080,-10071,-9093,-9074,-10065,10081,10082,-9072]]},{"type":"Polygon","id":46015,"arcs":[[-9065,-9023,-8995,10083,-10069]]},{"type":"Polygon","id":4011,"arcs":[[10084,-2433,-1403,-1437,10085,10086]]},{"type":"Polygon","id":46107,"arcs":[[-10059,-8990,-10077,-9088,10087,-9016]]},{"type":"Polygon","id":46065,"arcs":[[-10079,-9063,-9142,-9085]]},{"type":"Polygon","id":46019,"arcs":[[-10074,-9123,-10080,-397,-7982,-9140]]},{"type":"Polygon","id":4023,"arcs":[[10088,10089,-1332]]},{"type":"Polygon","id":4005,"arcs":[[-6049,10090,-1340,-2358,-2385,10091]]},{"type":"Polygon","id":46027,"arcs":[[10092,10093,-9041,-5052,-5065,-9070]]},{"type":"Polygon","id":46009,"arcs":[[-10081,-9071,-5982,-10072]]},{"type":"Polygon","id":46089,"arcs":[[-3589,10094,-10060,-9014,-10062,-3563]]},{"type":"Polygon","id":46003,"arcs":[[-10070,-10084,-9000,-9106,-9076,-9092]]},{"type":"Polygon","id":46005,"arcs":[[-8998,10095,-9038,-9058,10096,-9102]]},{"type":"Polygon","id":46013,"arcs":[[-3592,-3627,-10054,10097,-9040,-8992,-10061,-10095]]},{"type":"Polygon","id":46057,"arcs":[[-9056,-10068,-9035,-9018,10098]]},{"type":"Polygon","id":46051,"arcs":[[-9031,-10067,10099,-9098,10100,10101]]},{"type":"Polygon","id":46101,"arcs":[[-9021,10102,-9002,-9137]]},{"type":"Polygon","id":46031,"arcs":[[10103,-10052,-10073,-3570,-3616,-2257,-10063,-9012]]},{"type":"Polygon","id":46123,"arcs":[[-9114,-5057,5032,-10076,-10058,-9068]]},{"type":"Polygon","id":46059,"arcs":[[-10096,-8997,-9026,-10078,-8994,-9039]]},{"type":"Polygon","id":46087,"arcs":[[10104,-10082,-10064,-9108,-9138,-9007]]},{"type":"Polygon","id":46113,"arcs":[[-5042,-9121,-9009,-10048,-9081,-9100,-5029,-3929]]},{"type":"Polygon","id":46083,"arcs":[[-9597,-9844,-9042,-10094,10105,-9005]]},{"type":"Polygon","id":46125,"arcs":[[-9069,-10083,-10105,-9006,-10106,-10093]]},{"type":"Polygon","id":46077,"arcs":[[-9057,-10099,-9017,-9136,-9110,-9103,-10097]]},{"type":"Polygon","id":46037,"arcs":[[-9099,-10100,-10066,-9054,-9036,-10098,-10055]]},{"type":"Polygon","id":46041,"arcs":[[-10104,-9011,-10088,-9087,-9141,-10053]]},{"type":"Polygon","id":8041,"arcs":[[-6717,-6745,-8139,-5881,-8152,-8133]]},{"type":"MultiPolygon","id":8005,"arcs":[[[-9153]],[[-9154]],[[-9155]],[[-9156]],[[-9157]],[[-9158]],[[-9159]],[[-9160]],[[-9161],[-9149]],[[-6758,-9152,-6753,-9151,-6755,-9150,-6715,-9148,-6746,-6719,-8135]]]},{"type":"Polygon","id":8055,"arcs":[[-5870,-6729,-6775,-8131,-6694,-8140]]},{"type":"Polygon","id":29009,"arcs":[[-5720,-8238,10106,-8274,10107,-3536]]},{"type":"Polygon","id":29059,"arcs":[[-8288,-9177,10108,10109,-8205,10110]]},{"type":"Polygon","id":29223,"arcs":[[-454,10111,-8291,-8195,10112,-9168,-8230]]},{"type":"Polygon","id":29195,"arcs":[[10113,-8212,10114,10115,10116,-8254]]},{"type":"Polygon","id":29081,"arcs":[[-8247,10117,-9790,-9803,-8280,-444,10118]]},{"type":"Polygon","id":29161,"arcs":[[-8242,10119,-8268,10120,-1627,-9192]]},{"type":"Polygon","id":29073,"arcs":[[10121,10122,-8208,-1486,-8265,-10120,-8241]]},{"type":"Polygon","id":29065,"arcs":[[-10121,-8267,-449,-8229,-9187,-1628]]},{"type":"Polygon","id":29186,"arcs":[[-435,-543,-3959,10123,-8226]]},{"type":"Polygon","id":29139,"arcs":[[-9180,10124,-8209,-10123,10125,10126,-8189]]},{"type":"Polygon","id":29107,"arcs":[[-1632,-9209,-8255,-10117,10127,-8240]]},{"type":"Polygon","id":29151,"arcs":[[10128,10129,10130,-10126,-10122,-8245]]},{"type":"Polygon","id":29217,"arcs":[[-5944,-8211,-459,-8258,-9167,-4785,-3665]]},{"type":"Polygon","id":29181,"arcs":[[-3444,-8177,-9170,10131,-3542]]},{"type":"Polygon","id":29213,"arcs":[[-3538,10132,10133,-8233,-477,-4558,-5717]]},{"type":"Polygon","id":53071,"arcs":[[10134,-2512,-8329,-6817]]},{"type":"Polygon","id":53023,"arcs":[[-8335,-6812,-2489,10135]]},{"type":"Polygon","id":53001,"arcs":[[-1679,-8331,-6814,10136]]},{"type":"Polygon","id":9009,"arcs":[[-8339,-8343,-9225,10137,-6826]]},{"type":"Polygon","id":17089,"arcs":[[-2606,2604,-2604,-6837,-1707,-6023,-5101]]},{"type":"Polygon","id":17059,"arcs":[[-504,-6016,10138,-7299,-2598,-5123]]},{"type":"Polygon","id":17071,"arcs":[[-563,-3993,-509,-5094,-9883,-9866]]},{"type":"Polygon","id":17029,"arcs":[[-3996,-518,-5121,-3983,-575,-6011]]},{"type":"MultiPolygon","id":6111,"arcs":[[[-599,-2916,10139,10140]],[[10141]]]},{"type":"Polygon","id":49029,"arcs":[[-6027,-6845,-6052,-5139,-6062]]},{"type":"Polygon","id":6109,"arcs":[[-6852,-613,-5168,-6846,-6082,-641]]},{"type":"Polygon","id":6007,"arcs":[[-593,-6865,-588,-6071,-5174,-9227]]},{"type":"Polygon","id":49037,"arcs":[[-6045,-9147,-6769,-8137,-6739,10142,-1336,-10091,-6048,-6843,-6059]]},{"type":"Polygon","id":49045,"arcs":[[-6061,-5143,-6065,-5151,-2411,-4780,-622]]},{"type":"Polygon","id":6091,"arcs":[[-6867,-2374,-8353,-5176,-6070]]},{"type":"Polygon","id":6033,"arcs":[[-4058,-8344,-2762,-5159,-6866,-596]]},{"type":"Polygon","id":6049,"arcs":[[-2575,-2376,-6868,-6075,-2756,-3883]]},{"type":"Polygon","id":6017,"arcs":[[-2388,-6851,-634,-5164,-629]]},{"type":"MultiPolygon","id":6037,"arcs":[[[-10140,-2915,-8359,-586,10143]],[[10144]],[[10145]]]},{"type":"Polygon","id":6001,"arcs":[[-9229,-8355,-6080,-2770,-8350,10146,10147,10148]]},{"type":"Polygon","id":47035,"arcs":[[-9532,10149,-9721,-9274,10150,-9537,10151,-9538,-9483,-9695]]},{"type":"Polygon","id":27061,"arcs":[[10152,10153,10154,10155,10156]]},{"type":"Polygon","id":47025,"arcs":[[-9574,-8366,-6983,10157,-9314,10158,-9307]]},{"type":"Polygon","id":47153,"arcs":[[-9290,-9587,10159,-9277,10160,-9491]]},{"type":"Polygon","id":18141,"arcs":[[-5582,-5433,-9306,-9658,10161,-9609]]},{"type":"Polygon","id":18079,"arcs":[[-9441,10162,10163,10164,10165,10166]]},{"type":"MultiPolygon","id":47043,"arcs":[[[-9253]],[[10167,10168,-9504,-9251,-9476,-9391]]]},{"type":"Polygon","id":18113,"arcs":[[-9638,10169,10170,10171,-9303,10172]]},{"type":"Polygon","id":18177,"arcs":[[-7482,-6338,10173,-9688,10174,-9673]]},{"type":"Polygon","id":18121,"arcs":[[-9349,10175,10176,10177,10178,10179]]},{"type":"Polygon","id":47175,"arcs":[[-9539,-10152,-9536,-10151,-9273,-10160,-9586]]},{"type":"Polygon","id":27077,"arcs":[[10180,10181,10182,10183]]},{"type":"Polygon","id":27025,"arcs":[[10184,10185,-3100,-1890,10186,10187]]},{"type":"Polygon","id":27113,"arcs":[[10188,10189,10190,10191,10192,10193]]},{"type":"Polygon","id":27085,"arcs":[[10194,10195,10196,10197,10198]]},{"type":"Polygon","id":27033,"arcs":[[10199,10200,10201,10202,10203,10204]]},{"type":"Polygon","id":27045,"arcs":[[10205,10206,10207,-9880,-9885,10208]]},{"type":"Polygon","id":47015,"arcs":[[-9589,10209,-9507,10210,10211]]},{"type":"Polygon","id":27005,"arcs":[[10212,10213,10214,10215,10216,10217,10218]]},{"type":"Polygon","id":47087,"arcs":[[10219,-9480,-9487,-9420,10220]]},{"type":"Polygon","id":18073,"arcs":[[10221,-9524,10222,10223,10224,-9459,10225]]},{"type":"Polygon","id":27123,"arcs":[[10226,10227,10228,10229]]},{"type":"Polygon","id":18027,"arcs":[[10230,-9239,10231,-9704,10232]]},{"type":"Polygon","id":27133,"arcs":[[10233,10234,-9598,-9003,10235]]},{"type":"Polygon","id":18119,"arcs":[[10236,10237,-9497,10238,10239]]},{"type":"Polygon","id":47009,"arcs":[[-9682,-9681,-9282,10240,10241,10242,-9428,-9683]]},{"type":"Polygon","id":27091,"arcs":[[10243,10244,-9412,-9857,10245,10246]]},{"type":"Polygon","id":27167,"arcs":[[10247,10248,10249,10250,-3619]]},{"type":"Polygon","id":27151,"arcs":[[10251,10252,10253,10254,10255,10256]]},{"type":"Polygon","id":18053,"arcs":[[10257,-9710,10258,-9663,10259,10260,-9603,10261,-9530]]},{"type":"Polygon","id":47183,"arcs":[[-9316,-7306,-7277,-9445,10262,-9594]]},{"type":"Polygon","id":18087,"arcs":[[-9302,-5528,-5444,-9724,-10173]]},{"type":"Polygon","id":18021,"arcs":[[10263,-9699,10264,-10178,10265,-10240]]},{"type":"Polygon","id":18023,"arcs":[[10266,-9526,10267,10268,-9679,10269,10270]]},{"type":"Polygon","id":18107,"arcs":[[-10176,-9348,10271,-10270,-9678,-9633,10272]]},{"type":"Polygon","id":18017,"arcs":[[10273,-9462,10274,10275,-9528,10276]]},{"type":"Polygon","id":27139,"arcs":[[10277,10278,10279,10280,10281,10282]]},{"type":"Polygon","id":47011,"arcs":[[-9545,-9380,-9320,-2905,-7323,10283]]},{"type":"Polygon","id":18171,"arcs":[[10284,10285,-9346,10286,-6002]]},{"type":"Polygon","id":47027,"arcs":[[-9419,-7105,-7234,-7094,-9670,10287,-10221]]},{"type":"Polygon","id":47145,"arcs":[[-9728,-9684,-9426,-9425,-9375,-9548,-9722,-10150,-9531],[-9422]]},{"type":"Polygon","id":47019,"arcs":[[10288,-806,-9641,-9468,-9714,-9374]]},{"type":"Polygon","id":18049,"arcs":[[-9660,10289,-9706,10290,-10275,-9461]]},{"type":"Polygon","id":47041,"arcs":[[-9541,-9590,-10212,10291,-9488,-9478]]},{"type":"Polygon","id":18165,"arcs":[[10292,-5119,-6003,-10287,-9350,-10180]]},{"type":"MultiPolygon","id":47037,"arcs":[[[10293]],[[-9511,-9477,-9249,-9557,-9515,10294]]]},{"type":"Polygon","id":47017,"arcs":[[-9518,-9579,10295,10296,-9595,-10263,-9444]]},{"type":"Polygon","id":18029,"arcs":[[-9561,-6243,-7040,10297,-9437]]},{"type":"Polygon","id":18147,"arcs":[[10298,-9642,-7280,-8744,10299]]},{"type":"Polygon","id":18015,"arcs":[[-9527,-10267,10300,10301,-10277]]},{"type":"Polygon","id":18069,"arcs":[[10302,-9664,-10259,-9709,10303]]},{"type":"Polygon","id":47083,"arcs":[[-9520,-9720,-9505,-10169,10304]]},{"type":"Polygon","id":47135,"arcs":[[-9516,10305,-9389,-9584,10306,-9580]]},{"type":"Polygon","id":18103,"arcs":[[-10291,-9711,-10258,-9529,-10276]]},{"type":"Polygon","id":47169,"arcs":[[-9513,-9417,-9490,10307]]},{"type":"Polygon","id":18065,"arcs":[[-9674,-10175,-9687,10308,-9716,-9605,10309]]},{"type":"Polygon","id":47095,"arcs":[[10310,-7139,10311,-7142,-9318,-9283,-8262]]},{"type":"Polygon","id":18057,"arcs":[[-10269,10312,-9607,-9719,10313,-9676]]},{"type":"Polygon","id":18109,"arcs":[[-10238,10314,-9631,10315,-9264,-9558,-9498]]},{"type":"Polygon","id":27035,"arcs":[[10316,10317,10318,10319]]},{"type":"Polygon","id":47031,"arcs":[[-9654,-9694,-9508,-10210,-9588,-9288,-9234]]},{"type":"Polygon","id":27039,"arcs":[[10320,10321,10322,10323,10324]]},{"type":"Polygon","id":47073,"arcs":[[-6447,-9715,-9471,-9554,-9672,10325,-9312]]},{"type":"Polygon","id":18077,"arcs":[[-9440,10326,-8665,-7296,-9628,10327,-10163]]},{"type":"Polygon","id":18163,"arcs":[[-9551,10328,-7052,10329]]},{"type":"Polygon","id":47119,"arcs":[[-9495,-9585,-9387,-9475,10330,-9465]]},{"type":"Polygon","id":18037,"arcs":[[-10233,-9703,10331,-9567,-9643,-10299,10332,10333]]},{"type":"Polygon","id":18161,"arcs":[[-10174,-6337,-7380,-9565,-9689]]},{"type":"Polygon","id":47151,"arcs":[[-9576,-9727,-9534,-9697,-9667,-7128,-8689]]},{"type":"Polygon","id":47117,"arcs":[[-9474,-9510,-9693,-9692,-9691,10334,-9466,-10331]]},{"type":"Polygon","id":47103,"arcs":[[-10335,-9690,-9655,-9232,-8512,-8520,-9467]]},{"type":"Polygon","id":18157,"arcs":[[-9347,-10286,10335,10336,-10301,-10271,-10272]]},{"type":"Polygon","id":47077,"arcs":[[10337,-10296,-9578,-9457,-9297]]},{"type":"Polygon","id":18031,"arcs":[[-9651,10338,-9562,-9435,-10167,10339]]},{"type":"Polygon","id":27041,"arcs":[[10340,10341,10342,10343,10344]]},{"type":"Polygon","id":18155,"arcs":[[-7043,-7331,-8666,-10327,-9439,10345]]},{"type":"Polygon","id":27009,"arcs":[[10346,10347,10348,10349]]},{"type":"Polygon","id":18181,"arcs":[[10350,10351,-10226,-9463,-10274,-10302,-10337,10352]]},{"type":"Polygon","id":18043,"arcs":[[-9258,-9629,-7000,10353]]},{"type":"Polygon","id":47133,"arcs":[[-10220,-10288,-9669,-9696,-9481]]},{"type":"Polygon","id":18093,"arcs":[[10354,-9254,10355,-9701,10356,-9501]]},{"type":"Polygon","id":18159,"arcs":[[-10313,-10268,-9525,-10262,-9602]]},{"type":"Polygon","id":18183,"arcs":[[10357,-10304,-9708,10358,-10171]]},{"type":"Polygon","id":47075,"arcs":[[-9573,10359,-9385,-9657,-9343,10360]]},{"type":"Polygon","id":18089,"arcs":[[-10223,-9523,-1712,-578,-6840,10361,10362]]},{"type":"Polygon","id":18001,"arcs":[[-6178,-9293,-9666,10363,-6247]]},{"type":"Polygon","id":18035,"arcs":[[-9295,-9675,-10310,-9604,-10261,10364]]},{"type":"Polygon","id":18085,"arcs":[[-10359,-9707,-10290,-9659,-9304,-10172]]},{"type":"Polygon","id":47085,"arcs":[[-10168,-9390,-10306,-9521,-10305]]},{"type":"Polygon","id":18129,"arcs":[[-7051,-7297,-10139,-6018,-9552,-10330]]},{"type":"Polygon","id":18117,"arcs":[[-9261,-9568,-10332,-9702,-10356]]},{"type":"Polygon","id":18061,"arcs":[[-9569,-9259,-10354,-7007,-7229,-8611]]},{"type":"Polygon","id":18143,"arcs":[[-9256,10365,-10164,-10328,-9630]]},{"type":"Polygon","id":18173,"arcs":[[10366,-10333,-10300,-8743,-7046,-10329,-9550]]},{"type":"Polygon","id":47057,"arcs":[[-9627,-9680,-9308,-10159,-9313,-10326,-9671]]},{"type":"Polygon","id":47181,"arcs":[[-9577,-10307,-9583,9581,-9581,-9493,-8587,-9455]]},{"type":"Polygon","id":18003,"arcs":[[-6268,-6301,-6248,-10364,-9665,-10303,-10358,-10170,-9637]]},{"type":"Polygon","id":47097,"arcs":[[-9570,-10361,-9342,-5708,-9287]]},{"type":"Polygon","id":18005,"arcs":[[10367,-9559,-9262,-9652,-10340,-10166]]},{"type":"Polygon","id":18167,"arcs":[[-3985,-5120,-10293,-10179,-10265,-9698]]},{"type":"Polygon","id":47065,"arcs":[[-4087,-2902,-9492,-10161,-9276,-9723,-9546,-10284,-7322,-6925]]},{"type":"Polygon","id":18125,"arcs":[[-10367,-9549,-9240,-10231,-10334]]},{"type":"Polygon","id":18127,"arcs":[[10368,-9611,-10224,-10363]]},{"type":"Polygon","id":18007,"arcs":[[-10352,10350,-10353,-10336,-10285,-6001,-9222,-9522,-10222]]},{"type":"Polygon","id":18115,"arcs":[[-9438,-10298,-7039,-10346]]},{"type":"Polygon","id":47123,"arcs":[[-9424,-9377,-9429,-10243,10369,10370,-9322,-9379],[-9423]]},{"type":"Polygon","id":18071,"arcs":[[-10368,-10165,-10366,-9255,-10355,-9500,-9560]]},{"type":"Polygon","id":18097,"arcs":[[-9677,-10314,-9718,-9648,-9265,-10316,-9635]]},{"type":"Polygon","id":18055,"arcs":[[-9496,-10357,-9705,-10232,-9238,-9700,-10264,-10239]]},{"type":"Polygon","id":47189,"arcs":[[-10295,-9514,-10308,-9489,-10292,-10211,-9506],[-10294]]},{"type":"Polygon","id":18149,"arcs":[[-10162,-9661,-9460,-10225,-9610]]},{"type":"Polygon","id":47109,"arcs":[[-9456,-4295,-9383,-9299]]},{"type":"Polygon","id":47157,"arcs":[[-4509,-9341,-5710,-9345,-9656,-4278,-8900]]},{"type":"Polygon","id":18139,"arcs":[[-9563,-10339,-9650,-9717,-10309,-9686]]},{"type":"Polygon","id":18133,"arcs":[[-10273,-9632,-10315,-10237,-10266,-10177]]},{"type":"Polygon","id":18009,"arcs":[[-9296,-10365,-10260,-9662]]},{"type":"Polygon","id":47113,"arcs":[[-10297,-10338,-9301,-9382,-10360,-9572,-9596]]},{"type":"MultiPolygon","id":28047,"arcs":[[[-4268,-8903,-5598,10371]],[[10372]],[[10373]]]},{"type":"Polygon","id":28065,"arcs":[[-8896,-6388,-6363,-6379,-4258]]},{"type":"Polygon","id":22033,"arcs":[[-8915,-8920,-4445,-9888,-4429,-9954]]},{"type":"Polygon","id":22023,"arcs":[[-6406,-5646,10374,10375,-2210,-1091]]},{"type":"Polygon","id":22035,"arcs":[[-3527,-3165,-6373,-77,-5653,-4419]]},{"type":"Polygon","id":22017,"arcs":[[-7871,-3369,10376,-4532,-7559,-2037,-7560,-10041]]},{"type":"Polygon","id":51091,"arcs":[[-4707,-5914,-9956,10377]]},{"type":"Polygon","id":51029,"arcs":[[-9968,-7612,-6439,-7774,-7668,-7704]]},{"type":"Polygon","id":51113,"arcs":[[10378,-8932,10379,-6453,-7656]]},{"type":"Polygon","id":51085,"arcs":[[-7695,10380,10381,10382,-7621,-7707,-9975,-8935,-6457]]},{"type":"Polygon","id":51105,"arcs":[[-7781,-6449,-9315,-10158,-6982,-7087]]},{"type":"Polygon","id":51009,"arcs":[[-8969,10383,-7775,-6437,-7670,-6431]]},{"type":"Polygon","id":51135,"arcs":[[-7588,-8927,-7699,-7615,10384]]},{"type":"Polygon","id":51077,"arcs":[[10385,-9370,10386,-8944,-9971,-7759,10387,-7757,-783,10388]]},{"type":"Polygon","id":51087,"arcs":[[8945,-8948,-7716,-7622,-10383,10381,-10381,-7694,-9970,-7720,-7719,-7718,-8947]]},{"type":"Polygon","id":51007,"arcs":[[-7726,-7589,-10385,-7614,-9967,-8940]]},{"type":"Polygon","id":51590,"arcs":[[10389,-6423]]},{"type":"Polygon","id":51157,"arcs":[[-9969,-8928,-10379,-7655,-8965]]},{"type":"Polygon","id":51550,"arcs":[[10390,10391,-9964,-8921,-3284,10392]]},{"type":"Polygon","id":51670,"arcs":[[7650,7721,7647,7722]]},{"type":"Polygon","id":51800,"arcs":[[10393,10394,-9961,-10392,10395,10396,-7691,-9966]]},{"type":"MultiPolygon","id":51121,"arcs":[[[-1148]],[[-7603,-8967,-7763,-9976,-7712,-1147,-7711]]]},{"type":"Polygon","id":48021,"arcs":[[-8977,-4454,-3321,10397,-3306]]},{"type":"Polygon","id":48015,"arcs":[[-3317,-8973,-6511,10398,-5665,-2213]]},{"type":"Polygon","id":48003,"arcs":[[-1366,-255,-6524,-7861,-10030,-2232]]},{"type":"Polygon","id":48001,"arcs":[[-2229,-9983,10399,-6506,-177]]},{"type":"Polygon","id":48031,"arcs":[[-5659,-2126,-3308,-275,10400,-259,-3310]]},{"type":"Polygon","id":51021,"arcs":[[-4760,-7605,-7710,-9972,-8942,-1128]]},{"type":"Polygon","id":51163,"arcs":[[-6432,10401,-9957,-7772,-10384,-8968,-7596],[-8964],[-87]]},{"type":"Polygon","id":51115,"arcs":[[-8938,10402,-2053]]},{"type":"Polygon","id":48123,"arcs":[[-5673,-3393,10403,-1291,-7789]]},{"type":"Polygon","id":51131,"arcs":[[-2043,10404]]},{"type":"Polygon","id":51017,"arcs":[[-5894,-4708,-10378,-9955,-10402,-6435]]},{"type":"Polygon","id":51830,"arcs":[[-8963,-8962,-8961,-9977,-8955],[-8954]]},{"type":"MultiPolygon","id":51191,"arcs":[[[-7646,-9712,-6445,-7642,-8945,-10387,-9369,-9713,-7644]],[[-7643]]]},{"type":"Polygon","id":51137,"arcs":[[-7665,-6454,-10380,-8931,-9974,-7705]]},{"type":"Polygon","id":48019,"arcs":[[-3322,-7859,10405,-262,-4456,-225]]},{"type":"Polygon","id":48027,"arcs":[[-2123,-6519,-248,-7851,-3337,-269,-8978]]},{"type":"MultiPolygon","id":48007,"arcs":[[[-2183,-6475,-2118,10406]],[[-2116,10407,10408,10409]],[[10410,10411,10412]],[[10413,10414,-2186,10415]]]},{"type":"Polygon","id":48009,"arcs":[[-10038,-2237,-3406,-2192,-7783]]},{"type":"Polygon","id":48011,"arcs":[[-3423,-7856,-3402,-2197,10416]]},{"type":"Polygon","id":48025,"arcs":[[-1293,10417,-2120,-6500,10418]]},{"type":"Polygon","id":48005,"arcs":[[-3359,-6508,10419,-268,-2136,-3381,-1230,10420]]},{"type":"Polygon","id":51640,"arcs":[[-10388,-7758]]},{"type":"Polygon","id":48017,"arcs":[[-1430,-2226,-187,-2222,-1426]]},{"type":"Polygon","id":48245,"arcs":[[-4448,-7786,-2211,-10376,10421,-9986]]},{"type":"Polygon","id":48163,"arcs":[[-228,-7494,-3378,-4482,-7867]]},{"type":"Polygon","id":48147,"arcs":[[-5806,-246,-10029,-129,-10035,-3343]]},{"type":"Polygon","id":48175,"arcs":[[-10404,-3392,-2096,-10418,-1292]]},{"type":"Polygon","id":48301,"arcs":[[-2231,-6517,-3364,-1442,-1368]]},{"type":"Polygon","id":48067,"arcs":[[-1173,-4533,-10377,-3368,-194]]},{"type":"Polygon","id":48157,"arcs":[[-6510,-1279,-171,-5666,-10399]]},{"type":"Polygon","id":48035,"arcs":[[-4471,-7794,-1189,-1154,-10026,-7852,-251]]},{"type":"Polygon","id":48219,"arcs":[[-7878,-6502,-2223,-191]]},{"type":"Polygon","id":48411,"arcs":[[-1242,10422,-6520,-2121,-5658,-9981,-7854]]},{"type":"Polygon","id":48265,"arcs":[[-7858,-6472,10423,-3311,-263,-10406]]},{"type":"Polygon","id":48333,"arcs":[[-1241,-7873,-4473,-6518,-10423]]},{"type":"Polygon","id":48097,"arcs":[[-3346,10424,-8971,-4464,-5786]]},{"type":"Polygon","id":48487,"arcs":[[-2250,-5815,-4604,-2238,-10040,-104]]},{"type":"Polygon","id":48235,"arcs":[[-157,-2245,-6504,-1157]]},{"type":"Polygon","id":48055,"arcs":[[-3307,-10398,-3320,-7788,-10042,-277]]},{"type":"Polygon","id":48247,"arcs":[[-1164,-185,-3416,-142,-1282]]},{"type":"Polygon","id":48109,"arcs":[[-1408,-1444,-3363,-8974,-7863]]},{"type":"Polygon","id":48459,"arcs":[[-2201,-196,-3367,-7870,-8976,-200,-1311]]},{"type":"Polygon","id":48073,"arcs":[[-10400,-9982,-203,-5670,-264,-10420,-6507]]},{"type":"Polygon","id":48121,"arcs":[[-5672,-8972,-10425,-3345,-10037,-92]]},{"type":"Polygon","id":48095,"arcs":[[-3419,-165,-7853,-6470,-155]]},{"type":"Polygon","id":48381,"arcs":[[-10027,-10417,-2196,-3387,-1221]]},{"type":"Polygon","id":48267,"arcs":[[-7860,-6469,-9980,-3312,-10424,-6471]]},{"type":"Polygon","id":48275,"arcs":[[-1203,-106,-10039,-6521]]},{"type":"Polygon","id":48373,"arcs":[[-10421,-1233,-7787,-4446,10425,-3360]]},{"type":"Polygon","id":48221,"arcs":[[-1149,-1191,-7793,-1297,-1245]]},{"type":"Polygon","id":48407,"arcs":[[-4450,-2132,-1210,-3361,-10426]]},{"type":"Polygon","id":48395,"arcs":[[-3336,-4486,-180,-2207,-7785,-271]]},{"type":"Polygon","id":48493,"arcs":[[-10043,-7790,-1289,-7491,-4459]]},{"type":"Polygon","id":48353,"arcs":[[-1199,-3418,-6514,-7874,-4477]]},{"type":"Polygon","id":48101,"arcs":[[-3353,-5676,-2246,-102,-1202,10426]]},{"type":"MultiPolygon","id":48057,"arcs":[[[10427,-2098,-3391]],[[-3389,-217,10428]],[[-215,10429]],[[-212,10430]],[[-10432,-10433,208]],[[-207,10433,10434]],[[-223,-3412,10435]],[[-3409,10436,10437]],[[-10414,10438,10439,-10411,10440,10441]],[[-10409,10442]],[[-2113,10443]],[[-2111,10444]],[[-10446,-10447,2108]],[[-2107,10447]],[[-2104,10448]],[[-10450,-10451,2100]]]},{"type":"Polygon","id":48397,"arcs":[[-127,-6462,-94,-10036]]},{"type":"Polygon","id":48297,"arcs":[[-7492,-1294,-10419,-6499,-10028,-182,-7792]]},{"type":"Polygon","id":48345,"arcs":[[-3401,-3354,-10427,-3357,-109]]},{"type":"Polygon","id":48421,"arcs":[[-9985,-6466,-234,-5816,-4657]]},{"type":"Polygon","id":48357,"arcs":[[-9984,-4655,-5791,-9979,-1226]]},{"type":"Polygon","id":48091,"arcs":[[-260,-10401,-279,-10044,-4457]]},{"type":"Polygon","id":34027,"arcs":[[-10046,-1323,-7879,-8987,-7882,-8988,-6533]]},{"type":"Polygon","id":34005,"arcs":[[-1318,-7891,-2275,-6525,-1320,-1957,-926]]},{"type":"MultiPolygon","id":34023,"arcs":[[[-8986,8984,-8984,10451,-3012,10452,-3010,10453,-7886,-1316,-7884]],[[-7888,10454]]]},{"type":"Polygon","id":4009,"arcs":[[-1330,-2399,-2359,-1338,10455,-10087,10456]]},{"type":"Polygon","id":4013,"arcs":[[-2361,-2400,-1335,-2362,-1343,-2383]]},{"type":"Polygon","id":4003,"arcs":[[-10089,-1331,-10457,-10086,-1440,10457]]},{"type":"Polygon","id":4015,"arcs":[[-2417,-2406,-5146,-6050,-10092,-2384,-1341,-8357]]},{"type":"Polygon","id":4001,"arcs":[[-10143,-1412,-2440,-1454,-2434,-10085,-10456,-1337]]},{"type":"Polygon","id":50017,"arcs":[[-401,-428,-386,-385,-9836,-423]]},{"type":"Polygon","id":23007,"arcs":[[10458,10459,10460,10461,10462]]},{"type":"Polygon","id":23025,"arcs":[[-10463,10463,-1396,10464,-316,10465,10466]]},{"type":"Polygon","id":23017,"arcs":[[10467,-10461,10468,10469,10470,-9845,-8593]]},{"type":"Polygon","id":50003,"arcs":[[-6881,-2997,-5585,-411,-422,-417,-7011]]},{"type":"Polygon","id":50019,"arcs":[[-319,-389,-432,-322,10471]]},{"type":"MultiPolygon","id":23027,"arcs":[[[10472,10473,-10466,-315,-1470,10474,10475]],[[10476]]]},{"type":"MultiPolygon","id":23015,"arcs":[[[10477,-10473,10478,10479,10480]],[[10481]]]},{"type":"Polygon","id":23031,"arcs":[[-8681,-9846,-10471,10482,10483,-9759]]},{"type":"Polygon","id":50007,"arcs":[[-3051,-430,-324,-433,-426,-399,-4236]]},{"type":"MultiPolygon","id":23013,"arcs":[[[10484,-10479,-10476]],[[10485]],[[10486]],[[10487]]]},{"type":"Polygon","id":23023,"arcs":[[10488,10489,10490,10491,-10481]]},{"type":"Polygon","id":23001,"arcs":[[-10491,10492,-10469,-10460,10493]]},{"type":"Polygon","id":23011,"arcs":[[-10478,-10492,-10494,-10459,-10467,-10474]]},{"type":"MultiPolygon","id":23005,"arcs":[[[10494,-10483,-10470,-10493,-10490]],[[10495]],[[10496]],[[10497]],[[10498]],[[10499]],[[10500]],[[10501]]]},{"type":"Polygon","id":23021,"arcs":[[-1395,-311,-10465]]},{"type":"Polygon","id":29159,"arcs":[[-10128,-10116,10502,-1607,-8269,-480,-8239]]},{"type":"Polygon","id":29103,"arcs":[[-9208,-8164,-8286,-9173,-9214,-9195]]},{"type":"Polygon","id":29145,"arcs":[[-10107,-8237,-5821,-3755,10503,-8275]]},{"type":"Polygon","id":29171,"arcs":[[-8278,-9853,-9753,-8219,-9198,10504]]},{"type":"Polygon","id":29041,"arcs":[[-8253,-9200,-8180,-9216,10505,-8213,-10114]]},{"type":"Polygon","id":29113,"arcs":[[-9179,10506,-9190,-8210,-10125]]},{"type":"Polygon","id":29131,"arcs":[[-8302,10507,-10129,-8244,-9191,10508,-1604]]},{"type":"Polygon","id":29123,"arcs":[[-453,-8228,10509,-8292,-10112]]},{"type":"Polygon","id":29005,"arcs":[[-4984,-9786,-9824,10510,-8200,-5985]]},{"type":"Polygon","id":29221,"arcs":[[-451,-8266,-1484,-437,-8225]]},{"type":"Polygon","id":29211,"arcs":[[-10505,-9197,-8182,-440,-8279]]},{"type":"Polygon","id":29023,"arcs":[[-10132,-9169,-10113,-8194,-9203,-3545,3543,-3543]]},{"type":"Polygon","id":29061,"arcs":[[-9164,-8248,-10119,-443,-9201,-8169]]},{"type":"Polygon","id":29043,"arcs":[[-9175,-8234,-10134,10511,-8272,10512]]},{"type":"Polygon","id":29167,"arcs":[[-457,-8206,-10110,10513,10514,-8259]]},{"type":"Polygon","id":29057,"arcs":[[10515,-9165,-8260,-10515,10516,-8277]]},{"type":"Polygon","id":29003,"arcs":[[-3677,-8202,10517,-8250,-9163,-9182]]},{"type":"Polygon","id":29201,"arcs":[[-9184,-9221,-8222,10518,-8198]]},{"type":"Polygon","id":29147,"arcs":[[-10511,-9825,-9360,10519,-8251,-10518,-8201]]},{"type":"Polygon","id":29143,"arcs":[[-8199,-10519,-8224,-7143,-10312,-7140,-10311,-8261,-9204]]},{"type":"Polygon","id":29027,"arcs":[[-8190,-10127,-10131,10520,-9211]]},{"type":"Polygon","id":29157,"arcs":[[-8293,-10510,-8227,-10124,-3958,-5088,-528,-9185]]},{"type":"Polygon","id":29029,"arcs":[[-10509,-9193,-8289,-10111,-8204,-8270,-1605]]},{"type":"Polygon","id":29051,"arcs":[[-9212,-10521,-10130,-10508,-8301]]},{"type":"Polygon","id":29227,"arcs":[[-10520,-9359,-9791,-10118,-8246]]},{"type":"Polygon","id":29077,"arcs":[[-8271,-10517,-10514,-10109,-9176,-10513]]},{"type":"Polygon","id":29097,"arcs":[[-3754,-4787,-9166,-10516,-8276,-10504]]},{"type":"Polygon","id":29175,"arcs":[[-8192,-9210,-8214,-10506,-9215,-1623]]},{"type":"Polygon","id":29209,"arcs":[[-10108,-8273,-10512,-10133,-3537]]},{"type":"Polygon","id":29053,"arcs":[[-9213,-8299,-1608,-10503,-10115,-8216]]},{"type":"MultiPolygon","id":53055,"arcs":[[[10521]],[[10522]],[[10523]]]},{"type":"MultiPolygon","id":53061,"arcs":[[[10524,10525,10526,-6799,-1666,-9218]],[[10527]]]},{"type":"Polygon","id":53059,"arcs":[[-8305,-8316,-1648,-6825,-1660,-2546,-6820]]},{"type":"Polygon","id":53025,"arcs":[[10528,-1680,-10137,-6813,-8328,-1645,-6823,-8320]]},{"type":"MultiPolygon","id":53029,"arcs":[[[-10526,10529]],[[10530]]]},{"type":"Polygon","id":53027,"arcs":[[-8314,-8318,-8306,10531,-8326,-6786]]},{"type":"MultiPolygon","id":53053,"arcs":[[[-1643,-8315,-8312,10532,-9219]],[[-6789,-1672,10533]]]},{"type":"Polygon","id":53069,"arcs":[[10534,-8308,-8317,-8303,-2539,2537,-2537,2535,-2535,2533,-2533,2531,-2531,2529,-2529,2527,-2527,-1652]]},{"type":"Polygon","id":53013,"arcs":[[-6816,-8330,-10136,-2488,-2513,-10135]]},{"type":"Polygon","id":53063,"arcs":[[-9131,-8332,-1677,-8337,-6795,-8063,-9130]]},{"type":"Polygon","id":53047,"arcs":[[-6808,-1674,-10529,-8319,-1668,-6798,-8322,10535]]},{"type":"Polygon","id":17013,"arcs":[[-9178,-2612,-6020,-556,-9188,-10507]]},{"type":"Polygon","id":17151,"arcs":[[-2589,-6012,-5124,-2596,-7124]]},{"type":"Polygon","id":17101,"arcs":[[-6005,-490,-9242,-4010]]},{"type":"Polygon","id":17103,"arcs":[[-1688,-6021,-5098,-1699,-3947]]},{"type":"Polygon","id":17123,"arcs":[[-5111,-1681,-6015,-3949,-5110,-1705]]},{"type":"Polygon","id":17027,"arcs":[[-3990,-2586,-5131,-6841,-5105,-1695]]},{"type":"Polygon","id":17113,"arcs":[[-5117,-2592,-5126,-3953,-5089,-6008,-5113,-5135]]},{"type":"Polygon","id":17145,"arcs":[[-6007,-3981,-5086,-3956,-5133]]},{"type":"Polygon","id":6027,"arcs":[[-6848,-610,-2366,-4698,-2415,-8356,-2913,-5183]]},{"type":"MultiPolygon","id":6075,"arcs":[[[-8348,10536]],[[-6860,10537]],[[-6858,10538]],[[-6856,10539,10540,10541]],[[-6853,10542,10543]],[[-10148,10544]],[[10545]]]},{"type":"Polygon","id":6087,"arcs":[[-6072,-614,10546,-8351,-2774]]},{"type":"Polygon","id":6031,"arcs":[[-2911,-8346,-617,-6849,-5184]]},{"type":"Polygon","id":6023,"arcs":[[-5156,10547,-6869,-2759,-9228]]},{"type":"Polygon","id":6095,"arcs":[[-5162,-9231,10548,-2764,-8345,-4061]]},{"type":"Polygon","id":6047,"arcs":[[-6847,-5166,5164,-5172,-6850,-6073,-2772,-6079]]},{"type":"Polygon","id":37061,"arcs":[[10549,-893,10550,10551,10552,-672]]},{"type":"Polygon","id":37147,"arcs":[[10553,-825,10554,-890,-759,10555,10556]]},{"type":"Polygon","id":27103,"arcs":[[10557,10558,10559,10560,10561]]},{"type":"Polygon","id":27119,"arcs":[[10562,10563,-2269,-2297,10564,-10193,10565,-10191,10566]]},{"type":"Polygon","id":37191,"arcs":[[10567,-757,-894,-10550,-671,-679]]},{"type":"Polygon","id":27055,"arcs":[[10568,-1879,-2930,-9870,-9881,-10208]]},{"type":"Polygon","id":27105,"arcs":[[-9876,-9599,-10235,10569,-10200,10570]]},{"type":"Polygon","id":27141,"arcs":[[10571,10572,10573,10574,10575,10576,-10350]]},{"type":"Polygon","id":37185,"arcs":[[10577,-7580,-8926,10578,-771,-652]]},{"type":"Polygon","id":27069,"arcs":[[10579,10580,-2329,10581]]},{"type":"Polygon","id":27015,"arcs":[[10582,-10203,10583,10584,-10560,10585]]},{"type":"Polygon","id":37115,"arcs":[[10586,-9269,-9556,-9640,10587,10588]]},{"type":"Polygon","id":27011,"arcs":[[-10101,-9097,10589,10590,-10257,10591]]},{"type":"Polygon","id":27131,"arcs":[[10592,10593,-10321,10594,10595,10596,-10281]]},{"type":"Polygon","id":27013,"arcs":[[10597,-10244,10598,-10586,-10559,10599,10600]]},{"type":"Polygon","id":37113,"arcs":[[-2794,10601,10602,10603,10604,10605]]},{"type":"Polygon","id":37175,"arcs":[[10606,-919,-8761,-8730,-8432,10607]]},{"type":"Polygon","id":37181,"arcs":[[-7581,-10578,-651,10608]]},{"type":"Polygon","id":37059,"arcs":[[-662,10609,-736,10610,-859]]},{"type":"Polygon","id":27067,"arcs":[[10611,10612,10613,-10254,10614,10615]]},{"type":"Polygon","id":37195,"arcs":[[-678,-840,10616,-10556,-758,-10568]]},{"type":"Polygon","id":27161,"arcs":[[10617,-10596,10618,10619,10620,-10601]]},{"type":"Polygon","id":37001,"arcs":[[10621,-782,10622,-923,10623,10624]]},{"type":"Polygon","id":37139,"arcs":[[10625,10626,10627,-767]]},{"type":"Polygon","id":37135,"arcs":[[10628,10629,-742,-776,-10622]]},{"type":"Polygon","id":37131,"arcs":[[-7687,10630,10631,-772,-10579,-8925,-9958]]},{"type":"Polygon","id":27063,"arcs":[[-10205,10632,-10246,-9856,-9747,-9877,-10571]]},{"type":"Polygon","id":27137,"arcs":[[10633,10634,10635,10636,-1851,10637,10638,-10157]]},{"type":"Polygon","id":27129,"arcs":[[-10585,10639,10640,10641,-10613,10642,-10199,10643,-10561]]},{"type":"Polygon","id":27163,"arcs":[[-10227,10644,-10187,-1889,-3120,-1897,10645]]},{"type":"Polygon","id":27147,"arcs":[[-10325,10646,10647,-10619,-10595]]},{"type":"Polygon","id":27093,"arcs":[[10648,10649,-10195,-10643,-10612]]},{"type":"Polygon","id":27135,"arcs":[[-10184,10650,10651,-10580,10652]]},{"type":"Polygon","id":37167,"arcs":[[-701,10653,10654,-698,10655]]},{"type":"Polygon","id":27149,"arcs":[[10656,10657,10658,-10252,-10591]]},{"type":"Polygon","id":37007,"arcs":[[-702,-10656,-692,-8750]]},{"type":"Polygon","id":37053,"arcs":[[-10393,-3283,10659,10660,10661,10662]]},{"type":"Polygon","id":27073,"arcs":[[-9032,-10102,-10592,-10256,10663,10664]]},{"type":"Polygon","id":27155,"arcs":[[-3620,-10251,10665,-10657,-10590,-9096]]},{"type":"Polygon","id":27027,"arcs":[[10666,-10213,10667,-10248,-3618,-3585]]},{"type":"Polygon","id":37035,"arcs":[[-725,-685,10668,-732,10669]]},{"type":"Polygon","id":37043,"arcs":[[-2856,10670,-10602,-2793,-6091]]},{"type":"Polygon","id":27065,"arcs":[[10671,10672,10673,10674]]},{"type":"Polygon","id":37189,"arcs":[[10675,-682,10676,-9372,10677]]},{"type":"Polygon","id":27173,"arcs":[[10678,-9033,-10665,10679,-10641,10680,10681]]},{"type":"Polygon","id":27089,"arcs":[[-10652,10682,-10194,-10565,-2296,-3557,-2330,-10581]]},{"type":"Polygon","id":27157,"arcs":[[-3060,-1784,10683,10684,10685]]},{"type":"Polygon","id":27107,"arcs":[[-2270,-10564,10686,-10214,-10667,-3584]]},{"type":"Polygon","id":37161,"arcs":[[-8453,10687,-916,10688,10689,10690,10691,-728,10692,-8375]]},{"type":"Polygon","id":37019,"arcs":[[-8739,10693,10694,10695,10696]]},{"type":"Polygon","id":37125,"arcs":[[10697,-780,10698,10699,-709,10700,-694,-697]]},{"type":"Polygon","id":37047,"arcs":[[10701,-10694,-8738,-803,10702]]},{"type":"Polygon","id":27053,"arcs":[[10703,-10575,10704,-10229,10705,-10279,10706]]},{"type":"Polygon","id":37005,"arcs":[[-790,10707,10708,-10389]]},{"type":"Polygon","id":37041,"arcs":[[10709,10710,-769,10711]]},{"type":"Polygon","id":27099,"arcs":[[-9432,10712,-10647,-10324,10713,-10209,-9884,-9777]]},{"type":"Polygon","id":27145,"arcs":[[-10616,10714,-10341,10715,10716,-10347,-10577,10717,-10649]]},{"type":"Polygon","id":27115,"arcs":[[-1849,-3101,-10186,-10674,10718,10719]]},{"type":"Polygon","id":37065,"arcs":[[10720,-10557,-10617,-839,-775]]},{"type":"Polygon","id":27153,"arcs":[[10721,10722,-10716,-10345,10723,10724]]},{"type":"Polygon","id":27031,"arcs":[[10725,10726]]},{"type":"Polygon","id":37159,"arcs":[[-737,-10610,-661,-10655,10727]]},{"type":"Polygon","id":37025,"arcs":[[-729,-10728,-10654,-700,-912]]},{"type":"Polygon","id":27071,"arcs":[[-10182,10728,-10634,-10156,10729]]},{"type":"Polygon","id":37145,"arcs":[[-7659,10730,-738,-10630,10731]]},{"type":"Polygon","id":27051,"arcs":[[-10658,-10666,-10250,10732,-10343]]},{"type":"Polygon","id":37117,"arcs":[[-10554,-10721,-774,10733,10734,-819]]},{"type":"Polygon","id":37091,"arcs":[[-10631,-7693,10735,-10710,10736,10737]]},{"type":"MultiPolygon","id":37055,"arcs":[[[-10661,10738]],[[10739,10740]],[[10741,10742]],[[10743,10744,10745]],[[10746]]]},{"type":"Polygon","id":37093,"arcs":[[-10701,-708,-801,10747]]},{"type":"Polygon","id":37015,"arcs":[[-10632,-10738,10748,10749,-10734,-773]]},{"type":"Polygon","id":27029,"arcs":[[-10216,10750,-10567,-10190,10751,10752]]},{"type":"Polygon","id":27125,"arcs":[[-10192,-10566]]},{"type":"Polygon","id":37129,"arcs":[[10753,10754,-10696]]},{"type":"Polygon","id":37177,"arcs":[[10755,10756,-10745,10757,10758]]},{"type":"Polygon","id":27095,"arcs":[[10759,-10318,10760,-10672,10761,-10572,-10349]]},{"type":"Polygon","id":37049,"arcs":[[-891,-10555,-824,10762,10763,-655,10764]]},{"type":"Polygon","id":37169,"arcs":[[-786,-7571,-9960,10765,-857]]},{"type":"Polygon","id":37039,"arcs":[[-10371,10766,-10603,-10671,-2855,-6107,-9319]]},{"type":"Polygon","id":37173,"arcs":[[-10241,-9281,10767,10768,-10605,10769]]},{"type":"Polygon","id":27007,"arcs":[[-10651,-10183,-10730,-10155,10770,10771,-10752,-10189,-10683]]},{"type":"Polygon","id":27143,"arcs":[[10772,-10283,10773,-10562,-10644,-10198]]},{"type":"MultiPolygon","id":37095,"arcs":[[[-10744,10774,-10742,10775,-821,10776,-10758]],[[-10740,10777]]]},{"type":"Polygon","id":37141,"arcs":[[-10695,-10702,10778,-673,-10553,10779,10780,-10754]]},{"type":"Polygon","id":37073,"arcs":[[-7692,-10397,10781,-10626,-766,-10711,-10736]]},{"type":"Polygon","id":37187,"arcs":[[10782,-10759,-10777,-820,-10735,-10750]]},{"type":"Polygon","id":37151,"arcs":[[-10623,-781,-10698,-699,-659,-924]]},{"type":"Polygon","id":37011,"arcs":[[-9373,-10677,-681,-724,10783,-807,-10289]]},{"type":"Polygon","id":37137,"arcs":[[10784,-10763,-823]]},{"type":"Polygon","id":27023,"arcs":[[-10664,-10255,-10614,-10642,-10680]]},{"type":"Polygon","id":37009,"arcs":[[-9371,-10386,-10709,10785,-10678]]},{"type":"Polygon","id":37197,"arcs":[[-860,-10611,-735,10786,-788]]},{"type":"Polygon","id":27127,"arcs":[[-10584,-10202,10787,10788,-10681,-10640]]},{"type":"Polygon","id":27111,"arcs":[[10789,-10724,-10344,-10733,-10249,-10668,-10219]]},{"type":"Polygon","id":27121,"arcs":[[-10715,-10615,-10253,-10659,-10342]]},{"type":"Polygon","id":27081,"arcs":[[-9034,-10679,10790,10791,-9020]]},{"type":"Polygon","id":27017,"arcs":[[-1850,-10720,10792,-10638]]},{"type":"Polygon","id":27001,"arcs":[[-10793,-10719,-10673,-10761,-10317,10793,-10153,-10639]]},{"type":"Polygon","id":27059,"arcs":[[-10675,-10185,10794,-10573,-10762]]},{"type":"Polygon","id":27171,"arcs":[[-10704,10795,-10196,-10650,-10718,-10576]]},{"type":"Polygon","id":37105,"arcs":[[10796,-10699,-779]]},{"type":"Polygon","id":37183,"arcs":[[10797,-649,-676,10798,-777,-740]]},{"type":"Polygon","id":37085,"arcs":[[-669,-710,-10700,-10797,-778,-10799,-680]]},{"type":"Polygon","id":37029,"arcs":[[-10782,-10396,-10391,-10663,10799,-10627]]},{"type":"Polygon","id":37075,"arcs":[[-10242,-10770,-10604,-10767,-10370]]},{"type":"Polygon","id":27109,"arcs":[[-10685,10800,-10206,-10714,-10323,10801]]},{"type":"Polygon","id":27079,"arcs":[[-10558,-10774,-10282,-10597,-10618,-10600]]},{"type":"Polygon","id":27043,"arcs":[[-10598,-10621,10802,-9591,-9413,-10245]]},{"type":"Polygon","id":37017,"arcs":[[-802,-706,-674,-10779,-10703]]},{"type":"Polygon","id":37087,"arcs":[[-10768,-9280,-9270,-10587,10803,-920,-10607,10804]]},{"type":"Polygon","id":27165,"arcs":[[-10247,-10633,-10204,-10583,-10599]]},{"type":"Polygon","id":27049,"arcs":[[-10322,-10594,10805,-1901,-3061,-10686,-10802]]},{"type":"Polygon","id":37021,"arcs":[[10806,10807,-10689,-921,-10804,-10589]]},{"type":"Polygon","id":27097,"arcs":[[-10760,-10348,-10717,-10723,10808,-10319]]},{"type":"Polygon","id":37165,"arcs":[[-695,-10748,-800,-8699]]},{"type":"Polygon","id":37045,"arcs":[[-8720,-8376,-10693,-727,10809,10810]]},{"type":"Polygon","id":37103,"arcs":[[-654,10811,-10551,-892,-10765]]},{"type":"Polygon","id":37109,"arcs":[[-731,-911,10812,-10810,-726,-10670]]},{"type":"Polygon","id":27087,"arcs":[[-10563,-10751,-10215,-10687]]},{"type":"Polygon","id":27003,"arcs":[[-10795,-10188,-10645,-10230,-10705,-10574]]},{"type":"Polygon","id":27075,"arcs":[[10813,-10726,10814,-10636]]},{"type":"Polygon","id":27117,"arcs":[[-10792,10815,10816,-10236,-10103]]},{"type":"Polygon","id":27159,"arcs":[[-10725,-10790,-10218,10817,10818]]},{"type":"Polygon","id":37071,"arcs":[[-915,-8721,-10811,-10813]]},{"type":"Polygon","id":37199,"arcs":[[-9639,-809,10819,10820,10821,-10807,-10588]]},{"type":"Polygon","id":37099,"arcs":[[-10769,-10805,-10608,-8431,-10606]]},{"type":"Polygon","id":37149,"arcs":[[-8452,-8762,-917,-10688]]},{"type":"Polygon","id":27101,"arcs":[[-10234,-10817,10822,-10788,-10201,-10570]]},{"type":"Polygon","id":37133,"arcs":[[10823,-10780,-10552,-10812,-653]]},{"type":"Polygon","id":37033,"arcs":[[10824,-6424,-10390,-6422,-7660,-10732,-10629,-10625]]},{"type":"Polygon","id":27083,"arcs":[[-10789,-10823,-10816,-10791,-10682]]},{"type":"Polygon","id":27047,"arcs":[[-10620,-10648,-10713,-9431,-9592,-10803]]},{"type":"Polygon","id":37003,"arcs":[[10825,-733,-10669,-684]]},{"type":"Polygon","id":37157,"arcs":[[-10766,-9959,-6425,-10825,-10624,-922]]},{"type":"Polygon","id":27037,"arcs":[[-10706,-10228,-10646,-1896,-10806,-10593,-10280]]},{"type":"Polygon","id":27019,"arcs":[[-10796,-10707,-10278,-10773,-10197]]},{"type":"Polygon","id":37193,"arcs":[[-10786,-10708,-789,-10787,-734,-10826,-683,-10676]]},{"type":"Polygon","id":37077,"arcs":[[-10731,-7658,-7582,-10609,-650,-10798,-739]]},{"type":"Polygon","id":37111,"arcs":[[-10692,10690,-10690,-10808,-10822,10820,-10820,-808,-10784,-723]]},{"type":"Polygon","id":27021,"arcs":[[-10771,-10154,-10794,-10320,-10809,-10722,-10819,10826]]},{"type":"Polygon","id":27057,"arcs":[[-10753,-10772,-10827,-10818,-10217]]},{"type":"Polygon","id":27169,"arcs":[[-10684,-1788,-2924,-1880,-10569,-10207,-10801]]}]},"states":{"type":"GeometryCollection","bbox":[-179.14733999999999,17.926875,179.77847,71.352561],"geometries":[{"type":"Polygon","id":56,"arcs":[[356,357,367,368,375,394,395,396,397,339,340,341,362,363,364,333,334,335,405,406,407,408,329,330,1420,1421,1418,1387,1381,1382,1398,1397,1369,1370,1371,1372,348,349,350,351,417,418,419]]},{"type":"Polygon","id":42,"arcs":[[1943,1944,1945,1946,1918,1919,792,793,875,876,745,746,855,852,853,1939,1940,840,841,1870,1871,813,809,1914,1915,1985,1986,1982,1983,1984,1988,1989,1990,825,826,1999,930,931,924,925,1956,-1319,1957,750,751,1811,753,1813,1814,1978,1979,846,847,848,712,713,1963,1964,1808,1809,816,1960,1961,862,863,864,904,899,900]]},{"type":"MultiPolygon","id":39,"arcs":[[[7468,-7108,7469,6245,6240,6241,6242,7378,7379,6336,6337,7481,7479,7480,6176,6177,6246,6247,6300,6267,6268,7477,7478,-6276,6256,-5539,-5538,-5550,7464,6341,7371,6232,7483,6274,6195,-856,-747,-746,-877,-876,-794,-793,-1920,-4750,-4749,-4748,-4719,-4718,-4670,-4669,-5915,-4679,-4684,-5855,-5850,-5849,-5848,-5892,-4754,-4753,-5830,-5833,-5884,6266,6264,1977,1972,-7119,-7240,6204,6205]],[[7372]],[[6343]]]},{"type":"Polygon","id":35,"arcs":[[1453,2439,1411,1412,1413,1414,2428,2424,1435,1431,1457,1458,2441,2442,2443,-236,2444,1456,-1195,-1220,-1219,1428,1429,1425,1426,1363,1364,-256,1365,1366,1367,1441,1442,1443,1407,1408,1409,2417,2418,2419,2420,2440,1438,1439,1436,1402,2432,2433]]},{"type":"MultiPolygon","id":24,"arcs":[[[1600,1601,4892,4880,2474,2471,-2046,-2045,3796,4881,4893,3788,4891,1490,3794,4895,3812,10827,2452,5976,6808,4897,1555,1551,3807,-85,3808,4888,4889,4884,4885,4886,2458,3800,3801,3802,3803,2446,2447,2448,3789,3790,3791,-863,-1962,-1961,-817,-1810,-1809,-1965,-1964,-714,-713,-849,-848,-847,-1980,-1979,-1815,3793,1487,1488,4890]],[[-2047,3797]],[[4898,4899]],[[4900,4901]],[[4902,4903]],[[4904,4905]],[[4906,4907]],[[4908,4909]],[[4910,4911]],[[4912,4913]],[[4914,4915]],[[4916,4917]],[[4918,4919]],[[4920,4921]],[[-2088,4922]],[[-2086,4923]],[[-2084,4924]],[[-2082,4925]],[[-2080,4926]],[[-2078,4927]],[[-2076,4928]],[[-2074,4929]],[[-2072,4930]],[[-2070,4931]],[[-2068,4932]],[[1556,1557]],[[1558,1559]],[[1560,1561]],[[1562,1563]],[[1564,1565]],[[1566,1567]],[[1568,1569]],[[1570,1571]],[[1572,1573,1574,1575]],[[1576,1577]],[[1578,1579]],[[1580,1581]],[[1582,1583]],[[1584,1585]],[[1586,1587]],[[1588,1589]],[[1590,1591]],[[1592,1593]],[[1594,1595]],[[1596,1597]],[[1498,1497]],[[1499,-1500,1500]],[[1501,1502]],[[1503,-1504,1504]],[[1505,1506]],[[1507,1508]],[[1509,1510]],[[1511,1512,1513,1514]],[[1515,1516]],[[1517,1518]],[[1519,1520]],[[1521,1522]],[[1523,1524]],[[1525,1526]],[[1527,1528]],[[1529,1530]],[[1531,-1532,1532]],[[1533,1534]],[[1535,1536]],[[1537,1538]],[[1539,1540]],[[1541,1542]],[[1543,1544]],[[1545,1546]],[[1547,1548]],[[1549,1550]],[[3799,4894]]]},{"type":"MultiPolygon","id":44,"arcs":[[[1613,2460,2461,10828,1616,1493,1609,1610,1495,1496,2469,2470,2467,2468]],[[2463]],[[2464]],[[2465]],[[2466]],[[1611]]]},{"type":"MultiPolygon","id":41,"arcs":[[[1649,1650]],[[1651,2526,2527,2528,2529,2530,2531,2532,2533,2534,2535,2536,2537,2538,2539,2540,2548,2545,1659,1660,2564,2568,2578,1636,1637,2510,2511,2512,2487,2488,2489,2490,2491,2492,3920,3921,2552,2553,2554,2549,-2356,-2355,-2378,-2377,2574,3882,-2755,2516,-2761,3938,2522,2523,2544,2555,2480,2509,2525,1654]]]},{"type":"MultiPolygon","id":72,"arcs":[[[1720]],[[2643]],[[2706,1721,2747,2662,1764,2745,1739,2736,1714,2624,4044,4047,2673,10829,10830,1758,4054,2695,2721,4034,2685,1748,2689,2709,2703,2731,2752,4055,1745,2735,2684,2680,4046,1773,2650,1771,4026,4053,2667,4041,2637,2659,2628]],[[2642]]]},{"type":"MultiPolygon","id":55,"arcs":[[[3093,-538,-537,3091,3135,-496,-495,3121,3122,1908,1909,2928,2929,1878,1879,2923,1787,1783,3059,3060,1900,1895,1896,3119,1888,1889,3099,3100,1848,1849,1850,1851,3025,3104,1788,1789,2957,2958,3152,1901,1902,3036,3037,3034,1852,3137,1862,3094,1859,3141,3139,3142,3103,2982,1892,1893,1894,-2609,3151]],[[3095]],[[3096]],[[3105]],[[3106]],[[3107]],[[3108]],[[3109]],[[3110]],[[3027]]]},{"type":"Polygon","id":38,"arcs":[[2304,3566,3622,2338,3624,2336,2327,2328,2329,3556,2295,2296,2268,2269,3583,3584,3617,3618,3619,3620,3625,3626,3591,3588,3562,3558,2255,2256,3615,3569,3570,3567,2347,2348,2291,3552,3553,3602,3603,3579,3575,3592,3593]]},{"type":"Polygon","id":32,"arcs":[[2365,-609,-608,-607,-606,2389,2387,-628,-627,-626,2372,2373,2374,2375,2376,2377,2354,2355,2349,4776,4777,4778,-623,4779,2410,2411,2412,2401,2402,2403,2404,2405,2416,2413,2414,4697]]},{"type":"Polygon","id":13,"arcs":[[2854,2855,6090,2792,2793,2794,7323,7063,5338,7267,7268,4105,4106,4107,6124,4067,4068,5289,5290,5291,5185,5186,5187,5188,6092,6093,6139,6140,4119,4120,2784,5197,7017,2828,2823,2824,5226,5227,2869,5215,5216,4129,4130,6088,5344,6087,5348,5349,6108,6109,7291,7292,6906,2815,2816,2817,5236,5237,6990,6989,4138,6996,6997,7269,6974,6975,7030,7031,6098,6099,6998,2890,2891,5280,2830,2831,7206,5352,5350,4085,2903,2899,2900,2901,4086,6924,7321,7322,2904,2905,6105,6106]]},{"type":"MultiPolygon","id":36,"arcs":[[[-300,3125,-299,3126,-302,3127]],[[3128,-304,3129,-297]],[[-288,3131,5490,4192,4210,-1326,-1325,5489,-1990,-1989,-1985,-1984,-1983,-1987,-1986,-1916,-1915,-810,-814,-1872,-1871,-842,-841,-1941,-1940,-854,3065,4212,2991,4242,3073,4239,5501,3029,4155,4202,3078,3049,-431,3050,4235,-405,-404,-412,5584,2996,2997,4172,4163,4164,4165,5398,4189,4190,5491,4201,4173,4219,10831,10832,10833,4179,10834,4226,4175,4199,4161,3130]],[[3009,3010]],[[3011,3012]],[[3013,3014]],[[3015,3016]],[[3017,3018]],[[3019,3020]],[[-3022,291,-3023]],[[-290,3023]],[[4227]],[[4228]],[[5492]],[[4194]],[[3024]]]},{"type":"Polygon","id":5,"arcs":[[5720,-4577,5721,5719,3535,3536,3537,5716,4557,-476,-475,-474,4513,4514,5728,3448,3443,3541,3542,3543,3544,3545,5711,3506,5704,5705,5706,5707,5708,5709,5710,4507,4508,4509,4510,5681,3428,-70,3423,-4248,3524,3525,-3160,3526,3527,3528,6598,4500,-1083,-1082,3468,5702,5703,4530,4531,4532,-1172,-1176,3438,6634,5714,-4643,-4642,3483,3484,3485,3478,5694,5695,3437]]},{"type":"Polygon","id":20,"arcs":[[-4623,-5788,-5787,3682,3683,-4653,-4652,4875,4876,3721,3722,4813,3631,3632,3633,4856,4857,5954,4852,4853,4854,-4965,-3881,-4996,-4998,-3893,-3892,4803,3640,3641,-5991,-5023,-5022,-5046,3669,3670,-4980,5923,3698,3699,-3868,-4952,4833,3674,3675,3676,3677,4800,4801,5938,3744,3745,-1635,-1634,-464,-463,8185,5942,5943,3664,4784,4785,4786,3753,3754,3755,3756,-5781,-4648,3695,3696,4860,4861,3751,3752,-5807,-4625,-4624,4780,-5778,5950,3776,3777]]},{"type":"Polygon","id":31,"arcs":[[5028,5029,5030,-5031,5030,5031,5032,-5033,5056,5057,3872,3868,5980,5981,5982,5063,5064,5051,5052,3917,3918,4944,4945,3817,3818,5013,5011,5024,5008,5009,5025,5026,4982,4983,5984,5985,4950,-3675,-4834,4951,3867,-3700,-3699,-5924,4979,-3671,-3670,5045,5021,5022,5990,-3642,-3641,-4804,3891,3892,4997,4995,3880,4964,-4855,4961,5003,5004,5995,5996,3857,4969,4970,5075,5074,-407,-406,-336,-335,-334,-365,3850,5040,5041,3928]]},{"type":"Polygon","id":49,"arcs":[[-2411,-4780,622,623,624,5146,5147,6843,-1370,-1398,-1399,-1383,-1382,4013,6028,6029,6030,6042,6043,-9147,-6769,-8137,-6739,10142,-1336,-10091,6048,6049,5145,-2405,-2404,-2403,-2402,-2413,-2412]]},{"type":"MultiPolygon","id":2,"arcs":[[[3181,1028,2014,1030,3182,3175,1003,2002,999,2003,6344,992,3197,3210,3202,8892,3193,3204,1009,982,0,973,6348,975,10835,6352,10836,6354,954,6355,6356,957,6357,959,6358,961,10837,964,10838,967,8887,971,8888,1036,2008,1025,989,3194,944,3209,3199,994,6345,1022,6346,2005,1001,3173]],[[1031]],[[1032]],[[2015]],[[1033]],[[3183]],[[3179,10839,3171]],[[3184]],[[3185]],[[3186]],[[2016]],[[2017]],[[2018]],[[2019]],[[2020]],[[3176]],[[3177]],[[3178]],[[2006,997]],[[2007]],[[6347]],[[2024]],[[3172,2022]],[[1006]],[[2025]],[[1007]],[[1008]],[[2023,1005]],[[3212]],[[3213]],[[3214]],[[3215]],[[3216]],[[3217]],[[8893]],[[3205]],[[1011]],[[1012]],[[3206]],[[1013]],[[3207]],[[1014]],[[3208]],[[1015]],[[1016]],[[1017]],[[1018]],[[1019]],[[1020]],[[1021]],[[983]],[[984]],[[985]],[[986]],[[2]],[[987]],[[3]],[[4]],[[5]],[[6]],[[7]],[[8]],[[9]],[[972]],[[10]],[[11]],[[12]],[[13]],[[2010]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[8889]],[[20]],[[2011]],[[2012]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[2013]],[[30]],[[8890]],[[8891]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]],[[51]],[[52]],[[53]],[[54]],[[55]],[[56]]]},{"type":"MultiPolygon","id":28,"arcs":[[[4314,4315,4316,7503,7504,-1117,-1116,4307,7498,3156,6374,-75,6375,-78,6372,3164,3159,-3526,-3525,4247,-3424,69,-3429,-5682,-4511,-4510,8899,4277,4278,3224,3225,7494,4293,4294,4290,1055,1056,1057,1051,7488,7489,5603,5604,1060,1061,-8607,-8667,5614,-8670,-8757,3166,6367,6368,-8705,-8654,4302,5593,5594,5595,5596,10371,4268,4269,-4425,5623,6379,3218,7512,-6414]],[[5599]],[[5600]],[[10372]],[[10373]]]},{"type":"Polygon","id":40,"arcs":[[-3403,-2235,-2239,4603,5814,-2249,-2248,-5675,-150,-149,-231,-230,5744,5818,5819,5789,5790,4654,4655,4656,5815,-233,-2444,5816,-4876,4651,4652,-3684,-3683,5786,5787,4622,-3778,-3777,-5951,5777,-4781,4623,4624,5806,-3753,-3752,-4862,-4861,-3697,-3696,4647,5780,-3757,-3756,5820,5821,4575,4576,-5721,-3438,-5696,-5695,-3479,-3486,-3485,-3484,4641,4642,-5715,-6635,-3439,-1175,-1285,-1284,-243,-242,5805,-3342,-3341,-3340,5785,-4463,-4462,-3404]]},{"type":"Polygon","id":54,"arcs":[[4717,4718,4747,4748,4749,-1919,-1947,-1946,-1945,-1944,-901,-900,-905,-865,-864,-3792,-3791,-3790,-2449,-2448,-2447,-3804,-3803,-3802,4770,4771,5887,4775,5834,4766,-1144,4767,5911,5912,5913,4706,4707,5893,5894,4694,4695,4696,5922,4758,4759,-1127,-1126,5921,4741,4742,4743,5884,5885,5886,5883,5832,5829,4752,4753,5891,5847,5848,5849,5854,4683,4678,5914,4668,4669]]},{"type":"MultiPolygon","id":26,"arcs":[[[-3038,-3037,-1903,-1902,-3153,-2959,-2958,-1790,5400,5464,5519,5516,5520,5562,5448,5486,5505,5441,6162,5418,5525,5523]],[[5466,5579,5548,5549,5537,5538,-6257,6275,6276,5446,5443,5527,5528,5431,5432,5581,5582,5583,5472,5462,5533,6277,5570,6322,6338,5385,5585,5564,5497,6317,5502,5530,5367,5541,5390,5388,5406,5566,5361,5409,5568,5476]],[[6163]],[[6318]],[[6319]],[[6320]],[[6321]],[[5586]],[[5587]],[[5588]],[[5526]],[[5518]]]},{"type":"Polygon","id":8,"arcs":[[8136,6768,9146,-6044,-6043,-6031,-6030,-6029,-4014,-1388,-1419,-1422,-1421,-331,-330,-409,-408,-5075,-5076,-4971,-4970,-3858,-5997,-5996,-5005,-5004,-4962,-4854,-4853,-5955,-4858,-4857,-3634,-3633,-3632,-4814,-3723,-3722,-4877,-5817,-2443,-2442,-1459,-1458,-1432,-1436,-2425,-2429,-1415,-1414,-1413,6738]]},{"type":"MultiPolygon","id":34,"arcs":[[[1318,-1957,-926,-925,-932,-931,-2000,-827,-826,-1991,-5490,1324,1325,-4211,-4193,-5491,-3132,287,288,289,290,291,-3023,8978,-3020,8979,-3018,8980,-3016,8981,-3014,8982,10451,-3012,10452,-3010,10453,10840,7889,2272,6525,10044,306,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548,6549,6550,6551,6552,6553,6554,6555,6556,6557,6558,6559,6560,6561,6562,6563,6564,6565,6566,6567,6568,6569,6570,6571,6572,6573,6574,6575,6576,6577,6578,6579,6580,6581,6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592,6593,6594,6595,6596,6597,-6602,-751,-1958]],[[295,296,297,298]],[[299,300]],[[301,302]],[[303,304]]]},{"type":"MultiPolygon","id":10,"arcs":[[[-2475,-4881,-4893,-1602,-1601,-4891,-1489,-1488,-3794,-1814,-754,-1812,-752,6601,-6598,6602,6529,6599]],[[-6539,6603]],[[-6541,6604]],[[-6543,6605]],[[-6545,6606]],[[-6547,6546,6607]],[[-6549,6608]],[[-6551,6609]],[[-6553,6610]],[[-6555,6611]],[[-6556,6612]],[[-6558,6613]],[[-6560,6614]],[[-6562,6615]],[[-6564,6616]],[[-6566,6617]],[[-6568,6618]],[[-6570,6619]],[[-6572,6620]],[[-6574,6621]],[[-6576,6622]],[[-6578,6623]],[[-6580,6624]],[[-6582,6625]],[[-6584,6626]],[[-6586,6627]],[[-6588,6628]],[[-6590,6629]],[[-6592,6630]],[[-6594,6631]],[[-6596,6632]],[[6633]]]},{"type":"Polygon","id":30,"arcs":[[-7897,8003,8113,8112,7919,7920,-8065,8094,8095,8097,7931,8025,8067,7927,8093,7973,8016,8107,8088,-3593,-3576,-3580,-3604,-3603,-3554,-3553,-2292,-2349,8081,7980,7981,-396,-395,-376,-369,-368,-358,-357,-420,-419,-418,-352,-8040,-8039,-8038,-8011,-8034,-8033,-7898]]},{"type":"MultiPolygon","id":53,"arcs":[[[-8063,-9130,-9131,8332,-7951,8333,6810,-2490,-2489,-2488,-2513,-2512,-2511,-1638,-1637,-2579,-2569,-2565,-1661,-1660,-2546,-2549,-2541,-2540,-2539,2537,-2537,2535,-2535,2533,-2533,2531,-2531,2529,-2529,2527,-2527,-1652,10534,8308,-1650,8309,10531,8326,6804,8324,6787,1670,10533,6789,8310,10532,9216,10524,10529,10526,6799,8322,10535,6805,8335,6791,6792,6793]],[[8320]],[[10527]],[[9219]],[[6800]],[[6801]],[[8323]],[[6802]],[[10530]],[[10521]],[[10522]],[[10523]]]},{"type":"Polygon","id":9,"arcs":[[-7287,-2470,-1497,-1496,-1611,6832,9223,10137,6826,-4190,-5399,-4166,-4165,-6885,-7265,-7264,-7263,-7288]]},{"type":"MultiPolygon","id":6,"arcs":[[[-2523,-3939,2760,-2517,2754,-3883,-2575,-2376,-2375,-2374,-2373,625,626,627,-2388,-2390,605,606,607,608,-2366,-4698,-2415,-2414,8356,-1346,-1345,642,643,644,6066,584,10143,10140,599,8346,618,10546,8351,10536,8348,10146,10544,10148,9229,10548,2764,6862,10841,10540,10842,10843,10844,6861,2766,5154,10547,6869]],[[601]],[[10545]],[[10845,10543,6853]],[[10144]],[[10145]],[[10141]],[[602]],[[603]]]},{"type":"MultiPolygon","id":21,"arcs":[[[7138,7139]],[[-4743,-7599,8461,-7779,7307,7085,7086,6981,6982,8365,8366,8687,8688,7127,7128,7092,7093,7233,7104,7099,7249,7250,8682,8683,7196,7252,7253,8620,8621,8643,6921,6922,7275,7276,7305,7306,7140,7141,7142,7143,7304,7277,7190,7191,-3971,-3970,-2591,-2590,7123,-2601,-2600,-2599,7298,7296,7050,7051,7045,8742,8743,7279,7280,8623,8608,8609,8610,7228,7006,6999,7000,7180,7294,7295,8664,8665,7330,7042,7038,7039,-6242,-6241,-6246,-7470,7107,-7469,-6206,-6205,7239,7118,-1973,-1978,-6265,-6267,-5887,-5886,-5885,-4744]]]},{"type":"MultiPolygon","id":25,"arcs":[[[-2461,-1614,-2469,-2468,-2471,7286,7287,7262,7263,7264,6884,-4164,-4173,-2998,6880,7010,-416,7011,7284,7285,7271,7018,7019,7020,6967,6931,6871,6927,6873,6894,7265,6893,6875,10846,6936]],[[7270]],[[6937]],[[7266]]]},{"type":"MultiPolygon","id":12,"arcs":[[[7487,7484,-8760,-8759,-8534,-8533,-8652,-8651,7384,7385,-2817,-2816,-6907,-7293,-7292,-6110,-6109,-5350,-5349,-6088,-5345,-6089,-4131,-4130,-5217,-5216,-2870,-5228,-5227,-2825,8884,7414,8816,8868,8885,7352,8873,8880,8802,8878,7359,8793,7398,8881,7429,8849,10847,10848,8845,7434,8846,8832,7423,8796,8768,10849,8771,10850,8775,8823,8865,7339,8875,7444,8835,7455,8787,7355,8764,8872,8854,8882,8886,7486]],[[8794,7400]],[[7401]],[[7402]],[[7403]],[[7404]],[[7405]],[[7406]],[[7407]],[[7408]],[[7438]],[[8776]],[[7409]],[[7357]],[[7358]]]},{"type":"Polygon","id":16,"arcs":[[8037,8038,8039,-351,-350,-349,-1373,-1372,-1371,-6844,-5148,-5147,-625,-624,-4779,-4778,-4777,-2350,-2550,-2555,-2554,-2553,-3922,-3921,-2493,-2492,-2491,-6811,-8334,7950,-8333,9130,9129,8062,-6794,-6793,8114,-8095,8064,-7921,-7920,-8113,-8114,-8004,7896,7897,8032,8033,8010]]},{"type":"Polygon","id":29,"arcs":[[-3545,3543,-3543,-3542,-3444,-3449,-5729,-4515,-4514,473,474,475,-4558,-5717,-3538,-3537,-3536,-5720,-5722,-4576,-5822,-5821,-3755,-3754,-4787,-4786,-4785,-3665,-5944,-5943,-8186,462,463,1633,1634,-3746,-3745,-5939,-4802,-4801,-3678,-3677,-3676,-4951,-5986,-5985,-4984,-9786,-9824,-9825,-9360,-9359,-9791,-9790,-9803,8280,8281,-9853,-9753,8219,8220,9205,9206,8165,8166,-5097,-5096,8282,9201,-2615,-2614,-2613,9177,10506,9187,-555,-5104,-5103,445,446,-6842,-544,433,-543,-3959,-3958,-5088,-528,-527,9182,-9221,8222,-7191,-7278,-7305,-7144,-7143,-10312,-7140,-10311,8261,8262,-5706,-5705,-3507,-5712,-3546]]},{"type":"MultiPolygon","id":15,"arcs":[[[8443]],[[8646]],[[8647]],[[8648]],[[8470,8645]],[[8410]],[[8411]],[[8468]],[[8469]]]},{"type":"MultiPolygon","id":1,"arcs":[[[8674,8675,-2900,-2904,-4086,-5351,-5353,-7207,-2832,-2831,-5281,-2892,-2891,-6999,-6100,-6099,-7032,-7031,-6976,-6975,-7270,-6998,-6997,-4139,-6990,-6991,-5238,-5237,-2818,-7386,-7385,8650,8651,8532,8533,8758,8759,-7485,-7488,8478,8655,-5594,-4303,8653,8704,-6369,-6368,-3167,8756,8669,-5615,8666,8606,-1062,-1061,-5605,-5604,-7490,-7489,-1052,-1058,-1057,8585,8586,8587,8588,8518,8519,8511,8512]],[[-5596,8656]],[[8657]]]},{"type":"Polygon","id":45,"arcs":[[-4106,-7269,-7268,-5339,-7064,-7324,-2795,8430,8431,8729,8760,-918,8761,8451,8452,8374,8375,8719,8720,-914,-913,-704,-703,8749,-696,8698,-799,-804,8737,8738,8739,8732,8662,8727,8487,8627,-4120,-6141,-6140,-6094,-6093,-5189,-5188,-5187,-5186,-5292,-5291,-5290,-4069,-4068,-6125,-4108,-4107]]},{"type":"Polygon","id":33,"arcs":[[-424,9835,-384,-390,-317,-321,8591,8592,9844,9845,8680,9758,9759,-7020,-7019,-7272,-7286,-7285,-7012,-415,-414,-425]]},{"type":"Polygon","id":46,"arcs":[[-5029,-3929,-5042,-5041,-3851,-364,-363,-342,-341,-340,-398,-397,-7982,-7981,-8082,-2348,-3568,-3571,-3570,-3616,-2257,-2256,-3559,-3563,-3589,-3592,-3627,-3626,-3621,9095,9096,10100,10101,9031,9032,9033,9019,10102,9002,9003,-9597,-9844,9042,9043,9044,-3918,-5053,-5052,-5065,-5064,-5983,-5982,-5981,-3869,-3873,-5058,-5057,5032,-5033,-5032,-5031,5030,-5031,-5030]]},{"type":"Polygon","id":17,"arcs":[[-9188,-10507,-9178,2612,2613,2614,-9202,-8283,5095,5096,5092,-9883,-9866,563,564,3974,3975,3976,3972,1691,4000,4001,498,493,494,495,-3136,-3092,536,537,-3094,-3152,2608,-1895,-1894,9225,6838,6839,577,1711,1712,9222,9221,6000,6001,6002,5118,5119,3984,3985,487,488,-9242,4010,4006,6016,6017,10138,-7299,2598,2599,2600,-7124,2589,2590,3969,3970,-7192,-8223,9220,-9183,526,527,5087,3957,3958,542,-434,543,6841,-447,-446,5102,5103,554]]},{"type":"Polygon","id":47,"arcs":[[-4295,-4294,-7495,-3226,-3225,-4279,-4278,-8900,-4509,-4508,-5711,-5710,-5709,-5708,-5707,-8263,-8262,10310,-7139,10311,-7142,-7141,-7307,-7306,-7277,-7276,-6923,-6922,-8644,-8622,-8621,-7254,-7253,-7197,-8684,-8683,-7251,-7250,-7100,-7105,-7234,-7094,-7093,-7129,-7128,-8689,-8688,-8367,-8366,-6983,10157,9314,-6448,-6447,-6446,9711,-7645,9712,9368,9369,9370,9371,9372,10288,-806,-805,9638,9639,9555,9268,9269,9279,9280,10240,10241,10369,10370,9318,-6106,-2906,-2905,-7323,-7322,-6925,-4087,-2902,-2901,-8676,-8675,-8513,-8512,-8520,-8519,-8589,-8588,-8587,-8586,-1056,-4291]]},{"type":"Polygon","id":18,"arcs":[[-6177,-7481,-7480,-7482,-6338,-6337,-7380,-7379,-6243,-7040,-7039,-7043,-7331,-8666,-8665,-7296,-7295,-7181,-7001,-7000,-7007,-7229,-8611,-8610,-8609,-8624,-7281,-7280,-8744,-8743,-7046,-7052,-7051,-7297,-10139,-6018,-6017,-4007,-4011,9241,-489,-488,-3986,-3985,-5120,-5119,-6003,-6002,-6001,-9222,-9223,-1713,-1712,-578,-6840,10361,10368,9607,-5583,-5582,-5433,-5432,-5529,-5528,-5444,-5447,-6277,-7479,-7478,-6269,-6268,-6301,-6248,-6247,-6178]]},{"type":"Polygon","id":19,"arcs":[[9789,9790,9358,9359,9824,9823,9785,-4983,-5027,-5026,-5010,-5009,-5025,-5012,-5014,-3819,-3818,-4946,-4945,-3919,-9045,-9044,-9043,9843,9596,-9004,9597,9598,9875,9876,9746,9855,9856,9411,9412,9590,9591,9430,9431,9776,9883,9884,9879,9880,9869,-2929,-1910,-1909,-3123,-3122,-494,-499,-4002,-4001,-1692,-3973,-3977,-3976,-3975,-565,-564,9865,9882,-5093,-8167,-8166,-9207,-9206,-8221,-8220,9752,9852,-8282,-8281,9802]]},{"type":"Polygon","id":4,"arcs":[[-1440,10457,10089,1332,2362,-644,-643,1344,1345,-8357,-2417,-2406,-5146,-6050,-6049,10090,1335,-10143,-1412,-2440,-1454,-2434,-2433,-1403,-1437]]},{"type":"Polygon","id":27,"arcs":[[-10103,-9020,-9034,-9033,-9032,-10102,-10101,-9097,-9096,-3620,-3619,-3618,-3585,-3584,-2270,-2269,-2297,-2296,-3557,-2330,-2329,10581,10652,10180,10728,10634,10813,10726,10814,10636,-1851,-1850,-1849,-3101,-3100,-1890,-1889,-3120,-1897,-1896,-1901,-3061,-3060,-1784,-1788,-2924,-1880,-1879,-2930,-9870,-9881,-9880,-9885,-9884,-9777,-9432,-9431,-9592,-9591,-9413,-9412,-9857,-9856,-9747,-9877,-9876,-9599,-9598,-9003]]},{"type":"MultiPolygon","id":22,"arcs":[[[10375,-2210,1087,-132,-131,-137,-136,2035,-1306,-1305,7560,-10041,-7871,-3369,10376,-4532,-4531,-5704,-5703,-3469,1081,1082,-4501,-6599,-3529,-3528,-3527,-3165,-6373,77,-6376,74,-6375,-3157,-7499,-4308,1115,1116,-7505,-7504,-4317,-4316,-4315,6413,-7513,-3219,-6380,-5624,4424,-4270,4425,10851,9889,10852,10853,10854,10855,10856,10857,10858,10859,10860,10861,10862,10863,10864,9935,10865,10866,10867,9943,10868,10869,10870,4318,4421,5631,7546,10871,10872,5637,10873,7551,5634,10874,7553,3234,10875,10876,10877,10878,3245,10879,10880,3253,10881,7537,10882,10883,3262,10884,10885,10886,7526,7554,5648,7555,5650,10374]],[[4415]]]},{"type":"Polygon","id":11,"arcs":[[-84,7561,7562,7563,-4889,-3809]]},{"type":"MultiPolygon","id":51,"arcs":[[[-1512,7747,-1510,7748,-1508,7727,-1506,7728,-1504,7729,-1502,7730,-1500,7731,-1499,7732,-1597,7733,-1595,7734,-1593,7735,-1591,7736,-1589,7737,-1587,7738,-1585,7739,-1583,7740,-1581,7741,-1579,7742,7743,-1577,7744,-1574,-1573,2058,-1571,2059,-1569,2060,-1567,2061,-1565,2062,-1563,2063,-1561,2064,-1559,2065,-1557,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,7624,-4921,7625,-4919,7626,-4917,7627,-4915,7628,-4913,7629,-4911,7630,-4909,7631,-4907,7632,-4905,7633,-4903,7634,-4901,7635,-4899,7636,9972,7750,7753,8936,10402,2053,9977,8952,7608,8949,8956,7574,9964,10393,10887,9962,8922,3281,3282,10392,10390,10395,10396,7691,7692,7686,9957,8924,8925,7579,7580,7581,7657,7658,7659,6421,10389,6423,6424,9958,9959,7570,-785,-784,-783,10388,10385,-9370,-9369,-9713,7644,-9712,6445,6446,6447,-9315,-10158,-6982,-7087,-7086,-7308,7778,-8462,7598,-4742,-5922,1125,1126,-4760,-4759,-5923,-4697,-4696,-4695,-5895,-5894,-4708,-4707,-5914,-5913,-5912,-4768,1143,-4767,-5835,-4776,-5888,-4772,-4771,-3801,-2459,-4887,4885,-4885,-4890,-7564,7562,-7562,83,84,-3808,-1552,7516,-1550,7517,-1548,7518,-1546,7519,7673,-1544,7674,-1542,7675,-1540,7676,-1538,7677,-1536,7678,-1534,7679,-1532,7680,10888,7683,3298,-1530,3299,-1528,3300,-1526,3301,-1524,3285,-1522,3286,-1520,3287,-1518,3288,-1516,3289,-1513]],[[2046,2047]],[[2044,2045,2041,10404,2043]],[[2048]]]},{"type":"MultiPolygon","id":48,"arcs":[[[-1365,-1364,-1427,-1426,-1430,-1429,1218,1219,1194,-1457,-2445,235,232,-5816,-4657,-4656,-4655,-5791,-5790,-5820,-5819,-5745,229,230,148,149,5674,2247,2248,-5815,-4604,2238,2234,3402,3403,4461,4462,-5786,3339,3340,3341,-5806,241,242,1283,1284,1174,1175,1171,-4533,-10377,3368,7870,10040,-7561,1304,1305,-2036,135,136,130,131,-1088,2209,-10376,10421,9986,7808,10889,7810,10890,7814,10891,7819,10892,10893,7828,10894,10895,10896,10897,10003,1250,10898,10899,10900,10901,10902,10903,10904,10012,10905,10906,10907,10908,10909,7799,10910,7805,173,7806,167,3406,10911,10912,3410,10435,10913,10914,10915,10916,10917,3389,10427,2098,10918,10919,10920,10921,10922,2114,10407,10442,10409,2116,10406,2183,10923,6476,10924,10925,10926,10927,10928,10929,10930,10931,2157,10932,10933,10934,10935,10936,10937,10938,2144,10939,2139,3394,1187,281,10030,6460,139,1282,1165,10033,143,1237,3371,112,5661,7864,8974,-2420,2418,-2418,-1410,-1409,-1408,-1444,-1443,-1442,-1368,-1367,-1366,255]],[[10032]],[[2189]],[[3398,2188,10415,10438,10940,10941,10441,10414,2186,3397,1181,284,10031,286,1182]]]},{"type":"Polygon","id":50,"arcs":[[10471,319,320,316,389,383,-9836,423,424,413,414,415,-7011,-6881,-2997,-5585,411,403,404,-4236,-3051,430,428,325]]},{"type":"MultiPolygon","id":23,"arcs":[[[1396,1348,1470,10474,10484,10479,10488,10494,10483,-9759,-8681,-9846,-9845,-8593,10467,10461,10463]],[[1471]],[[1472]],[[1473]],[[1474]],[[1475]],[[1476]],[[1477]],[[10485]],[[1478]],[[1479]],[[10486]],[[10487]],[[10476]],[[10481]],[[10495]],[[10496]],[[10497]],[[10498]],[[10499]],[[10500]],[[10501]]]},{"type":"MultiPolygon","id":37,"arcs":[[[-9639,804,805,-10289,-9373,-9372,-9371,-10386,-10389,782,783,784,-7571,-9960,-9959,-6425,-6424,-10390,-6422,-7660,-7659,-7658,-7582,-7581,-7580,-8926,-8925,-9958,-7687,-7693,-7692,-10397,-10396,-10391,-10393,-3283,10659,10738,10661,10799,10627,767,10711,10736,10748,10782,10755,10942,10774,10742,10775,821,10784,10763,655,10823,10780,10754,10696,-8739,-8738,803,798,-8699,695,-8750,702,703,912,913,-8721,-8720,-8376,-8375,-8453,-8452,-8762,917,-8761,-8730,-8432,-8431,-2794,-2793,-6091,-2856,-2855,-6107,-9319,-10371,-10370,-10242,-10241,-9281,-9280,-9270,-9269,-9556,-9640]],[[10746]],[[10740,10777]]]}]}},"arcs":[[[545597,7057685],[-4721,-11803],[2511,48748],[-4662,4893],[-1011,-10115],[-4984,-1915],[-896,-13208],[-9311,-22267],[-4013,-23927],[-1210,16742],[-2419,-19580],[-3189,-1496],[-2340,14073],[-4132,-17964],[-6070,-13765],[-7692,997],[1069,25091],[2949,22769],[-6231,297],[-3115,-18842],[344,-20844],[-6043,-38015],[-3980,3867],[2379,-22249],[-2575,-6087],[-3459,15010],[-1166,-23477],[-7023,4297],[-1088,37106],[-4221,8258],[-1564,-13923],[3854,-15530],[292,-31015],[-2152,4852],[-5543,-13135],[-6507,34565],[-4104,-12907],[5300,-18746],[-9392,-26524],[1403,-9463],[4979,2100],[2421,-13739],[-6224,1360],[-1788,10453],[-2634,-17835],[-4085,-8289],[-4496,4374],[-9406,-2785],[-6868,-16790],[-593,-12243],[-8017,-13824],[-5696,4944],[-2921,29596],[6695,16064],[4436,42538],[3426,8248],[2333,-7245],[8715,14165],[3791,12971],[10078,1828],[3751,-27424],[2213,-4164],[117,46081],[5842,10794],[6204,-137],[14,16945],[4933,8706],[12755,67331],[12000,39116],[14640,17620],[5972,-7683],[4952,10657],[2241,-16522],[-2943,-1904],[-187,-16138],[3471,-14247],[4193,305],[-3167,22161],[7647,1109],[1560,-13960],[4495,-4445],[117,17037],[-7315,15486],[-910,12062],[5886,51571],[14740,49481],[14033,23663],[1239,8480],[8983,25366],[1790,-8497]],[[564297,7277194],[-3770,-9682],[0,-15843],[-6879,439],[0,-17003],[-8837,-1],[-21,-16171],[-8527,-476],[-117,-31705],[2620,-170],[122,-63470],[-1752,-17616],[8454,1],[7,-47812]],[[552386,6919965],[0,0]],[[548520,6929583],[307,21655],[2875,-926],[378,-15872],[-3560,-4857]],[[544539,6904384],[0,0]],[[543190,6951509],[3615,35114],[318,-39678],[-3933,4564]],[[538521,6905632],[0,0]],[[526474,6926057],[4361,23057],[-2591,12236],[3506,15350],[6827,-4179],[-1453,-15566],[-6887,-20554],[-3098,-22649],[-665,12305]],[[523778,7018966],[5866,4590],[-134,-11896],[-5732,7306]],[[509596,6998808],[4076,15832],[7931,-12015],[2562,3979],[-210,-20280],[-6219,15107],[2180,-25996],[-1088,-11932],[-4599,15087],[-2895,-14240],[-1738,34458]],[[493731,6979730],[0,0]],[[486281,6979908],[0,0]],[[480507,6965799],[2030,6801],[7169,-14596],[-4664,-8692],[-4535,16487]],[[465608,6925951],[3027,10497],[2615,-17659],[-2457,-11802],[-3185,18964]],[[454682,6843894],[6652,-7634],[-642,-15346],[-4719,1311],[-1291,21669]],[[388003,6771031],[7888,6571],[-2968,-13113],[-4920,6542]],[[380691,6766063],[6028,3825],[589,-7367],[-6617,3542]],[[375098,6798795],[1329,8921],[6437,-15860],[-4009,-18837],[-2242,3811],[1391,18159],[-2906,3806]],[[363471,6778999],[3294,14418],[3067,-883],[5617,-22503],[-10446,-9742],[-1532,18710]],[[360805,6749173],[0,0]],[[314688,6623915],[4399,13558],[6606,10250],[2835,-3425],[7057,16954],[-1654,17002],[4236,5510],[289,15568],[5388,-9880],[516,12886],[-6621,4242],[-3258,13044],[3083,22138],[7790,13261],[2983,-293],[-60,-16977],[2403,-8425],[3254,5793],[1952,18775],[4532,-14314],[-9373,-34469],[192,-6266],[11718,26040],[239,-14636],[-4790,-17339],[-7542,-11375],[-753,-17407],[-4291,-4457],[-3985,-14367],[-7135,-643],[-4704,-16759],[-8892,-16200],[-6414,12211]],[[281202,6539248],[2655,4265],[5551,36577],[-100,18971],[4073,14632],[7115,-1635],[-1247,17621],[1793,24258],[9403,16857],[5952,-8419],[-1429,-25192],[-11937,-26892],[-6318,-38822],[-16855,-39504],[1344,7283]],[[261462,6560734],[0,0]],[[260712,7242085],[7864,-1406],[-2094,-13807],[-5770,15213]],[[254736,6536157],[6427,8929],[2981,-5635],[-1047,-13178],[-7211,-760],[-1150,10644]],[[251709,6546507],[0,0]],[[249680,6512996],[0,0]],[[243052,7345239],[7297,11293],[-3473,-18996],[-3824,7703]],[[231635,6489969],[5560,18246],[834,-17919],[-5144,-11509],[-1250,11182]],[[218280,6470038],[0,0]],[[181849,6433586],[4795,17349],[4089,-11510],[-3148,-9959],[-5419,-4441],[-317,8561]],[[142059,6402544],[6858,-4964],[5569,8869],[2458,-8502],[15482,-2752],[-16434,-12043],[-4726,6320],[-6109,-1040],[-3098,14112]],[[106435,6382726],[18690,15148],[5642,20751],[4310,-777],[1204,11133],[-2863,7494],[939,11962],[3889,7429],[3261,-5139],[2239,-17779],[-5820,-18622],[3236,-12696],[-7070,-2401],[-3297,-10136],[-7909,-10058],[-6443,5595],[-3556,-6814],[-6452,4910]],[[94713,6368429],[0,0]],[[88957,6374485],[3899,2138],[1510,-14430],[-5409,12292]],[[81967,6391938],[4102,5657],[1934,-13282],[-2522,-12472],[-3514,20097]],[[81105,6345091],[521,9109],[6267,7118],[823,-12429],[-4918,-8211],[-2693,4413]],[[60069,6308234],[3359,19264],[-935,14937],[3179,1019],[450,27829],[6119,4635],[-1979,-24489],[9325,2305],[23,-24419],[-6391,3145],[-1772,-12477],[-3626,-1589],[-2469,-13073],[-1711,13370],[-1891,-17304],[-1681,6847]],[[40177,6322869],[4181,2599],[9563,17072],[340,21054],[4310,-4906],[-2561,-15744],[395,-15936],[-3868,-9079],[-3597,9860],[-8763,-4920]],[[25708,6355332],[7592,6490],[2572,-16547],[6812,5266],[-5082,-11564],[-1633,-21017],[-2997,-5762],[-4291,5166],[4332,7851],[-7305,30117]],[[12984,6304472],[0,0]],[[8079,6298415],[0,0]],[[7723,6339343],[1640,8192],[1695,-15211],[-3335,7019]],[[4324,6261863],[0,0]],[[281,6244023],[0,0]],[[9991752,6374454],[5039,7507],[3081,-9780],[-4445,-18517],[-3675,20790]],[[9967877,6309779],[7756,-4191],[9093,-37715],[6477,-6971],[-5604,-3461],[-8637,34492],[-9085,17846]],[[9962902,6373590],[4030,-4786],[-2483,-9922],[-1547,14708]],[[9957050,6345512],[0,0]],[[9953085,6383898],[0,0]],[[9928253,6358306],[8194,18112],[1838,24076],[3136,-5576],[-3837,-21201],[621,-11705],[-4207,2706],[-2104,-16168],[-3641,9756]],[[9891227,6447110],[0,0]],[[9840933,6515220],[0,0]],[[9837726,6518312],[0,0]],[[9835312,6522752],[0,0]],[[9821066,6453578],[7461,18977],[4057,959],[-2171,-12379],[950,-16725],[-3814,8309],[-6483,859]],[[9796146,6551209],[4664,13881],[13323,-1515],[8760,-27655],[-5366,1998],[-1732,-11404],[-7335,-6282],[-7335,30655],[-4979,322]],[[2478194,3104164],[-2,8112]],[[2478192,3112276],[13298,-28]],[[2491490,3112248],[8,-67708]],[[2491498,3044540],[-11,-5433],[-5852,148]],[[2485635,3039255],[-5683,-792]],[[2479952,3038463],[28,19734],[-1662,6720],[-124,39247]],[[2513968,2742141],[19,-66029]],[[2513987,2676112],[-11391,-135]],[[2502596,2675977],[3,66067]],[[2502599,2742044],[139,4]],[[2502738,2742048],[11230,93]],[[2465421,3006177],[-68,24572],[-8261,237]],[[2457092,3030986],[527,21565],[2486,-5393],[2969,18536],[-416,11549],[5285,11654],[-80,17847]],[[2467863,3106744],[4732,-18917]],[[2472595,3087827],[14,-30375],[-1436,164],[-12,-35464]],[[2471161,3022152],[-1,-16330]],[[2471160,3005822],[-5739,355]],[[2454373,2657436],[634,-704]],[[2455007,2656732],[-634,704]],[[2443115,2734814],[9025,19],[1780,4659]],[[2453920,2739492],[-658,-19731],[2774,-1223],[200,-18548],[2071,-2303],[-2523,-21788],[-3375,-2236]],[[2452409,2673663],[-271,7157],[-5209,-8777],[-4792,168]],[[2442137,2672211],[-947,18217],[1393,19679]],[[2442583,2710107],[532,24707]],[[2804942,3766323],[0,0]],[[2842833,3915079],[1747,-412]],[[2844580,3914667],[251,-9287]],[[2844831,3905380],[-66,-1165]],[[2844765,3904215],[-1932,10864]],[[2779976,3706147],[0,0]],[[2837162,3919486],[0,0]],[[2837316,3914955],[0,0]],[[2301794,2736212],[-14164,634]],[[2287630,2736846],[170,82480]],[[2287800,2819326],[5246,-330]],[[2293046,2818996],[9114,-982]],[[2302160,2818014],[-59,-31575]],[[2302101,2786439],[-307,-50227]],[[2172130,2650472],[-2235,-13]],[[2169895,2650459],[-12003,74]],[[2157892,2650533],[175,81925]],[[2158067,2732458],[14325,-209]],[[2172392,2732249],[-262,-81777]],[[2205216,2977798],[-1450,1]],[[2203766,2977799],[41,73711],[1376,-1015]],[[2205183,3050495],[6285,-24533],[3316,1063],[2940,-8047],[2012,5549]],[[2219736,3024527],[-10,-47097]],[[2219726,2977430],[32,-18746]],[[2219758,2958684],[-2241,12112],[-7807,6971],[-4494,31]],[[2161518,3066991],[2599,-38]],[[2164117,3066953],[11983,29]],[[2176100,3066982],[9,-89623]],[[2176109,2977359],[-14555,-594]],[[2161554,2976765],[-36,90226]],[[2133596,2269682],[6861,-32545]],[[2140457,2237137],[-2538,-20757],[-2099,3471],[-5228,-7953],[-3687,-41317],[-997,-30953],[-1755,-18665],[1085,-6262],[-6494,-30722],[-384,-13501],[-3768,-1422],[-2667,12019],[-2309,-529],[-2659,17490],[-5609,10399],[-1899,13320]],[[2099449,2121755],[-223,215258]],[[2099226,2337013],[10050,47432]],[[2109276,2384445],[24320,-114763]],[[2335824,2891925],[54,158]],[[2335878,2892083],[5048,2139]],[[2340926,2894222],[-19,-66425]],[[2340907,2827797],[-726,-3954]],[[2340181,2823843],[-590,-9648],[-3778,125]],[[2335813,2814320],[11,77605]],[[2320411,2862377],[-20,-44876]],[[2320391,2817501],[-2307,57],[-1145,-20053],[1448,-6649]],[[2318387,2790856],[-3966,237]],[[2314421,2791093],[-6144,606]],[[2308277,2791699],[2,26211]],[[2308279,2817910],[51,69288]],[[2308330,2887198],[12167,10780]],[[2320497,2897978],[-86,-35601]],[[2384580,2422419],[-3345,-51421],[-1716,-10207],[1173,-18846],[-1213,-6720]],[[2379479,2335225],[-663,-10992],[1630,-18814]],[[2380446,2305419],[-5418,-200]],[[2375028,2305219],[996,131874],[-1266,39467]],[[2374758,2476560],[8660,3386]],[[2383418,2479946],[1331,1731]],[[2384749,2481677],[-297,-16551],[1530,-12097],[-1402,-30610]],[[2249064,1657753],[2840,-86]],[[2251904,1657667],[-7412,-98368]],[[2244492,1559299],[-2274,-3976],[-4353,25181],[-7189,4891],[-275,15258],[-2143,17446]],[[2228258,1618099],[4410,19343],[1585,20714]],[[2234253,1658156],[14811,-403]],[[2202013,2088777],[-15495,-378]],[[2186518,2088399],[-3019,16668],[-521,12779]],[[2182978,2117846],[1367,2470],[1293,30872],[-22,38212]],[[2185616,2189400],[16378,-119]],[[2201994,2189281],[19,-100504]],[[2190100,3229957],[15006,-83]],[[2205106,3229874],[0,-28510]],[[2205106,3201364],[0,-53163]],[[2205106,3148201],[-11576,218]],[[2193530,3148419],[-3478,38]],[[2190052,3148457],[48,81500]],[[2198548,2576681],[32,-19808],[3438,-1288]],[[2202018,2555585],[-111,-92141]],[[2201907,2463444],[-15980,-266]],[[2185927,2463178],[-120,81867],[-16016,886]],[[2169791,2545931],[8,5199]],[[2169799,2551130],[11211,1091],[1111,25055]],[[2182121,2577276],[16427,-595]],[[2213086,2649513],[2300,-151]],[[2215386,2649362],[12135,-382]],[[2227521,2648980],[-193,-114552]],[[2227328,2534428],[-3123,-10736],[-2526,7235],[-3013,-4311],[-2456,12439]],[[2216210,2539055],[-3339,15874]],[[2212871,2554929],[215,94584]],[[2341026,2090983],[72,-3791]],[[2341098,2087192],[-7330,-39588],[-3473,-7784]],[[2330295,2039820],[-1691,937],[-3119,25446],[-2376,309],[-72,16075],[-2195,10212],[-772,22817]],[[2320070,2115616],[735,6156]],[[2320805,2121772],[2641,11589],[2744,-6281],[2083,9206],[825,18400],[2438,150],[1069,26391]],[[2332605,2181227],[4530,2395],[1257,-6915]],[[2338392,2176707],[-465,-16943],[4861,-49108]],[[2342788,2110656],[-2599,-9740],[837,-9933]],[[2307668,2513819],[2300,10531]],[[2309968,2524350],[12518,38370]],[[2322486,2562720],[2153,-691],[-815,-20708]],[[2323824,2541321],[2287,-34826],[-1895,-8781],[-1092,-33107]],[[2323124,2464607],[-5835,-385],[-7444,-22164]],[[2309845,2442058],[-2406,53454],[229,18307]],[[2238457,1896205],[13067,60]],[[2251524,1896265],[2753,31]],[[2254277,1896296],[85,-148895]],[[2254362,1747401],[-8115,491]],[[2246247,1747892],[40,14633],[-7690,2010]],[[2238597,1764535],[-140,131670]],[[2132248,2975768],[8,91299]],[[2132256,3067067],[2494,26]],[[2134750,3067093],[12126,19]],[[2146876,3067112],[130,-91429]],[[2147006,2975683],[-14758,85]],[[2349749,2889389],[1723,-6495]],[[2351472,2882894],[2638,-11244]],[[2354110,2871650],[-49,-72878]],[[2354061,2798772],[-1445,-62]],[[2352616,2798710],[-392,4739]],[[2352224,2803449],[-2783,14673]],[[2349441,2818122],[308,71267]],[[2327857,2762744],[3345,-15147],[8945,-6736]],[[2340147,2740861],[4638,-6152]],[[2344785,2734709],[43,-31152]],[[2344828,2703557],[4,-43579]],[[2344832,2659978],[-13224,-456]],[[2331608,2659522],[-803,18143],[1102,22975]],[[2331907,2700640],[-4043,23327],[-7,38777]],[[2300536,2017000],[-72,286]],[[2300464,2017286],[-53,1487]],[[2300411,2018773],[-1,27]],[[2300410,2018800],[-123,1936]],[[2300287,2020736],[-1,12]],[[2300286,2020748],[-2,2]],[[2300284,2020750],[-207,368]],[[2300077,2021118],[-60,106]],[[2300017,2021224],[-310,-599]],[[2299707,2020625],[-822,-1585]],[[2298885,2019040],[-14,-25]],[[2298871,2019015],[-237,-281]],[[2298634,2018734],[-1897,26074],[-2246,12615],[-1114,19185],[-2966,7851]],[[2290411,2084459],[7804,37554]],[[2298215,2122013],[506,-3009]],[[2298721,2119004],[9225,-53254]],[[2307946,2065750],[-399,-53850]],[[2307547,2011900],[-7011,5100]],[[2221447,2089717],[57,100360]],[[2221504,2190077],[11925,-760],[1578,-11457],[3360,24046]],[[2238367,2201906],[50,-82361]],[[2238417,2119545],[-4,-29996]],[[2238413,2089549],[-16966,168]],[[2190067,3311593],[15039,-34]],[[2205106,3311559],[20,-36826]],[[2205126,3274733],[-20,-44859]],[[2190100,3229957],[-33,81636]],[[2121466,3476515],[23403,-14]],[[2144869,3476501],[-16,-83308]],[[2144853,3393193],[-24456,-3]],[[2120397,3393190],[-31,83316],[1100,9]],[[2229793,2730509],[-121,-81464]],[[2229672,2649045],[-2151,-65]],[[2215386,2649362],[51,81119]],[[2215437,2730481],[489,-1]],[[2215926,2730480],[13867,29]],[[2320836,2978526],[2369,6225]],[[2323205,2984751],[3739,6494],[5142,-7731],[3685,2003]],[[2335771,2985517],[51,-92942]],[[2335822,2892575],[-7165,18043],[-5667,3275],[-2466,-6145]],[[2320524,2907748],[312,70778]],[[2271837,2556988],[5200,-50080]],[[2277037,2506908],[-13610,-46949]],[[2263427,2459959],[-7604,73810]],[[2255823,2533769],[11523,39073]],[[2267346,2572842],[2134,7217],[2357,-23071]],[[2132817,2813619],[10768,23]],[[2143585,2813642],[162,-81549]],[[2143747,2732093],[-232,-5]],[[2143515,2732088],[-23783,-198]],[[2119732,2731890],[1,81779]],[[2119733,2813669],[13084,-50]],[[2235202,2285682],[9257,124]],[[2244459,2285806],[4845,-37696]],[[2249304,2248110],[-6467,-36008]],[[2242837,2212102],[-3696,-4682]],[[2239141,2207420],[-3871,11460]],[[2235270,2218880],[-68,66802]],[[2348159,2545599],[-2343,20539],[346,39103]],[[2346162,2605241],[13515,-238]],[[2359677,2605003],[1486,-35692]],[[2361163,2569311],[2458,-12055],[-439,-68214]],[[2363182,2489042],[-6358,39376],[-4841,4128],[-3824,13053]],[[2279909,2400623],[1572,25686],[5263,18085]],[[2286744,2444394],[6716,22396]],[[2293460,2466790],[2028,-33442],[1989,-3933],[1774,-32826]],[[2299251,2396589],[-9538,-32503]],[[2289713,2364086],[-5338,-18685]],[[2284375,2345401],[-3237,52100],[-1229,3122]],[[2252547,2266909],[3472,59582]],[[2256019,2326491],[12893,-62108]],[[2268912,2264383],[-5117,-26348],[519,-4778]],[[2264314,2233257],[-3455,-19796]],[[2260859,2213461],[-871,17987],[-7441,35461]],[[2264687,1576261],[-1,15989],[-3964,2846],[1303,30506]],[[2262025,1625602],[2667,-2578],[11715,356]],[[2276407,1623380],[102,-28090],[1534,-7206]],[[2278043,1588084],[-1797,-16168],[-2245,-4799],[-9314,9144]],[[2279827,1623449],[852,15]],[[2280679,1623464],[1787,-35349]],[[2282466,1588115],[-477,3]],[[2281989,1588118],[-2162,35331]],[[2929920,4280832],[-1103,-16486]],[[2928817,4264346],[-2222,-11484]],[[2926595,4252862],[-443,-471]],[[2926152,4252391],[-319,-338]],[[2925833,4252053],[-829,97]],[[2925004,4252150],[688,5646]],[[2925692,4257796],[-302,20972]],[[2925390,4278768],[4530,2064]],[[2928438,4262420],[-150,-1791]],[[2928288,4260629],[-95,289]],[[2928193,4260918],[183,1746]],[[2928376,4262664],[62,-244]],[[2928436,4262434],[-30,207]],[[2928406,4262641],[30,-207]],[[2928387,4262700],[-4,-3]],[[2928383,4262697],[4,3]],[[2928186,4260836],[78,-399]],[[2928264,4260437],[-78,399]],[[2905510,4004981],[-1501,-27367]],[[2904009,3977614],[-5567,5615],[-4851,15349],[-3299,17295]],[[2890292,4015873],[917,13698],[3757,19476],[4324,-18933],[623,20702]],[[2899913,4050816],[2138,-10077]],[[2902051,4040739],[3598,-16860],[-139,-18898]],[[3058896,5081187],[13905,12974],[-678,15378],[2921,2877],[-2263,53718],[-2991,-2796],[160,28045],[3674,4235],[213,133074]],[[3073837,5328692],[10669,-2557],[95,-150422],[10727,11496]],[[3095328,5187209],[3016,-69640],[-3210,-2857]],[[3095134,5114712],[-6930,-5811],[926,-22725],[-3522,-3149],[585,-16083],[-3488,-3118],[1557,-40748],[-10325,-14836]],[[3073937,5008242],[-605,3439],[-9646,-10877],[-2314,14583]],[[3061372,5015387],[-2476,65800]],[[2991777,4956372],[-2032,-11012]],[[2989745,4945360],[-2664,17477],[2135,10295],[-1449,9528],[1837,11994],[-1882,6715],[2033,13028],[-2859,9807]],[[2986896,5024204],[1825,20093],[-647,24677]],[[2988074,5068974],[11048,960]],[[2999122,5069934],[75,-19167],[-3687,-29537],[2677,-30841],[-1173,-16221],[-5237,-17796]],[[2969777,5068984],[605,-32742],[-1268,-9690]],[[2969114,5026552],[-4714,860],[-1341,-17590],[-3583,-11071]],[[2959476,4998751],[-8491,16812]],[[2950985,5015563],[-793,7309],[1822,47112]],[[2952014,5069984],[17763,-1000]],[[2035906,4586999],[14414,-496],[-1611,-23608],[6640,-2680],[1195,26386],[1358,55]],[[2057902,4586656],[158,-145014]],[[2058060,4441642],[39,-123252]],[[2058099,4318390],[-25457,-112]],[[2032642,4318278],[-3639,290]],[[2029003,4318568],[-48,74124],[7090,-21],[-139,194328]],[[2075406,4619986],[16795,429]],[[2092201,4620415],[5,-114185]],[[2092206,4506230],[-1,-56858]],[[2092205,4449372],[4,-25021]],[[2092209,4424351],[-16729,138],[-9,16470]],[[2075471,4440959],[-65,179027]],[[2063603,4913237],[28552,786]],[[2092155,4914023],[-3,-7356]],[[2092152,4906667],[-25,-53834]],[[2092127,4852833],[19,-65538]],[[2092146,4787295],[-23546,-691]],[[2068600,4786604],[-5011,-223]],[[2063589,4786381],[14,126856]],[[1945650,4845312],[6110,809],[21,16259],[5018,52],[-90,16116],[3461,37],[-15,16577],[6729,-40]],[[1966884,4895122],[3447,-16350],[-70,-16602],[3349,-19],[-9,-10600],[9841,-5233],[-3,-15951],[6706,-20],[-10,-16392],[3374,124],[0,-27146]],[[1993509,4786933],[0,-5450],[-20693,-2342],[-3318,8122],[-6634,5446],[-3322,13664],[-9956,2716],[6,14868],[-3942,21355]],[[1897404,4752179],[-25,34705]],[[1897379,4786884],[-44,90282]],[[1897335,4877166],[-53,91829]],[[1897282,4968995],[-177,35973]],[[1897105,5004968],[10795,4],[-1,-15628],[8152,42],[2754,-12582],[-567,-15619],[4060,-26183],[877,-29927],[1846,9],[4,-23324]],[[1925025,4881760],[46,-101680]],[[1925071,4780080],[-160,-16288],[-7994,29],[8,-16238],[-6532,88],[-7,-10559]],[[1910386,4737112],[-6557,-8],[0,15110],[-6425,-35]],[[1964919,5067487],[10364,-153]],[[1975283,5067334],[9405,346]],[[1984688,5067680],[2208,-39451],[4564,-20787],[1471,4083],[6861,-26477]],[[1999792,4985048],[1818,-17959],[2851,-3292],[1589,-22892],[-50,-29637]],[[2006000,4911268],[-39110,522]],[[1966890,4911790],[-648,3],[11,65949],[-532,23],[6,65608],[-808,24114]],[[2092146,4787295],[0,-4776]],[[2092146,4782519],[49,-89326]],[[2092195,4693193],[6,-72778]],[[2075406,4619986],[-6597,-99]],[[2068809,4619887],[-209,166717]],[[1984688,5067680],[45920,-1407]],[[2030608,5066273],[6652,-39]],[[2037260,5066234],[422,-80411]],[[2037682,4985823],[-11680,-1349],[-26210,574]],[[1966884,4895122],[6,16668]],[[2006000,4911268],[508,5],[497,-124548]],[[2007005,4786725],[-11818,202]],[[1995187,4786927],[-1678,6]],[[2037260,5066234],[26418,1272]],[[2063678,5067506],[-247,-39976],[172,-114293]],[[2063589,4786381],[-26122,-651]],[[2037467,4785730],[215,200093]],[[1995521,4587209],[-532,0],[-42,64988],[1173,-19],[-435,129376],[-498,5373]],[[2007005,4786725],[-6,-1483],[28777,395]],[[2035776,4785637],[62,-198641]],[[2035838,4586996],[-15300,-511],[-25017,724]],[[2984022,4909571],[110,-222]],[[2984132,4909349],[-110,222]],[[2984022,4909571],[-9062,8883]],[[2974960,4918454],[4030,41276],[-5868,15259]],[[2973122,4974989],[1658,14605]],[[2974780,4989594],[3116,-7823],[4136,38800],[2842,-9509],[2022,13142]],[[2989745,4945360],[-3997,-1928],[-2422,-12056],[696,-21805]],[[2075471,4440959],[-17411,683]],[[2057902,4586656],[-72,32648],[10979,583]],[[2035906,4586999],[-68,-3]],[[2035776,4785637],[1691,93]],[[2063678,5067506],[1064,-6]],[[2064742,5067500],[27324,-556]],[[2092066,5066944],[49,-79802]],[[2092115,4987142],[40,-73119]],[[2948633,4929698],[9472,5483],[589,-24735]],[[2958694,4910446],[986,-16731],[4861,-7905]],[[2964541,4885810],[-1366,-12690]],[[2963175,4873120],[-5261,-14837],[594,-10490]],[[2958508,4847793],[-7246,2012],[351,-13199],[-4360,-2563]],[[2947253,4834043],[-459,10369]],[[2946794,4844412],[-1633,44294],[1317,27317],[2155,13675]],[[2092209,4424351],[7,-32019]],[[2092216,4392332],[-27,-73337]],[[2092189,4318995],[-24800,-597]],[[2067389,4318398],[-9290,-8]],[[2958508,4847793],[2348,5912],[2556,-10068],[-1037,-16379],[3318,-6365],[-2511,-35157],[1780,-4920],[-908,-21445],[-2609,3168],[-403,-13163]],[[2961042,4749376],[-10775,2607]],[[2950267,4751983],[167,44769],[-1502,13449],[-3493,1632],[1814,22210]],[[2962394,4740907],[3726,-6177],[6984,2023]],[[2973104,4736753],[-483,-13453]],[[2972621,4723300],[-594,-35404],[-2327,-22425],[2750,-23514]],[[2972450,4641957],[-13146,2329]],[[2959304,4644286],[248,35095],[-2415,617],[311,35378],[3570,-1109],[1376,26640]],[[1897105,5004968],[308,62719]],[[1897413,5067687],[9445,-1688],[25257,1845]],[[1932115,5067844],[32804,-357]],[[1945650,4845312],[-3606,21927],[-2785,5787],[-2772,-7219],[-671,-14424],[-3384,-8342],[-1989,29354],[-3659,-1669],[-1759,11034]],[[2962394,4740907],[-1352,8469]],[[2963175,4873120],[226,-6156],[16104,-29576]],[[2979505,4837388],[-2788,-14133],[-678,-17828]],[[2976039,4805427],[-1155,-3689],[-1780,-64985]],[[2958694,4910446],[4100,54357]],[[2962794,4964803],[4196,-10006],[1605,15174],[2960,-10032],[1567,15050]],[[2974960,4918454],[-2081,-14111],[-4076,5918],[-2631,-27580],[-1631,3129]],[[2947802,5069465],[4212,519]],[[2950985,5015563],[-121,-13678],[-3573,-16140]],[[2947291,4985745],[-790,10042],[1526,34983],[-1238,6344],[1013,32351]],[[2969114,5026552],[4481,-10984],[-1810,-16652],[2995,-9322]],[[2962794,4964803],[-671,18829],[-2647,15119]],[[2474213,3829884],[-479,-31131],[2952,-17625]],[[2476686,3781128],[-4551,-16003]],[[2472135,3765125],[-4661,-7267],[-1579,13673]],[[2465895,3771531],[-3906,23878]],[[2461989,3795409],[1222,49140]],[[2463211,3844549],[4046,6553],[5178,-94],[1778,-21124]],[[2389912,4181404],[147,-43654]],[[2390059,4137750],[0,-12257]],[[2390059,4125493],[-11145,-1509]],[[2378914,4123984],[-57,32449]],[[2378857,4156433],[19,24535]],[[2378876,4180968],[11036,436]],[[2479090,3901826],[-424,-21016]],[[2478666,3880810],[-2112,-24056]],[[2476554,3856754],[-1758,11666],[1917,23353],[2377,10053]],[[2451544,3680105],[49,20449]],[[2451593,3700554],[1485,7987]],[[2453078,3708541],[12674,-973]],[[2465752,3707568],[-77,-17221],[3145,156]],[[2468820,3690503],[-410,-61028]],[[2468410,3629475],[-24,-8421],[-5151,-293]],[[2463235,3620761],[-1044,19208],[118,42929],[-10765,-2793]],[[2386101,3770635],[-226,-29615],[-1702,-16004]],[[2384173,3725016],[-1538,262]],[[2382635,3725278],[-5098,962],[76,10894],[-7161,1538]],[[2370452,3738672],[206,25388]],[[2370658,3764060],[234,33196]],[[2370892,3797256],[14666,-1267]],[[2385558,3795989],[543,-25354]],[[2355207,3846599],[106,48760]],[[2355313,3895359],[29,20421]],[[2355342,3915780],[13622,-2627]],[[2368964,3913153],[-16,-49499],[1542,-250]],[[2370490,3863404],[-39,-22517]],[[2370451,3840887],[-15244,5712]],[[2408873,3660162],[12103,-1610]],[[2420976,3658552],[25,-77358]],[[2421001,3581194],[-12106,1385]],[[2408895,3582579],[-22,77583]],[[2424874,3531514],[-225,-55317]],[[2424649,3476197],[-832,-16]],[[2423817,3476181],[-10555,-3]],[[2413262,3476178],[-6776,-175]],[[2406486,3476003],[208,57732]],[[2406694,3533735],[18180,-2221]],[[2370490,3863404],[15415,-2090]],[[2385905,3861314],[-47,-8186]],[[2385858,3853128],[-300,-57139]],[[2370892,3797256],[-705,97],[264,43534]],[[2458188,4102557],[84,48549]],[[2458272,4151106],[6066,-123],[2473,-22860],[2601,1167]],[[2469412,4129290],[-1944,-20803]],[[2467468,4108487],[328,-7005]],[[2467796,4101482],[-9608,1075]],[[2549792,3973846],[2947,-47736]],[[2552739,3926110],[-229,-9337]],[[2552510,3916773],[-10502,-449]],[[2542008,3916324],[-1054,0]],[[2540954,3916324],[-124,60790]],[[2540830,3977114],[8962,-3268]],[[2470525,4577308],[-5021,18164],[365,5578]],[[2465869,4601050],[5978,-212]],[[2471847,4600838],[13934,-260]],[[2485781,4600578],[183,-57926]],[[2485964,4542652],[-11076,-512]],[[2474888,4542140],[-2059,5971],[-2304,29197]],[[2519761,3739758],[56,40880]],[[2519817,3780638],[61,24607]],[[2519878,3805245],[9247,-233]],[[2529125,3805012],[-112,-64948]],[[2529013,3740064],[0,-140]],[[2529013,3739924],[-9252,-166]],[[2471314,4249073],[-132,-65793]],[[2471182,4183280],[-12803,1507]],[[2458379,4184787],[155,66412]],[[2458534,4251199],[3191,-646]],[[2461725,4250553],[9589,-1480]],[[2492038,4042342],[4681,229]],[[2496719,4042571],[78,-32892],[10895,5]],[[2507692,4009684],[-8,-24517]],[[2507684,3985167],[-3077,-74],[2,-35445]],[[2504609,3949648],[-9351,18],[-1482,-5450]],[[2493776,3944216],[-1652,-27]],[[2492124,3944189],[-86,98153]],[[2540378,4072769],[-2698,-6247],[-11385,-180]],[[2526295,4066342],[-31,26250]],[[2526264,4092592],[306,16333]],[[2526570,4108925],[14615,133]],[[2541185,4109058],[-807,-36289]],[[2507305,3682421],[3128,-729]],[[2510433,3681692],[-94,-49925]],[[2510339,3631767],[-5674,985]],[[2504665,3632752],[-6620,-51]],[[2498045,3632701],[1814,11065],[-2812,32243]],[[2497047,3676009],[9,1112]],[[2497056,3677121],[1977,5217],[8272,83]],[[2510871,4066828],[-3160,176],[-75,27286],[-2110,2306]],[[2505526,4096596],[-9,19423]],[[2505517,4116019],[2073,174],[-37,24507]],[[2507553,4140700],[11134,1187]],[[2518687,4141887],[-14,-49236]],[[2518673,4092651],[-1809,-26003]],[[2516864,4066648],[-5993,180]],[[2500403,4599600],[986,-89]],[[2501389,4599511],[11859,-943]],[[2513248,4598568],[18,-64149]],[[2513266,4534419],[-6494,-379],[-5,10097],[-6219,-435]],[[2500548,4543702],[-145,55898]],[[2486538,3798524],[-3826,443],[11,-16376],[-4756,-8921]],[[2477967,3773670],[-1281,7458]],[[2474213,3829884],[2156,24844]],[[2476369,3854728],[6353,-39715],[3421,-190],[395,-16299]],[[2483873,4151841],[881,6489],[10072,-3857]],[[2494826,4154473],[649,-27386]],[[2495475,4127087],[-1491,-58]],[[2493984,4127029],[0,0]],[[2493984,4127029],[-1952,-11048],[-8153,-2782]],[[2483879,4113199],[-6,38642]],[[2466910,3966390],[823,11280],[7258,-665],[-15,9500],[4625,6906]],[[2479601,3993411],[57,-49022]],[[2479658,3944389],[-3557,-132],[-60,-14187]],[[2476041,3930070],[-4875,8277]],[[2471166,3938347],[-3326,4777],[-930,23266]],[[2467034,4092261],[6348,-6865],[-47,-16397],[2014,-5474],[-32,-21777]],[[2475317,4041748],[-7780,287]],[[2467537,4042035],[-1767,32078],[1264,18148]],[[2471641,4379935],[-109,-32892]],[[2471532,4347043],[-49,-16333]],[[2471483,4330710],[-9633,889]],[[2461850,4331599],[-4564,282]],[[2457286,4331881],[-11,461]],[[2457275,4332342],[-1122,15534],[-3469,17656],[1173,15597]],[[2453857,4381129],[17784,-1194]],[[2535243,3805139],[86,58584]],[[2535329,3863723],[5403,188]],[[2540732,3863911],[181,-46931],[-1203,-11163]],[[2539710,3805817],[-4467,-678]],[[2539110,4015314],[121,-38380]],[[2539231,3976934],[-9831,-524]],[[2529400,3976410],[-3072,8219]],[[2526328,3984629],[2,29852]],[[2526330,4014481],[12780,833]],[[2532163,4454346],[6433,824],[39,-8124]],[[2538635,4447046],[3266,-7785],[69,-16322],[3251,338],[69,-16601],[7372,81]],[[2552662,4406757],[-29,-32237]],[[2552633,4374520],[-13573,-1049],[59,-16255],[-6474,-759]],[[2532645,4356457],[-221,48956]],[[2532424,4405413],[-261,48933]],[[1709658,2998471],[3052,-14148]],[[1712710,2984323],[3894,-30036],[3371,-9605],[-2696,-28830]],[[1717279,2915852],[-2400,-22159]],[[1714879,2893693],[-5266,28993],[-3961,11978],[-5283,25836]],[[1700369,2960500],[3906,37903],[5383,68]],[[1606173,4214960],[759,-17852],[3478,-7028],[-2545,-30091]],[[1607865,4159989],[-4165,-9618],[-1661,-22086],[-4403,-18377],[-6709,-107],[-45,-16120]],[[1590882,4093681],[-24829,95]],[[1566053,4093776],[100,33686]],[[1566153,4127462],[-1532,50915],[-2128,6892]],[[1562493,4185269],[8804,14703],[2763,-6904],[3518,12328],[5950,-4386],[8361,10388],[14284,3562]],[[1595241,4016230],[-509,-14971]],[[1594732,4001259],[-1037,-23007],[2718,-20616],[346,-27391]],[[1596759,3930245],[-14060,-44]],[[1582699,3930201],[-4210,24098],[390,22641],[-5240,8159],[-3056,17639],[1003,13380]],[[1571586,4016118],[16802,417],[-5,5430],[6858,-5735]],[[1662588,3177179],[847,18]],[[1663435,3177197],[3,-83488],[-1003,-14606]],[[1662435,3079103],[-2263,6776],[-8762,-861],[-7444,12093],[-9200,-4784],[-1116,14058],[-3742,10872],[1219,20788],[-221,28198],[-1697,11486],[611,13155]],[[1629820,3190884],[5873,2500],[3796,-15382],[-911,18857],[4081,4653],[3030,15253],[9297,-26015],[7602,-13571]],[[1635010,3016480],[2796,5694],[1674,-9261],[-4470,3567]],[[1650151,3022966],[4558,-3850],[5435,-11453],[-4479,-6727],[-4238,3892],[-1276,18138]],[[1641005,3008859],[5688,6344],[1939,-17468],[-4127,-8755],[-3500,19879]],[[1657950,3818389],[2685,32345],[-2123,19436],[937,20530]],[[1659449,3890700],[7161,-33395]],[[1666610,3857305],[4776,-22471]],[[1671386,3834834],[20306,-97056]],[[1691692,3737778],[16589,-80726]],[[1708281,3657052],[-26253,-352]],[[1682028,3656700],[-6892,22964]],[[1675136,3679664],[-2840,27740],[-4030,991]],[[1668266,3708395],[1882,27851],[-2980,11005],[-1155,25969],[-7881,21206],[-182,23963]],[[1597455,3542073],[2366,11923],[2274,-3809]],[[1602095,3550187],[8189,-45977],[1149,-27877],[1803,1398],[5665,-34239],[14,-9904],[4882,4027],[4428,-16630],[768,11903]],[[1628993,3432888],[1439,-11997],[-609,-17825],[9298,-37586]],[[1639121,3365480],[2816,-22070]],[[1641937,3343410],[-31549,1106]],[[1610388,3344516],[-3229,16926],[-1138,21466],[-1854,3976],[-4110,32494],[-4947,22960],[-1306,31407],[144,28291],[1812,-6024],[2316,37329],[-621,8732]],[[1866218,4505292],[3099,-24463],[25,-31113],[1943,-31026],[1825,850],[867,-20990]],[[1873977,4398550],[-2052,1361],[-1930,-18206],[-5838,57],[-7118,-48667]],[[1857039,4333095],[-8523,-14320],[-34626,-57]],[[1813890,4318718],[12,186015]],[[1813902,4504733],[6117,-981],[22883,1838]],[[1842902,4505590],[23316,-298]],[[1647722,4003620],[57,-28243]],[[1647779,3975377],[24,-9905]],[[1647803,3965472],[26,-8459]],[[1647829,3957013],[-5060,-6829],[-6997,-488],[-3820,-21339],[-4381,16777],[-5869,-7804],[-3152,-11760],[-2441,-35100]],[[1616109,3890470],[-9567,4233]],[[1606542,3894703],[419,35824],[1518,13185]],[[1608479,3943712],[3771,7148]],[[1612250,3950860],[6748,-3347],[1421,16082],[7200,34707],[2287,5068],[17816,250]],[[1619271,3852345],[7762,8442],[3380,-9406],[3260,1558],[7559,13943],[4649,21864]],[[1645881,3888746],[-2,-36107]],[[1645879,3852639],[-7203,-8362],[-2569,1522],[-5340,-15707],[-452,-9135],[-10152,-21562]],[[1620163,3799395],[-880,14009]],[[1619283,3813404],[-12,38941]],[[1622087,3771696],[-1924,27699]],[[1645879,3852639],[1464,-14290]],[[1647343,3838349],[-4354,-11139],[-9437,-78731],[-3837,-22828]],[[1629715,3725651],[-7628,46045]],[[1797592,2902475],[-2590,-4803],[-89,-22425],[1287,-3353],[-819,-34067],[994,-9392],[4300,-1941]],[[1800675,2826494],[1493,-22802],[-1783,-27833],[-5371,-7175]],[[1795014,2768684],[-38631,-18740]],[[1756383,2749944],[83,85358],[617,29],[-114,65718]],[[1756969,2901049],[17209,199],[23414,1227]],[[2817874,3420785],[-6919,-72049]],[[2810955,3348736],[-1460,14759],[-6664,23439]],[[2802831,3386934],[1394,28715]],[[2804225,3415649],[2063,-2070],[3215,19092]],[[2809503,3432671],[8371,-11886]],[[2842775,3128172],[-1477,27252]],[[2841298,3155424],[2103,3333]],[[2843401,3158757],[11068,12441],[205,17346]],[[2854674,3188544],[5101,8474],[783,11782],[2198,-17769],[2989,5718],[297,-12300],[-3415,-15823],[-3428,-38036],[3886,29132],[8746,50124],[946,-3128],[-9775,-51363],[-4155,-36687],[-374,10671],[-3537,8903],[-6407,-1933],[-5754,-8137]],[[2751319,3377837],[9810,7002]],[[2761129,3384839],[-95,-16836]],[[2761034,3368003],[-561,-77680]],[[2760473,3290323],[-3228,-247]],[[2757245,3290076],[-710,14238],[-3501,19766],[-3485,10632]],[[2749549,3334712],[-144,15860],[2742,12775],[-828,14490]],[[2790902,4205673],[4819,61498]],[[2795721,4267171],[12572,55]],[[2808293,4267226],[-5277,-40930],[-675,-25371],[-1569,-8159]],[[2800772,4192766],[-1059,-15739]],[[2799713,4177027],[-6309,318],[-4768,7573]],[[2788636,4184918],[2266,20755]],[[2800864,3241666],[2113,12993]],[[2802977,3254659],[1389,-9687],[5203,4255]],[[2809569,3249227],[3931,-18105]],[[2813500,3231122],[459,-53705],[-1488,-30912],[2432,-2869]],[[2814903,3143636],[-3938,-31447]],[[2810965,3112189],[-1963,21501],[-4726,35120]],[[2804276,3168810],[-4260,25899],[-640,18321],[1488,28636]],[[2798314,3292835],[6799,35421],[5842,20480]],[[2810955,3348736],[1750,-16338]],[[2812705,3332398],[1853,-23833],[1699,-3312]],[[2816257,3305253],[-2516,-31407],[-105,-13106],[-4067,-11513]],[[2802977,3254659],[-3324,33902],[-1339,4274]],[[2711987,3375751],[1985,19638],[-2108,8342]],[[2711864,3403731],[7413,1095]],[[2719277,3404826],[6048,-22619]],[[2725325,3382207],[-164,-37453]],[[2725161,3344754],[-830,-5351]],[[2724331,3339403],[-5347,1771],[-6997,34577]],[[2752281,4220940],[5028,24638],[890,12189]],[[2758199,4257767],[12691,-852]],[[2770890,4256915],[10,-1]],[[2770900,4256914],[-2029,-22438],[1777,-4568],[-2901,-53319],[-1806,-8082]],[[2765941,4168507],[-1214,10315],[-7494,14973],[-4952,27145]],[[2764352,3159469],[2162,17363],[-2170,40877],[-1989,-6050],[-2121,10799]],[[2760234,3222458],[6231,7549],[6616,-3693]],[[2773081,3226314],[1084,-17569],[3238,-5002]],[[2777403,3203743],[-3163,-9569],[303,-15275],[-3653,-19723]],[[2770890,3159176],[-6538,293]],[[2768763,3291408],[1985,-48666],[2333,-16428]],[[2760234,3222458],[-635,20981],[1294,21977],[-3648,24660]],[[2760473,3290323],[8290,1085]],[[2747003,3234680],[1253,-4554]],[[2748256,3230126],[4075,-3423],[2285,5686]],[[2754616,3232389],[-1208,-71525]],[[2753408,3160864],[-6722,650]],[[2746686,3161514],[-6570,425],[431,21717],[-1624,12340]],[[2738923,3195996],[8080,38684]],[[2804276,3168810],[-11325,-4058]],[[2792951,3164752],[-3722,22236]],[[2789229,3186988],[-1545,16536],[-209,24753]],[[2787475,3228277],[43,3371]],[[2787518,3231648],[10298,13956],[3048,-3938]],[[2832793,4121088],[1875,9429],[6070,6550],[1351,7580]],[[2842089,4144647],[3309,-10483],[1775,-29403],[-1240,-25593]],[[2845933,4079168],[-6062,-47]],[[2839871,4079121],[-6753,24]],[[2833118,4079145],[-325,41943]],[[2810888,4187313],[3545,34460],[-2561,36041],[2938,12089]],[[2814810,4269903],[4800,-8904],[3336,9755],[3989,-2605]],[[2826935,4268149],[-160,-9921],[-4311,-23718],[705,-9352],[-2712,-18980],[4506,-3767]],[[2824963,4202411],[1368,-21520]],[[2826331,4180891],[-4499,-37811]],[[2821832,4143080],[-7533,19385]],[[2814299,4162465],[-2826,11123],[-585,13725]],[[2711512,3303294],[-1259,27070],[-3279,16352],[2241,14319],[-1033,14227]],[[2708182,3375262],[3805,489]],[[2724331,3339403],[-4745,-37259]],[[2719586,3302144],[-94,-813]],[[2719492,3301331],[-4307,2868]],[[2715185,3304199],[-3673,-905]],[[2741800,3290605],[-1317,-247]],[[2740483,3290358],[-4533,-3397]],[[2735950,3286961],[-362,11253]],[[2735588,3298214],[988,13836],[-5150,28995]],[[2731426,3341045],[2898,33985],[-655,16387]],[[2733669,3391417],[4088,1867]],[[2737757,3393284],[5265,-864]],[[2743022,3392420],[-403,-37098]],[[2742619,3355322],[-1779,-33316],[960,-31401]],[[2791567,3427618],[4145,-603]],[[2795712,3427015],[-83,-26964],[1560,-3864]],[[2797189,3396187],[1392,-11623],[-3698,-26548],[-2073,112]],[[2792810,3358128],[-3079,-881]],[[2789731,3357247],[1836,70371]],[[2773143,4477841],[-22,-42338]],[[2773121,4435503],[-6018,-337],[-4762,-24709]],[[2762341,4410457],[-14472,-194]],[[2747869,4410263],[0,2043]],[[2747869,4412306],[-4,65444]],[[2747865,4477750],[25278,91]],[[2891580,4143824],[2356,-16580]],[[2893936,4127244],[1812,-20581]],[[2895748,4106663],[-5673,-12183]],[[2890075,4094480],[-4593,6915]],[[2885482,4101395],[-367,-213]],[[2885115,4101182],[-49,-37]],[[2885066,4101145],[-85,6913],[6599,35766]],[[2832656,3275542],[-4498,-13535],[-4684,2882]],[[2823474,3264889],[-499,40384]],[[2822975,3305273],[3426,12491]],[[2826401,3317764],[5255,-28727],[1000,-13495]],[[2818358,4407607],[10895,703]],[[2829253,4408310],[1995,-22470],[10655,-54223]],[[2841903,4331617],[-2,-4586]],[[2841901,4327031],[-10153,-15236],[-3153,24004],[-3346,3062],[-1580,13927],[-2623,-690],[-153,13943],[-3901,-18552]],[[2816992,4347489],[-1537,11846]],[[2815455,4359335],[2914,28174],[-11,20098]],[[2858186,3448717],[2952,4895]],[[2861138,3453612],[2191,-22309],[2835,-13062]],[[2866164,3418241],[1580,-17530],[-6672,16503],[4384,-15419],[-3152,-4834]],[[2862304,3396961],[-4500,6905],[382,44851]],[[2826474,3411487],[-5258,-1691],[-3342,10989]],[[2817874,3420785],[2634,33620],[392,23317]],[[2820900,3477722],[7034,-4847],[2463,-11669],[-807,-15273],[4020,-2419],[1533,-20670],[2645,-8454]],[[2837788,3414390],[1702,-12142],[-2702,-5449]],[[2836788,3396799],[-2090,-13024]],[[2834698,3383775],[-3418,6111],[-288,10210],[-4518,11391]],[[2783245,3359790],[6486,-2543]],[[2792810,3358128],[-2476,-48231],[2277,-5085]],[[2792611,3304812],[-1573,-11536]],[[2791038,3293276],[-4108,19965],[-6486,-20609]],[[2780444,3292632],[-5736,-544]],[[2774708,3292088],[374,61453]],[[2775082,3353541],[8502,159],[-339,6090]],[[2737212,3488015],[1777,-505]],[[2738989,3487510],[6294,-244]],[[2745283,3487266],[4790,-1350]],[[2750073,3485916],[-330,-54092]],[[2749743,3431824],[-10,-3821]],[[2749733,3428003],[-2651,8241],[-9077,-9147]],[[2738005,3427097],[122,16871],[-2735,14055]],[[2735392,3458023],[1820,29992]],[[2759636,4331798],[-1906,-12979],[188,-27198]],[[2757918,4291621],[-10044,-715]],[[2747874,4290906],[-3,9082]],[[2747871,4299988],[3,42159]],[[2747874,4342147],[10361,-2115],[1401,-8234]],[[2853366,4350934],[2560,-3055]],[[2855926,4347879],[607,-17213],[2899,-19616],[-365,-14308]],[[2859067,4296742],[-3714,16000],[-3665,-4008],[1678,42200]],[[2777657,3124744],[-326,1759]],[[2777331,3126503],[3644,26796],[-507,12144]],[[2780468,3165443],[4395,-954],[4366,22499]],[[2792951,3164752],[2657,-27237],[-1833,-38670]],[[2793775,3098845],[-2772,-10395],[-2790,-23939]],[[2788213,3064511],[-10556,60233]],[[2695003,3396475],[5424,15747]],[[2700427,3412222],[3945,-10087]],[[2704372,3402135],[1288,-30119],[1462,-5726]],[[2707122,3366290],[-4219,-16298]],[[2702903,3349992],[-1844,35816],[-6056,10667]],[[2846872,4506147],[1077,74]],[[2847949,4506221],[1459,-75760]],[[2849408,4430461],[-2389,-8526],[-17798,-1703]],[[2829221,4420232],[-299,85558]],[[2828922,4505790],[17950,357]],[[2800772,4192766],[4806,-15466],[379,10840],[4055,-11268],[876,10441]],[[2814299,4162465],[-4573,-63572],[-2273,-19260]],[[2807453,4079633],[-11919,59]],[[2795534,4079692],[1425,18825],[-166,43709],[2920,34801]],[[2841069,3332882],[5246,-13953],[3918,8782]],[[2850233,3327711],[5769,-31]],[[2856002,3327680],[2059,-19501],[2685,-8466]],[[2860746,3299713],[-4644,-8514],[1512,-23065],[-4988,5952],[-7394,18014],[3696,-15254],[7946,-18065]],[[2856874,3258781],[-718,-19074],[-5933,-3592],[-1395,7016]],[[2848828,3243131],[-8216,30964]],[[2840612,3274095],[397,18746],[2548,6279],[-2328,14705],[-160,19057]],[[2901870,4336005],[691,419]],[[2902561,4336424],[-4279,-23611]],[[2898282,4312813],[-5017,-20368],[-4837,-8388]],[[2888428,4284057],[-2797,25564],[2190,6712],[-4281,25299]],[[2883540,4341632],[1362,7328]],[[2884902,4348960],[2651,13298]],[[2887553,4362258],[4079,1248]],[[2891632,4363506],[6393,2413],[-746,-19047],[4591,-10867]],[[2881583,4438948],[-3199,-40247]],[[2878384,4398701],[-4747,-7990],[-7746,-1504]],[[2865891,4389207],[1754,30841]],[[2867645,4420048],[617,19941],[2308,748]],[[2870570,4440737],[11013,-1789]],[[2826474,3411487],[-3638,-53490]],[[2822836,3357997],[-10131,-25599]],[[2792457,4505556],[17015,243]],[[2809472,4505799],[2829,33]],[[2812301,4505832],[88,-71396]],[[2812389,4434436],[-6009,-2989]],[[2806380,4431447],[-1791,5187],[-13169,-1130]],[[2791420,4435504],[1037,70052]],[[2867097,4079396],[-9185,-25]],[[2857912,4079371],[-6063,-75]],[[2851849,4079296],[-5916,-128]],[[2842089,4144647],[3025,14580],[3426,3349],[1305,11343]],[[2849845,4173919],[3829,-19889]],[[2853674,4154030],[1577,-10495],[3607,-2350],[1865,-20194],[6374,-41595]],[[2747863,4501701],[5278,10976],[15826,43742]],[[2768967,4556419],[18,-50734],[4192,36]],[[2773177,4505721],[-34,-27880]],[[2747865,4477750],[-2,23951]],[[2749743,3431824],[11602,-801]],[[2761345,3431023],[-216,-46184]],[[2751319,3377837],[-2814,13726]],[[2748505,3391563],[1582,16848],[-354,19592]],[[2765751,4155289],[6588,-7254],[4500,10250],[5175,-19164]],[[2782014,4139121],[-3452,-34934],[1445,-6220],[-745,-18525]],[[2779262,4079442],[-2346,-93]],[[2776916,4079349],[-8000,-57]],[[2768916,4079292],[-4249,0]],[[2764667,4079292],[-93,28881]],[[2764574,4108173],[0,0]],[[2764574,4108173],[-2184,20262]],[[2762390,4128435],[3011,7326],[350,19528]],[[2848287,4193040],[-9891,-9324],[-4007,2849],[-5596,-17846]],[[2828793,4168719],[-1591,17085]],[[2827202,4185804],[3667,20477],[9952,34238],[6506,8613]],[[2847327,4249132],[-1212,-11818],[1215,-17909],[-2227,-15389],[3184,-10976]],[[2762341,4410457],[0,-59557]],[[2762341,4350900],[-2705,-19102]],[[2747874,4342147],[0,1553]],[[2747874,4343700],[-5,66563]],[[2816992,4347489],[-2062,-7378],[961,-29086],[-3958,-8627],[-3904,-33718]],[[2808029,4268680],[264,-1454]],[[2795721,4267171],[-97,33963]],[[2795624,4301134],[17,42202],[2628,13179]],[[2798269,4356515],[1771,9717],[11419,-4361]],[[2811459,4361871],[3996,-2536]],[[2673005,4151720],[1011,6619]],[[2674016,4158339],[11372,-3227]],[[2685388,4155112],[-576,-34850]],[[2684812,4120262],[-1163,-27078]],[[2683649,4093184],[-11687,3277]],[[2671962,4096461],[-282,44307],[1325,10952]],[[2832656,3275542],[2369,-16217]],[[2835025,3259325],[-2306,-20789]],[[2832719,3238536],[-3569,-29533],[-3593,-11780]],[[2825557,3197223],[-1066,25683],[-1816,6053]],[[2822675,3228959],[799,35930]],[[2861308,4370323],[3830,6471]],[[2865138,4376794],[-217,-19619],[2478,-12525],[589,-35325]],[[2867988,4309325],[-2767,-27689],[-2034,-4923]],[[2863187,4276713],[-4120,20029]],[[2855926,4347879],[5382,22444]],[[2750595,4079369],[-2729,41]],[[2747866,4079410],[7,45071]],[[2747873,4124481],[4179,6548],[9146,42]],[[2761198,4131071],[0,0]],[[2761198,4131071],[1192,-2636]],[[2764667,4079292],[-14072,77]],[[2776883,4391071],[-954,44563]],[[2775929,4435634],[15492,-216]],[[2791421,4435418],[-82,-34879],[-2913,3023],[-880,-21067]],[[2787546,4382495],[-3170,-1646]],[[2784376,4380849],[47,18540],[-5379,979],[-2161,-9297]],[[2735717,3270702],[233,16259]],[[2740483,3290358],[500,-19565],[2761,-24763],[3259,-11350]],[[2738923,3195996],[-1842,14031]],[[2737081,3210027],[-3763,-5983],[231,19463]],[[2733549,3223507],[2168,47195]],[[2699179,3282873],[150,-13639]],[[2699329,3269234],[-2373,-20601],[-195,-17238]],[[2696761,3231395],[-6165,-8486]],[[2690596,3222909],[-1243,29624],[-3502,22304]],[[2685851,3274837],[23,79]],[[2685874,3274916],[13305,7957]],[[2761345,3431023],[14019,-2997]],[[2775364,3428026],[-268,-63961]],[[2775096,3364065],[-14062,3938]],[[2903230,4195511],[6094,-36381]],[[2909324,4159130],[-6960,-18478]],[[2902364,4140652],[-1144,16733]],[[2901220,4157385],[-13067,52495]],[[2888153,4209880],[4194,22199]],[[2892347,4232079],[3809,13389]],[[2896156,4245468],[201,-3146]],[[2896357,4242322],[3385,-9412],[206,-22490],[3282,-14909]],[[2894731,4669051],[-1335,-23864]],[[2893396,4645187],[-16548,-3793]],[[2876848,4641394],[-174,12563]],[[2876674,4653957],[-588,55183],[-2123,18266]],[[2873963,4727406],[3040,-5206]],[[2877003,4722200],[4951,-903],[4285,-21184],[238,-19800],[2787,247],[196,-13060],[5271,1551]],[[2886882,4215223],[-4656,-38396]],[[2882226,4176827],[-4920,-19609]],[[2877306,4157218],[-7740,33480]],[[2869566,4190698],[-8051,33689]],[[2861515,4224387],[11923,15303],[3364,18635]],[[2876802,4258325],[10080,-43102]],[[1062750,8968072],[5,-737005]],[[1062755,8231067],[-23022,-166],[-43,42404],[-4130,7006],[409,64692],[-4664,232],[102,15591],[-5382,656],[171,15963],[-11746,3382],[-2956,-19621],[-7315,3043],[2703,28555],[-5254,11257],[4704,20453],[-2770,33779],[-40385,371],[-15937,2938],[-12,16592],[-26812,-180],[-849,-7010],[-9540,-1961]],[[910027,8469043],[-151,57948],[-13540,-593]],[[896336,8526398],[88,82264],[-859,63580]],[[895565,8672242],[10817,189],[10601,9459],[2164,14149],[4340,-444],[7310,14362],[5775,-8001],[4760,12964],[8031,4891],[2629,11029],[14361,2039],[11180,18822]],[[977533,8751701],[8611,-6706],[6847,19925],[-566,38215],[12392,30454],[6060,3641],[3384,30140],[3925,16756],[4458,-1103],[8933,16219],[3729,-5892],[16707,32603],[1439,18197],[9298,23922]],[[612642,7661736],[-879,-2342]],[[611763,7659394],[-318,-506]],[[611445,7658888],[-410,-653]],[[611035,7658235],[-716,-744]],[[610319,7657491],[-949,-265]],[[609370,7657226],[-2164,-3445]],[[607206,7653781],[-2129,-4990]],[[605077,7648791],[-3009,-4218]],[[602068,7644573],[-134,-1417]],[[601934,7643156],[-230,-1207]],[[601704,7641949],[-4064,-4593]],[[597640,7637356],[-705,-1266]],[[596935,7636090],[-887,-2113]],[[596048,7633977],[-1281,-3057]],[[594767,7630920],[-1554,-3241]],[[593213,7627679],[-4058,-6623]],[[589155,7621056],[-990,-1619]],[[588165,7619437],[-5452,-2684],[-3321,20175],[-5945,14043],[2168,36903],[-7821,-25383],[-2605,-31573],[4379,-39835],[-5350,-17350],[-4661,6190],[-9119,63494],[-7045,15480],[1576,10342],[-4066,5695],[-2044,-23424],[-2845,-4809],[-4058,20046],[-2688,-3919],[-4804,16451],[144,21810],[-12127,-29956],[-7842,-13442]],[[504639,7657691],[-10,30847],[4475,44],[1535,15199],[-48,33067],[4754,133],[-14,16274],[4742,569],[1549,15666],[14,32867],[4843,-39],[69,32424],[6373,431],[117,32210],[4456,894],[139,30837],[1831,15878],[4769,247],[-7,32421],[4921,-116],[1877,15714],[67,32420],[5072,45],[62,16191],[4654,161],[1986,32105],[29562,46],[79,-14776],[5094,-221],[-82,16421],[4987,4],[-19,16692],[9836,-65],[33,-16462],[33635,-864]],[[645990,8044955],[146,-230282],[-4632,-397],[-34,-16281],[-9514,222],[-4,-16173],[-4724,188],[-2643,-32790],[-9581,512],[-26,-16310],[-4736,337],[70,-33177],[2249,-223],[81,-38845]],[[495978,7638380],[-616,16430],[7878,-233]],[[503240,7654577],[-7262,-16197]],[[503256,7611135],[768,21022],[10369,21200],[-5464,-43826],[-5673,1604]],[[564297,7277194],[6992,1322],[-1602,21434],[1740,25082],[7274,38217],[10188,25440],[2199,13992],[7042,16411],[-693,29552],[3347,75345],[5189,9186],[-4174,19495],[2654,42690],[5141,19501]],[[609594,7614861],[26460,-35],[-12,53409],[-18602,-1179]],[[617440,7667056],[-2362,-156]],[[615078,7666900],[0,-3]],[[615078,7666897],[-1289,-3794]],[[613789,7663103],[-1147,-1367]],[[645990,8044955],[42879,-119],[27467,294]],[[716336,8045130],[1147,-15956],[20,-65699],[-3739,-314],[-74,-65150],[-3495,-208],[48,-62988],[-3569,25],[-19,-16556],[-4799,-93],[40,-32948],[-4733,-98],[86,-16519],[-8171,-491],[145,-32575],[-9428,-289],[66,-32962],[1483,-194],[-17,-63894],[1546,-16432],[9230,1]],[[692103,7621790],[69,-34895],[-4520,-18536],[-7374,-10610],[-7738,-2577],[-1382,-10238],[-7639,-8034],[47,-59324],[-3233,-9218],[-6895,-5448],[-2069,-24282],[-4277,-21324],[-4169,5631],[-1697,-13987],[-6635,2372],[-6887,-35081],[-3717,-32206],[11017,-600]],[[635004,7343433],[-5020,-20921],[-543,-12045],[-5533,1437],[-2386,-16729],[-1309,11795],[-8788,-36940],[-4933,17628],[-966,-17315],[-4190,-12309],[2712,-15004],[-5798,-2576],[-1733,12375],[-5494,-3939],[-2935,-14915],[3696,3002],[2476,-14359],[-8205,1331],[-421,-11328],[-5611,4381],[-4479,-26643],[7862,-8893],[-3543,-11495],[6038,-413],[-9958,-25705],[1881,-14765],[-2845,-6534],[-4177,22263],[183,-26193],[-5598,8372],[-1541,-12813],[-12966,-11862],[-1023,-15462],[-2409,12427],[-1851,-41601]],[[607959,7227515],[2118,7818],[7219,-6402],[-9337,-1416]],[[591942,7191530],[0,0]],[[564172,7093858],[0,0]],[[557277,7103300],[0,0]],[[550621,7079428],[0,0]],[[664463,9372812],[-27,5273],[-26092,-223],[-72,19094],[-25415,-1868],[-155,16782],[-31173,276],[-40158,913],[-179,12596],[-11292,603],[265,-12586],[-27059,218],[-177,12753],[-11815,35],[103,-12867],[-13286,461],[-65,12895],[-20203,1658],[22,-12783],[-49593,-977],[158,-38031],[-24122,698]],[[384128,9377732],[-12040,9885],[-16059,37604],[-8701,11070],[8450,15254],[4005,26552],[540,59009],[24723,-4008],[29918,13632],[7788,10127],[12212,29314],[11842,43741],[2615,30472],[-2835,9548],[5606,19346],[-3299,6531],[15446,46389],[507,12536],[17235,49848],[1795,-9943],[10670,-2771],[15526,19453],[9745,20576],[23442,63622],[13951,15402],[-4226,-21833],[35296,13524],[14765,21786],[7059,19444],[12243,43864],[6715,12293],[1046,-10524],[26285,-23168],[2147,-17109],[-8922,-21632],[-4111,-634],[-16,-28721],[13228,9649],[788,15581],[8328,15705],[-2696,6978],[6744,15300],[12931,-29301],[-2179,-22604],[12926,-18875],[8118,21973],[12934,826],[5231,6053],[18063,-6651],[9199,-8257],[-5895,-28822],[1415,-14947],[16829,-11845],[-1655,-21514],[8957,961],[10231,-9568],[195,8540],[11656,12507],[11275,-652],[6812,-11673],[6859,14861],[11282,1404],[18727,-21623],[4988,3713],[7219,-22112],[4123,8187],[10750,-13337],[3786,-14409],[14491,-8300],[7685,5672],[28627,-3728],[12541,-25161],[12664,-13535],[9332,1882],[4329,10560],[10688,6219],[4685,13267],[11519,1921],[20930,-18263],[20548,-45260],[8244,-2102],[9352,-28987],[4661,9276],[5789,-7221],[-1,-214732]],[[1062744,9465767],[-37831,-1637],[-53953,3304],[-47396,-3261],[93,-91452],[-38863,-46],[-72996,-192],[-83151,297],[-64184,32]],[[1205732,7760685],[0,0]],[[1217521,7575572],[-5101,5370],[-7713,-8936],[-137,44540],[-4943,36861],[1093,18287],[-3130,11948],[1552,-21118],[-1219,-20060],[-2690,-811],[-6865,16102],[-1426,24025],[-2384,-14424],[-6891,13502],[-1416,-11653],[9617,-11475],[7418,-31370],[2775,218],[4897,-54699],[-9700,-15553],[-4312,3668],[-1314,-18489],[-9883,32812],[-4601,-111],[-15853,42908],[-191,8078],[-7149,25710]],[[1147955,7650902],[11672,19564]],[[1159627,7670466],[19465,47078],[6829,1221],[2646,18006]],[[1188567,7736771],[16564,-16532],[5298,-12861],[3249,-22095],[-4786,-45619],[5816,-8229],[4078,-15385],[2325,-21643],[-4891,-124],[1301,-18711]],[[1237954,7542040],[-1711,-23074],[2220,-12562],[4566,12423],[9872,11776]],[[1252901,7530603],[-332,-14262],[7926,-51668],[1164,-34385],[-3674,17991],[-999,18498],[-4905,14460],[1688,-25389],[5861,-27299],[2189,-28160],[-370,-19780],[-4566,-5737],[-3366,-22393],[-9538,-33094],[-2889,490],[-1264,36034],[3607,16516],[-1705,16046],[3189,-1518],[-3999,22622],[-3461,39096],[722,20030],[-2202,50138],[-3620,22113],[-1144,36568],[6298,-25603],[443,-9877]],[[1265773,7463139],[2271,7266]],[[1268044,7470405],[-2271,-7266]],[[1268933,7474591],[11858,54235]],[[1280791,7528826],[2786,-28149],[5770,-29353],[8641,-63455],[5326,-29058]],[[1303314,7378811],[-7705,14535],[-9523,-17878],[-3917,-27047],[-4812,9622],[-6060,-11222]],[[1271297,7346821],[765,23850],[5988,4760],[-4986,4795],[-1989,25101],[1224,15184],[-5439,10056],[610,16564],[13388,-19396],[-10750,31332],[-1175,15524]],[[1213603,7481503],[-8881,19456],[-3343,-30959],[-9583,-786]],[[1191796,7469214],[-5644,17815],[474,28109],[5314,13446],[-962,23048],[3232,-445],[1248,-18287],[2792,9823],[4532,-4186],[5376,15850],[7955,-22055],[-4276,-24781],[1618,-8770],[3952,27088],[9544,-8625],[5462,-20399],[-2567,-17772],[-3538,169],[5086,-15014],[-6953,-5604],[-10838,22879]],[[1209705,7569124],[0,0]],[[1197845,7612459],[0,0]],[[1197774,7553859],[0,0]],[[721449,7660906],[-2569,-1655],[-2790,-25763],[-6480,-18289],[-6117,-1004],[-612,-16767],[-3828,-5136],[1593,-21122],[-4955,-10277],[2055,-7732],[-2971,-26972],[-3633,-8449],[-3511,9622],[99,-15718],[-5306,1064],[-3119,-11292],[-3524,4486],[-6320,-13804],[600,-16578],[-6387,-6516],[1160,-13693],[-2616,-8727],[-5289,14739],[-4578,-44880],[-8672,2755],[617,-23358],[-5265,6504],[-9484,-34367],[5985,8475],[-528,-33019]],[[692103,7621790],[13677,75],[-43,16291],[10152,98],[-81,22628],[5641,24]],[[759456,7541793],[0,0]],[[754273,7673848],[0,0]],[[746424,7672066],[0,0]],[[716833,7512711],[2847,14288],[4110,-9734],[-41,24019],[6375,11775],[4659,16324],[1121,17564],[3423,2828],[-1533,16606],[9366,12655],[-1185,-18891],[-3904,-19434],[516,-13601],[5357,13854],[4553,-24892],[4237,10239],[2,-25576],[-2646,-11137],[-6417,12511],[1289,-15981],[-6061,-1108],[-3199,9335],[-1652,-22206],[-3191,-2653],[-6296,16371],[-2185,-6509],[5692,-19168],[-2121,-2553],[-13116,15074]],[[696188,7255925],[0,0]],[[690532,7227915],[2015,9895],[5410,4194],[1512,-11525],[4535,1819],[-2067,-10997],[-7786,-3018],[-3619,9632]],[[678511,7367613],[4573,41430],[11256,28295],[6772,-2455],[2419,-42329],[1037,42869],[5066,3468],[-7140,6385],[-61,20453],[5962,14519],[4174,-10953],[607,-21363],[1955,23219],[4215,1467],[-5806,15146],[2337,6128],[4987,-13683],[5132,-4712],[-5039,17469],[10981,-4889],[4255,11095],[-4711,-27927],[4659,-1332],[8155,26321],[3024,-11122],[-4025,-5238],[4391,-19685],[-5192,-8396],[812,-25755],[8797,3461],[-5828,-35886],[-10629,14590],[-6244,801],[10199,-23926],[-2634,-18876],[-3413,-2986],[-5304,13920],[1793,-15096],[-6180,-14682],[8252,-5578],[-9629,-14019],[-2387,-15864],[-2874,16718],[1504,20932],[-5381,-36891],[-4396,-12887],[347,-10186],[-4609,-6657],[-1946,-12952],[-6260,-4031],[2113,17861],[6196,21745],[-3521,-399],[1243,20182],[-10218,-40521],[-388,13512],[-5900,13655],[-415,38320],[-2065,13374],[-5018,3941]],[[678169,7207639],[7561,31138],[3963,-8702],[-9586,-28114],[-1938,5678]],[[651897,7093737],[4403,16212],[0,-28178],[-4403,11966]],[[624224,7134316],[0,0]],[[622500,7163177],[0,0]],[[1209856,7824447],[6826,13121],[12538,-44161],[-1965,-25439],[1915,-15426]],[[1229170,7752542],[-9656,-888],[-9658,72793]],[[544785,8908788],[-5780,-1],[-93,-16252],[-40959,443],[-44800,-267],[-24392,-111],[-24,32166],[-5914,55],[5,32676],[-7683,-90],[63,64897],[-2044,266],[-53,64650],[-2258,19678]],[[410853,9106898],[11734,2404],[6281,-7986],[-3315,-30373],[1200,-21902],[-7317,-16371],[4908,1115],[4152,-24275],[7568,4601],[9119,-4885],[11641,5779],[3578,-9478],[8109,-1520],[5342,8875],[8400,-10526],[8069,40679],[9736,-5422],[5711,4398],[-3777,19055],[-11034,11380],[-10792,-9847],[1059,31260],[-8371,33007],[-9084,10241],[-2775,29191],[7095,6801],[9270,-29084],[-1544,-25027],[4269,-17662],[9521,-21108],[7826,15353],[-11142,18712],[-5254,18013],[5777,45889],[5264,-214],[-9050,16745],[-16873,-12273],[-7891,13245],[-5636,-9104],[-23402,22889],[-480,23831],[-8943,61659],[-12659,26158],[-23015,56611]],[[664463,9372812],[-1511,-42343],[6201,-109],[-74,-16538],[6341,266],[-174,-16130],[6250,59],[-1694,-16751],[-36,-48340],[12334,-598],[105,-16932],[4377,217],[101,-66835],[-1688,-16522],[-18401,61],[-93,-27924],[-18053,291],[-1352,-48627],[-11665,180],[-12,16393],[-6007,-612],[28,15851],[-11928,-123],[-68,-32542],[-11835,-538],[-5,33073],[-23423,-366],[-50,-65794],[-29846,-345],[-24,-31097],[-17520,147],[44,-81496]],[[1308008,7058723],[3921,13540],[2677,-1904],[755,18282],[-2101,10549],[3876,17612],[1086,19651],[5001,9356],[4307,-15864],[3748,-216],[-2108,21177],[5199,14181],[4086,-2194],[3011,14771],[-2474,24957]],[[1338992,7202621],[8503,-7462],[4451,-18639],[4336,-5267],[1150,-18552],[5017,-8198]],[[1362449,7144503],[-3990,-28742],[6634,-32997]],[[1365093,7082764],[664,-34768],[4088,-55601],[-3246,-16149],[-6768,-51768],[-9929,-37815],[-2551,19383],[-3580,-6230],[-2678,38674],[777,16504],[-3021,20271],[4667,20215],[1519,43623],[-1907,41377],[-7731,42959],[-703,-5479],[4781,-23681],[3968,-47162],[-1859,-19502],[1846,-24888],[-2812,12909],[-63,-23137],[-3599,-16341],[-3961,9871],[2792,26694],[-2497,-1663],[199,-18252],[-3991,-8801],[-11589,40678],[-38,12237],[5331,13161],[-2018,9090],[1034,46651],[-4108,-2763],[1831,-12249],[-1606,-26744],[-3740,-9711],[-241,-21897],[-4921,12017],[-1425,14246]],[[1334709,6956517],[0,0]],[[1327871,6929908],[6144,9062],[1836,-16590],[-4264,-9576],[-3716,17104]],[[1317173,7007430],[1641,9264],[4581,-20199],[-2816,-33232],[-2230,13082],[-1176,31085]],[[509749,8438976],[-3959,-21474],[-200,-64800],[-1250,-246],[-72,-64346],[3836,-429],[-107,-47731],[10584,-397]],[[518581,8239553],[1800,-14583],[6194,-2496],[-14713,-21990],[-9795,-26015],[-8993,-5747],[-12138,-16102],[-12342,6657],[-4945,7122],[-18545,-20094],[-6585,6512],[-6899,-27709],[-9401,6726],[308,-24047],[-3894,-21766],[-925,-19537],[-10453,-15316],[-7460,7803],[-10016,-12189]],[[389779,8046782],[-1054,10582],[6504,9409],[-5892,22976],[-4250,4190],[-499,-18482],[-6887,7601],[-909,31307],[-5381,4667],[-2847,21660],[4578,14903],[-4408,10762],[-5454,-11928],[-868,26175],[9179,7620],[-5481,10641],[-2192,16213],[9110,1674],[4412,6406],[-4369,27453],[2363,24998],[16045,71607],[2311,22020],[4889,8455],[-1103,18540],[2604,30291],[5574,21021],[-1398,7368],[5865,21367],[7894,8865],[11351,-8625],[11603,-32849],[7681,4565],[6112,26850],[6503,13127]],[[461365,8488211],[5852,-531],[101,-16185],[5278,5],[198,-16843],[5223,-82],[-24,-15601],[31756,2]],[[2518958,3120147],[-29,-16390]],[[2518929,3103757],[-1476,-2618],[-990,-24364]],[[2516463,3076775],[-11739,2730]],[[2504724,3079505],[5,21766]],[[2504729,3101271],[14,16397]],[[2504743,3117668],[4378,2810]],[[2509121,3120478],[9837,-331]],[[2463770,2871869],[4487,93],[-9,10977],[2850,58]],[[2471098,2882997],[2213,-17039],[1176,12049]],[[2474487,2878007],[36,-30886],[-2824,-7665],[1885,-16147]],[[2473584,2823309],[-2377,-298],[-16,-16044],[-5760,-147]],[[2465431,2806820],[-39,32570],[-1220,-41]],[[2464172,2839349],[-402,32520]],[[2535547,3117382],[-454,-22179]],[[2535093,3095203],[-4817,67]],[[2530276,3095270],[-42,51876],[-969,2785]],[[2529265,3149931],[54,44898]],[[2529319,3194829],[4555,30]],[[2533874,3194859],[2846,-19359]],[[2536720,3175500],[-1173,-58118]],[[2520746,2916068],[5320,3102],[-937,23859]],[[2525129,2943029],[7384,17738]],[[2532513,2960767],[-716,-39488]],[[2531797,2921279],[-831,-45987]],[[2530966,2875292],[-10159,-263]],[[2520807,2875029],[-61,41039]],[[2475985,2303013],[-68,-48341],[1117,-20684],[2031,-8368],[-1696,-23467]],[[2477369,2202153],[-3288,237],[-719,12343],[-4735,24760]],[[2468627,2239493],[106,23465],[2480,2991],[4772,37064]],[[2426188,2769478],[4297,-11583],[-59,-29054]],[[2430426,2728841],[-2543,-23471],[-837,-19360]],[[2427046,2686010],[-7730,70]],[[2419316,2686080],[-2886,24402],[2,16409]],[[2416432,2726891],[8,16353]],[[2416440,2743244],[3993,-330],[5755,26564]],[[2448754,2254455],[860,10085]],[[2449614,2264540],[3299,6952]],[[2452913,2271492],[3963,743]],[[2456876,2272235],[107,-16570],[2070,-13583]],[[2459053,2242082],[-3376,-35672]],[[2455677,2206410],[-2113,-16547]],[[2453564,2189863],[-485,13670]],[[2453079,2203533],[202,19124],[-2510,8347],[-2017,23451]],[[2393495,2824693],[6963,-105]],[[2400458,2824588],[7354,-569]],[[2407812,2824019],[-19,-47703]],[[2407793,2776316],[-2873,-135],[-1456,-32482]],[[2403464,2743699],[-8301,-67]],[[2395163,2743632],[-218,24677],[-1416,-96],[-34,56480]],[[2380013,2269320],[433,36099]],[[2379479,2335225],[7120,-89],[-7,16476],[2834,-78],[-14,-16374],[7078,79]],[[2396490,2335239],[2791,-4429],[965,-41634],[2869,-120],[160,-13821],[-3031,-8236]],[[2400244,2266999],[-3680,2642],[-16551,-321]],[[2424043,2315729],[-3970,-28334]],[[2420073,2287395],[-3939,-18357],[-3562,11540],[-1995,-3498]],[[2410577,2277080],[958,16852],[-1144,24693],[1044,19700],[-1039,11532]],[[2410396,2349857],[3865,-122]],[[2414261,2349735],[6923,-57],[1904,-8112],[955,-25837]],[[2422540,2536421],[3048,-26674]],[[2425588,2509747],[-4082,-2589],[681,-66785],[-2005,63]],[[2420182,2440436],[-2993,6829],[-2627,-16362],[-3212,-3378]],[[2411350,2427525],[-6301,-1141]],[[2405049,2426384],[-160,67809],[-4229,17664]],[[2400660,2511857],[1906,4041],[5407,27957]],[[2407973,2543855],[677,-20657],[1747,-3136],[12143,16359]],[[2401840,2661841],[3465,-194]],[[2405305,2661647],[14000,-147]],[[2419305,2661500],[-11,-40943]],[[2419294,2620557],[-1393,-24473]],[[2417901,2596084],[-7149,97],[-21,-16393],[-9850,-121]],[[2400881,2579667],[187,13546],[2619,31158],[-1847,37470]],[[2419305,2661500],[11,24580]],[[2427046,2686010],[1519,-20762],[2372,-2732]],[[2430937,2662516],[140,-33706]],[[2431077,2628810],[-3224,-8269]],[[2427853,2620541],[-8559,16]],[[2440687,2587679],[4584,-3458]],[[2445271,2584221],[-573,-21111],[-2698,4661],[1497,-19262],[-1869,-1844],[174,-31376],[-1789,2368],[1404,-19158],[-3418,-1565],[1443,-14184]],[[2439442,2482750],[-996,-14071],[1694,-14412],[-2021,-7403]],[[2438119,2446864],[-712,-5438]],[[2437407,2441426],[117,4493]],[[2437524,2445919],[-1825,9338]],[[2435699,2455257],[1296,26914],[-4374,14656]],[[2432621,2496827],[-635,42710],[1392,-10433],[763,17255],[-1321,11174],[2506,4383],[1584,24249],[3777,1514]],[[2841731,3921207],[-610,3207]],[[2841121,3924414],[610,-3207]],[[2709369,3596709],[4484,17821]],[[2713853,3614530],[5001,-5820],[5530,24526]],[[2724384,3633236],[3818,-19246]],[[2728202,3613990],[-2870,-17943],[1606,-8678],[-5342,-10689],[698,-4763]],[[2722294,3571917],[-6850,-14426],[-2717,4791]],[[2712727,3562282],[-3358,34427]],[[2832664,3903429],[457,-1611]],[[2833121,3901818],[-457,1611]],[[2832540,3897835],[0,0]],[[2791548,3769291],[0,0]],[[2787532,3782344],[0,0]],[[2841588,3590998],[5286,-10706],[338,-20662]],[[2847212,3559630],[-13278,-44322]],[[2833934,3515308],[-1668,2499],[872,26572],[-4467,2785]],[[2828671,3547164],[6144,21551]],[[2834815,3568715],[6773,22283]],[[2809303,3945874],[380,-12064],[-2400,-21221]],[[2807283,3912589],[-4517,-17127],[-2590,-25069]],[[2800176,3870393],[-6338,29625]],[[2793838,3900018],[2263,22859],[1942,3611],[4855,28496]],[[2802898,3954984],[2509,-5438],[3294,13834],[602,-17506]],[[2746174,3586800],[1404,8322]],[[2747578,3595122],[-1404,-8322]],[[2747889,3594857],[0,0]],[[2271557,2693787],[-50,44336]],[[2271507,2738123],[1853,-18]],[[2273360,2738105],[12920,-1116]],[[2286280,2736989],[18,-53155]],[[2286298,2683834],[-10863,-17218]],[[2275435,2666616],[-1115,-7459],[-2757,13098]],[[2271563,2672255],[-6,21532]],[[2169814,2568798],[-15,-17668]],[[2169791,2545931],[-191,-84100]],[[2169600,2461831],[-13970,76]],[[2155630,2461907],[11,106978]],[[2155641,2568885],[14173,-87]],[[2199206,1922289],[2742,184]],[[2201948,1922473],[20048,1274]],[[2221996,1923747],[145,-32607],[16316,5065]],[[2238597,1764535],[6,-16101],[-4362,261]],[[2234241,1748695],[-10558,716],[-1031,8601],[-2317,-10130]],[[2220335,1747882],[-1410,14008],[700,25969],[-3198,29936],[-3552,5162],[-4350,24946],[-1508,33981],[-1662,2544],[-2562,27977],[-3587,9884]],[[2230302,2730500],[-509,9]],[[2215926,2730480],[1,82790]],[[2215927,2813270],[3921,11]],[[2219848,2813281],[10455,3]],[[2230303,2813284],[-1,-82784]],[[2371072,2924693],[13,-52598]],[[2371085,2872095],[-4898,4709],[-295,-9990],[-6661,9600],[-2898,-8328],[-2223,3564]],[[2351472,2882894],[23,70019]],[[2351495,2952913],[7250,-12196]],[[2358745,2940717],[2685,-17056],[4267,7347],[5375,-6315]],[[2176179,2815751],[10665,-1264]],[[2186844,2814487],[-133,-82013]],[[2186711,2732474],[-14319,449]],[[2172392,2732923],[33,81588]],[[2172425,2814511],[3754,1240]],[[2279020,1750298],[-824,-33120],[175,-35810],[2308,-57904]],[[2279827,1623449],[-1922,41276],[-73,62840],[479,22752]],[[2278311,1750317],[709,-19]],[[2262025,1625602],[-782,31661]],[[2261243,1657263],[-11,80183]],[[2261232,1737446],[6352,13818],[3377,-261]],[[2270961,1751003],[216,-7258],[5757,2761],[-1567,-48389],[-2141,-1666],[-220,-27720],[2553,-15621],[848,-29730]],[[2271563,2672255],[-6959,-21761]],[[2264604,2650494],[-2250,27355]],[[2262354,2677849],[4537,15540],[4666,398]],[[2144859,3313132],[2,-1400]],[[2144861,3311732],[-132,-81758]],[[2144729,3229974],[-24379,-14]],[[2120350,3229960],[26,82231]],[[2120376,3312191],[24483,941]],[[2201034,2732003],[14403,-1522]],[[2213086,2649513],[-12202,103]],[[2200884,2649616],[150,82387]],[[2205368,2895709],[-14668,87]],[[2190700,2895796],[-34,81943]],[[2190666,2977739],[13100,60]],[[2205216,2977798],[152,-82089]],[[2157996,2814182],[3729,-153]],[[2161725,2814029],[10700,482]],[[2172392,2732923],[0,-674]],[[2158067,2732458],[-71,81724]],[[2327207,2433949],[5101,23899]],[[2332308,2457848],[1061,-37510],[1928,344]],[[2335297,2420682],[-882,-66479]],[[2334415,2354203],[-6682,868],[-6443,22700]],[[2321290,2377771],[-914,43770]],[[2320376,2421541],[6831,12408]],[[2230303,2813284],[4043,-23]],[[2234346,2813261],[10455,-482]],[[2244801,2812779],[-17,-82205]],[[2244784,2730574],[-14482,-74]],[[2134763,3148308],[-14421,81]],[[2120342,3148389],[3,38696]],[[2120345,3187085],[5,42875]],[[2144729,3229974],[-38,-81575]],[[2144691,3148399],[-9928,-91]],[[2174862,3311558],[-4,1154]],[[2174858,3312712],[9,80486]],[[2174867,3393198],[1,431]],[[2174868,3393629],[15017,-195]],[[2189885,3393434],[181,-7]],[[2190066,3393427],[1,-81834]],[[2190067,3311593],[-15205,-35]],[[2356626,2458008],[2901,-4797]],[[2359527,2453211],[6097,-3673],[-165,-8523],[3318,-53179],[2085,-8515],[-577,-21063]],[[2370285,2358258],[-13207,177]],[[2357078,2358435],[-3128,90786],[2676,8787]],[[2156056,2219079],[70,94633]],[[2156126,2313712],[22226,-50]],[[2178352,2313662],[7251,94]],[[2185603,2313756],[13,-124356]],[[2182978,2117846],[-6026,23883],[-1372,16743],[-5601,14621],[386,15293],[-3188,7364],[-2623,24383],[-2142,-4447],[-6356,3393]],[[2229672,2649045],[5412,-294]],[[2235084,2648751],[7131,-70659]],[[2242215,2578092],[-2552,-2361],[-555,-14443],[-5897,-23708]],[[2233211,2537580],[-2758,-4333]],[[2230453,2533247],[-3125,1181]],[[2273538,2820235],[-178,-82130]],[[2271507,2738123],[-12531,623]],[[2258976,2738746],[300,83203]],[[2259276,2821949],[3746,-383]],[[2263022,2821566],[10516,-1331]],[[2341727,2291096],[3211,-52959]],[[2344938,2238137],[2030,-11004],[-629,-28378]],[[2346339,2198755],[-1156,2057]],[[2345183,2200812],[-453,-2370]],[[2344730,2198442],[-466,-2474]],[[2344264,2195968],[-20,-209]],[[2344244,2195759],[-35,-354]],[[2344209,2195405],[-113,-1156]],[[2344096,2194249],[-29,-508]],[[2344067,2193741],[-30,-519]],[[2344037,2193222],[-51,-909]],[[2343986,2192313],[1,-33]],[[2343987,2192280],[55,-1777]],[[2344042,2190503],[3,-111]],[[2344045,2190392],[51,-267]],[[2344096,2190125],[304,-1579]],[[2344400,2188546],[9,-47]],[[2344409,2188499],[27,-142]],[[2344436,2188357],[11,-58]],[[2344447,2188299],[397,-2556]],[[2344844,2185743],[53,-503]],[[2344897,2185240],[2,-106]],[[2344899,2185134],[-2,-21]],[[2344897,2185113],[-926,-7797]],[[2343971,2177316],[-5,-69]],[[2343966,2177247],[-9,-109]],[[2343957,2177138],[-44,-656]],[[2343913,2176482],[1,-50]],[[2343914,2176432],[0,-3]],[[2343914,2176429],[-4060,-10584],[-1462,10862]],[[2332605,2181227],[-11203,38942]],[[2321402,2220169],[-3748,70216],[4386,-13724]],[[2322040,2276661],[3680,2090],[3338,12980],[7203,-26741],[5466,26106]],[[2234241,1748695],[12,-90539]],[[2228258,1618099],[-2764,50824],[-4938,33518],[541,29199],[-762,16242]],[[2335771,2985517],[2606,15998],[1701,-4886]],[[2340078,2996629],[5210,-14162],[2625,-20917],[3582,-8637]],[[2349749,2889389],[-8823,4833]],[[2335878,2892083],[-56,492]],[[2258099,2032743],[-2582,17853]],[[2255517,2050596],[12887,63532]],[[2268404,2114128],[3213,-20961]],[[2271617,2093167],[-3956,-19214],[5029,-36277]],[[2272690,2037676],[-5681,-27192]],[[2267009,2010484],[-3805,9663],[-2512,-5505]],[[2260692,2014642],[-2593,18101]],[[2244801,2812779],[4135,-382],[18,10409]],[[2248954,2822806],[10322,-857]],[[2258976,2738746],[-47,-8834]],[[2258929,2729912],[-11329,266]],[[2247600,2730178],[-2816,396]],[[2155633,2650419],[2259,114]],[[2169895,2650459],[-81,-81661]],[[2155641,2568885],[-8,81534]],[[2359677,2605003],[-1644,24277]],[[2358033,2629280],[13814,1099]],[[2371847,2630379],[3805,-25376]],[[2375652,2605003],[2354,-26624],[-1124,-21681]],[[2376882,2556698],[-4167,-3143]],[[2372715,2553555],[-2960,9582],[-8592,6174]],[[2325883,2813919],[9930,401]],[[2340181,2823843],[2,-20741]],[[2340183,2803102],[-36,-62241]],[[2327857,2762744],[-1128,6243]],[[2326729,2768987],[-846,44932]],[[2903230,4195511],[2409,934],[3017,14503]],[[2908656,4210948],[3582,-9314]],[[2912238,4201634],[-65,-9366],[3835,-13300]],[[2916008,4178968],[-2886,-21538]],[[2913122,4157430],[-3798,1700]],[[2897744,4110652],[2226,19319]],[[2899970,4129971],[3559,-19466],[783,-17598],[4674,-11905]],[[2908986,4081002],[-3925,-22766]],[[2905061,4058236],[-1488,15454],[-4359,16608],[-1470,20354]],[[2921958,4299438],[-751,19548],[-5718,15825]],[[2915489,4334811],[3817,21898]],[[2919306,4356709],[3662,-11233]],[[2922968,4345476],[590,-1663]],[[2923558,4343813],[-1649,-21653],[3660,-9723],[309,-27404]],[[2925878,4285033],[-3920,14405]],[[1865110,2729003],[29162,-956],[-1,1924],[19664,350]],[[1913935,2730321],[-7,-16181]],[[1913928,2714140],[-6,-130292]],[[1913922,2583848],[-19851,-988],[14,-38213],[-5652,-100],[1,-17812]],[[1888434,2526735],[-54808,114669]],[[1833626,2641404],[-4,87258]],[[1833622,2728662],[31488,341]],[[1905593,3570626],[20895,-978]],[[1926488,3569648],[0,-249939],[4841,-32],[-469,-27066],[-24,-130147],[-574,-49204],[474,-16143],[-308,-130228],[-905,17],[0,-39298]],[[1929523,2927608],[-3033,1705]],[[1926490,2929313],[-2,79197],[-20895,0],[0,49277]],[[1905593,3057787],[0,512839]],[[1811211,3065258],[2985,-8126],[11872,-5669],[1825,14384],[5739,2153]],[[1833632,3068000],[-6,-59644]],[[1833626,3008356],[-4,-116387]],[[1833622,2891969],[-17389,30],[0,16297],[-8632,-201],[-25,-81189],[-6901,-412]],[[1797592,2902475],[2867,22370],[772,26923],[-1071,42826],[2773,28830]],[[1802933,3023424],[5070,17669],[3208,24165]],[[3097861,4958014],[-4121,98020],[3431,3144],[-2037,55534]],[[3095328,5187209],[6752,7516]],[[3102080,5194725],[4461,-12498],[6129,-6530],[-2170,-16630],[2345,-21043],[-1960,-17782],[4143,-29392],[1402,11698],[3693,-4953],[4969,-66217],[-5843,-30290],[-2904,-2100],[-414,13690],[-2702,-21192],[-4092,4753],[-985,-32228],[-1927,16556],[-2409,-7203],[-2690,11484],[-1321,-23530],[-1944,-3304]],[[2083436,3341941],[-403,15074],[1519,18454],[-3031,48331]],[[2081521,3423800],[11903,-139]],[[2093424,3423661],[-1,-8145],[5990,-96],[-10,-16510],[11963,110],[-279,-64831]],[[2111087,3334189],[-138,-64018],[-7166,-1548]],[[2103783,3268623],[-2437,6084],[-7028,71028],[-1239,-3784],[-9643,-10]],[[2027556,2911190],[759,-16715]],[[2028315,2894475],[150,-63268]],[[2028465,2831207],[-15251,-43042],[4,-8147],[-11468,241],[-3,-32768]],[[2001747,2747491],[-8605,-30]],[[1993142,2747461],[-3584,4513],[434,27813],[-1648,32699],[-2122,9314],[650,13570],[-1177,23877],[-3483,-195]],[[1982212,2859052],[0,51746],[8021,-211]],[[1990233,2910587],[34504,-207],[2819,810]],[[2098839,2814811],[1344,6],[-2,80535],[1255,76],[18,32527],[5864,108]],[[2107318,2928063],[12750,65]],[[2120068,2928128],[-108,-34101]],[[2119960,2894027],[-227,-80358]],[[2119732,2731890],[5,-81448]],[[2119737,2650442],[2,-16197],[-7302,-28]],[[2112437,2634217],[-11042,-29]],[[2101395,2634188],[-3,97777],[-2536,-23],[-17,82869]],[[1897370,4427265],[-24,78936]],[[1897346,4506201],[-1,95749]],[[1897345,4601950],[72,94887]],[[1897417,4696837],[-13,55342]],[[1910386,4737112],[-321,-147268],[1304,19],[48,-32015],[13594,-1264]],[[1925011,4556584],[159,-129662]],[[1925170,4426922],[-27800,343]],[[2057707,3203555],[-12,32617],[32501,-140],[-1,-13743]],[[2090195,3222289],[-128,-67917]],[[2090067,3154372],[-5870,-49],[11,-16252],[-2932,-109],[0,-16253],[-12455,-74],[4,-48186]],[[2068825,3073449],[-11732,-50]],[[2057093,3073399],[8,48728],[623,-58],[-17,81486]],[[1952972,4318855],[-26484,-619]],[[1926488,4318236],[-1331,56]],[[1925157,4318292],[13,108630]],[[1925011,4556584],[28136,-1321]],[[1953147,4555263],[42380,-361]],[[1995527,4554902],[526,-32531],[-164,-80581],[-11702,403],[315,-123080]],[[1984502,4319113],[-31530,-258]],[[2026501,3171392],[7282,-22],[-15,15594],[-2612,-30],[0,16246]],[[2031156,3203180],[14750,275]],[[2045906,3203455],[11801,100]],[[2057093,3073399],[-7,-16230],[-17016,-5]],[[2040070,3057164],[-13705,-51],[-31,33707]],[[2026334,3090820],[-1477,15230],[162,65323],[1482,19]],[[3073837,5328692],[-57,33080],[-25066,288]],[[3048714,5362060],[-8417,-106]],[[3040297,5361954],[728,22788],[21527,143087],[5021,-6028],[92,-34161],[3924,-12588],[8949,20532],[5597,-6],[2590,13647],[9279,-31009],[4503,-23850],[255,-210313],[-682,-49328]],[[1897350,4365847],[20,61418]],[[1925157,4318292],[-27812,58],[5,47497]],[[1925071,4780080],[8269,-296],[1666,-18165],[1212,-37270],[2755,-28918],[5079,-12620],[1529,-16656],[6758,-30438],[808,-80454]],[[1993142,2747461],[-8781,-187],[0,-16303],[-8519,-53],[-19,-81802],[355,-40405]],[[1976178,2608711],[-8567,-75],[-374,40456],[30,81781],[-3068,26],[22,16225],[-5759,9],[-36,32504],[-5370,54]],[[1953056,2779691],[-4,80747]],[[1953052,2860438],[29160,-1386]],[[2028315,2894475],[17233,-53],[38,-16040],[11337,49],[61,-32358]],[[2056984,2846073],[19,-31859],[-1013,-7],[-38,-82958],[13996,325]],[[2069948,2731574],[106,-97327]],[[2070054,2634247],[-1965,-5]],[[2068089,2634242],[-30082,343]],[[2038007,2634585],[-10564,-218]],[[2027443,2634367],[15,179085],[1007,17755]],[[1953088,3383290],[21,186567]],[[1953109,3569857],[18556,81]],[[1971665,3569938],[25004,92]],[[1996669,3570030],[1694,-1]],[[1998363,3570029],[-690,-15841],[-4810,-20707],[-165,-109487]],[[1992698,3423994],[-64,-41081]],[[1992634,3382913],[-39546,377]],[[2001236,4319278],[-16734,-165]],[[1995527,4554902],[-6,32307]],[[2029003,4318568],[-14950,663]],[[2014053,4319231],[-12817,47]],[[2095179,3023996],[-80,97757]],[[2095099,3121753],[5867,-72]],[[2100966,3121681],[-50,-56452],[19394,-91]],[[2120310,3065138],[-95,-89455]],[[2120215,2975683],[-147,-47555]],[[2107318,2928063],[15,16278],[-5810,-203],[41,30539],[-3486,-9],[8,49122],[-2907,206]],[[2120342,3148389],[-27,-81349]],[[2120315,3067040],[-5,-1902]],[[2100966,3121681],[904,16432],[5844,-185],[18,16327],[2929,-109],[25,16321],[2931,-62],[34,16694],[6694,-14]],[[2045795,3569250],[13871,-127]],[[2059666,3569123],[-104,-48868],[-4078,-9948],[-196,-24115],[1644,-11306],[-618,-42948]],[[2056314,3431938],[-1916,-4759],[-287,-19674],[-3076,-22216]],[[2051035,3385289],[-5725,16306],[-3373,24389],[-5613,12456],[2417,8905],[917,22058],[-1180,46989],[257,32345],[-969,20420]],[[2037766,3569157],[8029,93]],[[1953042,2713957],[14,65734]],[[1976178,2608711],[245,-15067]],[[1976423,2593644],[-5,-84267],[-23444,-167]],[[1952974,2509210],[68,204747]],[[2069948,2731574],[288,82881],[28603,356]],[[2101395,2634188],[-7170,-15]],[[2094225,2634173],[-1235,-22]],[[2092990,2634151],[-22936,96]],[[2068789,3025028],[36,48421]],[[2090067,3154372],[15,-32588],[5017,-31]],[[2095179,3023996],[-5848,100],[-12,-16454],[-17544,870],[-8,16415],[-2978,101]],[[1953091,3188137],[16064,-140],[19,65096],[32277,-291]],[[2001451,3252802],[1976,32],[1198,-16105]],[[2004625,3236729],[3607,-49065]],[[2008232,3187664],[-3799,164],[-38,-70987]],[[2004395,3116841],[-14500,-141]],[[1989895,3116700],[-36813,230]],[[1953082,3116930],[9,71207]],[[2090195,3222289],[7443,22817],[6147,-4343],[-2,27860]],[[2111087,3334189],[9293,-138]],[[2120380,3334051],[-4,-21860]],[[2059666,3569123],[1826,19]],[[2061492,3569142],[31962,182]],[[2093454,3569324],[-30,-145663]],[[2081521,3423800],[-11963,-144],[10,8076],[-13254,206]],[[2031043,3376552],[70,-6627]],[[2031113,3369925],[-82,-14093]],[[2031031,3355832],[3,-3081]],[[2031034,3352751],[2131,-2060],[-2131,-13558]],[[2031034,3337133],[-4247,9700],[30,28542],[4226,1177]],[[2026501,3171392],[-588,6178],[-7071,540],[-969,-6756],[-8474,38],[-1167,16272]],[[2004625,3236729],[26505,-772]],[[2031130,3235957],[26,-32777]],[[3074483,4968501],[-1414,28800],[868,10941]],[[3097861,4958014],[-2570,-15850],[-2058,27718],[-3859,982],[-923,-9584],[3378,-19552],[-4011,-19335],[-3156,16380],[2027,14923],[-1994,8759],[-3810,-8364],[1145,-31239],[-5786,18874],[-2625,-3038],[864,29813]],[[3089012,4928676],[0,0]],[[3086174,4901553],[0,0]],[[3086323,4916385],[0,0]],[[3083091,4919476],[0,0]],[[3082713,4910213],[0,0]],[[3082214,4901452],[0,0]],[[3081938,4944761],[0,0]],[[3076524,4922105],[3261,1350],[-2118,-17325],[-1143,15975]],[[3073279,4924536],[0,0]],[[2445579,3888100],[3974,-14553],[4158,-2289],[3144,-11566]],[[2456855,3859692],[1335,-2400],[5133,19574]],[[2463323,3876866],[-112,-32317]],[[2461989,3795409],[-8792,-6]],[[2453197,3795403],[-7570,1059]],[[2445627,3796462],[-48,91638]],[[2873710,4014841],[6571,209]],[[2880281,4015050],[182,-15112]],[[2880463,3999938],[114,-9500]],[[2880577,3990438],[-7073,-1154],[-878,-13595],[-3252,-13715]],[[2869374,3961974],[-3355,9690],[2589,32488],[5102,10689]],[[2991081,4454352],[11827,2076]],[[3002908,4456428],[335,-1958]],[[3003243,4454470],[-1545,-13359]],[[3001698,4441111],[-2111,-9555],[-8493,-1109]],[[2991094,4430447],[44,8062]],[[2991138,4438509],[-57,15843]],[[2842107,3826084],[749,261]],[[2842856,3826345],[-749,-261]],[[2842067,3826069],[0,0]],[[2842067,3826069],[0,0]],[[2841765,3824054],[-414,-2144]],[[2841351,3821910],[414,2144]],[[2840922,3821204],[-1,-1]],[[2840922,3821204],[0,0]],[[2840727,3821136],[-366,-126]],[[2840361,3821010],[366,126]],[[2839422,3819568],[-1000,304]],[[2838422,3819872],[1000,-304]],[[2838321,3820169],[-117,344]],[[2838204,3820513],[117,-344]],[[2838071,3821176],[-127,983]],[[2837944,3822159],[-43,573]],[[2837901,3822732],[43,-573]],[[2837944,3822159],[127,-983]],[[2837884,3822957],[0,24]],[[2837884,3822981],[0,-24]],[[2837888,3823988],[1,310]],[[2837889,3824298],[-1,-310]],[[2837890,3824457],[-227,1988]],[[2837663,3826445],[227,-1988]],[[2837581,3826804],[-17,74]],[[2837564,3826878],[17,-74]],[[2837445,3827398],[-26,112]],[[2837419,3827510],[26,-112]],[[2837014,3835910],[-17,530]],[[2836997,3836440],[17,-530]],[[2836994,3836559],[-62,2000]],[[2836932,3838559],[62,-2000]],[[2837268,3849601],[56,539]],[[2837324,3850140],[-56,-539]],[[2837807,3853736],[1,3]],[[2837807,3853736],[0,0]],[[2837830,3853925],[54,456]],[[2837884,3854381],[-54,-456]],[[2837920,3854681],[95,794]],[[2838015,3855475],[-95,-794]],[[2838041,3855814],[100,1337]],[[2838141,3857151],[-100,-1337]],[[2838143,3857174],[72,975]],[[2838215,3858149],[-72,-975]],[[2838219,3858205],[1,6]],[[2838220,3858211],[-1,-6]],[[2838280,3860148],[6,47]],[[2838286,3860195],[-6,-47]],[[2840226,3872846],[301,298]],[[2840527,3873144],[-301,-298]],[[2840627,3873317],[142,247]],[[2840769,3873564],[-142,-247]],[[2840876,3873749],[155,271]],[[2841031,3874020],[-155,-271]],[[2842294,3875988],[1217,13405]],[[2843511,3889393],[2099,-10155],[4126,1250],[3188,-7568],[2036,-15412]],[[2854960,3857508],[37,-6786]],[[2854997,3850722],[-2809,1738],[-2750,-24209],[1103,-14954]],[[2850541,3813297],[-225,-8458],[-3716,17377],[-1138,18389],[-5320,-16042],[-1864,22817],[4016,28608]],[[2849369,3789547],[-327,1540]],[[2849042,3791087],[327,-1540]],[[2848879,3791849],[-311,1465]],[[2848568,3793314],[311,-1465]],[[2848567,3793315],[-59,280]],[[2848508,3793595],[59,-280]],[[2848469,3793776],[-48,227]],[[2848421,3794003],[48,-227]],[[2848356,3794227],[-85,253]],[[2848271,3794480],[85,-253]],[[2847984,3794811],[-296,257]],[[2847688,3795068],[296,-257]],[[2847073,3803139],[-70,1437]],[[2847003,3804576],[70,-1437]],[[2846998,3804692],[-9,182]],[[2846989,3804874],[9,-182]],[[2846186,3808492],[-203,756]],[[2845983,3809248],[-108,622]],[[2845875,3809870],[108,-622]],[[2845983,3809248],[203,-756]],[[2845155,3814263],[-32,449]],[[2845123,3814712],[32,-449]],[[2845453,3821450],[2,101]],[[2845455,3821551],[-2,-101]],[[2845485,3822866],[7,303]],[[2845492,3823169],[-7,-303]],[[2845507,3823786],[80,3486]],[[2845587,3827272],[-80,-3486]],[[2845332,3828924],[-9,63]],[[2845323,3828987],[9,-63]],[[2845322,3828988],[-10,63]],[[2845312,3829051],[10,-63]],[[2845301,3829125],[-30,188]],[[2845271,3829313],[30,-188]],[[2844617,3832068],[-105,-131]],[[2844512,3831937],[105,131]],[[2844231,3830259],[-100,-890]],[[2844131,3829369],[100,890]],[[2843875,3827531],[-263,-1142]],[[2843612,3826389],[263,1142]],[[2843529,3826131],[-241,-96]],[[2843288,3826035],[241,96]],[[2875304,3883382],[-1945,10215],[3296,16176],[-1465,19321]],[[2875190,3929094],[3187,35583],[2429,6533]],[[2880806,3971210],[696,-58677]],[[2881502,3912533],[427,-36407]],[[2881929,3876126],[-1538,9523],[-5087,-2267]],[[2410586,3837836],[-1801,-15406],[-169,-23668]],[[2408616,3798762],[-1925,-6082],[-5517,1441],[-3195,12327]],[[2397979,3806448],[289,49959]],[[2398268,3856407],[204,30524]],[[2398472,3886931],[6133,-1703]],[[2404605,3885228],[-56,-16318],[6037,-31074]],[[3001698,4441111],[-1089,-13742],[817,-20168],[-1808,-18892],[-10510,-9635]],[[2989108,4378674],[1749,18059],[237,33714]],[[2996001,4348732],[0,0]],[[3002908,4456428],[1322,7574]],[[3004230,4464002],[3048,-16007]],[[3007278,4447995],[-1,-5]],[[3007277,4447990],[-457,3730]],[[3006820,4451720],[-968,-12710],[-2609,15460]],[[2419621,4057686],[44,0]],[[2419665,4057686],[3138,-236],[47,11015],[9424,-828]],[[2432274,4067637],[3664,-162]],[[2435938,4067475],[-76,-59619]],[[2435862,4007856],[-16496,1623]],[[2419366,4009479],[255,48207]],[[2425533,3580557],[-4532,637]],[[2420976,3658552],[78,24633]],[[2421054,3683185],[6135,-376]],[[2427189,3682809],[6134,-689]],[[2433323,3682120],[1513,-17],[-7,-32692],[3020,-258]],[[2437849,3649153],[-250,-69968]],[[2437599,3579185],[-12066,1372]],[[2366361,3983142],[3001,-11902]],[[2369362,3971240],[-261,-42339]],[[2369101,3928901],[-137,-15748]],[[2355342,3915780],[18,36851]],[[2355360,3952631],[1,12983]],[[2355361,3965614],[4061,1297],[4784,21849],[2155,-5618]],[[1647912,5219512],[3660,4395]],[[1651572,5223907],[5524,3913],[2739,12839],[3892,-1349]],[[1663727,5239310],[-77,-59050],[5193,-169],[-1,-16054],[2867,-8],[-28,-81065],[-487,-16298]],[[1671194,5066666],[-14157,-275]],[[1657037,5066391],[-3318,41],[19,13686]],[[1653738,5080118],[844,18685],[-3425,388],[28,16153],[-3475,281],[202,103887]],[[1607322,5401308],[-1863,16760],[1860,9257],[2140,30703]],[[1609459,5458028],[2721,408],[5356,-18327],[1764,-14916],[10910,122],[12,-16128],[3489,-243],[-11,-16175],[14949,-177]],[[1648649,5392592],[2758,-20325]],[[1651407,5372267],[218,-110045]],[[1651625,5262222],[-46185,633]],[[1605440,5262855],[11,64422]],[[1605451,5327277],[3817,4189],[-1801,23011],[2755,33472],[-2900,13359]],[[1535374,5307709],[89,2464]],[[1535463,5310173],[-89,-2464]],[[1549057,5303109],[1896,1876],[3232,-22984]],[[1554185,5282001],[74,-68630]],[[1554259,5213371],[-16950,659]],[[1537309,5214030],[1001,53997],[-2144,28420],[4072,-6362],[4389,1899],[4430,11125]],[[1560163,5015078],[2101,-11782],[-5197,-19126],[1529,-20984],[-1089,-20086],[1683,-9740]],[[1559190,4933360],[-16478,-25]],[[1542712,4933335],[-1158,11464],[2835,2951],[-144,13523],[3432,13],[-149,53963]],[[1547528,5015249],[12635,-171]],[[1594343,5188935],[3090,10789],[8050,3353]],[[1605483,5203077],[2267,-5136]],[[1607750,5197941],[12,-33305],[-1169,60],[29,-48917],[-5998,-49]],[[1600624,5115730],[-2,21663],[-3442,16455]],[[1597180,5153848],[-2405,11012],[-432,24075]],[[1616873,5553556],[1259,20421],[-1411,13795]],[[1616721,5587772],[1346,8629],[-3064,13607],[757,26605],[3848,6415],[3037,16510],[-2647,24745]],[[1619998,5684283],[-1909,3929],[977,33412],[5460,10422],[3827,-3576]],[[1628353,5728470],[1427,-25075],[7200,-28955],[819,-13890],[6107,-19409],[2633,-19558],[4973,-45]],[[1651512,5621538],[-3583,-33810],[-5796,-5439],[220,-12797],[-3314,-42175],[876,-11950],[4374,-5026],[978,-19485]],[[1645267,5490856],[-8192,-204],[-4013,12827],[-3693,2567],[-7397,21419],[-5099,26091]],[[1563858,5539170],[11376,62976],[2622,4507],[533,-69356],[-1432,-20051]],[[1576957,5517246],[-7109,162]],[[1569848,5517408],[36,21742],[-6026,20]],[[1676497,5618401],[3387,2642]],[[1679884,5621043],[3908,-10171],[3937,5423],[733,-9049],[5210,-7933],[449,9883]],[[1694121,5609196],[3686,9368],[3634,-27007],[5465,8797],[1708,-4111]],[[1708614,5596243],[-82,-105719]],[[1708532,5490524],[-3801,13]],[[1704731,5490537],[-28401,235]],[[1676330,5490772],[167,127629]],[[2493791,4313811],[5323,-87],[-687,-9740]],[[2498427,4303984],[-2303,-32488]],[[2496124,4271496],[-2870,-33729],[-5975,-10166]],[[2487279,4227601],[-29,20863],[-3218,233],[82,16177]],[[2484114,4264874],[16,49084]],[[2484130,4313958],[9661,-147]],[[2492492,4492868],[1561,-5375]],[[2494053,4487493],[-60,-59274]],[[2493993,4428219],[-6432,-175]],[[2487561,4428044],[-9006,121]],[[2478555,4428165],[-1582,37119]],[[2476973,4465284],[2519,27319]],[[2479492,4492603],[13000,265]],[[2504609,3949648],[-106,-53555]],[[2504503,3896093],[-9558,227]],[[2494945,3896320],[-1169,47896]],[[2507067,4338213],[-41,38579]],[[2507026,4376792],[-80,51492]],[[2506946,4428284],[-18,8127],[6369,-74]],[[2513297,4436337],[9372,576]],[[2522669,4436913],[175,-32635]],[[2522844,4404278],[270,-65276]],[[2523114,4339002],[-9602,-448],[-14,-33347]],[[2513498,4305207],[-3241,-373]],[[2510257,4304834],[-4,33511],[-3186,-132]],[[2532163,4454346],[-14,23]],[[2532149,4454369],[-25,48961]],[[2532124,4503330],[9534,1461],[178,-51901],[-3201,-5844]],[[2535772,4318328],[-3214,-614]],[[2532558,4317714],[-131,22399]],[[2532427,4340113],[218,16344]],[[2552633,4374520],[4,-24700]],[[2552637,4349820],[11,-29150]],[[2552648,4320670],[-16876,-2342]],[[3137524,103842],[2638,758]],[[3140162,104600],[-139,-21466]],[[3140023,83134],[-541,83]],[[3139482,83217],[-1962,-3770]],[[3137520,79447],[-263,10124]],[[3137257,89571],[267,14271]],[[3170896,79111],[3144,-7312],[-1684,-5662],[-1460,12974]],[[3120065,91474],[1579,18520]],[[3121644,109994],[1308,-10023]],[[3122952,99971],[-847,-4092]],[[3122105,95879],[0,0]],[[3122105,95879],[-1262,-9308]],[[3120843,86571],[-778,4903]],[[3145213,27890],[-2054,-11229]],[[3143159,16661],[-2668,5005]],[[3140491,21666],[-92,7379]],[[3140399,29045],[-397,17710]],[[3140002,46755],[1972,-556]],[[3141974,46199],[1642,-4045]],[[3143616,42154],[1597,-14264]],[[3122242,61407],[1228,6506]],[[3123470,67913],[3641,-6854]],[[3127111,61059],[259,-12231]],[[3127370,48828],[-3396,1447]],[[3123974,50275],[-1732,11132]],[[3131077,104299],[4962,159]],[[3136039,104458],[-39,-17883]],[[3136000,86575],[-72,-9611]],[[3135928,76964],[-452,-1848]],[[3135476,75116],[-4543,-594]],[[3130933,74522],[144,29777]],[[3151843,9635],[-1405,-2245]],[[3150438,7390],[-342,12466]],[[3150096,19856],[1747,-10221]],[[3161592,81464],[1525,3812],[-557,-18446]],[[3162560,66830],[-3307,2402]],[[3159253,69232],[2339,12232]],[[3148951,99855],[420,-4017]],[[3149371,95838],[-649,-2665]],[[3148722,93173],[-1057,1187]],[[3147665,94360],[712,5383]],[[3148377,99743],[122,478]],[[3148499,100221],[4,0]],[[3148503,100221],[25,-1686]],[[3148528,98535],[423,1320]],[[3146645,65471],[430,-3336]],[[3147075,62135],[601,-6467]],[[3147676,55668],[-1988,-7393]],[[3145688,48275],[-724,11320]],[[3144964,59595],[1681,5876]],[[3127273,104383],[1805,589]],[[3129078,104972],[346,-27084]],[[3129424,77888],[-1926,4509]],[[3127498,82397],[-155,-183]],[[3127343,82214],[-70,22169]],[[3130167,38665],[794,287]],[[3130961,38952],[421,-25342]],[[3131382,13610],[-2740,-8345]],[[3128642,5265],[1525,33400]],[[3137328,9096],[-4418,392]],[[3132910,9488],[140,28631]],[[3133050,38119],[657,4175]],[[3133707,42294],[586,1127]],[[3134293,43421],[2694,-1272]],[[3136987,42149],[341,-33053]],[[3154657,64249],[1837,-2837]],[[3156494,61412],[-2110,-20988]],[[3154384,40424],[-632,16180]],[[3153752,56604],[905,7645]],[[2431953,4916385],[-2834,31220],[-3443,8898]],[[2425676,4956503],[1515,33495],[10557,1940]],[[2437748,4991938],[3376,-85]],[[2441124,4991853],[-18,-65404],[-2199,-8609],[2073,-19546],[-689,-13296]],[[2440291,4884998],[-8338,31387]],[[2468414,5363948],[3656,-3388]],[[2472070,5360560],[5202,-10518],[3095,-32345],[5333,-6980]],[[2485700,5310717],[9,-59481],[-3208,-3]],[[2482501,5251233],[-7191,-114]],[[2475310,5251119],[-28,32476],[-3433,-149],[9,16172],[-3516,75],[72,64255]],[[2791421,4435418],[-1,86]],[[2806380,4431447],[-26,-36900],[4627,-61],[478,-32615]],[[2798269,4356515],[-698,11428],[-6237,18577],[-3788,-4025]],[[2474915,5008504],[5,-48757]],[[2474920,4959747],[-13537,-444],[3,16336],[-3379,50],[21,16182]],[[2458028,4991871],[3,48856]],[[2458031,5040727],[-31,32538]],[[2458000,5073265],[16949,503]],[[2474949,5073768],[-34,-65264]],[[2867988,4309325],[5864,-6880]],[[2873852,4302445],[6674,-33237]],[[2880526,4269208],[-3724,-10883]],[[2861515,4224387],[-2654,11080]],[[2858861,4235467],[-4630,19266]],[[2854231,4254733],[8956,21980]],[[2815287,4079540],[-6782,31]],[[2808505,4079571],[-1052,62]],[[2821832,4143080],[-3850,-43981],[-2695,-19559]],[[2885482,4101395],[-367,-213]],[[2882226,4176827],[9354,-33003]],[[2885066,4101145],[-5398,-21586]],[[2879668,4079559],[-9664,-197]],[[2870004,4079362],[4142,32014],[1221,40632],[1939,5210]],[[2471751,4730695],[3825,1108],[2750,-7935]],[[2478326,4723868],[9910,7785]],[[2488236,4731653],[-1,-65261]],[[2488235,4666392],[-7,-8161]],[[2488228,4658231],[-16396,-175]],[[2471832,4658056],[-81,72639]],[[2776883,4391071],[-9,-9503],[-3511,-2663],[-2530,-27817]],[[2770833,4351088],[-8492,-188]],[[2773121,4435503],[2808,131]],[[2851107,4429172],[16538,-9124]],[[2865891,4389207],[-753,-12413]],[[2861308,4370323],[-4038,5373],[-4373,18949],[-1790,34527]],[[2506889,4877047],[7869,74]],[[2514758,4877121],[13,-16480]],[[2514771,4860641],[-10,-48974]],[[2514761,4811667],[-3365,-92]],[[2511396,4811575],[-6647,1878]],[[2504749,4813453],[2140,63594]],[[2517798,4663640],[-6587,871]],[[2511211,4664511],[127,65581]],[[2511338,4730092],[13181,-313]],[[2524519,4729779],[-159,-66082]],[[2524360,4663697],[-6562,-57]],[[2528190,4925949],[5891,-403]],[[2534081,4925546],[4162,-174]],[[2538243,4925372],[40,-65386]],[[2538283,4859986],[-3356,-33]],[[2534927,4859953],[16,8642],[-6756,97]],[[2528187,4868692],[3,57257]],[[2440502,5396054],[4,-112048]],[[2440506,5284006],[-13885,104]],[[2426621,5284110],[-6800,-52]],[[2419821,5284058],[24,48647]],[[2419845,5332705],[17,46062]],[[2419862,5378767],[5649,16084],[2067,-8006]],[[2427578,5386845],[5440,-3049],[7484,12258]],[[2546061,5061034],[-6153,-45971],[-179,-7975]],[[2539729,5007088],[-7043,381]],[[2532686,5007469],[-154,32403],[-6712,506]],[[2525820,5040378],[150,48936],[-4386,86]],[[2521584,5089400],[-1084,16406],[63,32510]],[[2520563,5138316],[6957,-313]],[[2527520,5138003],[3408,-514],[-91,-32322],[3419,-690],[1816,-32628],[9989,-10815]],[[2556910,5006713],[-3078,-30740],[-1651,-34411]],[[2552181,4941562],[-6219,-61]],[[2545962,4941501],[106,59394]],[[2546068,5000895],[733,6088]],[[2546801,5006983],[10109,-270]],[[2475022,4813061],[6,16907]],[[2475028,4829968],[-11,79357]],[[2475017,4909325],[15,17495]],[[2475032,4926820],[11408,134]],[[2486440,4926954],[-95,-13646],[-3420,-16445],[1666,-17712],[302,-25114],[2581,-14361],[2219,-26603]],[[2489693,4813073],[-14671,-12]],[[2812301,4505832],[12723,-152]],[[2825024,4505680],[3898,110]],[[2829221,4420232],[32,-11922]],[[2818358,4407607],[-1707,120],[-4262,26709]],[[2444019,4877325],[2871,26],[408,15052],[4336,2766]],[[2451634,4895169],[4990,-1662]],[[2456624,4893507],[1667,140],[68,-64797]],[[2458359,4828850],[-9678,60]],[[2448681,4828910],[-732,22724]],[[2447949,4851634],[-3930,25691]],[[2499751,5154895],[-96,16489],[-17139,-50]],[[2482516,5171334],[16,64026]],[[2482532,5235360],[27732,-335]],[[2510264,5235025],[32,-80597]],[[2510296,5154428],[-10545,467]],[[2403290,5188005],[9973,-370],[25,16192],[10413,-574],[-12,-16073]],[[2423689,5187180],[-44,-80521]],[[2423645,5106659],[-16760,2]],[[2406885,5106661],[344,16187]],[[2407229,5122848],[2760,27251],[-3533,23695],[-3074,1358],[-92,12853]],[[2530959,4598488],[-34,21750]],[[2530925,4620238],[3280,120],[-4,10903],[10658,-296]],[[2544859,4630965],[148,-32981]],[[2545007,4597984],[-11118,495]],[[2533889,4598479],[-2930,9]],[[2407609,5013968],[-1950,5863]],[[2405659,5019831],[906,21774]],[[2406565,5041605],[17640,-777]],[[2424205,5040828],[32,-32472]],[[2424237,5008356],[-3,-27100],[-5039,268]],[[2419195,4981524],[-6535,5367],[-5051,27077]],[[2520410,5257252],[4899,825],[10883,-18135]],[[2536192,5239942],[-435,-18244],[2068,-8147]],[[2537825,5213551],[-28,-12648],[-10199,1753]],[[2527598,5202656],[-6984,77],[-204,54519]],[[2450138,4772250],[14961,7]],[[2465099,4772257],[50,-47020]],[[2465149,4725237],[-11103,-33638],[-2550,-729]],[[2451496,4690870],[-569,17234]],[[2450927,4708104],[3325,32517],[-4371,20945],[257,10684]],[[2853366,4350934],[-4554,-6171]],[[2848812,4344763],[-2280,-9581],[-4629,-3565]],[[2849408,4430461],[1699,-1289]],[[2869724,4505691],[846,-64954]],[[2847949,4506221],[10294,-283]],[[2858243,4505938],[11481,-247]],[[2757918,4291621],[281,-33854]],[[2752281,4220940],[-4407,-33]],[[2747874,4220907],[1,30217]],[[2747875,4251124],[-1,39782]],[[2808029,4268680],[6781,1223]],[[2880526,4269208],[4147,9728]],[[2884673,4278936],[7674,-46857]],[[2888153,4209880],[-1271,5343]],[[2654153,4409988],[-8,-13671]],[[2654145,4396317],[58,-46172]],[[2654203,4350145],[-9670,-369]],[[2644533,4349776],[-7,49032],[-3154,-45]],[[2641372,4398763],[-6,10847]],[[2641366,4409610],[12787,378]],[[2888428,4284057],[-3755,-5121]],[[2873852,4302445],[7395,17826],[-625,17610],[2918,3751]],[[2826935,4268149],[8836,21933]],[[2835771,4290082],[211,-7412]],[[2835982,4282670],[70,-19779],[1843,-1510]],[[2837895,4261381],[-5838,-20937],[-7094,-38033]],[[2848812,4344763],[385,-31397],[2286,-16722]],[[2851483,4296644],[-3913,1129],[-11588,-15103]],[[2835771,4290082],[6130,36949]],[[2773177,4505721],[15312,47]],[[2788489,4505768],[3968,-212]],[[2869566,4190698],[-4357,-11400],[-7209,-10935]],[[2858000,4168363],[-3112,52048],[3973,15056]],[[2747873,4124481],[-1,10147]],[[2747872,4134628],[0,26814]],[[2747872,4161442],[31,44918]],[[2747903,4206360],[-29,14547]],[[2765941,4168507],[-190,-13218]],[[2881583,4438948],[7173,-126]],[[2888756,4438822],[587,-71534],[-1790,-5030]],[[2884902,4348960],[-2410,33264],[-4108,16477]],[[2849845,4173919],[-1558,19121]],[[2847327,4249132],[1631,-3380],[5273,8981]],[[2858000,4168363],[-4326,-14333]],[[2847327,4249132],[269,1912]],[[2847596,4251044],[2320,15771],[1567,29829]],[[2902364,4140652],[-2394,-10681]],[[2897744,4110652],[-1996,-3989]],[[2893936,4127244],[1929,6218],[-456,15484],[3182,-8803],[2629,17242]],[[2832793,4121088],[-4000,47631]],[[2795534,4079692],[-3421,-26]],[[2792113,4079666],[-12851,-224]],[[2782014,4139121],[3021,12996],[3601,32801]],[[2833118,4079145],[-271,4]],[[2832847,4079149],[-17560,391]],[[2826331,4180891],[871,4913]],[[2837895,4261381],[6927,-2553],[2774,-7784]],[[2784200,4328187],[-3,-26049]],[[2784197,4302138],[3,-25344],[-6546,-46007]],[[2777654,4230787],[-3081,6241],[-3673,19886]],[[2770890,4256915],[62,93766]],[[2770952,4350681],[1893,-36371],[6910,1379],[4445,12498]],[[2677892,3893005],[-2894,-17503],[-3702,-2544]],[[2671296,3872958],[-89,74378]],[[2671207,3947336],[1636,-10415],[11284,-2261]],[[2684127,3934660],[1293,-17443],[3082,-1087]],[[2688502,3916130],[-2517,-47151],[-2106,-4934]],[[2683879,3864045],[-2237,34735],[-3750,-5775]],[[2870004,4079362],[-2725,40]],[[2867279,4079402],[-182,-6]],[[2899701,4431387],[-3250,-29767],[-3480,-20850],[-1339,-17264]],[[2888756,4438822],[-578,66939]],[[2888178,4505761],[3443,43]],[[2891621,4505804],[2835,-25697],[3103,-2107]],[[2897559,4478000],[2598,-18575],[-456,-28038]],[[2869724,4505691],[1106,3]],[[2870830,4505694],[17348,67]],[[2777654,4230787],[-107,-8356],[10970,-19816],[2385,3058]],[[2899701,4431387],[2450,-22821],[6323,-10289]],[[2908474,4398277],[1665,-12644]],[[2910139,4385633],[-3996,-14998],[-1220,-18056],[-3053,-16574]],[[2784197,4302138],[11427,-1004]],[[2770952,4350681],[-119,407]],[[2784376,4380849],[-176,-52662]],[[2710011,4370214],[5380,392]],[[2715391,4370606],[-99,-54010]],[[2715292,4316596],[-12282,603]],[[2703010,4317199],[-1175,13426]],[[2701835,4330625],[45,13769],[2714,11744],[2746,-3],[40,14038],[2631,41]],[[2898282,4312813],[1862,-17729],[-4186,-34101],[198,-15515]],[[895565,8672242],[-21130,-201],[-6507,15692]],[[867928,8687733],[-1759,733],[-14034,50454],[-2314,-2572],[-523,114165],[31026,-62],[6003,11655],[12037,1976],[9302,11399],[4606,14103],[6243,6211],[5159,-8843],[-3992,-18002],[1656,-12093],[12887,-18938],[-3736,-8579],[2876,-12083],[12162,7356],[8875,12020],[12423,-14015],[5524,10567],[7501,50],[1589,-10867],[-5142,-8506],[3161,-7212],[-3567,-33447],[1642,-21502]],[[1268933,7474591],[-889,-4186]],[[1265773,7463139],[-3714,25499],[-5595,23694],[-1061,22447],[-11679,6469],[-3465,5790],[-4043,28059],[-447,17703],[-4161,22492],[-5833,43758],[-687,23956]],[[1225088,7683006],[23620,-1953]],[[1248708,7681053],[2158,-19726],[11427,-24343],[3915,-22592],[8914,-33576],[-2273,-7933],[7942,-44057]],[[1237954,7542040],[390,-11090],[3920,6294],[5232,-8639],[5405,1998]],[[1229189,7598034],[0,0]],[[461365,8488211],[9342,49793],[6321,-17634],[12309,59],[12454,10607],[10341,50355],[-19,11537],[-5165,47707],[-679,27271],[-8010,30398],[-6725,4662],[3658,20955],[9989,-6158],[5935,20257],[519,19992],[-10094,38067],[-6443,-27608],[-8088,2984],[-5881,-14881],[-8084,-5463],[-1838,-11409],[-8512,-16547],[-2570,-27178],[-4399,-11334],[-1878,32681],[-8816,26185],[-3846,-9620],[7936,-20652],[-4128,-14714],[-2165,13133],[-9607,17568],[-6461,2173],[-16496,-5561],[-10752,-17936],[-5816,-2815],[-11058,11894],[-22945,16026],[-6877,28050],[1900,25926],[-7668,21234],[-5763,28761],[7224,-4763],[8113,30464],[-5680,11617],[-6824,-228],[-6429,8382],[-12462,5761],[-6598,16056],[-10150,14568],[-795,20439],[15716,25322],[19835,43133],[28493,52789],[11084,16309],[28040,30073]],[[544785,8908788],[5763,84],[55,-48940],[-5400,191],[47,-63444],[-5581,-122],[94,-32343],[-5692,-338],[605,-130549],[6275,252],[889,-48670],[-6449,274],[43,-16905],[-4862,-230],[162,-16447],[-11020,-138],[-43,-14321],[-5490,-99],[578,-49749],[-4905,-300],[-105,-48018]],[[458722,8545924],[8591,7929],[810,-13971],[-7517,-2093],[-1884,8135]],[[307852,8805155],[0,0]],[[284030,8953003],[0,0]],[[203577,8539122],[2732,22044],[-28,21988],[3731,-19305],[19565,-20163],[11675,23325],[5744,-2191],[5187,-13536],[1357,-22941],[11254,-11668],[2682,-10296],[15258,-5904],[8710,-9027],[-4795,-27340],[-5125,5532],[-9277,-4725],[-4438,-14396],[-2879,-25611],[-5339,26396],[-8202,19675],[-3865,-846],[-2835,19925],[-13948,24077],[-6559,1720],[-10130,-21807],[-7659,11081],[-2816,33993]],[[1362449,7144503],[3977,3709],[2393,-18599],[-253,-18967],[-3473,-27882]],[[1323422,6945854],[2736,20132],[-598,26388],[4789,-13701],[1312,-26930],[-1059,-10261],[-7180,4372]],[[1276829,7019016],[0,0]],[[1270446,6905254],[0,0]],[[1263722,7024901],[1561,18879],[3272,-1494],[-76,-17544],[5707,21213],[3572,-6563],[-3736,-27929],[-4386,-11475],[-899,-15593],[-2259,11777],[1501,23213],[-4257,5516]],[[1262962,7119636],[7455,33470],[-2521,10477],[-696,20906],[2289,7862],[11671,-6563],[3404,-24877],[-404,-11096],[11708,-38088],[4585,-26131],[262,-18486],[8870,-42200],[-10360,22241],[-2619,-16924],[5586,4899],[6727,-27980],[1100,-30597],[2763,14484],[1415,-17969],[-4406,-36495],[4205,7862],[744,-44312],[-2001,-16855],[-7752,3280],[-2216,36490],[-2704,-2688],[-3489,12433],[1895,24714],[-1097,12787],[-4305,-5963],[1439,-16588],[-1807,-9282],[-4667,9070],[1297,14907],[-1829,16058],[-5121,7769],[2982,-23088],[3420,-43320],[4418,8024],[2851,-10513],[383,-19868],[-3901,8248],[2191,-26274],[-5297,3654],[-8174,48361],[-2228,25016],[444,25626],[-6054,-3306],[-328,20276],[6296,11580],[5173,-4574],[-3777,42921],[-2404,-3356],[-4901,14296],[624,17684],[-3088,-8336],[-4824,15631],[4026,10577],[3733,-8667],[2741,5579],[-4965,24466],[190,12681],[-6234,-23183],[-2718,13250]],[[1259420,7109982],[0,0]],[[1240170,7179779],[-896,-21599]],[[1239274,7158180],[-3890,12276],[-7095,57357],[2611,11429],[-4223,-992],[-8198,39746],[2245,19444],[-2517,47499],[1784,14236],[-5401,-1981],[-3765,25135],[7480,36814],[3383,-15056],[6485,-12120],[6006,-1741],[1201,-12687],[-4143,-6075],[3155,-11388],[4069,-65100],[2224,-49322],[-515,-65875]],[[1213603,7481503],[10769,-31661],[7287,6634],[3204,-49330],[-7228,-6625],[-13575,39256],[-3507,-4621],[5195,-10071],[-1076,-21318],[-4507,-21386],[-5036,7542],[-3054,25540],[-5743,17521],[-4536,36230]],[[1214679,7346424],[0,0]],[[1206303,7363315],[318,13638],[5455,-6924],[2147,-28910],[-1939,-23378],[-6177,-4703],[196,50277]],[[2477309,2643457],[-13596,-257]],[[2463713,2643200],[-287,33086]],[[2463426,2676286],[950,23936],[1626,4024],[2294,24909]],[[2468296,2729155],[2891,12393]],[[2471187,2741548],[8,-16061],[5743,-84],[-4,-16372],[4961,-99]],[[2481895,2708932],[-5006,-42701],[420,-22774]],[[2375652,2605003],[12200,178]],[[2387852,2605181],[-16,-24474],[2863,-41],[42,-32971],[2809,42],[15,-32537]],[[2393565,2515200],[-4302,-72],[-1450,-16360],[-2573,-26],[-491,-17065]],[[2383418,2479946],[-2430,25203],[-142,23655],[-3964,27894]],[[2383017,2678608],[3997,-63]],[[2387014,2678545],[1199,-241]],[[2388213,2678304],[5968,30],[748,-16406]],[[2394929,2661928],[1727,-32955],[-3157,82],[-29,-12965],[-3230,5373]],[[2390240,2621463],[-5179,32525],[150,16310],[-2194,8310]],[[2894886,3762264],[-2979,-28804],[-2880,-1803],[-1734,-12047],[-4195,-62110]],[[2883098,3657500],[-4104,1229],[691,10280],[-4170,3900]],[[2875515,3672909],[3751,39835],[3154,18596],[-1921,6700],[2475,9917]],[[2882974,3747957],[1271,8163]],[[2884245,3756120],[10641,6144]],[[2872482,3748525],[1466,-29]],[[2873948,3748496],[-1466,29]],[[2873788,3728790],[0,0]],[[2855428,3641182],[-1495,9577]],[[2853933,3650759],[1817,9241],[-195,22927]],[[2855555,3682927],[6033,-16624]],[[2861588,3666303],[914,-21365]],[[2862502,3644938],[-1131,-6318],[2670,-17312],[-4162,-6168]],[[2859879,3615140],[-4451,26042]],[[2766091,3516196],[0,0]],[[2847674,3771631],[-2690,2950],[-785,12877]],[[2844199,3787458],[1784,21790]],[[2846186,3808492],[803,-3618]],[[2846998,3804692],[5,-116]],[[2847073,3803139],[615,-8071]],[[2847984,3794811],[287,-331]],[[2848356,3794227],[65,-224]],[[2848469,3793776],[39,-181]],[[2848567,3793315],[1,-1]],[[2848879,3791849],[163,-762]],[[2849369,3789547],[1020,-1712]],[[2850389,3787835],[5,-8]],[[2850394,3787827],[45,-22]],[[2850439,3787805],[8,0]],[[2850447,3787805],[5,1]],[[2850452,3787806],[359,28]],[[2850811,3787834],[8,7]],[[2850819,3787841],[119,164]],[[2850938,3788005],[9,12]],[[2850947,3788017],[4,4]],[[2850951,3788021],[602,709]],[[2851553,3788730],[174,97]],[[2851727,3788827],[158,2]],[[2851885,3788829],[369,-230]],[[2852254,3788599],[4068,-2905]],[[2856322,3785694],[154,-297]],[[2856476,3785397],[693,-8223]],[[2857169,3777174],[25,-121]],[[2857194,3777053],[373,-1774]],[[2857567,3775279],[42,-201]],[[2857609,3775078],[1249,-4997]],[[2858858,3770081],[150,-2011]],[[2859008,3768070],[296,-4350]],[[2859304,3763720],[-3196,-12763]],[[2856108,3750957],[-3635,6618],[-3130,22906],[-1669,-8850]],[[2793299,3831895],[0,0]],[[2176109,2977359],[66,-81685]],[[2176175,2895674],[-14434,-459]],[[2161741,2895215],[-187,81550]],[[2278236,1958197],[5985,30845]],[[2284221,1989042],[6969,-12140],[548,3475]],[[2291738,1980377],[3454,-18052]],[[2295192,1962325],[-39,-64]],[[2295153,1962261],[-107,-434]],[[2295046,1961827],[-239,-1806]],[[2294807,1960021],[-263,-2713]],[[2294544,1957308],[-121,-3414]],[[2294423,1953894],[-6,-191]],[[2294417,1953703],[-1,-15]],[[2294416,1953688],[0,-14]],[[2294416,1953674],[0,-2]],[[2294416,1953672],[13,-2553]],[[2294429,1951119],[9,-677]],[[2294438,1950442],[3,-120]],[[2294441,1950322],[2,-122]],[[2294443,1950200],[2,-94]],[[2294445,1950106],[35,-1637]],[[2294480,1948469],[50,-2403]],[[2294530,1946066],[-12,-894]],[[2294518,1945172],[-9247,-8662],[2653,-16494]],[[2287924,1920016],[-5224,-20238]],[[2282700,1899778],[-1267,-153]],[[2281433,1899625],[-1579,11536],[-3056,-3691],[-3173,8798]],[[2273625,1916268],[4611,41929]],[[2248419,2432269],[170,20233]],[[2248589,2452502],[14710,1006]],[[2263299,2453508],[2317,-24094]],[[2265616,2429414],[-3743,-22563],[-2424,-30227]],[[2259449,2376624],[-2109,-37055]],[[2257340,2339569],[-6282,11213]],[[2251058,2350782],[-2450,35038],[1869,12578],[-1677,8578],[1538,9093],[-1919,16200]],[[2172130,2650472],[10096,-112]],[[2182226,2650360],[-105,-73084]],[[2322040,2276661],[-27,29101]],[[2322013,2305762],[-723,72009]],[[2334415,2354203],[1414,-18459],[3970,-11376]],[[2339799,2324368],[1928,-33272]],[[2372715,2553555],[34,-19336],[-1697,-10507],[143,-51606]],[[2371195,2472106],[-2524,-6550]],[[2368671,2465556],[-5489,23486]],[[2320391,2817501],[5492,-3582]],[[2326729,2768987],[-5908,9210],[-2434,12659]],[[2266452,1884632],[-526,-4944],[6350,-21177],[6785,5111],[-426,-6273]],[[2278635,1857349],[-198,-20255],[3187,-8419],[-1983,-25414]],[[2279641,1803261],[-14364,-481],[-2827,14521]],[[2262450,1817301],[220,46657],[3782,20674]],[[2278654,1857438],[921,3001]],[[2279575,1860439],[-755,-3150]],[[2278820,1857289],[-156,191]],[[2278664,1857480],[-10,-42]],[[2279843,1861176],[458,1043]],[[2280301,1862219],[-458,-1043]],[[2280746,1862923],[246,276]],[[2280992,1863199],[-246,-276]],[[2281372,1863005],[-258,247]],[[2281503,1862711],[-131,294]],[[2281114,1863252],[389,-541]],[[2281712,1862242],[-156,350]],[[2281931,1860216],[-219,2026]],[[2281556,1862592],[375,-2376]],[[2281981,1858813],[-7,232]],[[2282366,1854179],[-385,4634]],[[2282366,1854168],[0,11]],[[2282366,1853862],[0,306]],[[2282366,1853801],[0,61]],[[2281974,1859045],[392,-5244]],[[2282403,1853080],[5,-62]],[[2282408,1853018],[-5,62]],[[2282419,1852905],[69,-231]],[[2282488,1852674],[-62,150]],[[2282426,1852824],[-7,81]],[[2282508,1852624],[69,-134]],[[2282577,1852490],[-28,37]],[[2282549,1852527],[-41,97]],[[2282815,1852202],[58,-56]],[[2282873,1852146],[-12,0]],[[2282861,1852146],[-46,56]],[[2283303,1852270],[23,32]],[[2283326,1852302],[-23,-32]],[[2283437,1852460],[56,230]],[[2283493,1852690],[-9,-163]],[[2283484,1852527],[-47,-67]],[[2283555,1853860],[-57,-1086]],[[2283588,1854230],[-33,-370]],[[2283498,1852774],[90,1456]],[[2284893,1866533],[9,1017]],[[2284902,1867550],[42,-361]],[[2284944,1867189],[-28,-566]],[[2284916,1866623],[-23,-90]],[[2287144,1856135],[290,-1114]],[[2287434,1855021],[-4917,-48879]],[[2282517,1806142],[-724,946]],[[2281793,1807088],[2277,28264],[3074,20783]],[[2284935,1865199],[0,0]],[[2248954,2822806],[164,72677]],[[2249118,2895483],[-21,13215]],[[2249097,2908698],[12329,62]],[[2261426,2908760],[1692,-6224]],[[2263118,2902536],[-96,-80970]],[[2149437,3148543],[10287,-100]],[[2159724,3148443],[4394,-35]],[[2164118,3148408],[-1,-81455]],[[2161518,3066991],[-12068,103]],[[2149450,3067094],[-13,81449]],[[2352224,2803449],[-12041,-347]],[[2340907,2827797],[5303,7361],[3231,-17036]],[[2309845,2442058],[2024,-28215]],[[2311869,2413843],[-540,-41976],[2269,-33094],[-1346,-17153]],[[2312252,2321620],[100,7649],[-4127,1497]],[[2308225,2330766],[-1663,30453],[-4224,16093],[-2545,2639],[971,10059]],[[2300764,2390010],[3046,9135],[3384,33173],[2651,9740]],[[2369053,2289811],[-47,15220]],[[2369006,2305031],[6022,188]],[[2380013,2269320],[-3675,-34782]],[[2376338,2234538],[-160,21029],[-4787,9473],[-2338,24771]],[[2292204,2191049],[8480,61545]],[[2300684,2252594],[4391,-25637],[1888,1047],[2373,-30173],[2337,-6576]],[[2311673,2191255],[-3685,-22327],[-1157,-20304],[-8110,-29620]],[[2298215,2122013],[2728,13395],[-6480,45285],[-2259,10356]],[[2121226,2516473],[5119,-19434],[1670,4927]],[[2128015,2501966],[2532,6181],[6875,-24903],[1141,-19957]],[[2138563,2463287],[6948,-17263],[4078,-1047],[3309,-14431],[989,-27873],[1960,-20635]],[[2155847,2382038],[-10291,544],[-17,-10943],[-5700,232],[-3,-58894],[-6236,-158],[-4,-43137]],[[2109276,2384445],[-4043,18817]],[[2105233,2403262],[15993,113211]],[[2120215,2975683],[12033,85]],[[2132248,2975768],[574,-81727]],[[2132822,2894041],[-12862,-14]],[[2134763,3148308],[-13,-81215]],[[2132256,3067067],[-11941,-27]],[[2302722,2596000],[12312,40494]],[[2315034,2636494],[56,-1241]],[[2315090,2635253],[1928,-40785],[2999,-6083],[2469,-25665]],[[2309968,2524350],[-7246,71650]],[[2112409,2568904],[28,65313]],[[2119737,2650442],[7395,-235]],[[2127132,2650207],[4,-81235]],[[2127136,2568972],[-14727,-68]],[[2243839,3037905],[3450,-17687],[1750,3789]],[[2249039,3024007],[-2,-46195]],[[2249037,2977812],[-14752,-382]],[[2234285,2977430],[19,70845]],[[2234304,3048275],[2571,-11714],[6964,1344]],[[2190100,3229957],[-15248,-188]],[[2174852,3229769],[10,81789]],[[2201907,2463444],[-29,-70683]],[[2201878,2392761],[-23524,-804]],[[2178354,2391957],[-44,70457]],[[2178310,2462414],[7617,764]],[[2205183,3050495],[-3,16372]],[[2205180,3066867],[6,46560]],[[2205186,3113427],[2070,2615],[2191,-12659]],[[2209447,3103383],[4180,-24090],[3198,7247],[2916,-3931]],[[2219741,3082609],[-5,-58082]],[[2188673,5334703],[1272,19816],[-3269,18846]],[[2186676,5373365],[16179,-197]],[[2202855,5373168],[4616,-88]],[[2207471,5373080],[-47,-65360],[1080,-173]],[[2208504,5307547],[-46,-63900]],[[2208458,5243647],[-17254,418]],[[2191204,5244065],[-351,10]],[[2190853,5244075],[-3265,37791],[1977,19407],[-892,33430]],[[2246906,5551702],[-3,15945]],[[2246903,5567647],[14359,-21]],[[2261262,5567626],[-50,-64801],[707,-16020]],[[2261919,5486805],[-14105,-12]],[[2247814,5486793],[-580,16115]],[[2247234,5502908],[0,0]],[[2247234,5502908],[-305,-1]],[[2246929,5502907],[-23,48795]],[[2276120,5486534],[-636,16044],[44,65001]],[[2275528,5567579],[16324,1]],[[2291852,5567580],[1057,-32395]],[[2292909,5535185],[432,-48842]],[[2293341,5486343],[-17221,191]],[[2914090,4146367],[4077,17450],[3985,-766],[1096,-11096],[3248,5245],[2117,-6730]],[[2928613,4150470],[-1813,-63269],[-4000,-38956],[-2005,-10301]],[[2920795,4037944],[-2924,10741]],[[2917871,4048685],[766,40461],[-4547,57221]],[[2118770,5503314],[-18,64707],[12735,-94],[14,28039]],[[2131501,5595966],[7146,-12298]],[[2138647,5583668],[3478,4380],[-126,-29405],[1675,-9322]],[[2143674,5549321],[-7,-46128],[1703,3],[-9,-59479]],[[2145361,5443717],[-10606,-13],[0,-5416],[-14131,-136]],[[2120624,5438152],[3,65159],[-1857,3]],[[2170095,5491369],[5477,5315],[2307,-8104],[348,-17476]],[[2178227,5471104],[2312,-26489],[-1500,-6041]],[[2179039,5438574],[-23080,-286]],[[2155959,5438288],[-1,48687],[14111,-13],[26,4407]],[[2092415,5355860],[6806,-35],[1,16624],[5339,44]],[[2104561,5372493],[10521,24]],[[2115082,5372517],[8458,26]],[[2123540,5372543],[96,-65238]],[[2123636,5307305],[-1975,-152]],[[2121661,5307153],[-29258,-97]],[[2092403,5307056],[12,48804]],[[2275528,5567579],[-11413,24]],[[2264115,5567603],[6,65254],[-592,32586]],[[2263529,5665443],[21236,-243]],[[2284765,5665200],[-153,-3814]],[[2284612,5661386],[5332,-74601],[1908,-19205]],[[2123540,5372543],[23164,181]],[[2146704,5372724],[1270,-29],[113,-64999],[1367,-14624]],[[2149454,5293072],[-13919,112],[1,14435],[-11900,-314]],[[2149435,5264618],[19,28454]],[[2146704,5372724],[10,16225]],[[2146714,5388949],[10533,58],[2,-16288],[11664,-91],[13,-48490],[6978,-11],[637,-16318]],[[2176541,5307809],[-5661,-27399],[-9040,-24245],[-10694,10867],[-1711,-2414]],[[2123240,5816013],[25566,-59]],[[2148806,5815954],[-14,-35920]],[[2148792,5780034],[-3636,18],[-11,-16267],[-2258,-1],[-8,-32559]],[[2142879,5731225],[-18162,9]],[[2124717,5731234],[-1,16267]],[[2124716,5747501],[-1508,16317],[32,52195]],[[2225571,5551774],[-874,48516]],[[2224697,5600290],[21500,-100]],[[2246197,5600190],[706,-32543]],[[2246906,5551702],[-21335,72]],[[2259895,5372668],[9803,-149]],[[2269698,5372519],[11202,-109]],[[2280900,5372410],[-17,-64955]],[[2280883,5307455],[-20232,57]],[[2260651,5307512],[-776,32]],[[2259875,5307544],[20,65124]],[[2225571,5551774],[-12,-48744]],[[2225559,5503030],[-5975,-22]],[[2219584,5503008],[-15395,22]],[[2204189,5503030],[13,64843],[-1013,32508]],[[2203189,5600381],[7161,-9]],[[2210350,5600372],[14347,-82]],[[2262868,5730623],[-642,85606]],[[2262226,5816229],[20101,15]],[[2282327,5816244],[1093,-34841],[2517,-29008],[-1789,-21614]],[[2284148,5730781],[55,-303]],[[2284203,5730478],[-21335,145]],[[2102959,5503434],[15811,-120]],[[2120624,5438152],[-5526,-53],[-16,-65582]],[[2104561,5372493],[-9,65531],[-1601,-20],[8,65430]],[[2251976,5730743],[-18173,87]],[[2233803,5730830],[-822,32549],[2,52757]],[[2232983,5816136],[29243,93]],[[2262868,5730623],[-10892,120]],[[2200026,5815989],[18305,20]],[[2218331,5816009],[-5,-52583],[911,-32483]],[[2219237,5730943],[-18184,71]],[[2201053,5731014],[-1036,32512],[9,52463]],[[2227397,5698341],[6389,-34],[17,32523]],[[2251976,5730743],[722,-65247]],[[2252698,5665496],[-3620,-66],[-15,-32516],[-2868,8],[1,-19858]],[[2246196,5613064],[-2781,251],[-1301,15723],[-3475,10594],[-5418,-12492],[-2206,22010],[-3607,8883],[-11,40308]],[[2121661,5307153],[-6,-62806]],[[2121655,5244347],[-29248,28]],[[2092407,5244375],[-4,62681]],[[1730751,4505886],[220,-98]],[[1730971,4505788],[-3,-187008]],[[1730968,4318780],[-7,-66863],[-6355,-111],[-1500,-21771]],[[1723106,4230035],[-246,29462],[-9332,152],[5,32471],[-31832,-354],[1,19638],[-14568,-88]],[[1667134,4311316],[-563,3],[156,193438]],[[1666727,4504757],[31400,589]],[[1698127,4505346],[32624,540]],[[1884861,3008466],[471,28318],[-6525,30],[1461,44001],[2913,16070]],[[1883181,3096885],[6430,-9285],[2062,5743],[2875,-14616],[1406,3976],[6926,-24189],[2713,-727]],[[1926490,2929313],[0,-20780],[-9527,-7543],[-3047,-11837],[1427,-30615],[-1345,-802]],[[1913998,2857736],[-5166,-9763],[-4137,-29500],[-4563,49656],[-2597,40439]],[[1897535,2908568],[-3161,39589],[-1914,-14068],[-4590,27626],[420,12818],[-3429,33933]],[[1833622,2891969],[0,-163307]],[[1833626,2641404],[-41230,85261],[117,22994],[2501,19025]],[[1691692,3737778],[2135,-470],[18401,108579]],[[1712228,3845887],[14639,-88367],[-11,-192899]],[[1726856,3564621],[-18575,92431]],[[1660408,3960437],[-323,20524],[-4181,10376]],[[1655904,3991337],[6516,16200],[5437,53185]],[[1667857,4060722],[2626,5485]],[[1670483,4066207],[3104,13397],[-1120,-62504],[10146,-51752],[5,-6999]],[[1682618,3958349],[-4902,-175],[-2370,-24402],[9,-17225],[3131,161],[-132,-81886],[-6968,12]],[[1666610,3857305],[-599,36386],[-1571,781],[-405,41432],[3068,6738],[-29,17389],[-6666,406]],[[1647722,4003620],[71,24063]],[[1647793,4027683],[76,51916]],[[1647869,4079599],[142,158750],[-110,114818]],[[1647901,4353167],[21,151719]],[[1647922,4504886],[17803,-56]],[[1665725,4504830],[1002,-73]],[[1667134,4311316],[-96,-82744],[-710,-96],[-22,-97180],[3180,145]],[[1669486,4131441],[997,-65234]],[[1667857,4060722],[-5148,-7230],[-4295,-13419],[-2037,1642],[1035,-35278],[-1508,-15100]],[[1655904,3991337],[-4685,-15977],[-3440,17]],[[1884861,3008466],[-6423,6],[-12242,9044],[-3101,-31043],[-13036,22008],[-16433,-125]],[[1833632,3068000],[-18,226513]],[[1833614,3294513],[4450,-4043],[6159,-28139],[8984,-10509],[1492,-10588],[3806,3196],[-42,-20788],[2969,-212],[33,-32802],[15511,1551],[-3,-33316],[6292,-150],[-84,-61828]],[[1682618,3958349],[24760,-183]],[[1707378,3958166],[-9227,-13800],[2,-15136],[14075,-83343]],[[1650564,3931900],[-2694,12401],[-41,12712]],[[1647803,3965472],[6748,247],[5857,-5282]],[[1659449,3890700],[-8885,41200]],[[1742994,4318807],[11942,-91],[8,-62428],[4372,-100890],[4624,87]],[[1763940,4155485],[1118,-51425],[-1066,-23151],[547,-25437],[-2625,-24161],[17,-56637]],[[1761931,3974674],[-19332,-72]],[[1742599,3974602],[294,170483],[-179,163625],[280,10097]],[[1730968,4318780],[12026,27]],[[1742599,3974602],[-20365,368],[-12358,-13104]],[[1709876,3961866],[-856,9812],[2328,13314],[-1126,25430],[3261,13808],[1554,17018],[2922,5203],[-278,38004],[939,25915],[-2233,21380]],[[1716387,4131750],[6719,98285]],[[1913998,2857736],[-63,-127415]],[[1865110,2729003],[46,146700],[3304,-16089],[13943,166],[67,48751],[15065,37]],[[1787180,3883982],[26495,9]],[[1813675,3883991],[-8,-19551]],[[1813667,3864440],[7,-79422]],[[1813674,3785018],[-72,-101791]],[[1813602,3683227],[52,-113124]],[[1813654,3570103],[7,-29435]],[[1813661,3540668],[-19835,134],[-6,1800],[-27257,-73],[-4350,-2058]],[[1762213,3540471],[86,226192],[24881,42],[0,117277]],[[1787180,3883982],[-25249,90692]],[[1763940,4155485],[15914,-993],[33908,-1050]],[[1813762,4153442],[-11,-39473]],[[1813751,4113969],[-17,-68000]],[[1813734,4045969],[-59,-161978]],[[1797415,3196025],[-28277,151117]],[[1769138,3347142],[-5505,28918]],[[1763633,3376060],[6,38756],[-1392,274],[-34,125381]],[[1813661,3540668],[179,-121625],[-2628,-29229],[-2943,-4104],[-3519,23839],[-7252,-76],[-3455,-10491],[389,-20707],[2126,-18974],[-1167,-5297],[759,-64500],[2332,-33579],[716,-29796],[-2044,-12390],[261,-17714]],[[2027443,2634367],[-472,49]],[[2026971,2634416],[0,0]],[[2026971,2634416],[-6251,-174],[-752,-19059],[3265,-21623]],[[2023233,2593560],[-21412,115]],[[2001821,2593675],[-74,153816]],[[2056984,2846073],[11454,1200],[371,48490],[-20,129265]],[[2026334,3090820],[-9788,17121],[-3185,9019],[-8966,-119]],[[2024683,3568859],[13083,298]],[[2051035,3385289],[-1170,-7593],[-4039,1181]],[[2045826,3378877],[17,4416],[-9881,-62],[481,-13334],[-5330,28]],[[2031043,3376552],[20,6584],[-17776,-478],[7,40730],[-20596,606]],[[1998363,3570029],[26320,-1170]],[[2045745,3358710],[10376,-60],[9178,-18891],[18137,2182]],[[2045906,3203455],[-161,155255]],[[1989895,3116700],[338,-206113]],[[1953052,2860438],[9,106554]],[[1953061,2966992],[21,149938]],[[2031031,3355832],[3,-3081]],[[2031034,3337133],[96,-101176]],[[2001451,3252802],[52,129806],[-8869,305]],[[2045826,3378877],[-81,-20167]],[[2040070,3057164],[-20,-81309],[-3570,52],[0,-32861],[-8947,1892],[23,-33748]],[[1953091,3188137],[-3,195153]],[[2001821,2593675],[-25398,-31]],[[2093454,3569324],[25681,753]],[[2119135,3570077],[2338,-29]],[[2121473,3570048],[-7,-93533]],[[2120397,3393190],[-17,-59139]],[[2808505,4079571],[251,-16005]],[[2808756,4063566],[-3754,-22487]],[[2805002,4041079],[-5252,3466]],[[2799750,4044545],[-4016,16950],[-4570,-35074],[-2861,7652]],[[2788303,4034073],[3810,45593]],[[2859027,3985261],[-5,-321]],[[2859022,3984940],[-129,-652]],[[2858893,3984288],[33,-1045]],[[2858926,3983243],[-2383,5573]],[[2856543,3988816],[-2575,7578],[-7,17602],[5057,25],[9,-28760]],[[2839871,4079121],[-1958,-21521],[5025,-21227],[-1703,-25741]],[[2841235,4010632],[-20,-85]],[[2841215,4010547],[-8080,-24937]],[[2833135,3985610],[-3063,16130],[-3021,3385]],[[2827051,4005125],[2981,55303],[2815,18721]],[[3007278,4447995],[2113,-5661],[333,-30492]],[[3009724,4411842],[-2019,-7397],[-644,31364],[-574,-26602],[-2621,6550],[3611,30603]],[[3007477,4446360],[-200,1630]],[[3005094,4439034],[0,0]],[[3003579,4412057],[0,0]],[[3002881,4442452],[0,0]],[[3001923,4405009],[0,0]],[[2999201,4509127],[3259,-6027]],[[3002460,4503100],[1770,-39098]],[[2991081,4454352],[-266,53066]],[[2990815,4507418],[8386,1709]],[[2900276,3841669],[-4036,-66493],[-1354,-12912]],[[2884245,3756120],[-1045,8918],[3370,8915],[-2003,35404]],[[2884567,3809357],[6913,2196],[1606,12054],[-955,18206]],[[2892131,3841813],[8145,-144]],[[1562367,5081494],[848,-23091],[-3878,-22123],[2401,-3746],[-1422,-11954]],[[1560316,5020580],[-153,-5502]],[[1547528,5015249],[-3409,3349],[-13,57070]],[[1544106,5075668],[32,6011]],[[1544138,5081679],[18229,-185]],[[1532033,4854711],[1193,77261]],[[1533226,4931972],[9486,1363]],[[1559190,4933360],[518,-15661],[7238,41],[63,11007],[3980,5896],[5110,-11679],[5319,-2059],[1659,6776],[14690,895]],[[1597767,4928576],[758,-31445],[-2698,-33295],[-2967,-10366],[-758,-45230]],[[1592102,4808240],[-3573,-10871],[-31,-21844]],[[1588498,4775525],[-16960,-619],[-28,20105],[-10188,-851],[-842,44859],[-5851,93],[-5055,9229],[-2513,16969],[-5803,4663],[-2728,-14864],[-6497,-398]],[[1704375,5228517],[-135,26231]],[[1704240,5254748],[10436,-345]],[[1714676,5254403],[3428,-201]],[[1718104,5254202],[15718,-449]],[[1733822,5253753],[3383,-26086]],[[1737205,5227667],[5583,-14409],[3641,-30562],[-2579,-20359],[-3650,-44765]],[[1740200,5117572],[-2698,-35345]],[[1737502,5082227],[-13449,332]],[[1724053,5082559],[-15,15921],[-5846,-101],[-2954,32377],[-1693,-206],[-1119,33308],[-2889,32654],[1123,32083],[-6285,-78]],[[1650786,4807310],[-50,16483]],[[1650736,4823793],[3361,-45],[52,48850],[3290,-3]],[[1657439,4872595],[23429,173],[11,16416],[16405,-1441]],[[1697284,4887743],[-46,-210648],[344,-6],[55,-119515],[490,-52228]],[[1665725,4504830],[-143,141280],[-16120,-509],[318,80984],[994,4],[12,80721]],[[1617046,4953359],[3311,-92],[-5,16172],[4501,35],[-5,16137],[12309,207]],[[1637157,4985818],[-8,-23659],[10140,188],[3423,-9175],[5,-15513],[6777,57]],[[1657494,4937716],[-55,-65121]],[[1650736,4823793],[-10026,82],[3,16190],[-3360,-42],[-11,16270],[-10282,-129],[-10,16145],[-6638,639],[-21,32364],[-3213,786],[-132,47261]],[[1551362,5148640],[9183,-101],[7448,-21698]],[[1567993,5126841],[510,-10804]],[[1568503,5116037],[-3148,4604],[-2159,-11660],[1205,-19124],[-2034,-8363]],[[1544138,5081679],[-1688,41],[12,26152],[8947,44],[-47,40724]],[[1536326,5075850],[7780,-182]],[[1533226,4931972],[1605,71612],[-479,21064],[1974,51202]],[[1663727,5239310],[8519,2734],[3871,12540]],[[1676117,5254584],[27589,175]],[[1703706,5254759],[534,-11]],[[1704375,5228517],[-4020,-32211],[4,-40757],[-2254,-8162],[-6422,338],[5,-13814],[-7506,-1871],[1168,-27758],[3039,18],[770,-37621]],[[1689159,5066679],[-17965,-13]],[[1584324,4692439],[-214,-185077]],[[1584110,4507362],[-26223,-733]],[[1557887,4506629],[24,130766]],[[1557911,4637395],[2185,10031],[9937,4371],[6535,29889],[4451,10728],[3305,25]],[[1523100,4684655],[6191,-41],[2682,-13534],[610,-39611],[3956,2773],[1991,16715],[3160,2714]],[[1541690,4653671],[2672,-973]],[[1544362,4652698],[-3220,-28390],[-1641,-24712],[-3280,-783],[-488,-25685],[3726,-1179],[2812,-21793],[-1826,-17831],[984,-27264]],[[1541429,4505061],[-10871,559]],[[1530558,4505620],[-3604,17681],[-1949,29503],[-672,35492],[1257,25193],[-747,16253],[-2727,14078],[-1053,19422],[2037,21413]],[[1554259,5213371],[0,-13281],[-3450,78],[1714,-13659],[3450,-5400],[-3992,-16118],[-619,-16351]],[[1536326,5075850],[1828,115482],[-845,22698]],[[1554185,5282001],[502,-211]],[[1554687,5281790],[0,0]],[[1554687,5281790],[1,3]],[[1554688,5281793],[0,0]],[[1554688,5281793],[7,6]],[[1554695,5281799],[0,0]],[[1554695,5281799],[3,5]],[[1554698,5281804],[0,0]],[[1554698,5281804],[1,1]],[[1554699,5281805],[0,0]],[[1554699,5281805],[8,3]],[[1554707,5281808],[0,0]],[[1554707,5281808],[3673,5099]],[[1558380,5286907],[2707,2381],[5900,-19004],[3305,-43649]],[[1570292,5226635],[643,-22808]],[[1570935,5203827],[-4641,-1344]],[[1566294,5202483],[-2842,10800],[-9193,88]],[[1530357,4807320],[9569,-386],[-3,-17277],[3107,-15669],[0,-32626],[1677,-18],[50,-31922],[-3309,-17099],[242,-38652]],[[1523100,4684655],[2699,58998],[-567,6683],[3230,24412],[1895,32572]],[[1585240,5169960],[9103,18975]],[[1597180,5153848],[-22878,-34],[-2857,-5278]],[[1571445,5148536],[7,16140],[-5165,21404],[7,16403]],[[1570935,5203827],[2439,-20721],[11866,-13146]],[[1730742,4820525],[9,-314639]],[[1697284,4887743],[-132,40449]],[[1697152,4928192],[7260,35048],[10603,212],[2929,-10625],[-8,-16149],[7414,-8]],[[1725350,4936670],[6816,-11040],[2161,-16817]],[[1734327,4908813],[-2176,-13036],[1155,-11546],[-1374,-26424]],[[1731932,4857807],[-1190,-37282]],[[1530357,4807320],[1676,47391]],[[1588498,4775525],[3394,-18193],[1014,-15259],[-1793,-8381],[-1473,-26504],[-5327,-1462],[11,-13287]],[[1557911,4637395],[-5971,123],[-7547,6851],[-31,8329]],[[1622381,5187480],[2512,-23654],[-1115,-23161],[-4177,-15740],[-241,-16343],[4630,-4643],[3748,-12000],[-172,-8809],[6303,-168]],[[1633869,5082962],[232,-2697]],[[1634101,5080265],[1110,-37902],[2339,-8326]],[[1637550,5034037],[-38673,762]],[[1598877,5034799],[705,11258]],[[1599582,5046057],[-1974,23496],[4059,10332],[-2401,26304],[1358,9541]],[[1607750,5197941],[6275,-4866],[891,-12128],[2754,7759],[4711,-1226]],[[1597914,5008277],[-1354,-54562]],[[1596560,4953715],[1207,-25139]],[[1560316,5020580],[3803,-11605],[5770,19394],[14248,-7148],[1616,-10337],[12161,-2607]],[[1622381,5187480],[7308,17950]],[[1629689,5205430],[6745,-26480],[1434,-16366],[-3790,-8085],[-1645,-39811],[2866,-20028],[-1430,-11698]],[[1597914,5008277],[963,26522]],[[1637550,5034037],[-393,-48219]],[[1617046,4953359],[-20486,356]],[[1610761,4808502],[40025,-1192]],[[1647922,4504886],[-24527,-142]],[[1623395,4504744],[-107,140401],[-12998,521],[36,114182],[435,48654]],[[1724053,5082559],[-8261,-226],[-16,-16248],[-5957,-117],[-1836,12413],[-3504,-11731],[-4519,9150],[-3159,-16178]],[[1696801,5059622],[-7642,7057]],[[1629689,5205430],[4116,-6962],[8222,4847],[5885,16197]],[[1653738,5080118],[-19637,147]],[[2507731,3895028],[7,16455],[12342,385]],[[2520080,3911868],[-92,-41178]],[[2519988,3870690],[-14,-24594]],[[2519974,3846096],[-12410,-194]],[[2507564,3845902],[14,5468]],[[2507578,3851370],[153,43658]],[[2513593,3612401],[-32,14276]],[[2513561,3626677],[700,6172],[5387,274]],[[2519648,3633123],[6138,-33266],[-2,-16992]],[[2525784,3582865],[-2107,1239]],[[2523677,3584104],[-10084,28297]],[[2526620,4184328],[13,21883]],[[2526633,4206211],[14685,103]],[[2541318,4206314],[-133,-97256]],[[2526570,4108925],[50,75403]],[[2527883,3649411],[83,32906]],[[2527966,3682317],[1025,-65]],[[2528991,3682252],[6744,-4758]],[[2535735,3677494],[2004,-12879]],[[2537739,3664615],[-583,-6115],[-5487,-3627],[-2209,-9085]],[[2529460,3645788],[-1577,3623]],[[2533889,4598479],[-2,-63697]],[[2533887,4534782],[-1081,-2]],[[2532806,4534780],[-544,-34]],[[2532262,4534746],[0,0]],[[2532262,4534746],[-9215,-90]],[[2523047,4534656],[-3259,-5]],[[2519788,4534651],[-49,63646]],[[2519739,4598297],[11220,191]],[[2467796,4101482],[-762,-9221]],[[2467537,4042035],[-909,-23576]],[[2466628,4018459],[-9000,700]],[[2457628,4019159],[-2421,7334],[-4302,29854]],[[2450905,4056347],[-3585,16224]],[[2447320,4072571],[-1628,13824]],[[2445692,4086395],[12511,-291],[-15,16453]],[[2520125,3928398],[-3155,-553],[41,57015]],[[2517011,3984860],[9317,-231]],[[2529400,3976410],[-31,-48718]],[[2529369,3927692],[-9244,706]],[[3144640,75450],[2044,-2609]],[[3146684,72841],[-39,-7370]],[[3144964,59595],[-1305,759]],[[3143659,60354],[981,15096]],[[3140162,104600],[2484,116]],[[3142646,104716],[-764,-26594]],[[3141882,78122],[-1859,5012]],[[3119432,72277],[-1185,-3064]],[[3118247,69213],[-382,14724]],[[3117865,83937],[1567,-11660]],[[3152453,52431],[1299,4173]],[[3154384,40424],[59,-4284]],[[3154443,36140],[-2341,-8309]],[[3152102,27831],[-1157,6423]],[[3150945,34254],[-22,597]],[[3150923,34851],[1530,17580]],[[3120076,42368],[-584,2798]],[[3119492,45166],[-200,18474]],[[3119292,63640],[2950,-2233]],[[3123974,50275],[-881,-4009]],[[3123093,46266],[-982,-4131]],[[3122111,42135],[-2035,233]],[[3098491,34521],[0,0]],[[3164212,35338],[4906,8659],[3464,-5148],[-4909,-9048],[-3461,5537]],[[3136601,69568],[-1125,5548]],[[3135928,76964],[1592,2483]],[[3139482,83217],[209,-21291]],[[3139691,61926],[-2436,-17712]],[[3137255,44214],[-654,25354]],[[3130961,38952],[2089,-833]],[[3132910,9488],[-1528,4122]],[[3150146,69333],[400,1128]],[[3150546,70461],[-1440,-17477]],[[3149106,52984],[-1430,2684]],[[3147075,62135],[1305,3884]],[[3148380,66019],[1766,3314]],[[3119432,72277],[1468,917]],[[3120900,73194],[2162,-2109]],[[3123062,71085],[408,-3172]],[[3119292,63640],[-1045,5573]],[[3127343,82214],[-644,5071]],[[3126699,87285],[-989,17962]],[[3125710,105247],[1563,-864]],[[3121462,3543],[27,20641]],[[3121489,24184],[3502,-667]],[[3124991,23517],[685,-3751]],[[3125676,19766],[-621,-14970]],[[3125055,4796],[-3593,-1253]],[[3148499,100221],[3,14]],[[3148502,100235],[1,-14]],[[3147665,94360],[-765,-7807]],[[3146900,86553],[-1549,917]],[[3145351,87470],[1491,13471]],[[3146842,100941],[1535,-1198]],[[3145688,48275],[-63,-850]],[[3145625,47425],[-2009,-5271]],[[3141974,46199],[640,12641]],[[3142614,58840],[1045,1514]],[[3139840,10546],[651,11120]],[[3143159,16661],[-193,-7374]],[[3142966,9287],[-3126,1259]],[[3145213,27890],[920,3642]],[[3146133,31532],[1626,-8474]],[[3147759,23058],[-1116,-16287]],[[3146643,6771],[-3677,2516]],[[3159348,85759],[2244,-4295]],[[3159253,69232],[-147,-1152]],[[3159106,68080],[242,17679]],[[3158884,66096],[222,1984]],[[3162560,66830],[-761,-14394]],[[3161799,52436],[-2915,13660]],[[3136000,86575],[1257,2996]],[[3149106,52984],[632,-7651]],[[3149738,45333],[-3393,-4839]],[[3146345,40494],[-720,6931]],[[3151369,97957],[1219,1476]],[[3152588,99433],[2049,-10315]],[[3154637,89118],[20,-24869]],[[3154657,64249],[-665,4369]],[[3153992,68618],[-1592,16208]],[[3152400,84826],[-1031,13131]],[[3155797,35804],[1437,15394]],[[3157234,51198],[2422,-5046]],[[3159656,46152],[-1605,-19393]],[[3158051,26759],[-2254,9045]],[[3120843,86571],[57,-13377]],[[3117865,83937],[2200,7537]],[[3157234,51198],[51,13598]],[[3157285,64796],[1599,1300]],[[3161799,52436],[-2143,-6284]],[[3121489,24184],[238,9417]],[[3121727,33601],[384,8534]],[[3123093,46266],[2051,-5664]],[[3125144,40602],[-153,-17085]],[[3143507,82458],[420,3118]],[[3143927,85576],[1424,1894]],[[3146900,86553],[-216,-13712]],[[3144640,75450],[-1133,7008]],[[3151782,70782],[-552,1367]],[[3151230,72149],[1170,12677]],[[3153992,68618],[-2210,2164]],[[3152588,99433],[4579,-6470]],[[3157167,92963],[-1087,-8499]],[[3156080,84464],[-1443,4654]],[[3149371,95838],[775,-26505]],[[3148380,66019],[342,27154]],[[3142614,58840],[-750,9871]],[[3141864,68711],[347,7349]],[[3142211,76060],[1296,6398]],[[3152707,24720],[-605,3111]],[[3154443,36140],[1354,-336]],[[3158051,26759],[-1510,-10834]],[[3156541,15925],[-3834,8795]],[[3147759,23058],[3148,10712]],[[3150907,33770],[-811,-13914]],[[3150438,7390],[-2501,-7066],[-1294,6447]],[[3136039,104458],[1485,-616]],[[3140399,29045],[-2743,3486],[191,9598]],[[3137847,42129],[2155,4626]],[[3129424,77888],[-53,-3672]],[[3129371,74216],[247,-17415]],[[3129618,56801],[-280,-11062]],[[3129338,45739],[-263,-128]],[[3129075,45611],[-1705,3217]],[[3127111,61059],[387,21338]],[[3129078,104972],[1999,-673]],[[3130933,74522],[-1562,-306]],[[3121644,109994],[4066,-4747]],[[3126699,87285],[-2929,33]],[[3123770,87318],[-818,12653]],[[3156080,84464],[866,-19257]],[[3156946,65207],[-452,-3795]],[[3156541,15925],[-1661,-5634]],[[3154880,10291],[-2173,14429]],[[1584110,4507362],[23459,-1921]],[[1607569,4505441],[28,-152365]],[[1607597,4353076],[-29306,-153]],[[1578291,4352923],[547,25721],[-2032,7789],[-7235,-29807],[-2077,503],[-2438,-17419],[1558,-22103],[-3324,1885],[-2013,13359],[-3633,62],[-4703,19500]],[[1552941,4352413],[-1834,34861],[-5217,2976]],[[1545890,4390250],[1381,14980],[-2992,24986],[1642,22170],[-1210,21605],[3851,13787],[1325,18290]],[[1549887,4506068],[8000,561]],[[1569286,3916330],[5410,-34184]],[[1574696,3882146],[-526,-12801],[2852,-14815],[4936,-51091],[-1116,-17104]],[[1580842,3786335],[93,-938]],[[1580935,3785397],[-2431,-7650]],[[1578504,3777747],[-2071,13564],[-4870,4642],[-4646,21127],[-2682,-4526]],[[1564235,3812554],[-1694,1211],[-1814,27747],[-5658,21548],[-5618,37972]],[[1549451,3901032],[4601,7156],[6467,467],[1540,8104],[7227,-429]],[[1587934,3623570],[-1062,27220],[3034,8678]],[[1589906,3659468],[4345,-4389],[1680,5661],[10937,-461]],[[1606868,3660279],[1865,-32042],[-1485,-5286],[1463,-23192],[3461,4648],[1547,-9153]],[[1613719,3595254],[317,-32480]],[[1614036,3562774],[-7622,4100],[-2573,-15722]],[[1603841,3551152],[-4911,28166],[-6505,17715],[-4491,26537]],[[2673237,2451729],[916,22796],[3293,6828]],[[2677446,2481353],[2107,59]],[[2679553,2481412],[-2,-58885]],[[2679551,2422527],[-1340,-3733]],[[2678211,2418794],[-655,18315],[-3804,530],[-515,14090]],[[2714452,2650874],[-1733,11892]],[[2712719,2662766],[0,2]],[[2712719,2662768],[9612,16545]],[[2722331,2679313],[1230,-27216]],[[2723561,2652097],[7053,-44916],[-450,-24280]],[[2730164,2582901],[-1217,-25]],[[2728947,2582876],[-5007,22948],[-826,17900],[-5145,5272],[-3517,21878]],[[2694590,2627819],[5753,-9940]],[[2700343,2617879],[3199,-2840],[1718,-13258]],[[2705260,2601781],[-2353,-10046],[6,-56553]],[[2702913,2535182],[-2613,11126]],[[2700300,2546308],[-8214,33709]],[[2692086,2580017],[32,23882],[2477,-74],[-5,23994]],[[2663446,3194272],[1856,143]],[[2665302,3194415],[10424,1385]],[[2675726,3195800],[-3750,-23134],[-3043,-30124]],[[2668933,3142542],[-5531,6327],[-2821,13677]],[[2660581,3162546],[-128,10388],[2993,21338]],[[2672441,2743498],[2439,-30160]],[[2674880,2713338],[-955,5515],[-4827,-33701]],[[2669098,2685152],[-4222,24189]],[[2664876,2709341],[4,9449]],[[2664880,2718790],[7561,24708]],[[2638112,2924446],[2142,-16372],[-176,-20777]],[[2640078,2887297],[-1248,-17961],[-1800,172]],[[2637030,2869508],[-3614,34188],[493,11687]],[[2633909,2915383],[4203,9063]],[[2694578,2872767],[1341,6977]],[[2695919,2879744],[845,39]],[[2696764,2879783],[2394,-8409]],[[2699158,2871374],[976,-6772],[-1633,-31517],[524,-23403],[-1230,-19096]],[[2697795,2790586],[-3278,-13761]],[[2694517,2776825],[-2421,11250]],[[2692096,2788075],[-813,36872],[-3111,20024]],[[2688172,2844971],[6406,27796]],[[2630529,2459923],[-698,-34424],[-2997,-32527]],[[2626834,2392972],[-34,8]],[[2626800,2392980],[-1360,7628],[-2479,46494]],[[2622961,2447102],[-726,14008]],[[2622235,2461110],[2957,-549]],[[2625192,2460561],[5337,-638]],[[2709264,2414843],[361,24689],[-1229,16425]],[[2708396,2455957],[4728,22761]],[[2713124,2478718],[5401,-13989],[3602,-14637]],[[2722127,2450092],[-1407,-7325],[2466,-12976],[-1086,-37152]],[[2722100,2392639],[-5665,3309],[-7171,18895]],[[2713124,2478718],[964,30033]],[[2714088,2508751],[2993,23009]],[[2717081,2531760],[6165,-30042],[3708,377]],[[2726954,2502095],[-653,-16501],[-2962,-13518],[-1212,-21984]],[[2621629,2990623],[-9369,-519]],[[2612260,2990104],[-342,11682]],[[2611918,3001786],[-641,21842]],[[2611277,3023628],[10448,2918]],[[2621725,3026546],[3458,-2603]],[[2625183,3023943],[-1559,-24540],[-1995,-8780]],[[2659746,2919821],[36,13233]],[[2659782,2933054],[4875,41336]],[[2664657,2974390],[2778,-22359]],[[2667435,2952031],[3817,-30899],[-299,-9319]],[[2670953,2911813],[-7071,-9165]],[[2663882,2902648],[-4136,17173]],[[2631374,2792246],[5395,6953]],[[2636769,2799199],[6147,-25112]],[[2642916,2774087],[-1440,-5050],[-1976,-29710],[-989,31]],[[2638511,2739358],[-5376,-5097]],[[2633135,2734261],[-1593,-3018]],[[2631542,2731243],[-3,12207]],[[2631539,2743450],[-165,48796]],[[2640772,2708579],[3026,-4791]],[[2643798,2703788],[-37,-14205],[2069,-12440]],[[2645830,2677143],[-53,-13328],[-6872,1454]],[[2638905,2665269],[1056,46380]],[[2639961,2711649],[811,-3070]],[[2640772,2708579],[0,0]],[[2647285,3193346],[3456,-62]],[[2650741,3193284],[1922,50]],[[2652663,3193334],[3268,-13812],[1079,-22611]],[[2657010,3156911],[-2121,-13234]],[[2654889,3143677],[-2298,3495],[-2710,-18488],[-3393,1153]],[[2646488,3129837],[1807,28668],[-2382,27157],[1372,7684]],[[2661798,2656312],[7556,-2344]],[[2669354,2653968],[1261,-22719],[2405,-15756]],[[2673020,2615493],[788,-9821]],[[2673808,2605672],[-8434,-102]],[[2665374,2605570],[-3680,1267]],[[2661694,2606837],[72,32542]],[[2661766,2639379],[32,16933]],[[2698685,2488984],[2113,-10015],[13,-16129],[2133,-13861]],[[2702944,2448979],[-7910,538],[-135,-40872],[7539,-2039],[-1806,-40388]],[[2700632,2366218],[-5690,2472]],[[2694942,2368690],[-472,44605],[-1661,-97],[137,26881],[-2829,10354],[-2217,30932]],[[2687900,2481365],[-767,17662],[1938,-631],[18,16696]],[[2689089,2515092],[877,19721]],[[2689966,2534813],[5022,-9765]],[[2694988,2525048],[753,-19913],[2944,-16151]],[[2663780,3002121],[4941,13974]],[[2668721,3016095],[2832,-7764]],[[2671553,3008331],[-489,-28286]],[[2671064,2980045],[-7284,22076]],[[2656016,2845997],[7528,7512]],[[2663544,2853509],[3253,2509]],[[2666797,2856018],[1990,-48517]],[[2668787,2807501],[-1374,-5227]],[[2667413,2802274],[-2968,-9987]],[[2664445,2792287],[-4031,8058],[-1462,12144]],[[2658952,2812489],[-2936,33508]],[[2625769,2967453],[-114,-38805],[2699,131]],[[2628354,2928779],[-1164,-11721]],[[2627190,2917058],[-4588,-16089]],[[2622602,2900969],[-7757,486]],[[2614845,2901455],[-297,10254]],[[2614548,2911709],[-941,31863]],[[2613607,2943572],[8006,11515],[361,18214]],[[2621974,2973301],[3795,-5848]],[[2649652,2919737],[-3891,22532]],[[2645761,2942269],[1904,-5893],[2566,25857]],[[2650231,2962233],[1161,6222]],[[2651392,2968455],[1872,-7833]],[[2653264,2960622],[-446,-17291],[-3166,-23594]],[[2606783,3169542],[-613,23267]],[[2606170,3192809],[3652,-310]],[[2609822,3192499],[3069,66]],[[2612891,3192565],[-2414,-28395],[5,-13557],[-2332,-25341]],[[2608150,3125272],[-1367,44270]],[[2628311,3193356],[964,53]],[[2629275,3193409],[4301,82]],[[2633576,3193491],[80,-24881]],[[2633656,3168610],[1012,-5662],[-2084,-18014],[72,-27274]],[[2632656,3117660],[-1727,7432],[-5487,2103]],[[2625442,3127195],[-595,13997],[3218,29542],[246,22622]],[[1642489,3343397],[18277,68]],[[1660766,3343465],[42630,-76]],[[1703396,3343389],[10448,1514]],[[1713844,3344903],[29,-182493],[-983,48]],[[1712890,3162458],[-33070,-891],[-756,-5080]],[[1679064,3156487],[-10093,4409],[-927,12259],[-4609,4042]],[[1662588,3177179],[1,32889],[-2459,2018],[205,17277],[-3160,-966],[10,16419],[-3977,197],[2,16336],[-1973,66],[4,16457],[-3270,68],[-2487,16295],[21,16465],[-3009,-30],[-7,32727]],[[2494927,4876909],[-56,-63548]],[[2494871,4813361],[-5178,-288]],[[2486440,4926954],[4955,-335]],[[2491395,4926619],[3531,-365]],[[2494926,4926254],[1,-49345]],[[2451251,4992001],[383,-96832]],[[2444019,4877325],[-3728,7673]],[[2441124,4991853],[10127,148]],[[2458359,4828850],[16669,1118]],[[2475022,4813061],[37,-16283]],[[2475059,4796778],[-10046,-192],[86,-24329]],[[2450138,4772250],[-339,14525]],[[2449799,4786775],[-1422,21486],[304,20649]],[[2475032,4926820],[-112,32927]],[[2474915,5008504],[13131,-39]],[[2488046,5008465],[15,-32457],[3281,-66],[53,-49323]],[[2457948,5122084],[-17165,10]],[[2440783,5122094],[29,64686]],[[2440812,5186780],[24003,123]],[[2464815,5186903],[1,-48758]],[[2464816,5138145],[-6866,295],[-2,-16356]],[[2524519,4729779],[3283,-253]],[[2527802,4729526],[9881,-482]],[[2537683,4729044],[-183,-65286]],[[2537500,4663758],[-6588,-230]],[[2530912,4663528],[-6552,169]],[[2440506,5284006],[17460,-454]],[[2457966,5283552],[-16,-32487],[6915,94]],[[2464865,5251159],[-50,-64256]],[[2440812,5186780],[-306,97226]],[[2527802,4729526],[489,65294]],[[2528291,4794820],[6675,-110]],[[2534966,4794710],[3353,-109]],[[2538319,4794601],[-636,-65557]],[[2424205,5040828],[-560,65831]],[[2423645,5106659],[13674,-293]],[[2437319,5106366],[424,-65893]],[[2437743,5040473],[2,-32254]],[[2437745,5008219],[-13508,137]],[[2482532,5235360],[-31,15873]],[[2485700,5310717],[23334,-30192],[2807,-7686]],[[2511841,5272839],[1625,-4453]],[[2513466,5268386],[-28,-17125],[-3176,13],[2,-16249]],[[2510296,5154428],[3434,70],[-82,-16191],[6915,9]],[[2521584,5089400],[-9500,127],[13,-16680]],[[2512097,5072847],[-6746,62]],[[2505351,5072909],[-11,16718],[-5621,100]],[[2499719,5089727],[32,65168]],[[2889982,4542413],[-94,-28639],[1733,-7970]],[[2870830,4505694],[-290,34956],[978,8401],[-1366,33662]],[[2870152,4582713],[7415,1004]],[[2877567,4583717],[564,-29198],[5725,-2063],[33,-9931],[6093,-112]],[[2855208,4622604],[2244,-13766],[-3083,-585]],[[2854369,4608253],[-5543,-982]],[[2848826,4607271],[7,21471],[-2118,20209]],[[2846715,4648951],[208,46596]],[[2846923,4695547],[6968,2035]],[[2853891,4697582],[-547,-55431],[1864,-19547]],[[2514771,4860641],[13443,-414],[-27,8465]],[[2534927,4859953],[39,-65243]],[[2528291,4794820],[-17,16359],[-13513,488]],[[2458028,4991871],[-6777,130]],[[2437748,4991938],[-3,16281]],[[2437743,5040473],[20288,254]],[[2537500,4663758],[6767,-206]],[[2544267,4663552],[1681,-10730],[-1089,-21857]],[[2530925,4620238],[-13,43290]],[[2924478,4642542],[-2564,-2941],[250,15399]],[[2922164,4655000],[4999,18871],[-253,10952]],[[2926910,4684823],[3831,-10961],[4071,-22169]],[[2934812,4651693],[-10334,-9151]],[[2805087,4762570],[0,-45412]],[[2805087,4717158],[30,-7471]],[[2805117,4709687],[-7499,-840],[-2946,-12122],[-5012,9079]],[[2789660,4705804],[-1427,36406],[12150,17812],[4704,2548]],[[2458000,5073265],[-52,48819]],[[2464816,5138145],[17732,767]],[[2482548,5138912],[-39,-48976]],[[2482509,5089936],[-4293,73],[7,-16277],[-3274,36]],[[2949719,4682537],[260,-37007]],[[2949979,4645530],[-2439,-44162]],[[2947540,4601368],[-12014,-8568]],[[2935526,4592800],[626,27356],[2354,32363]],[[2938506,4652519],[1151,29576]],[[2939657,4682095],[10062,442]],[[2907750,4508973],[9165,28610]],[[2916915,4537583],[4016,-10273],[6485,-3324],[903,13814],[3670,-8066]],[[2931989,4529734],[-528,-9081]],[[2931461,4520653],[-660,-91491]],[[2930801,4429162],[-4822,-1393],[-3836,9396],[-2869,-7816]],[[2919274,4429349],[-781,10088],[-5015,18789],[3382,24396],[-9110,26351]],[[2456624,4893507],[1856,16386],[16537,-568]],[[2922333,4227029],[298,1979]],[[2922631,4229008],[-298,-1979]],[[2923421,4235852],[258,3638]],[[2923679,4239490],[-258,-3638]],[[2923838,4248120],[18,980]],[[2923856,4249100],[-18,-980]],[[2923865,4249622],[1,25]],[[2923866,4249647],[-1,-25]],[[2924035,4250776],[132,870]],[[2924167,4251646],[-132,-870]],[[2924432,4252549],[17,10]],[[2924449,4252559],[-17,-10]],[[2925833,4252053],[-1256,409]],[[2924577,4252462],[427,-312]],[[2926595,4252862],[-443,-471]],[[2922366,4226623],[1546,23124],[4108,-5197],[-2343,-13777],[-3311,-4150]],[[2440502,5396054],[9044,20204],[5208,4795],[5632,12768],[2415,-13004],[-3733,-24638],[901,-10624],[-2081,-21421]],[[2457888,5364134],[78,-80582]],[[2456364,5439140],[0,0]],[[2860427,4735670],[-3505,4876],[-337,30990]],[[2856585,4771536],[5753,19471],[3163,-1926],[2609,11624],[82,19702]],[[2868192,4820407],[4974,-2263],[-86,7276],[6980,-3394]],[[2880060,4822026],[511,-40898]],[[2880571,4781128],[-1628,2470],[-2009,-29678],[69,-31720]],[[2873963,4727406],[-5839,16515],[-1560,-6389],[-6137,-1862]],[[2550865,5085267],[-1117,-22162],[-3687,-2071]],[[2527520,5138003],[78,64653]],[[2537825,5213551],[5896,-10874]],[[2543721,5202677],[1811,-9221],[-1395,-19698],[1072,-11794],[-2612,-28436],[6664,-2347],[-2438,-30698],[4042,-15216]],[[2437319,5106366],[3439,-271],[25,15999]],[[2927912,4832438],[17243,11077]],[[2945155,4843515],[-1526,-27401],[-3171,-16877],[-620,-15112],[947,-33743]],[[2940785,4750382],[-4851,-15682],[-3206,32888],[-7688,-4962]],[[2925040,4762626],[-1519,66853],[4391,2959]],[[2525820,5040378],[-6883,174],[18,16248],[-6851,-63],[-7,16110]],[[2488236,4731653],[3283,16260]],[[2491519,4747913],[19813,-1516]],[[2511332,4746397],[6,-16305]],[[2511211,4664511],[-9908,-431]],[[2501303,4664080],[-13068,2312]],[[2928737,5066628],[19065,2837]],[[2947291,4985745],[636,-3129]],[[2947927,4982616],[-9357,-19877],[-6553,-2050]],[[2932017,4960689],[-2137,52048],[-1143,53891]],[[2506889,4877047],[-11962,-138]],[[2494926,4926254],[10395,-408]],[[2505321,4925846],[9423,-173]],[[2514744,4925673],[14,-48552]],[[2514744,4925673],[4093,126]],[[2518837,4925799],[9353,150]],[[2425676,4956503],[-4415,8782]],[[2421261,4965285],[-2066,16239]],[[2427129,5187215],[-508,96895]],[[2440812,5186780],[-13683,435]],[[2475059,4796778],[3319,188],[-52,-73098]],[[2471751,4730695],[-6602,-5458]],[[2768967,4556419],[9273,29671],[2149,11332],[5998,15119]],[[2786387,4612541],[2116,-5960]],[[2788503,4606581],[-14,-100813]],[[2908329,4701960],[1780,24415],[-463,20267]],[[2909646,4746642],[4958,-10862],[10992,4843]],[[2925596,4740623],[1189,-50733]],[[2926785,4689890],[-12395,485],[-6061,11585]],[[2818132,4717975],[48,43482]],[[2818180,4761457],[6649,-5227],[6206,-19240],[4406,8064]],[[2835441,4745054],[127,-45476]],[[2835568,4699578],[-3175,-25],[81,-17107],[-2726,149]],[[2829748,4682595],[-4235,248],[40,8064],[-4984,-114]],[[2820569,4690793],[109,27289],[-2546,-107]],[[2909267,5066474],[19470,154]],[[2932017,4960689],[-6457,-4199],[1336,-50472],[-5249,-3194]],[[2921647,4902824],[-7057,-3987]],[[2914590,4898837],[264,13362],[-3237,146368],[-2350,7907]],[[2846892,4558036],[9632,815]],[[2856524,4558851],[2256,-205]],[[2858780,4558646],[-537,-52708]],[[2846872,4506147],[20,51889]],[[2522562,4990789],[-3642,18],[-83,-65008]],[[2505321,4925846],[32,81949]],[[2505353,5007795],[17234,-568],[-25,-16438]],[[2488251,4600565],[-23,57666]],[[2501303,4664080],[86,-64569]],[[2500403,4599600],[-12152,965]],[[2517798,4663640],[16,-65658]],[[2517814,4597982],[-4566,586]],[[2546801,5006983],[3511,30202],[5679,12373],[3938,33106],[742,16078],[3295,4462],[313,12336],[3493,7181],[-1807,-38604],[-3933,-22553],[-422,-17414],[-2794,-13289],[-1906,-24148]],[[2568529,5133322],[524,12908],[3148,-2776],[-2021,-20185],[-1651,10053]],[[2556850,5104739],[0,0]],[[2464865,5251159],[10445,-40]],[[2482516,5171334],[32,-32422]],[[2403290,5188005],[1282,16072]],[[2404572,5204077],[5603,38095],[8066,15503],[1580,26383]],[[2427129,5187215],[-3440,-35]],[[2537683,4729044],[4771,-14]],[[2542454,4729030],[123,-35851],[1690,-29627]],[[2457888,5364134],[4795,11447],[502,8606],[5229,-20239]],[[2470758,5442273],[0,0]],[[2465565,5427799],[0,0]],[[2462512,5411638],[0,0]],[[2463094,5435088],[0,0]],[[2462080,5446339],[3714,3156],[2519,-7906],[-3298,-9353],[-2935,14103]],[[2461672,5401541],[4879,16749],[-1135,-16034],[-3744,-715]],[[2494871,4813361],[9878,92]],[[2511396,4811575],[-64,-65178]],[[2491519,4747913],[3331,16299],[38,33324],[-3578,2140],[-1617,13397]],[[2522562,4990789],[10054,-1079]],[[2532616,4989710],[1521,382],[-56,-64546]],[[2788503,4606581],[4653,-18481],[11975,18196]],[[2805131,4606296],[4321,-2829]],[[2809452,4603467],[20,-97668]],[[2406565,5041605],[320,65056]],[[2471832,4658056],[15,-57218]],[[2465869,4601050],[-1973,24177],[-5160,7040]],[[2458736,4632267],[-4673,14193],[-2567,44410]],[[2505353,5007795],[-2,65114]],[[2532686,5007469],[-70,-17759]],[[2928436,4262434],[2,-14]],[[2928376,4262664],[7,33]],[[2928387,4262700],[19,-59]],[[2928288,4260629],[-24,-192]],[[2928186,4260836],[7,82]],[[2928862,4259073],[-45,5273]],[[2929920,4280832],[1425,15853]],[[2931345,4296685],[593,-16103]],[[2931938,4280582],[-1401,-10952]],[[2930537,4269630],[-1675,-10557]],[[2488251,4600565],[-2470,13]],[[2545962,4941501],[-3381,75],[-15,-16309],[-4323,105]],[[2539729,5007088],[-1463,-20776],[3160,-5727],[4642,20310]],[[2538283,4859986],[8650,93]],[[2546933,4860079],[700,-39801],[-2455,-25551]],[[2545178,4794727],[-6859,-126]],[[2552181,4941562],[649,-27635],[-3536,-14071],[-2361,-39777]],[[2545178,4794727],[-3273,-54773],[549,-10924]],[[2488046,5008465],[17307,-670]],[[2898570,4808240],[-1671,90168]],[[2896899,4898408],[2991,-8715],[5812,3685]],[[2905702,4893378],[2189,-109200],[-2566,-27487],[4321,-10049]],[[2908329,4701960],[-95,-34476]],[[2908234,4667484],[-3218,6559],[-778,-13727],[-5412,15615],[-3097,-5313]],[[2895729,4670618],[-194,32287],[4177,32730],[-2540,5329],[2334,14019],[-936,53257]],[[2482509,5089936],[17210,-209]],[[2519739,4598297],[-1925,-315]],[[2513466,5268386],[6944,-11134]],[[2463212,2594119],[-2945,7555],[-8788,7701]],[[2451479,2609375],[0,0]],[[2451479,2609375],[-2528,412]],[[2448951,2609787],[1667,17055],[3132,10456],[1273,18255]],[[2455023,2655553],[2372,-6444],[4744,13863],[1287,13314]],[[2463713,2643200],[-501,-49081]],[[2451238,2822094],[-6,1352]],[[2451232,2823446],[7020,-680]],[[2458252,2822766],[-1377,-31739],[-31,-32818],[6734,-126]],[[2463578,2758083],[85,-8098]],[[2463663,2749985],[-229,-9845],[-3684,1668],[-23,-24905],[-2504,425],[-356,24561],[-2215,123]],[[2454652,2742012],[-3041,12071],[2561,16236],[-2927,5680],[2653,24485],[-451,16398],[-2148,-14372],[-61,19584]],[[2513987,2676112],[13442,651]],[[2527429,2676763],[-1166,-62481]],[[2526263,2614282],[-4156,-6863],[-8026,-5717]],[[2514081,2601702],[-94,74410]],[[1297684,7245027],[5,-80]],[[1297689,7244947],[-12,36]],[[1297677,7244983],[7,44]],[[1240170,7179779],[-896,-21599]],[[1303314,7378811],[3228,-24900],[-3319,-22540],[8923,-8250],[-1895,-29928]],[[1310251,7293193],[-3204,-1827],[-2465,-26751],[-5569,-4179]],[[1299013,7260436],[4217,18747],[-5175,-11075],[-5952,15019],[-4139,29235],[1830,16172],[-3918,-8932],[-14579,27219]],[[1256898,7325391],[4070,6450],[15426,-17838],[6398,610],[2986,-11886],[1733,-22322],[3194,-5457],[7782,-39160],[-7711,-16778],[-6232,4384],[464,16226],[-7028,39566],[1215,-31285],[3631,-6484],[394,-16982],[-3186,-14274],[-5967,8702],[-2645,-10694],[-4191,2070],[-1294,44052],[546,29198],[-4989,1219],[-4596,40683]],[[1248146,7106308],[6411,4085],[-4582,-16092],[-1829,12007]],[[1246174,7284819],[2843,11710],[4046,-10831],[844,18655],[2960,-10552],[4300,-32403],[-280,16206],[3975,-6375],[971,-33926],[-3758,-3670],[253,-25863],[-2631,-11129],[2754,-9929],[-3391,-42470],[-1801,-1261],[-1043,25918],[-2110,-42348],[-2682,12611],[-1724,53215],[7004,12893],[-6691,30702],[-3351,26179],[-488,22668]],[[1297684,7245027],[6523,1626],[-3200,-14698],[-1374,7572]],[[1299633,7239527],[-1944,5420]],[[1310251,7293193],[6891,-16153],[1018,-38018],[7074,2138],[13758,-38539]],[[1308008,7058723],[-207,18417],[3369,17866],[438,40110],[3537,27296],[-6508,-25615],[1317,-18315],[-4186,-6180],[-1206,-13657],[-5540,42144],[-3287,-8206],[-2181,34536],[3256,4185],[2009,18434],[5257,600],[-1494,26921],[5175,-5326],[-4152,13455],[1642,27883],[-6234,7165]],[[1297901,7197383],[2336,11023],[1989,-9687],[-4325,-1336]],[[1295382,7216757],[3679,14809],[-2204,-21157],[-1475,6348]],[[1285534,7168071],[3713,-17481],[-3481,4565],[-232,12916]],[[1283772,7193084],[3949,18799],[5384,310],[3172,-12600],[-1155,-21788],[-6005,-6452],[-5345,21731]],[[784997,8098195],[-26,11501],[-10038,215],[-33,31813],[-46473,204]],[[728427,8141928],[26,162776]],[[728453,8304704],[-2,80881]],[[728451,8385585],[30876,-833],[115,13543],[66365,100479],[40986,-257],[88,26011],[29455,1870]],[[910027,8469043],[87,-39993],[1457,-18038],[65,-115313],[-15473,273],[560,-16559],[459,-128377],[-7260,135],[-9,-9322],[-34936,319]],[[854977,8142168],[-20268,-315],[-1396,10829],[-5400,-2832]],[[827913,8149850],[-3104,4115],[-9308,-19775],[-3036,-27483],[-13456,1331],[-4943,9744],[-9069,-19587]],[[1062744,9465767],[6,-497695]],[[867928,8687733],[-31359,360],[-45386,4029],[-15367,-66479],[-6237,4211],[-1508,9904],[-5887,-578],[-960,-14399],[-6195,-896],[-227,-33111],[-4960,1],[-234,-31259],[-17036,-930],[-364,-31846],[1518,-24397],[5166,-9313],[5347,835],[12,-25482],[-15800,-82798]],[[728453,8304704],[-1924,-16249],[-9026,112],[-31,-15787],[-9619,-601],[134,-17256],[-54544,3],[-38449,33],[-17,18783],[-40626,-2119],[36,-16264],[-20335,61],[-115,-16185],[-35356,318]],[[1147955,7650902],[325,12381],[-5190,28603],[-14427,20454],[-7887,22077],[-13941,24563],[-12131,29368],[3615,19068],[3864,-6098],[-1319,50280],[4062,22546],[-1853,8275],[-7133,-39291],[-13216,-24447],[-17878,8795],[-13816,24637],[-1730,8927],[5172,2315],[397,14609],[-12562,-10021],[-4904,8961],[-17421,13884],[-10346,1193],[-22013,-11711],[-5194,-7370]],[[982429,7872900],[-127,10091],[20141,89192],[39047,1672],[146,-17503],[15229,294],[5903,-8258]],[[1062768,7948388],[0,-16019],[13004,-15326],[1750,16166],[13461,-23463],[8101,29046],[17043,3226],[-3167,-49967],[4699,-18157],[9182,-15620],[3953,-31641],[26633,-93241],[2945,-47985],[-745,-14941]],[[837243,8040435],[1494,-27825],[8283,-172]],[[847020,8012438],[2512,124],[-311,-58303],[2904,-87],[-592,-86320],[-2513,-3105]],[[849020,7864747],[-2115,8173],[-12681,3878],[-2304,-19224],[-2030,36529],[-4095,-25671],[-2490,-28948],[1962,-19953],[-3129,7304],[-1881,31502],[-1116,-51099],[-2871,18808],[-4988,9467],[2636,-22396],[-12783,-52733],[-1330,3136],[3435,33929],[-5555,-23015],[-1107,23959],[-2103,-12869],[846,-17954],[-3866,-83],[-7278,-37634],[-8484,-2734],[-2829,13066],[-5113,-22016],[-4394,-585],[-6416,17815],[2570,31306],[7022,11494],[4554,-1908],[1394,12256],[7319,10560],[-1250,9704],[6134,25747],[-3645,-1181],[-10865,-26873],[-9064,16189],[-1076,10904],[4592,47514],[7835,33818],[1117,27290],[2280,5007],[983,29533],[-4033,33185],[9660,12517],[9939,28145],[9155,18970],[3206,-17090],[6033,-7082],[5347,10743],[14151,-13349],[6944,-2363]],[[716336,8045130],[160,42527],[-1250,214],[156,54513],[13025,-456]],[[784997,8098195],[-5429,-27260],[-8739,-6645],[-8916,-29430],[2689,-22703],[-4035,299],[-12833,-42600],[2091,-21056],[-4398,-17179],[-9535,-23829],[4601,-19289],[-3825,-29286],[-2887,-6919],[-11223,-2908],[-2032,-7908],[7351,2545],[-825,-26686],[-4530,-10723],[-5440,385],[965,17830],[-5868,-33712],[-4907,-1510],[947,-20227],[-10870,-13073],[-1756,-45347],[626,-19725],[2639,10162],[8708,-3613],[7551,-10773],[6332,-26109]],[[790555,7750230],[2811,14430],[1486,-10155],[-4297,-4275]],[[754041,7939827],[3632,30820],[3157,-4632],[-3262,-22090],[-3527,-4098]],[[738528,7905978],[0,0]],[[712886,7761141],[4110,4454],[1936,-11045],[-4800,-6592],[-1246,13183]],[[1062755,8231067],[13,-282679]],[[982429,7872900],[-8651,1679],[-11005,-37768],[4217,27079],[6205,18706],[4578,294],[-7229,22509],[-9554,8024],[-3555,16301],[-4448,-420],[3012,28829],[-7016,-1471],[-781,-25253],[-3924,1960],[-13407,30549],[-5878,-3605],[6521,23931],[-11057,-21133],[-6729,-3005],[33,-8706],[6021,4444],[-1814,-13401],[-11385,-22226],[-2391,8126],[4192,13735],[-4861,-1568],[3524,26474],[3779,-4814],[18238,24085],[-2713,3680],[-215,18978],[-6734,-15655],[-3427,3112],[6310,17894],[-8438,-1476],[-4269,-10410],[-5677,11562],[9611,8290],[4889,11376],[-10388,-6908],[-5281,27612],[3844,23941],[9627,890],[-716,6057],[-9069,-712],[-10025,-34434],[-3393,14105],[-7892,-24772],[-3160,15003],[-301,21349],[-3244,-19095],[877,-17890],[-4836,7256],[877,-17777],[-11562,-3962],[5427,51933],[4948,19799],[939,16009],[-9801,-48804],[-5326,-16344],[-2373,-28443],[7228,-4878],[369,-14644],[-4489,-12431],[-2066,-22263],[6760,22337],[4030,-28355],[-2337,-30884],[-3471,8452],[-4886,-11673],[8975,-16032],[481,-33097],[-7431,-8185],[-1112,36625],[-1821,977],[-1200,-29744],[-7583,-9877]],[[847020,8012438],[-12,21013],[7594,840],[375,107877]],[[886707,8039824],[0,0]],[[881723,7997459],[2916,16746],[2414,-14608],[-5330,-2138]],[[881563,7922457],[0,0]],[[869797,7838293],[3450,24894],[10336,29885],[5112,24788],[3820,28524],[2771,-6948],[-1874,-14694],[4711,6034],[-8108,-27415],[-8103,-36638],[-1109,-19276],[-9502,-12942],[-1504,3788]],[[869171,7920705],[4394,43500],[6308,19589],[-1463,-39681],[-4111,-40181],[-5128,16773]],[[867228,8010767],[4795,-5023],[-2362,-7937],[-2433,12960]],[[2488298,2447357],[-11804,-256]],[[2476494,2447101],[-23,65435]],[[2476471,2512536],[460,0]],[[2476931,2512536],[5667,-2669]],[[2482598,2509867],[239,-30002],[3091,-18914],[2371,47],[-1,-13641]],[[2504743,3117668],[-1468,-58],[-25,48944],[-1490,3],[1,27971]],[[2501761,3194528],[4301,115]],[[2506062,3194643],[5048,92]],[[2511110,3194735],[-12,-25503],[-1965,-8125],[-12,-40629]],[[2429369,2273501],[-375,-6793]],[[2428994,2266708],[-4560,14784],[-4361,5903]],[[2424043,2315729],[2399,14865],[1876,-1804]],[[2428318,2328790],[2318,-40052],[-1267,-15237]],[[2465839,2290948],[-1305,-24421],[906,-27461]],[[2465440,2239066],[-3603,6056],[-2784,-3040]],[[2456876,2272235],[1341,8767],[7622,9946]],[[2472319,2109334],[-1149,12653],[-3198,4001],[127,-15134],[-2032,911],[-368,-15076],[-4246,-7712],[-1112,-9024],[-3397,26513],[-3698,1291],[-5148,11242],[-851,10842]],[[2447247,2129841],[286,621]],[[2447533,2130462],[202,438]],[[2447735,2130900],[39,319]],[[2447774,2131219],[297,2433]],[[2448071,2133652],[86,704]],[[2448157,2134356],[13,555]],[[2448170,2134911],[52,2264]],[[2448222,2137175],[104,1972]],[[2448326,2139147],[15,280]],[[2448341,2139427],[3,60]],[[2448344,2139487],[94,746]],[[2448438,2140233],[30,103]],[[2448468,2140336],[389,1290]],[[2448857,2141626],[8,29]],[[2448865,2141655],[48,159]],[[2448913,2141814],[12,37]],[[2448925,2141851],[98,133]],[[2449023,2141984],[197,267]],[[2449220,2142251],[558,6595]],[[2449778,2148846],[70,987]],[[2449848,2149833],[47,671]],[[2449895,2150504],[63,906]],[[2449958,2151410],[-86,1236]],[[2449872,2152646],[-65,937]],[[2449807,2153583],[-18,122]],[[2449789,2153705],[-32,228]],[[2449757,2153933],[-54,375]],[[2449703,2154308],[-570,862]],[[2449133,2155170],[-270,648]],[[2448863,2155818],[-192,462]],[[2448671,2156280],[-37,2068]],[[2448634,2158348],[-9,484]],[[2448625,2158832],[-4,228]],[[2448621,2159060],[-1,56]],[[2448620,2159116],[-43,534]],[[2448577,2159650],[-113,1386]],[[2448464,2161036],[-184,10687],[2624,15020],[2660,3120]],[[2455677,2206410],[3526,380],[2020,11063],[1138,-15055],[4110,-18229],[6548,-43488],[-700,-31747]],[[2453079,2203533],[-7982,15775],[358,9493],[-2739,22758]],[[2442716,2251559],[6038,2896]],[[2445589,2270808],[-6450,-4802],[-1631,14049],[-2960,53],[-1507,-12072],[-3672,5465]],[[2428318,2328790],[3328,9104],[5304,-4212],[-2153,19280]],[[2434797,2352962],[1539,-58]],[[2436336,2352904],[1695,-10238],[531,-24855],[3970,-14698],[410,-24131],[2647,-8174]],[[2761710,3627708],[-308,-8487]],[[2761402,3619221],[308,8487]],[[2868847,3556794],[5036,-1356],[3600,-69498]],[[2877483,3485940],[-7113,-37]],[[2870370,3485903],[11,21561],[1499,4979],[-3777,14486],[-623,13142]],[[2867480,3540071],[1367,16723]],[[2837445,3827398],[119,-520]],[[2837581,3826804],[82,-359]],[[2837890,3824457],[-1,-159]],[[2837888,3823988],[-4,-1007]],[[2837884,3822957],[17,-225]],[[2837944,3822159],[-1128,-19071]],[[2836816,3803088],[-1215,270]],[[2835601,3803358],[-2141,7119]],[[2833460,3810477],[-2317,4597]],[[2831143,3815074],[-2464,10979]],[[2828679,3826053],[-448,7840]],[[2828231,3833893],[2895,27368]],[[2831126,3861261],[1093,6535],[5272,-16127]],[[2837491,3851669],[-167,-1529]],[[2837268,3849601],[-336,-11042]],[[2836994,3836559],[3,-119]],[[2837014,3835910],[405,-8400]],[[2837592,3852425],[84,511]],[[2837676,3852936],[-84,-511]],[[2259449,2376624],[2595,766],[3019,-29121],[2638,-7350],[4946,12803],[5757,-15392]],[[2278404,2338330],[-3426,-39223],[-4373,-26608]],[[2270605,2272499],[-1693,-8116]],[[2256019,2326491],[1321,13078]],[[2233974,2353101],[10380,261]],[[2244354,2353362],[105,-67556]],[[2235202,2285682],[-10610,-747],[-20,28517]],[[2224572,2313452],[-64,39902]],[[2224508,2353354],[9466,-253]],[[2132822,2894041],[-5,-80422]],[[2288018,2269424],[6405,20424]],[[2294423,2289848],[4105,-2878],[703,-18884]],[[2299231,2268086],[1453,-15492]],[[2292204,2191049],[-7479,-862]],[[2284725,2190187],[-4882,29304]],[[2279843,2219491],[57,351]],[[2279900,2219842],[8118,49582]],[[2216174,2190015],[5330,62]],[[2221447,2089717],[-19434,-940]],[[2201994,2189281],[2727,44]],[[2204721,2189325],[11453,690]],[[2311869,2413843],[8507,7698]],[[2322013,2305762],[-8048,-3815]],[[2313965,2301947],[-1713,19673]],[[2331907,2700640],[-15704,377]],[[2316203,2701017],[0,0]],[[2316203,2701017],[-1757,49]],[[2314446,2701066],[-25,90027]],[[2219848,2813281],[-33,82731]],[[2219815,2896012],[14446,-278]],[[2234261,2895734],[85,-82473]],[[2299931,2488321],[-6471,-21531]],[[2286744,2444394],[-5793,54951]],[[2280951,2499345],[13289,45385]],[[2294240,2544730],[5691,-56409]],[[2290243,2998995],[272,981]],[[2290515,2999976],[1444,-16179],[5358,-3380],[480,11665],[2367,-3238]],[[2300164,2988844],[-1125,-7953],[5535,-13821],[1415,-9899]],[[2305989,2957171],[-144,-61382]],[[2305845,2895789],[-12521,1436]],[[2293324,2897225],[-3060,2041]],[[2290264,2899266],[-21,99729]],[[2286280,2736989],[1350,-143]],[[2301794,2736212],[2660,-25052],[-491,-9884]],[[2303963,2701276],[1924,-5575]],[[2305887,2695701],[-14296,-47706]],[[2291591,2647995],[-1238,-4097],[-4055,39936]],[[2193530,3148419],[-53,-81234]],[[2193477,3067185],[-2774,108]],[[2190703,3067293],[-11946,-252]],[[2178757,3067041],[33,81520]],[[2178790,3148561],[11262,-104]],[[2176109,2977359],[14557,380]],[[2190700,2895796],[-14525,-122]],[[2345588,2519397],[1358,-9347],[1851,-35641]],[[2348797,2474409],[-2680,-19565],[-7273,-40709]],[[2338844,2414135],[-1454,15379],[-2093,-8832]],[[2332308,2457848],[13280,61549]],[[2090822,2466665],[2168,167486]],[[2094225,2634173],[2636,-24287],[1280,3560],[1181,-22312],[4779,-12196],[413,-9963]],[[2104514,2568975],[2775,-4779],[1588,-37522],[5380,255],[2228,-10656],[4741,200]],[[2105233,2403262],[-14411,63403]],[[2352720,2782596],[-104,16114]],[[2354061,2798772],[17021,296]],[[2371082,2799068],[-2,-35200]],[[2371080,2763868],[-5563,10800],[-4122,-10548],[-3247,-120],[-5428,18596]],[[2155847,2382038],[3231,-6271],[173,-11008],[-2628,-25982],[2286,-11997],[-2783,-13068]],[[2156056,2219079],[-1787,4829],[-6240,-4227],[-7572,17456]],[[2147279,2894246],[14462,969]],[[2161741,2895215],[-16,-81186]],[[2157996,2814182],[-10724,-400]],[[2147272,2813782],[7,80464]],[[2221996,1923747],[-44,81638]],[[2221952,2005385],[16574,1254]],[[2238526,2006639],[0,-33]],[[2238526,2006606],[-69,-110401]],[[2359527,2453211],[9144,12345]],[[2371195,2472106],[3563,4454]],[[2369006,2305031],[953,18815],[-923,17180],[1249,17232]],[[2201099,2813834],[4329,27]],[[2205428,2813861],[10499,-591]],[[2201034,2732003],[65,81831]],[[2144691,3148399],[4746,144]],[[2149450,3067094],[-2574,18]],[[2298634,2018734],[-68,-309]],[[2298566,2018425],[-269,-1176]],[[2298297,2017249],[-7656,-21975],[1097,-14897]],[[2284221,1989042],[50,41682],[-1260,14718],[-2835,1731]],[[2280176,2047173],[9182,44923]],[[2289358,2092096],[1053,-7637]],[[2279641,1803261],[-2225,-43227],[-2878,-10289],[-170,16195],[-3407,-14937]],[[2261232,1737446],[-2012,9673]],[[2259220,1747119],[-48,70170],[3278,12]],[[2282517,1806142],[-3497,-55844]],[[2278311,1750317],[309,15334],[3173,41437]],[[2174728,3148555],[4062,6]],[[2178757,3067041],[-2657,-59]],[[2164118,3148408],[10610,147]],[[2249039,3024007],[1658,13901],[5439,-8021],[828,5168]],[[2256964,3035055],[1522,-26013],[3835,-2247],[-866,-18916]],[[2261455,2987879],[-29,-79119]],[[2249097,2908698],[-60,69114]],[[2330295,2039820],[-8511,-29914],[-11363,-32376],[-4409,-20227]],[[2306012,1957303],[-21,409]],[[2305991,1957712],[95,2919]],[[2306086,1960631],[51,484]],[[2306137,1961115],[4432,19730],[6377,18089],[-1319,8668],[-5444,-13432],[737,22481],[-3356,-11064]],[[2307564,2005587],[-17,6313]],[[2307946,2065750],[9584,34361],[2540,15505]],[[2254362,1747401],[4858,-282]],[[2261243,1657263],[-9339,404]],[[2249064,1657753],[132,50865],[-1356,-108],[-1593,39382]],[[2198548,2576681],[18,72885]],[[2198566,2649566],[2318,50]],[[2212871,2554929],[-10853,656]],[[2159900,3229951],[4,81811]],[[2159904,3311762],[-1,723]],[[2159903,3312485],[14955,227]],[[2174852,3229769],[-14952,182]],[[2457092,3030986],[22,-243]],[[2457114,3030743],[-4534,52]],[[2452580,3030795],[1596,18278],[121,22432]],[[2454297,3071505],[1493,-47],[62,24901],[-1513,279],[79,32725]],[[2454418,3129363],[13059,-809]],[[2467477,3128554],[386,-21810]],[[2475737,3326683],[-4,-48916]],[[2475733,3277767],[-6005,590]],[[2469728,3278357],[-14956,560]],[[2454772,3278917],[63,49359]],[[2454835,3328276],[20902,-1593]],[[2356898,3401989],[4487,-532],[1604,21587],[10037,-2035],[2383,5838]],[[2375409,3426847],[-1572,-26943],[-521,-61800]],[[2373316,3338104],[-14773,-330]],[[2358543,3337774],[-1645,64215]],[[2358745,2940717],[239,56728]],[[2358984,2997445],[8004,-28399],[6441,-7153]],[[2373429,2961893],[42,-10]],[[2373471,2961883],[-231,-15199],[3893,-11209]],[[2377133,2935475],[-4291,-13788],[-1770,3006]],[[2452340,3476012],[9531,154]],[[2461871,3476166],[909,-40911],[-1527,-2452]],[[2461253,3432803],[-89,-21956]],[[2461164,3410847],[-6559,338],[-512,-6054],[-5442,25990]],[[2448651,3431121],[-1388,30414],[-2741,14359]],[[2444522,3475894],[7818,118]],[[2423817,3476181],[-187,-44429]],[[2423630,3431752],[-1071,-24044]],[[2422559,3407708],[-62,-13759],[-2989,337],[-63,-16296],[-2984,344]],[[2416461,3378334],[78,16264]],[[2416539,3394598],[-402,21631]],[[2416137,3416229],[0,0]],[[2416137,3416229],[-4157,24523],[1156,7750],[126,27676]],[[2411760,2971477],[6932,-1335]],[[2418692,2970142],[95,-16333]],[[2418787,2953809],[550,-38937],[-1766,-22673],[670,-14920]],[[2418241,2877279],[-2646,-4507],[-3392,17284]],[[2412203,2890056],[-3844,11981],[-1903,14759],[1387,26542],[2111,2243],[1806,25896]],[[2412550,3216880],[-1084,-19002],[1372,-10940]],[[2412838,3186938],[-5831,-7874],[386,-10816]],[[2407393,3168248],[-9308,866],[-36,-16133]],[[2398049,3152981],[-5924,243]],[[2392125,3153224],[-14,16434],[6903,40416]],[[2399014,3210074],[9032,-969],[4504,7775]],[[2400743,2891943],[-285,-67355]],[[2393495,2824693],[-7018,83]],[[2386477,2824776],[244,45213],[1107,-342],[2130,34869]],[[2389958,2904516],[6943,1583]],[[2396901,2906099],[-74,-13593],[3916,-563]],[[2421155,3100873],[1053,-138]],[[2422208,3100735],[-706,-80572]],[[2421502,3020163],[-2881,-500]],[[2418621,3019663],[-4371,15835],[-5146,1009]],[[2409104,3036507],[269,49529]],[[2409373,3086036],[2209,7750],[5147,-697],[32,8213],[4394,-429]],[[2360146,3267949],[110,2164]],[[2360256,3270113],[785,9791],[2293,-17317],[2714,-707],[4148,17166]],[[2370196,3279046],[-221,-42955],[1512,-391]],[[2371487,3235700],[-75,-13658],[-3046,-7709]],[[2368366,3214333],[-2293,-3848],[-213,-20700],[-6053,-6473]],[[2359807,3183312],[353,66553]],[[2360160,3249865],[0,0]],[[2360160,3249865],[-14,18084]],[[2424623,3197962],[46,10161]],[[2424669,3208123],[2971,1838],[5866,-8590]],[[2433506,3201371],[-33,-20383],[3065,-359],[-199,-46340],[1736,-8598],[-1101,-26986]],[[2436974,3098705],[-756,140]],[[2436218,3098845],[-9050,1250]],[[2427168,3100095],[13,24718],[-2334,291],[980,20503],[204,52278],[-1408,77]],[[2386783,3406263],[5000,-712]],[[2391783,3405551],[9902,-1150]],[[2401685,3404401],[-185,-73086]],[[2401500,3331315],[-5939,782]],[[2395561,3332097],[-9894,1045],[11,5447]],[[2385678,3338589],[-124,22101],[2032,16078],[-803,29495]],[[2374083,3074031],[12725,-1731]],[[2386808,3072300],[1239,-54490],[1693,-17344]],[[2389740,3000466],[-2321,-44]],[[2387419,3000422],[-2007,-2559],[-8201,12303]],[[2377211,3010166],[66,32738],[-2928,504],[-266,30623]],[[2454835,3328276],[124,33065]],[[2454959,3361341],[4450,-787],[578,16326]],[[2459987,3376880],[12946,-634],[264,5799]],[[2473197,3382045],[2479,136]],[[2475676,3382181],[61,-55498]],[[2428673,2969529],[618,50978]],[[2429291,3020507],[5,5473],[5813,119],[493,14988],[6146,-18659],[1702,1075]],[[2443450,3023503],[666,-12294]],[[2444116,3011209],[-3537,-7052],[-251,-36201]],[[2440328,2967956],[-11655,1573]],[[2454676,3223414],[15036,-744]],[[2469712,3222670],[2857,745],[-225,-45684]],[[2472344,3177731],[-19243,1436],[-21,-8362]],[[2453080,3170805],[-1390,25333]],[[2451690,3196138],[2909,-267],[77,27543]],[[2424899,3263569],[-3937,186]],[[2420962,3263755],[341,65227]],[[2421303,3328982],[11237,-1359]],[[2432540,3327623],[1320,1273],[-115,-33246]],[[2433745,3295650],[-1616,-32910],[-7230,829]],[[2443232,2926837],[5786,-8714],[414,8282]],[[2449432,2926405],[424,-5985]],[[2449856,2920420],[-543,-16930],[3190,-9440],[-600,-7403],[1522,-38148],[-3164,-6924],[2250,-10043],[-1279,-8086]],[[2451238,2822094],[-2757,182]],[[2448481,2822276],[-4757,190]],[[2443724,2822466],[-686,-34]],[[2443038,2822432],[84,71699]],[[2443122,2894131],[110,32706]],[[2428673,2969529],[4,-16354]],[[2428677,2953175],[-9890,634]],[[2418692,2970142],[-3939,33247],[110,15791],[3758,483]],[[2421502,3020163],[7789,344]],[[2375994,3476203],[7870,31]],[[2383864,3476234],[7494,-142]],[[2391358,3476092],[535,21]],[[2391893,3476113],[-110,-70562]],[[2386783,3406263],[-1995,225],[-2969,33094],[-4399,651]],[[2377420,3440233],[-1285,6122],[-141,29848]],[[2461871,3476166],[5802,3]],[[2467673,3476169],[6978,-82]],[[2474651,3476087],[0,0]],[[2474651,3476087],[2925,-48]],[[2477576,3476039],[1907,17],[2471,-21285],[-23,-15371],[-3504,-18857]],[[2478427,3420543],[-3643,-147],[31,10962],[-13562,1445]],[[2261919,5486805],[7110,-100]],[[2269029,5486705],[683,-48946],[-14,-65240]],[[2259895,5372668],[-11289,74]],[[2248606,5372742],[-11,65238],[-782,-12],[1,48825]],[[2092409,5503579],[10550,-145]],[[2092415,5355860],[-3,18814]],[[2092412,5374674],[-3,128905]],[[2261262,5567626],[2853,-23]],[[2276120,5486534],[-7091,171]],[[2284203,5730478],[1249,-49169],[-687,-16109]],[[2263529,5665443],[-10831,53]],[[2212972,5243546],[-4514,101]],[[2208504,5307547],[23433,62]],[[2231937,5307609],[954,-47]],[[2232891,5307562],[-74,-64231]],[[2232817,5243331],[-19845,215]],[[2163416,5816030],[2,-52286],[1268,-12],[-3,-32556],[10911,-139]],[[2175594,5731037],[-4,-16263]],[[2175590,5714774],[-21792,204],[-5,48779],[-4995,25],[-6,16252]],[[2148806,5815954],[14610,76]],[[2123148,5244316],[-1493,31]],[[2149435,5264618],[-2,-20367]],[[2149433,5244251],[-57,-17]],[[2149376,5244234],[-26228,82]],[[2179039,5438574],[3253,-35731],[-252,-9206],[4636,-20272]],[[2188673,5334703],[-3651,-7077],[-5508,916],[-2973,-20733]],[[2146714,5388949],[-13,49312]],[[2146701,5438261],[9258,27]],[[2092370,5701854],[-32,45781]],[[2092338,5747635],[32378,-134]],[[2124717,5731234],[0,-32530],[1607,61],[-11,-46655]],[[2126313,5652110],[-10404,2161],[-2409,-17798],[-5929,-6401],[-2931,23281],[-3785,-6907],[-1632,-18556],[-3315,-7173],[-3464,7518]],[[2092444,5628235],[-74,73619]],[[2210350,5600372],[-1005,32601],[45,65487],[9855,-65]],[[2219245,5698395],[8152,-54]],[[2246196,5613064],[1,-12874]],[[2293341,5486343],[-187,-16390]],[[2293154,5469953],[67,-26517],[1699,-21186],[-596,-49657]],[[2294324,5372593],[-13424,-183]],[[2146701,5438261],[-1340,5456]],[[2143674,5549321],[4700,-337],[6207,-14263],[2962,7819],[7551,4844],[-101,-16258],[2630,-34703],[2472,-5054]],[[2240657,5243143],[-7840,188]],[[2232891,5307562],[26984,-18]],[[2260651,5307512],[-38,-64899]],[[2260613,5242613],[-19956,530]],[[2092338,5747635],[-23,68481]],[[2092315,5816116],[30925,-103]],[[2203189,5600381],[-3589,56]],[[2199600,5600437],[13,32617],[-1102,1],[-7,65396],[-1095,32488]],[[2197409,5730939],[3644,75]],[[2219237,5730943],[8,-32548]],[[2220448,5372837],[11509,-197]],[[2231957,5372640],[-20,-65031]],[[2207471,5373080],[12977,-243]],[[2246929,5502907],[-21370,123]],[[2092409,5503579],[8,12603]],[[2092417,5516182],[27,112053]],[[2126313,5652110],[4597,-8800],[3115,-15935],[-2594,-15873],[70,-15536]],[[2248606,5372742],[-16649,-102]],[[2220448,5372837],[92,65372],[-966,-35],[10,64834]],[[2178055,5600644],[10759,-229]],[[2188814,5600415],[1,-32488],[-2428,41],[-33,-64839]],[[2186354,5503129],[-2114,-7],[-1,-31903],[-6012,-115]],[[2138647,5583668],[132,16781],[14186,-13]],[[2152965,5600436],[25090,208]],[[2188814,5600415],[10786,22]],[[2204189,5503030],[-2228,13]],[[2201961,5503043],[-15607,86]],[[2190853,5244075],[-41420,176]],[[2282339,5242516],[-873,11527],[-583,53412]],[[2294324,5372593],[383,34]],[[2294707,5372627],[3259,-47635],[1895,-8677],[636,-57614]],[[2300497,5258701],[359,-16210]],[[2300856,5242491],[-18517,25]],[[2201961,5503043],[-38,-64687],[1098,-73],[-166,-65115]],[[2163416,5816030],[36610,-41]],[[2197409,5730939],[-3615,-29],[-10,16326],[-18189,102],[-1,-16301]],[[2218331,5816009],[14652,127]],[[2282339,5242516],[-20909,91]],[[2261430,5242607],[-817,6]],[[2175590,5714774],[1272,-16288],[-25,-65267],[1241,-17],[-23,-32558]],[[2152965,5600436],[9,32865],[-1409,0],[-4,65353],[-1425,-44],[2,32763],[-7259,-148]],[[2161456,3888166],[-11,-81707]],[[2161445,3806459],[-13289,-138]],[[2148156,3806321],[0,1187]],[[2148156,3807508],[-17,64841]],[[2148139,3872349],[-4,15423]],[[2148135,3887772],[13321,394]],[[2342850,3895450],[-263,-65257]],[[2342587,3830193],[-12328,61]],[[2330259,3830254],[2,8171]],[[2330261,3838425],[209,57066]],[[2330470,3895491],[12380,-41]],[[2215556,4131903],[12431,50]],[[2227987,4131953],[3123,43]],[[2231110,4131996],[23,-81283]],[[2231133,4050713],[-14935,-142]],[[2216198,4050571],[-716,20]],[[2215482,4050591],[74,81312]],[[2322441,4066606],[6263,-25]],[[2328704,4066581],[-173,-43766]],[[2328531,4022815],[-533,-37989]],[[2327998,3984826],[-12429,81]],[[2315569,3984907],[-10,65434]],[[2315559,4050341],[6877,-35],[5,16300]],[[2216701,3806277],[-16,16323]],[[2216685,3822600],[15390,-196]],[[2232075,3822404],[3,-16304],[3335,-26]],[[2235413,3806074],[-15,-48786],[-3037,-39]],[[2232361,3757249],[-9143,95],[-2,16256],[-6106,-42]],[[2217110,3773558],[-409,32719]],[[2278395,4001658],[36,48854]],[[2278431,4050512],[11415,-115]],[[2289846,4050397],[-71,-64824]],[[2289775,3985573],[-50,-16430]],[[2289725,3969143],[-11366,-63]],[[2278359,3969080],[36,32578]],[[2355173,3764141],[-103,-68123]],[[2355070,3696018],[-13101,264]],[[2341969,3696282],[-2,10849]],[[2341967,3707131],[285,57130]],[[2342252,3764261],[12921,-120]],[[2262738,4131943],[3074,-5]],[[2265812,4131938],[12601,-14]],[[2278413,4131924],[15,-65123]],[[2278428,4066801],[-15680,-51]],[[2262748,4066750],[-10,65193]],[[2334951,4131556],[881,0]],[[2335832,4131556],[2920,-17659],[4687,-7437],[1167,5987]],[[2344606,4112447],[3255,-14471]],[[2347861,4097976],[-4933,-38432]],[[2342928,4059544],[-1716,6978],[-6256,81]],[[2334956,4066603],[-5,64953]],[[2175364,3642611],[11567,-29]],[[2186931,3642582],[527,-9],[14,-72525]],[[2187472,3570048],[-8697,-316]],[[2178775,3569732],[-3379,-93]],[[2175396,3569639],[-32,72972]],[[2202129,3658906],[-3037,67]],[[2199092,3658973],[-302,82138]],[[2198790,3741111],[18310,-188]],[[2217100,3740923],[287,-33341]],[[2217387,3707582],[97,-50007]],[[2217484,3657575],[-15355,1331]],[[2317552,3626037],[78,16361]],[[2317630,3642398],[12149,-498]],[[2329779,3641900],[123,2]],[[2329902,3641902],[-36,-72008]],[[2329866,3569894],[-7365,6]],[[2322501,3569900],[-4945,-39]],[[2317556,3569861],[-4,56176]],[[2294111,4131835],[9530,-88]],[[2303641,4131747],[6255,-26]],[[2309896,4131721],[7,-81358]],[[2309903,4050363],[-9551,20]],[[2300352,4050383],[-6263,18]],[[2294089,4050401],[22,81434]],[[2329962,3764360],[-182,-57177]],[[2329780,3707183],[-12130,289]],[[2317650,3707472],[51,57256]],[[2317701,3764728],[12261,-368]],[[2247187,3969218],[-4,16299]],[[2247183,3985517],[15613,-94]],[[2262796,3985423],[33,-48831]],[[2262829,3936592],[-1,-16338]],[[2262828,3920254],[-15498,-59]],[[2247330,3920195],[-143,49023]],[[2174379,3806723],[11574,-76]],[[2185953,3806647],[12355,-349]],[[2198308,3806298],[481,-9]],[[2198789,3806289],[14,-48894]],[[2198803,3757395],[-12191,283],[332,-49836]],[[2186944,3707842],[-12186,11]],[[2174758,3707853],[-393,17351],[14,81519]],[[2148235,3642876],[1,47747]],[[2148236,3690623],[-16,17643]],[[2148220,3708266],[14351,-418]],[[2162571,3707848],[35,-65122]],[[2162606,3642726],[-858,18]],[[2161748,3642744],[-13513,132]],[[2185051,4050703],[15041,-215]],[[2200092,4050488],[521,72]],[[2200613,4050560],[-71,-81459]],[[2200542,3969101],[-15521,245]],[[2185021,3969346],[30,81357]],[[2293722,3854996],[12982,-150]],[[2306704,3854846],[-98,-65325]],[[2306606,3789521],[-23,-16254],[-4588,103]],[[2301995,3773370],[-8859,-139]],[[2293136,3773231],[586,81765]],[[2216677,3887579],[-369,-4]],[[2216308,3887575],[182,81579]],[[2216490,3969154],[15159,123]],[[2231649,3969277],[284,19]],[[2231933,3969296],[-143,-81667]],[[2231790,3887629],[-15113,-50]],[[2346963,3942771],[239,39589],[3473,-431]],[[2350675,3981929],[4842,-7675]],[[2355517,3974254],[-156,-8640]],[[2355360,3952631],[-7385,2809],[-1012,-12669]],[[2284584,3569848],[-156,89190]],[[2284428,3659038],[17486,162]],[[2301914,3659200],[23,-32508]],[[2301937,3626692],[-20,-56906]],[[2301917,3569786],[-6248,53]],[[2295669,3569839],[-11085,9]],[[2355072,3633372],[-4,-52712]],[[2355068,3580660],[-3,-10837]],[[2355065,3569823],[-10856,115]],[[2344209,3569938],[-1836,7]],[[2342373,3569945],[-46,63712]],[[2342327,3633657],[12745,-285]],[[2263008,3789718],[6138,20]],[[2269146,3789738],[-4,-49131]],[[2269142,3740607],[91,-32994],[-3040,-224]],[[2266193,3707389],[-18304,-221]],[[2247889,3707168],[-208,17187]],[[2247681,3724355],[-15,65185]],[[2247666,3789540],[15342,178]],[[2315013,3970848],[0,0]],[[2315013,3970848],[459,-2785]],[[2315472,3968063],[2572,-5211],[5,-42810]],[[2318049,3920042],[18,-24495]],[[2318067,3895547],[-11331,-16]],[[2306736,3895531],[-1052,16254],[-3097,8207]],[[2302587,3919992],[10,32562]],[[2302597,3952554],[3075,-77],[54,24233]],[[2305726,3976710],[4324,7404],[4182,-3515],[781,-9751]],[[2232657,3641952],[312,-72023]],[[2232969,3569929],[-12702,1]],[[2220267,3569930],[-2365,26]],[[2217902,3569956],[-58,71410]],[[2217844,3641366],[14813,586]],[[2173679,3888341],[-9918,-82]],[[2163761,3888259],[172,81345]],[[2163933,3969604],[2409,67]],[[2166342,3969671],[16156,-329]],[[2182498,3969342],[-191,-81140]],[[2182307,3888202],[-8628,139]],[[2868219,3916456],[2858,17491],[4113,-4853]],[[2875304,3883382],[-2178,-18760],[-3607,10844]],[[2869519,3875466],[-5063,26408],[3763,14582]],[[2788303,4034073],[-5677,-28300]],[[2782626,4005773],[-5995,-22854]],[[2776631,3982919],[285,96430]],[[2871669,4046023],[-4390,33379]],[[2879668,4079559],[613,-64509]],[[2873710,4014841],[-922,1823],[1817,32093],[-2936,-2734]],[[2877550,3801812],[2646,8659],[4371,-1114]],[[2882974,3747957],[-3172,4118],[-3190,-8888],[496,28057],[1472,10937],[-3676,693],[2646,18938]],[[2872482,3748525],[1466,-29]],[[2872431,3779768],[472,5066]],[[2872903,3784834],[-472,-5066]],[[2827051,4005125],[-1180,-602]],[[2825871,4004523],[-2955,32189]],[[2822916,4036712],[-1655,10798],[1480,9321],[-5300,3534]],[[2817441,4060365],[-4164,14222],[-2642,-14349],[-1879,3328]],[[2849024,3968893],[1341,-5207]],[[2850365,3963686],[2583,-13052],[2161,-23677],[-453,-29657]],[[2854656,3897300],[304,-39792]],[[2843511,3889393],[1254,14822]],[[2844831,3905380],[3611,18944],[-2591,13659]],[[2845851,3937983],[3173,30910]],[[2849198,4009926],[-299,19676],[2950,49694]],[[2857912,4079371],[1040,-33171],[3807,-14165],[1825,-20995]],[[2864584,4011040],[-3133,-30085],[-2399,4135]],[[2859052,3985090],[-25,171]],[[2856543,3988816],[-2186,-4364]],[[2854357,3984452],[-5159,25474]],[[2301101,4508879],[6832,-128],[1018,5984]],[[2308951,4514735],[3917,-13577],[-180,-20280]],[[2312688,4480878],[2055,-14102],[-1598,-20195]],[[2313145,4446581],[-8977,111]],[[2304168,4446692],[16,10883],[-3091,45]],[[2301093,4457620],[8,51259]],[[2205625,4262580],[-6730,47]],[[2198895,4262627],[-26,64827]],[[2198869,4327454],[22240,-24]],[[2221109,4327430],[242,-70312]],[[2221351,4257118],[-6301,2637]],[[2215050,4259755],[-9425,2825]],[[2291249,4327358],[73,76237]],[[2291322,4403595],[9386,-3768],[2738,-7491]],[[2303446,4392336],[3993,-38042]],[[2307439,4354294],[228,-27139]],[[2307667,4327155],[-4030,-5415]],[[2303637,4321740],[0,5431],[-12388,187]],[[2185288,4457198],[-3643,119]],[[2181645,4457317],[-102,65093]],[[2181543,4522410],[16118,-377]],[[2197661,4522033],[59,-64819]],[[2197720,4457214],[-12432,-16]],[[2252464,4522539],[10,65149]],[[2252474,4587688],[12977,144]],[[2265451,4587832],[-2,-65125]],[[2265449,4522707],[34,-32468]],[[2265483,4490239],[-12880,-250]],[[2252603,4489989],[-139,32550]],[[2239632,4522476],[56,-65162]],[[2239688,4457314],[-12617,43]],[[2227071,4457357],[-274,34]],[[2226797,4457391],[-25,64973]],[[2226772,4522364],[12860,112]],[[2092195,4693193],[15266,35]],[[2107461,4693228],[689,-40393],[9,-65081],[990,16]],[[2109149,4587770],[12,-64884],[1183,-16315]],[[2110344,4506571],[-18138,-341]],[[2132388,4360213],[15460,-13]],[[2147848,4360200],[105,-40740]],[[2147953,4319460],[1,-286]],[[2147954,4319174],[-15862,44]],[[2132092,4319218],[296,40995]],[[1599582,5046057],[-18420,-9],[-3896,9495],[-1683,15554],[-5310,21730],[1315,23186],[-3085,24]],[[1567993,5126841],[3462,2739],[-10,18956]],[[1696801,5059622],[-1432,-17892],[306,-20869],[-6502,-8330],[5904,-21972],[-1831,-11362],[-1037,-28132],[-2443,-23060],[7386,187]],[[1657494,4937716],[97,96621],[-554,32054]],[[2303641,4131747],[1,48881]],[[2303642,4180628],[11059,-25]],[[2314701,4180603],[1576,-105]],[[2316277,4180498],[-14,-48820]],[[2316263,4131678],[-6367,43]],[[2246949,4692814],[5259,-21704]],[[2252208,4671110],[129,-22722]],[[2252337,4648388],[-7763,3468],[-8611,12363],[-1721,9039],[-8426,-16805]],[[2225816,4656453],[72,36270]],[[2225888,4692723],[21061,91]],[[2265831,4197169],[12597,-29]],[[2278428,4197140],[-15,-65216]],[[2265812,4131938],[19,65231]],[[2168187,4132062],[60,65109]],[[2168247,4197171],[15211,-203]],[[2183458,4196968],[528,7]],[[2183986,4196975],[-11,-64988]],[[2183975,4131987],[-15788,75]],[[1592102,4808240],[18659,262]],[[1623395,4504744],[-15826,697]],[[2111215,4449607],[38,-48956]],[[2111253,4400651],[-240,-8053]],[[2111013,4392598],[-18797,-266]],[[2092205,4449372],[19010,235]],[[2199606,4197072],[2870,229]],[[2202476,4197301],[12609,-9]],[[2215085,4197292],[328,-15]],[[2215413,4197277],[61,-65375]],[[2215474,4131902],[-15311,-46]],[[2200163,4131856],[-440,12]],[[2199723,4131868],[-117,65204]],[[2253090,4262259],[12604,50]],[[2265694,4262309],[26,-3]],[[2265720,4262306],[19,-65137]],[[2265739,4197169],[-12522,-35]],[[2253217,4197134],[-126,-1]],[[2253091,4197133],[-1,65126]],[[2252854,4392460],[311,-24251],[6193,5388],[9686,2997],[48,16048]],[[2269092,4392642],[2927,38],[13,-11596]],[[2272032,4381084],[-6408,-29830]],[[2265624,4351254],[-5326,-20096],[-7332,-36329]],[[2252966,4294829],[-128,32581]],[[2252838,4327410],[16,65050]],[[2214097,4642715],[426,-120708]],[[2214523,4522007],[-685,12]],[[2213838,4522019],[-13391,-42]],[[2200447,4521977],[-860,142301]],[[2199587,4664278],[1797,-7166],[12713,-14397]],[[2288145,4457799],[3176,-41]],[[2291321,4457758],[0,-53592]],[[2291321,4404166],[-7514,-14854],[-2171,1335]],[[2281636,4390647],[31,67173]],[[2281667,4457820],[6478,-21]],[[2296315,4557943],[123,46166],[2528,-62]],[[2298966,4604047],[5183,-6306]],[[2304149,4597741],[1805,-8279],[-761,-20399],[1438,-11402]],[[2306631,4557661],[-10316,282]],[[1737502,5082227],[-1787,-10724],[447,-16607],[-1887,-17295]],[[1734275,5037601],[-4026,-17870],[-2785,-37339],[-2226,-11589],[112,-34133]],[[2165389,4457814],[542,27]],[[2165931,4457841],[-22,-65097]],[[2165909,4392744],[-16086,-131]],[[2149823,4392613],[-25,65057]],[[2149798,4457670],[15591,144]],[[2127848,4588251],[0,64640],[-522,40189]],[[2127326,4693080],[19769,-117]],[[2147095,4692963],[442,-104049],[795,-30],[-59,-64868],[949,-77]],[[2149222,4523939],[-1684,-16310]],[[2147538,4507629],[-17021,-732]],[[2130517,4506897],[-564,-83]],[[2129953,4506814],[-1238,16387],[-200,65052],[-667,-2]],[[2278436,4262321],[7,65198]],[[2278443,4327519],[12738,-155]],[[2291181,4327364],[-71,-65169]],[[2291110,4262195],[-12674,126]],[[1549887,4506068],[-8458,-1007]],[[2288160,4522862],[-9725,64]],[[2278435,4522926],[19,48841]],[[2278454,4571767],[9750,-95]],[[2288204,4571672],[2,-16265],[5439,-30]],[[2293645,4555377],[-33,-32546]],[[2293612,4522831],[-5452,31]],[[2487688,4362622],[-127,65422]],[[2493993,4428219],[12953,65]],[[2507026,4376792],[-4770,-1743],[-606,-12661],[-3061,120],[3,-15969]],[[2498592,4346539],[-4792,6]],[[2493800,4346545],[-13,15961],[-6099,116]],[[2523431,4184246],[-4744,-42359]],[[2507553,4140700],[-111,43647]],[[2507442,4184347],[15989,-101]],[[2486538,3798524],[5455,-253]],[[2491993,3798271],[3078,-24]],[[2495071,3798247],[-64,-49407]],[[2495007,3748840],[-2207,-28483]],[[2492800,3720357],[-4750,19173],[-2614,-5853]],[[2485436,3733677],[-1379,16368],[-6090,23625]],[[2479601,3993411],[-159,48360]],[[2479442,4041771],[6345,335]],[[2485787,4042106],[6251,236]],[[2492124,3944189],[-12466,200]],[[2473830,4154812],[-4418,-25522]],[[2458272,4151106],[46,16592]],[[2458318,4167698],[61,17089]],[[2471182,4183280],[-35,-16368],[7019,-926]],[[2478166,4165986],[-4336,-11174]],[[2510339,3631767],[3222,-5090]],[[2513593,3612401],[-151,-259]],[[2513442,3612142],[-2687,-2608],[-3963,-26719]],[[2506792,3582815],[-2829,10979],[174,18393],[1802,12005],[-1274,8560]],[[2474906,4455170],[2067,10114]],[[2478555,4428165],[-305,-8334],[-6564,-15703],[-45,-24193]],[[2453857,4381129],[1,45]],[[2453858,4381174],[662,14253],[7299,8074]],[[2461819,4403501],[3635,1731],[8709,23528],[743,26410]],[[2519761,3739758],[-4,-8133]],[[2519757,3731625],[-12382,-251]],[[2507375,3731374],[-736,16530]],[[2506639,3747904],[1336,32649]],[[2507975,3780553],[11842,85]],[[2539110,4015314],[1447,19156]],[[2540557,4034470],[11940,-787]],[[2552497,4033683],[-1,-24186],[-2019,-16553]],[[2550477,3992944],[-685,-19098]],[[2540830,3977114],[-1599,-180]],[[2507684,3985167],[9327,-307]],[[2520125,3928398],[-45,-16530]],[[2507731,3895028],[-3228,1065]],[[2496719,4042571],[-39,21815],[3936,19101],[4910,13109]],[[2510871,4066828],[7,-57681],[-3186,537]],[[2461725,4250553],[125,81046]],[[2471483,4330710],[-137,-65386]],[[2471346,4265324],[-32,-16251]],[[2526295,4066342],[44,-38286]],[[2526339,4028056],[-3170,100],[-3713,24654],[-2549,178],[-43,13660]],[[2518673,4092651],[7591,-59]],[[2485964,4542652],[6441,525]],[[2492405,4543177],[87,-50309]],[[2479492,4492603],[-63,19495]],[[2479429,4512098],[-467,17244],[-4074,12798]],[[2519878,3805245],[96,40851]],[[2519988,3870690],[12387,-1273]],[[2532375,3869417],[2954,-5694]],[[2535243,3805139],[-6118,-127]],[[2546589,3834768],[-4546,-27094],[-2259,-2373]],[[2539784,3805301],[-74,516]],[[2540732,3863911],[1159,3]],[[2541891,3863914],[7265,-363]],[[2549156,3863551],[-2594,-17014],[27,-11769]],[[1927134,4283136],[-646,735]],[[1926488,4283871],[0,34365]],[[1952972,4318855],[47,-63276]],[[1953019,4255579],[-3139,3971],[-1174,32723],[-5329,-106],[-2493,-22199],[-1261,16495],[-9499,-11936],[-2990,8609]],[[3156946,65207],[339,-411]],[[1891754,4076266],[-4,20339]],[[1891750,4096605],[10856,-159]],[[1902606,4096446],[24804,-1206]],[[1927410,4095240],[2310,-45],[-3038,-19271],[-1232,-25477],[386,-18291]],[[1925836,4032156],[-29347,118],[-1519,27003],[-3216,16989]],[[3130167,38665],[-829,7074]],[[3129618,56801],[3442,-2517],[647,-11990]],[[3125144,40602],[1430,1398]],[[3126574,42000],[1166,-23669]],[[3127740,18331],[-2064,1435]],[[3128642,5265],[-200,-130]],[[3128442,5135],[-702,13196]],[[3126574,42000],[2501,3611]],[[1813667,3864440],[42765,-111]],[[1856432,3864329],[-92,-11693]],[[1856340,3852636],[5102,-33110],[-598,-20255],[-2424,-14001]],[[1858420,3785270],[-971,-488]],[[1857449,3784782],[-43775,236]],[[3157167,92963],[2181,-7204]],[[3141882,78122],[329,-2062]],[[3141864,68711],[-2173,-6785]],[[3137255,44214],[-113,-1865]],[[3137142,42349],[-155,-200]],[[3134293,43421],[2308,26147]],[[3121727,33601],[-1651,8767]],[[3121462,3543],[-2907,3112],[937,38511]],[[3123062,71085],[708,16233]],[[3143611,102536],[316,-16960]],[[3142646,104716],[965,-2180]],[[3137142,42349],[705,-220]],[[3139840,10546],[-2512,-1450]],[[3143611,102536],[3231,-1595]],[[3149738,45333],[1185,-10482]],[[3150945,34254],[-38,-484]],[[3146133,31532],[212,8962]],[[3150546,70461],[684,1688]],[[3151782,70782],[671,-18351]],[[3128442,5135],[-3387,-339]],[[3148951,99855],[2418,-1898]],[[3154880,10291],[-3037,-656]],[[1589299,3853290],[-5146,61130],[-2984,4550]],[[1581169,3918970],[1530,11231]],[[1596759,3930245],[3126,-22596],[3356,-12714]],[[1603241,3894935],[-769,-7162],[3461,-20827],[-430,-42339],[-1994,-8800]],[[1603509,3815807],[-2808,284],[-19,39764],[-6841,1185],[-4542,-3750]],[[2630335,3023363],[2189,-262]],[[2632524,3023101],[6696,-880]],[[2639220,3022221],[994,-20573],[-2454,-25734],[-2976,-15423]],[[2634784,2960491],[-1163,11514],[-2905,216]],[[2630716,2972221],[-381,51142]],[[2694763,2943107],[3313,9362],[2445,-2685]],[[2700521,2949784],[2879,-16787]],[[2703400,2932997],[2426,-9673]],[[2705826,2923324],[-7409,-35620]],[[2698417,2887704],[-3974,36504],[320,18899]],[[2643682,3043298],[19,27936]],[[2643701,3071234],[8386,-214]],[[2652087,3071020],[826,-10245],[-3773,-20852]],[[2649140,3039923],[-970,-21942]],[[2648170,3017981],[-1,0]],[[2648169,3017981],[-4492,11023],[5,14294]],[[2666797,2856018],[4318,353]],[[2671115,2856371],[4921,-6706],[1262,-13238]],[[2677298,2836427],[-598,-25104]],[[2676700,2811323],[-2035,11643],[-5878,-15465]],[[2618996,3152184],[-670,-8865],[3288,-56],[11,-18248]],[[2621625,3125015],[-521,-6608]],[[2621104,3118407],[-1076,56]],[[2620028,3118463],[-11688,225]],[[2608340,3118688],[-190,6584]],[[2612891,3192565],[2755,317]],[[2615646,3192882],[8,-24481],[3342,-16217]],[[2706579,2747748],[-808,-12755]],[[2705771,2734993],[-3291,-3432],[-2909,-31282],[556,-6451]],[[2700127,2693828],[-3392,-4988],[-1520,11538]],[[2695215,2700378],[757,16240],[-3026,10465],[-4379,2995]],[[2688567,2730078],[5089,25142],[861,21605]],[[2697795,2790586],[4779,-4311]],[[2702574,2786275],[1730,-27968],[2275,-10559]],[[2632660,3111251],[-4,6409]],[[2633656,3168610],[5527,-137],[2942,-8860],[3285,-35451]],[[2645410,3124162],[-4146,-10332]],[[2641264,3113830],[-8604,-2579]],[[2687668,2933592],[844,1680]],[[2688512,2935272],[2795,-46985],[4612,-8543]],[[2694578,2872767],[-3560,9815],[-5463,-13819]],[[2685555,2868763],[-2678,35583]],[[2682877,2904346],[4791,29246]],[[2676579,3050355],[2622,-2332],[5864,14546]],[[2685065,3062569],[903,-14974]],[[2685968,3047595],[4078,-36512]],[[2690046,3011083],[840,-10868]],[[2690886,3000215],[-2256,5327]],[[2688630,3005542],[-3735,-2447]],[[2684895,3003095],[-5482,13495]],[[2679413,3016590],[-3519,23418],[685,10347]],[[2641134,2942597],[1921,-92]],[[2643055,2942505],[785,-12210],[-2823,-42988]],[[2641017,2887307],[-939,-10]],[[2638112,2924446],[27,18332],[2995,-181]],[[2708396,2455957],[-3479,5206],[-1973,-12184]],[[2698685,2488984],[2556,-4159],[2584,13942],[2539,234],[-897,17924]],[[2705467,2516925],[8621,-8174]],[[2730446,2676474],[762,-20312],[6456,-15537]],[[2737664,2640625],[632,-12214],[-3618,-20908],[-2022,3640],[-80,-20281],[-2412,-7961]],[[2723561,2652097],[5470,26505],[1415,-2128]],[[2659219,2763600],[-523,-29941],[-3533,-11815]],[[2655163,2721844],[-4777,7092]],[[2650386,2728936],[269,2876]],[[2650655,2731812],[143,1527]],[[2650798,2733339],[6591,30452],[1830,-191]],[[2674946,2376589],[12,27315],[1340,14742],[1913,148]],[[2679551,2422527],[3482,-6440],[2234,-19201],[4451,-3406],[624,-22959]],[[2690342,2370521],[-2940,1157]],[[2687402,2371678],[-12456,4911]],[[2705907,2686349],[1568,-1891]],[[2707475,2684458],[4257,-5860],[987,-15830]],[[2714452,2650874],[-1201,-7759]],[[2713251,2643115],[-6082,6289],[-1262,36945]],[[2621129,2632625],[4492,-12614]],[[2625621,2620011],[-93,-27632],[-1345,190]],[[2624183,2592569],[-5085,488]],[[2619098,2593057],[11,14412],[2020,25156]],[[2674696,2535372],[-5381,696]],[[2669315,2536068],[-4513,22086]],[[2664802,2558154],[1312,30673]],[[2666114,2588827],[3575,-239],[-9,-14222],[9118,-1393]],[[2678798,2572973],[-4102,-37601]],[[2876674,4653957],[-10548,-3688]],[[2866126,4650269],[-2293,14636],[-2612,-692],[-794,71457]],[[2934812,4651693],[3694,826]],[[2935526,4592800],[-13111,-10486]],[[2922415,4582314],[355,26691],[1708,33537]],[[2856524,4558851],[-2009,272],[-146,49130]],[[2855208,4622604],[11171,25]],[[2866379,4622629],[341,-40434]],[[2866720,4582195],[89,-20756],[-4601,4060],[-25,-10368],[-3403,3515]],[[2877678,4955741],[11532,-34742]],[[2889210,4920999],[-2779,-21465],[1709,-5391],[-1626,-19911],[-5997,-16661],[-2296,972],[1839,-36517]],[[2868192,4820407],[-2307,30639],[4347,10101],[-195,10639],[-3745,4889],[-2738,22379],[1514,18462],[12610,38225]],[[2835568,4699578],[6607,979],[4748,-5010]],[[2846715,4648951],[-9518,-553],[-1491,-34608]],[[2835706,4613790],[-3465,172]],[[2832241,4613962],[112,17406],[-3119,315],[514,50912]],[[2930537,4269630],[3606,-20442],[-2932,-11660]],[[2931211,4237528],[-2892,10985],[543,10560]],[[2931461,4520653],[6093,-13718],[5123,-5149],[841,13420]],[[2943518,4515206],[266,-8]],[[2943784,4515198],[-857,-71671]],[[2942927,4443527],[-334,-26117]],[[2942593,4417410],[-11248,-7284],[-1329,-9241]],[[2930016,4400885],[785,28277]],[[2877567,4583717],[-719,57677]],[[2893396,4645187],[-819,-29092],[-2206,-20508],[-303,-30879]],[[2890068,4564708],[-86,-22295]],[[2931989,4529734],[3376,26288],[161,36778]],[[2947540,4601368],[-4336,-79315],[314,-6847]],[[2935952,4281429],[1526,12989],[6035,9864]],[[2943513,4304282],[1161,-15013],[880,-43560]],[[2945554,4245709],[-9209,-4401]],[[2936345,4241308],[1465,31104],[-1858,9017]],[[2945390,4305293],[-218,1270]],[[2945172,4306563],[23,-17]],[[2945195,4306546],[190,-954]],[[2945385,4305592],[5,-299]],[[2944962,4306707],[-320,224]],[[2944642,4306931],[320,-224]],[[2944442,4307071],[86,-61]],[[2944144,4307699],[298,-628]],[[2944528,4307010],[-384,689]],[[2943985,4308122],[-131,515]],[[2943854,4308637],[131,-515]],[[2929986,4378945],[12199,8364]],[[2942185,4387309],[1728,-28751],[-6828,-20978],[1962,-21624]],[[2939047,4315956],[-3516,-19490]],[[2935531,4296466],[-3743,6838]],[[2931788,4303304],[666,14905]],[[2932454,4318209],[126,27681],[-2594,33055]],[[2935764,4297057],[0,0]],[[2890068,4564708],[3060,1546],[12854,35599],[3693,974]],[[2909675,4602827],[2582,-17484],[4887,-12985]],[[2917144,4572358],[-2614,-28748],[2385,-6027]],[[2907750,4508973],[-10191,-30973]],[[2936345,4241308],[-5134,-3780]],[[2931938,4280582],[3526,876]],[[2935464,4281458],[488,-29]],[[2877678,4955741],[2611,21057],[12780,60092],[9338,27439],[6860,2145]],[[2914590,4898837],[-8888,-5459]],[[2896899,4898408],[-7689,22591]],[[2819311,4667395],[1258,23398]],[[2832241,4613962],[-4709,585],[-1757,-20439]],[[2825775,4594108],[-3280,8714],[-5504,702]],[[2816991,4603524],[2282,27291],[38,36580]],[[2930019,4379506],[-33,-561]],[[2932454,4318209],[-8896,25604]],[[2922968,4345476],[7051,34030]],[[2786387,4612541],[2448,22360],[5444,17745],[-2199,32175],[-2206,5502],[-214,15481]],[[2805117,4709687],[2,-41412]],[[2805119,4668275],[12,-61979]],[[2816991,4603524],[-7539,-57]],[[2805119,4668275],[14192,-880]],[[2866720,4582195],[3432,518]],[[2917144,4572358],[5539,4144],[-268,5812]],[[2943513,4304282],[326,4417]],[[2943839,4308699],[15,-62]],[[2943985,4308122],[49,-191]],[[2944034,4307931],[110,-232]],[[2944528,4307010],[114,-79]],[[2944962,4306707],[210,-144]],[[2945390,4305293],[24,-1253]],[[2945414,4304040],[5559,-3068],[2466,11429],[10216,-161],[5259,6040],[6387,25465],[2663,-17140],[2720,2082],[1501,-11062],[6550,10892],[-14542,-34743],[-18363,-37489],[-10276,-10576]],[[2984248,4366547],[0,0]],[[2981240,4337040],[0,0]],[[2842931,4596458],[6057,-3877],[-162,14690]],[[2846892,4558036],[-3751,-1150],[-210,39572]],[[2908234,4667484],[3204,-6303]],[[2911438,4661181],[492,-37975],[-2255,-20379]],[[2894731,4669051],[998,1567]],[[2825775,4594108],[-751,-88428]],[[2947927,4982616],[1254,-20204],[-548,-32714]],[[2946794,4844412],[-1639,-897]],[[2927912,4832438],[277,9702],[-4643,2719],[-3430,21404],[2252,8343],[-721,28218]],[[2919274,4429349],[-3025,-16289],[-7711,-1912],[-64,-12871]],[[2835441,4745054],[11809,-1303],[6399,13663]],[[2853649,4757414],[242,-59832]],[[2818132,4717975],[-13045,-817]],[[2805087,4762570],[13093,-1113]],[[2926910,4684823],[-125,5067]],[[2925596,4740623],[-556,22003]],[[2940785,4750382],[602,-38479],[-1730,-29808]],[[2462454,2920414],[-12598,6]],[[2449432,2926405],[2799,8355],[-2527,10660],[1710,8068],[2264,-8948],[-1567,23209],[3751,-2456],[-2031,16525],[1745,12874],[-2167,6337],[5328,12081],[729,11165],[-2352,6468]],[[2465421,3006177],[-44,-69501],[-2922,-20],[-1,-16242]],[[2497385,3038839],[7362,-169]],[[2504747,3038670],[30,-16330],[2933,34]],[[2507710,3022374],[35,-49035],[-1501,-13765]],[[2506244,2959574],[-8786,-3143]],[[2497458,2956431],[-7,27263]],[[2497451,2983694],[-66,55145]],[[2476895,2581276],[3416,6581]],[[2480311,2587857],[4123,1680]],[[2484434,2589537],[436,-69473]],[[2484870,2520064],[-2272,-10197]],[[2476931,2512536],[-36,68740]],[[2641051,3999088],[588,48015],[-923,7616]],[[2640716,4054719],[6994,-2154]],[[2647710,4052565],[3822,-1650]],[[2651532,4050915],[-830,-58792]],[[2650702,3992123],[-7039,2944]],[[2643663,3995067],[-2612,4021]],[[2492362,2345773],[4054,10768],[8,24615],[5650,-121]],[[2502074,2381035],[14,-51440]],[[2502088,2329595],[306,-13103],[-3286,-22001],[-2134,-854]],[[2496974,2293637],[-2573,8420],[-2039,43716]],[[2502731,2841703],[-36,-33171]],[[2502695,2808532],[-11451,-324],[4,-8451]],[[2491248,2799757],[-6572,-974]],[[2484676,2798783],[1859,9383],[4172,53304]],[[2490707,2861470],[2902,13297]],[[2493609,2874767],[5334,80]],[[2498943,2874847],[3828,-74],[-40,-33070]],[[2491406,3194702],[2230,94]],[[2493636,3194796],[8125,-268]],[[2504729,3101271],[-9779,11147]],[[2494950,3112418],[0,0]],[[2494950,3112418],[-1987,-153]],[[2492963,3112265],[-20,24598],[-1517,16160]],[[2491426,3153023],[-20,41679]],[[2497458,2956431],[7,-8274]],[[2497465,2948157],[-7802,-166]],[[2489663,2947991],[-9497,44]],[[2480166,2948035],[-251,8365]],[[2479915,2956400],[8,16409],[5856,2721],[6,13871]],[[2485785,2989401],[4375,-5733],[7291,26]],[[2528846,3194855],[473,-26]],[[2529265,3149931],[-9836,221]],[[2519429,3150152],[-959,19091],[-1965,-27],[12,25566]],[[2516517,3194782],[1015,6]],[[2517532,3194788],[11314,67]],[[2477309,2643457],[2739,-35830],[263,-19770]],[[2476895,2581276],[-969,-3306],[-12729,-256]],[[2463197,2577714],[15,16405]],[[2511068,2926539],[-442,33190]],[[2510626,2959729],[2866,2785],[12,10868],[5884,-196]],[[2519388,2973186],[10,-24534],[6219,-33],[-488,-5590]],[[2520746,2916068],[-8,11037],[-9670,-566]],[[2527595,2446660],[357,-49178]],[[2527952,2397482],[-13148,0]],[[2514804,2397482],[-14,32793]],[[2514790,2430275],[1412,16321]],[[2516202,2446596],[11393,64]],[[2445271,2584221],[1738,3091]],[[2447009,2587312],[490,-14492],[4079,-11657]],[[2451578,2561163],[-119,-49297]],[[2451459,2511866],[-4128,2651],[-4517,-7728],[-507,-17030],[-2865,-7009]],[[2453207,2507052],[2156,4965],[10718,338]],[[2466081,2512355],[2372,50]],[[2468453,2512405],[16,-65484]],[[2468469,2446921],[-546,3]],[[2467923,2446924],[-7206,-70]],[[2460717,2446854],[-6530,-81]],[[2454187,2446773],[22,52957],[-1002,7322]],[[2487779,2261262],[446,-11606],[3081,2425],[1001,-16855],[2615,2374],[468,21209],[2770,15799],[3052,-7946],[-1683,-5363],[1804,-18068],[2639,15409],[524,-24195],[-3602,-4797],[-1126,-26445],[-2955,8630],[-3184,-6137],[4398,-16838]],[[2498027,2188858],[-3942,11171],[-2587,14407],[-4142,7075],[-1152,13681]],[[2486204,2235192],[-2815,14494],[619,8144],[3771,3432]],[[2488135,2263939],[22,163]],[[2488157,2264102],[-22,-163]],[[2488186,2264318],[131,794]],[[2488317,2265112],[-131,-794]],[[2488333,2265206],[23,142]],[[2488356,2265348],[-23,-142]],[[2488380,2265488],[21,126]],[[2488401,2265614],[-21,-126]],[[2488450,2265912],[19,114]],[[2488469,2266026],[-19,-114]],[[2488917,2267959],[809,309]],[[2489726,2268268],[-809,-309]],[[2490492,2267032],[296,-1133]],[[2490788,2265899],[-296,1133]],[[2490794,2265871],[13,-73]],[[2490807,2265798],[-13,73]],[[2490945,2265058],[37,-196]],[[2490982,2264862],[-37,196]],[[2490997,2264780],[130,-699]],[[2491127,2264081],[-130,699]],[[2491366,2263990],[31,9]],[[2491397,2263999],[-31,-9]],[[2491628,2264793],[1,100]],[[2491629,2264893],[-1,-100]],[[2491629,2264929],[1,126]],[[2491630,2265055],[-1,-126]],[[2491630,2265058],[-425,4040]],[[2491205,2269098],[425,-4039]],[[2491630,2265059],[0,-1]],[[2491205,2269099],[3,252]],[[2491208,2269351],[-3,-252]],[[2491208,2269414],[7,594]],[[2491215,2270008],[-7,-594]],[[2491221,2270577],[30,290]],[[2491251,2270867],[-30,-290]],[[2491254,2270899],[3,30]],[[2491257,2270929],[-3,-30]],[[2491260,2270958],[43,415]],[[2491303,2271373],[-43,-415]],[[2491351,2271619],[52,158]],[[2491403,2271777],[-52,-158]],[[2491471,2271979],[143,423]],[[2491614,2272402],[-143,-423]],[[2491617,2272414],[10,26]],[[2491627,2272440],[-10,-26]],[[2491632,2272455],[10,30]],[[2491642,2272485],[-10,-30]],[[2491652,2272518],[19,55]],[[2491671,2272573],[-19,-55]],[[2491692,2272635],[30,89]],[[2491722,2272724],[-30,-89]],[[2491754,2272749],[340,222]],[[2492094,2272971],[-340,-222]],[[2492108,2272980],[7,3]],[[2492115,2272983],[-7,-3]],[[2492127,2272994],[25,64]],[[2492152,2273058],[-25,-64]],[[2492553,2275058],[3,222]],[[2492556,2275280],[-3,-222]],[[2492566,2275963],[8,535]],[[2492574,2276498],[-8,-535]],[[2492575,2276529],[0,41]],[[2492575,2276570],[0,-41]],[[2492576,2276646],[2,96]],[[2492578,2276742],[-2,-96]],[[2492578,2276749],[3,181]],[[2492581,2276930],[-3,-181]],[[2492584,2277028],[4,118]],[[2492588,2277146],[-4,-118]],[[2492606,2277646],[22,608]],[[2492628,2278254],[-22,-608]],[[2492632,2278360],[8,240]],[[2492640,2278600],[-8,-240]],[[2492646,2278758],[0,12]],[[2492646,2278770],[0,-12]],[[2492651,2278902],[32,902]],[[2492683,2279804],[-32,-902]],[[2492684,2279836],[5,128]],[[2492689,2279964],[-5,-128]],[[2492693,2280067],[57,228]],[[2492750,2280295],[-57,-228]],[[2492759,2280336],[23,91]],[[2492782,2280427],[-23,-91]],[[2492805,2280467],[35,12]],[[2492840,2280479],[-35,-12]],[[2492943,2280514],[15,62]],[[2492958,2280576],[-15,-62]],[[2492971,2280632],[267,1132]],[[2493238,2281764],[-267,-1132]],[[2493464,2283498],[165,1400]],[[2493629,2284898],[-165,-1400]],[[2494172,2288007],[0,521]],[[2494172,2288528],[61,-211]],[[2494233,2288317],[-61,-310]],[[2513082,2196640],[0,0]],[[2443459,2743077],[-4200,44],[-1158,15938]],[[2438101,2759059],[1968,35128],[3655,28279]],[[2448481,2822276],[-2224,-46498],[-2798,-32701]],[[2484786,2153645],[-535,32902],[-2399,24335],[-33,16941],[1682,12420]],[[2483501,2240243],[2703,-5051]],[[2498027,2188858],[-4543,9722],[-1391,-27986],[5325,-25691],[4791,-1486],[2667,-12756],[1122,7037],[3061,-27644],[2509,-3724],[-1718,-20562],[-2854,-11518],[-2506,13955],[-2229,-8034],[-1976,8722],[-2151,23980],[-6779,16655],[-3459,1449],[443,29690],[-3553,-7022]],[[2476955,2301809],[-352,91240]],[[2476603,2393049],[7284,-8700],[4232,111]],[[2488119,2384460],[2085,-28634],[2158,-10053]],[[2496974,2293637],[-2741,-5320]],[[2494172,2288528],[-4633,-237],[-2433,8791],[-3220,-9201],[-3098,7817]],[[2480788,2295698],[-3833,6111]],[[2451906,2320310],[3373,-337]],[[2455279,2319973],[-2366,-48481]],[[2449614,2264540],[-4025,6268]],[[2436336,2352904],[6014,-54]],[[2442350,2352850],[4832,-32694],[4724,154]],[[2427853,2620541],[-75,-112586]],[[2427778,2507955],[-2190,1792]],[[2422540,2536421],[-4360,27280],[-279,32383]],[[2465839,2290948],[256,10292]],[[2466095,2301240],[2067,-5180],[4381,17177]],[[2472543,2313237],[4,6]],[[2472547,2313243],[2894,1519],[544,-11749]],[[2468627,2239493],[-3187,-427]],[[2458353,2381346],[9571,119]],[[2467924,2381465],[7,-30502],[1827,-23415],[2785,-14311]],[[2466095,2301240],[-1588,-8389],[-5626,31567]],[[2458881,2324418],[-2775,21630],[290,24180],[1957,11118]],[[2348617,2352179],[3251,-653]],[[2351868,2351526],[3800,-70746],[4219,171]],[[2359887,2280951],[74,-41829]],[[2359961,2239122],[-15023,-985]],[[2339799,2324368],[8818,27811]],[[2279381,2335200],[4994,10201]],[[2289713,2364086],[6215,-44644],[2777,-4093]],[[2298705,2315349],[-4282,-25501]],[[2288018,2269424],[-1598,38919],[-7039,26857]],[[2161554,2976765],[-14548,-1082]],[[2238367,2201906],[774,5514]],[[2242837,2212102],[2742,2728],[5825,-7107],[-1099,-11076],[1871,-12754]],[[2252176,2183893],[5091,-20941],[-167,-7645]],[[2257100,2155307],[-7610,-61266]],[[2249490,2094041],[-11073,25504]],[[2176175,2895674],[4,-79923]],[[2261455,2987879],[4022,-5940],[4793,24843],[2803,-17065]],[[2273073,2989717],[2137,2969]],[[2275210,2992686],[-81,-90186]],[[2275129,2902500],[-12011,36]],[[2141003,2463110],[-469,105776]],[[2140534,2568886],[855,-9]],[[2141389,2568877],[14252,8]],[[2155630,2461907],[-14627,1203]],[[2255033,2618709],[5653,18789]],[[2260686,2637498],[6660,-64656]],[[2255823,2533769],[-2537,-8856]],[[2253286,2524913],[-5368,50087]],[[2247918,2575000],[8558,29522],[-1443,14187]],[[2186844,2814487],[3807,-101]],[[2190651,2814386],[10448,-552]],[[2201034,2732003],[-14323,471]],[[2143585,2813642],[3687,140]],[[2158067,2732458],[-14320,-365]],[[2201948,1922473],[-17,84286]],[[2201931,2006759],[19651,-1415]],[[2221582,2005344],[370,41]],[[2294240,2544730],[-3652,34930]],[[2290588,2579660],[5937,19840]],[[2296525,2599500],[6197,-3500]],[[2307668,2513819],[-7737,-25498]],[[2159886,3393223],[14981,-25]],[[2159903,3312485],[-17,80738]],[[2436974,3098705],[2299,-264],[31,16385],[6035,-855]],[[2445339,3113971],[5657,-21159],[3301,-21307]],[[2452580,3030795],[-2090,-8579],[1158,-25412],[-2140,7582],[-3328,-4318],[-2064,11141]],[[2443450,3023503],[-2305,25264],[-5111,3518],[184,46560]],[[2421155,3100873],[45,16357],[-2912,261],[-2634,16799],[-3028,3256],[59,13526],[-2911,533],[86,16309],[-2467,334]],[[2412838,3186938],[8761,-4821],[66,16271],[2958,-426]],[[2427168,3100095],[-4960,640]],[[2365491,3044533],[-304,30505],[8896,-1007]],[[2377211,3010166],[-233,-48888],[-3507,605]],[[2373429,2961893],[-2618,25252],[-1457,57156],[-3863,232]],[[2418241,2877279],[3521,-8826],[2410,-16626]],[[2424172,2851827],[1907,-28974]],[[2426079,2822853],[-18267,1166]],[[2400743,2891943],[8866,-4056],[2594,2169]],[[2389740,3000466],[2316,-21025],[5182,-12679]],[[2397238,2966762],[-337,-60663]],[[2389958,2904516],[-3274,5918]],[[2386684,2910434],[735,89988]],[[2475733,3277767],[4085,-362]],[[2479818,3277405],[1819,-9824]],[[2481637,3267581],[-2149,-23989],[2383,-22462],[-2982,-3353],[-997,-17131],[-2783,-5775]],[[2475109,3194871],[1760,-9618],[-1628,-15671]],[[2475241,3169582],[-2882,-5169]],[[2472359,3164413],[-15,13318]],[[2469712,3222670],[16,55687]],[[2424649,3476197],[12484,142]],[[2437133,3476339],[6194,-338]],[[2443327,3476001],[-123,-30357],[-3105,362],[-5,-16365],[-3493,624]],[[2436601,3430265],[-12971,1487]],[[2404305,3282329],[-122,-54312],[-1145,-393]],[[2403038,3227624],[-4167,-9786],[-6481,37249]],[[2392390,3255087],[-578,1876]],[[2391812,3256963],[87,26671],[2014,-248],[68,24398],[1487,-234],[93,24547]],[[2401500,3331315],[3943,-423]],[[2405443,3330892],[-102,-32457],[-1036,-16106]],[[2443232,2926837],[86,40562],[-2990,557]],[[2388797,3082782],[361,64864]],[[2389158,3147646],[2967,5578]],[[2398049,3152981],[2951,70],[-297,-25277],[4789,-8764],[413,-16246]],[[2405905,3102764],[-3396,469],[-919,-21874],[-12793,1423]],[[2377133,2935475],[2870,-23938]],[[2380003,2911537],[567,-44198],[-4111,-18809],[1258,-23582]],[[2377717,2824948],[-268,3]],[[2377449,2824951],[-6364,-28]],[[2371085,2824923],[0,47172]],[[2433745,3295650],[5908,-686]],[[2439653,3294964],[-78,-16497],[6615,-600]],[[2446190,3277867],[-2330,-12642],[1443,-27359],[-2252,-11012],[-145,-14433]],[[2442906,3212421],[-3312,397],[-30,-12419],[-3232,7066],[-2826,-6094]],[[2424669,3208123],[230,55446]],[[2403109,2972927],[202,64750]],[[2403311,3037677],[5793,-1170]],[[2411760,2971477],[-8651,1450]],[[2461164,3410847],[-1177,-33967]],[[2454959,3361341],[-4626,927]],[[2450333,3362268],[-4421,112]],[[2445912,3362380],[206,63704],[2533,5037]],[[2421303,3328982],[-4956,721],[47,13579]],[[2416394,3343282],[67,35052]],[[2422559,3407708],[3364,-14915],[-945,-22794],[4040,1347],[3181,-13311]],[[2432199,3358035],[341,-30412]],[[2445597,3179343],[2102,13542],[3991,3253]],[[2453080,3170805],[-72,-24756],[1410,-16686]],[[2445339,3113971],[-1927,19476],[2012,-294],[173,46190]],[[2385678,3338589],[-4926,959]],[[2380752,3339548],[-5986,-1665]],[[2374766,3337883],[-1450,221]],[[2375409,3426847],[2011,13386]],[[2403188,3404216],[160,70520],[861,1301]],[[2404209,3476037],[2277,-34]],[[2416539,3394598],[-11876,1380],[-1475,8238]],[[2299256,3371907],[-14473,88]],[[2284783,3371995],[-5100,12894],[-850,27737]],[[2278833,3412626],[5947,31],[-8,16322],[6015,8]],[[2290787,3428987],[2956,1],[-1,-16397],[5504,197]],[[2299246,3412788],[10,-40881]],[[2243570,3168528],[-35,45371]],[[2243535,3213899],[-63,68670]],[[2243472,3282569],[5,16354]],[[2243477,3298923],[8634,-14]],[[2252111,3298909],[193,-32623],[5860,97]],[[2258164,3266383],[93,-97863]],[[2258257,3168520],[-14687,8]],[[2350069,3413061],[-5963,80]],[[2344106,3413141],[156,65151]],[[2344262,3478292],[176,30087]],[[2344438,3508379],[10624,-509]],[[2355062,3507870],[4,-31539]],[[2355066,3476331],[1538,-63175]],[[2356604,3413156],[-6535,-95]],[[2290515,2999976],[-969,21817]],[[2289546,3021793],[1001,19005]],[[2290547,3040798],[7348,-55],[2357,-10818]],[[2300252,3029925],[1040,-9575],[-2138,-10835],[1010,-20671]],[[2221574,3217109],[2271,-13627],[601,-34453],[1665,-6648]],[[2226111,3162381],[-4440,-1699],[-484,-16475],[-6788,-88]],[[2214399,3144119],[-1483,8217],[-307,32870],[-4384,-21],[-4,16156]],[[2208221,3201341],[2943,-29],[6,16223],[10404,-426]],[[2305212,3086814],[-2966,220],[-2,16064]],[[2302244,3103098],[47,32695],[2948,-9],[-4,16391]],[[2305235,3152175],[8762,-20]],[[2313997,3152155],[-1,-16271]],[[2313996,3135884],[5,-32643],[-1483,-16374],[-7306,-53]],[[2299184,3270681],[2467,-1750],[2615,14289],[-3,-33239]],[[2304263,3249981],[0,-32636],[-1367,17],[-9,-38421]],[[2302887,3178941],[-4283,-1874],[-2184,-8197],[-1471,8081]],[[2294949,3176951],[-28,95725],[4263,-1995]],[[2278889,3103360],[5800,-48],[-1564,21754],[7460,2631]],[[2290585,3127697],[2926,-8159],[0,-16328]],[[2293511,3103210],[-1491,11],[-5,-32395],[-1462,-59]],[[2290553,3070767],[-2870,8003],[-8795,151],[1,24439]],[[2256964,3035055],[-4,27685]],[[2256960,3062740],[16066,-111]],[[2273026,3062629],[50,-40822]],[[2273076,3021807],[-3,-32090]],[[2234304,3048275],[-6614,348],[-477,23195]],[[2227213,3071818],[-384,29239],[3275,26852]],[[2230104,3127909],[2843,-8158],[4878,9]],[[2237825,3119760],[-1,-16292],[4571,17],[1,-19000]],[[2242396,3084485],[1457,-13520],[-14,-33060]],[[2324558,3298961],[10250,82],[11,-48506]],[[2334819,3250537],[-2970,547]],[[2331849,3251084],[-8490,-22240],[-6345,-4799]],[[2317014,3224045],[65,25894]],[[2317079,3249939],[2,16271]],[[2317081,3266210],[2945,-27],[1484,32758],[3048,20]],[[2323205,2984751],[-2101,49],[-2815,13998],[-5,33119],[-1489,5935]],[[2316795,3037852],[5912,-21]],[[2322707,3037831],[17353,50]],[[2340060,3037881],[18,-41252]],[[2220267,3569930],[4487,-33674]],[[2224754,3536256],[-2,-42011],[-8646,-443]],[[2216106,3493802],[-11077,93]],[[2205029,3493895],[16,76453]],[[2205045,3570348],[12857,-392]],[[2257719,3569671],[8627,118]],[[2266346,3569789],[9472,-3]],[[2275818,3569786],[-3,-75821]],[[2275815,3493965],[-17882,-9]],[[2257933,3493956],[-214,75715]],[[2222362,3385272],[-29,28334]],[[2222333,3413606],[11875,-510]],[[2234208,3413096],[8886,621]],[[2243094,3413717],[137,-65979]],[[2243231,3347738],[-20724,-40]],[[2222507,3347698],[-145,37574]],[[2284769,3331274],[-12,-48752]],[[2284757,3282522],[-17,-16306]],[[2284740,3266216],[-14745,55]],[[2269995,3266271],[-74,65290]],[[2269921,3331561],[14848,-287]],[[2346431,3206585],[-2,27016],[3167,-53],[18,22651]],[[2349614,3256199],[1766,6294],[2269,-11594],[4873,1160],[1624,15890]],[[2359807,3183312],[-189,-38367]],[[2359618,3144945],[-184,-41460]],[[2359434,3103485],[-13274,-117]],[[2346160,3103368],[-4,32577],[-3396,-27]],[[2342760,3135918],[3,32622],[1711,16310],[1963,10],[-6,21725]],[[2321865,3494686],[-6,64472],[642,10742]],[[2329866,3569894],[3199,6]],[[2333065,3569900],[-672,-10582],[4,-64620]],[[2332397,3494698],[-10532,-12]],[[2148494,3476548],[115,92190]],[[2148609,3568738],[13177,415]],[[2161786,3569153],[13610,486]],[[2178775,3569732],[-242,-93307]],[[2178533,3476425],[-3650,-127]],[[2174883,3476298],[-15010,53]],[[2159873,3476351],[-11379,197]],[[2768916,4079292],[-3647,-53381]],[[2765269,4025911],[-1231,3160]],[[2764038,4029071],[-5981,29565],[-6750,5039]],[[2751307,4063675],[-712,15694]],[[2711253,3796430],[5287,2028],[3562,-20223],[1650,-23406]],[[2721752,3754829],[-3196,-11081],[1591,-25624]],[[2720147,3718124],[-2599,-468]],[[2717548,3717656],[-3193,3893],[-1770,23752],[-5403,10315],[1312,6335]],[[2708494,3761951],[137,23796],[2622,10683]],[[2741891,4137809],[5981,-3181]],[[2747866,4079410],[-8754,-111]],[[2739112,4079299],[341,24177]],[[2739453,4103476],[1823,12026],[615,22307]],[[2765245,4000455],[2391,-12926]],[[2767636,3987529],[-428,-21474]],[[2767208,3966055],[-1975,-26654],[-5268,-4897]],[[2759965,3934504],[815,16832],[-4774,14156]],[[2756006,3965492],[1693,24237]],[[2757699,3989729],[3984,1050],[3562,9676]],[[1669486,4131441],[20177,-133],[26724,442]],[[1709876,3961866],[-2498,-3700]],[[2733395,4045433],[2645,12549]],[[2736040,4057982],[2552,-913],[3288,-20677],[3219,-7712]],[[2745099,4028680],[-7525,-29214]],[[2737574,3999466],[-1209,17748],[-2109,-7149]],[[2734256,4010065],[-498,20802],[-2670,-803]],[[2731088,4030064],[2307,15369]],[[2748569,4032277],[-113,17464],[2851,13934]],[[2764038,4029071],[-2400,-9550],[-4800,-1547]],[[2756838,4017974],[-8269,14303]],[[2726171,3979114],[-857,-6175],[2227,-22108],[2407,-722]],[[2729948,3950109],[-3231,-21664]],[[2726717,3928445],[-6247,572]],[[2720470,3929017],[-2196,20263]],[[2718274,3949280],[4362,20495],[3535,9339]],[[2738417,3650197],[5436,56788]],[[2743853,3706985],[5926,-8955],[4305,1483]],[[2754084,3699513],[2094,-11981]],[[2756178,3687532],[-2995,-11877],[800,-10490],[-4899,-15971]],[[2749084,3649194],[-997,10991],[-7207,-20459],[-2463,10471]],[[1763633,3376060],[-36777,188561]],[[2705300,3827289],[1542,-19718],[2134,10577]],[[2708976,3818148],[2701,-1656],[-424,-20062]],[[2708494,3761951],[-7193,-9467]],[[2701301,3752484],[-3224,-5829]],[[2698077,3746655],[2856,14967],[-2280,22693],[581,15790]],[[2699234,3800105],[1893,17475],[4173,9709]],[[2755495,3829913],[3582,16003],[2444,-2764],[4624,17153],[2270,34830],[4318,-13606]],[[2772733,3881529],[-621,-13607]],[[2772112,3867922],[-1131,-29959],[-3351,-23730],[391,-7324]],[[2768021,3806909],[-2826,-13509],[-1741,-24274]],[[2763454,3769126],[-8493,-3197],[-2748,12676],[91,20872]],[[2752304,3799477],[219,22365],[2972,8071]],[[2756006,3965492],[-2035,-1673]],[[2753971,3963819],[-7948,12079]],[[2746023,3975898],[0,0]],[[2746023,3975898],[-297,-246]],[[2745726,3975652],[1962,7927],[-2172,15277],[1648,25844]],[[2747164,4024700],[1405,7577]],[[2756838,4017974],[861,-28245]],[[2741891,4137809],[854,23186]],[[2742745,4160995],[594,5293]],[[2743339,4166288],[4533,-4846]],[[2728020,3806527],[6,38]],[[2728026,3806565],[8919,28283],[2616,11929],[-1778,5334]],[[2737783,3852111],[2676,9472],[3744,-5814]],[[2744203,3855769],[1151,-31436],[4819,-17091]],[[2750173,3807242],[-7674,-35226],[-4743,4553]],[[2737756,3776569],[-2821,22287],[-2295,-4256],[-4620,11927]],[[2780448,3936427],[-217,1309]],[[2780231,3937736],[1658,20348],[-1597,2488],[1845,19317],[-5514,972]],[[2776623,3980861],[8,2058]],[[2782626,4005773],[3824,-2900],[4306,-14015]],[[2790756,3988858],[-3058,-37327],[1218,-20495],[-2462,-21593]],[[2786454,3909443],[0,-1]],[[2786454,3909443],[-6006,26984]],[[2732142,3871752],[1449,10456]],[[2733591,3882208],[4192,-30097]],[[2728026,3806565],[-1461,38992],[2501,10407]],[[2729066,3855964],[3076,15788]],[[2712103,3693660],[-1476,-20889]],[[2710627,3672771],[-527,-2160]],[[2710100,3670611],[0,0]],[[2710100,3670611],[-1472,-4727]],[[2708628,3665884],[-1124,4852]],[[2707504,3670736],[-4627,2917],[-5545,35045]],[[2697332,3708698],[-2274,21461]],[[2695058,3730159],[3019,16496]],[[2701301,3752484],[2180,-22600],[-101,-20121],[3423,-19789],[1754,7711],[3546,-4025]],[[2744791,4205487],[3112,873]],[[2743339,4166288],[2282,24728],[-830,14471]],[[2744791,4205487],[976,14302],[-2042,20796]],[[2743725,4240585],[4150,10539]],[[2712942,3884641],[-5097,-4395],[-3031,-9241],[263,-24978]],[[2705077,3846027],[-4565,21925]],[[2700512,3867952],[1310,6309],[-1382,30286],[2137,9974],[1279,22068]],[[2703856,3936589],[2590,13292],[2935,-17154],[-223,-11097]],[[2709158,3921630],[3784,-36989]],[[2725804,3649487],[2482,16078]],[[2728286,3665565],[635,11999],[2917,2647]],[[2731838,3680211],[6552,-29792]],[[2738390,3650419],[278,-15458],[-3641,-10138]],[[2735027,3624823],[-6825,-10833]],[[2724384,3633236],[1420,16251]],[[2745457,3926442],[-2667,-4701],[-7897,-30163]],[[2734893,3891578],[-1999,14116],[1503,9865],[-860,30615]],[[2733537,3946174],[6148,18684]],[[2739685,3964858],[2358,-2569]],[[2742043,3962289],[321,-16332],[3093,-19515]],[[2803900,3960969],[-1002,-5985]],[[2793838,3900018],[-3468,16290],[-1769,-16585]],[[2788601,3899723],[-2147,9719]],[[2790756,3988858],[2234,-7204],[10910,-20685]],[[2825871,4004523],[-3031,-35356]],[[2822840,3969167],[-5708,24741]],[[2817132,3993908],[5784,42804]],[[2808387,4031606],[-3385,9473]],[[2817441,4060365],[-3255,-4840],[-2503,-37916]],[[2811683,4017609],[-3296,13997]],[[1730971,4505788],[15456,-526],[39710,-101]],[[1786137,4505161],[21073,-337]],[[1807210,4504824],[6692,-91]],[[1813890,4318718],[-128,-165276]],[[2257719,3569671],[-6552,12]],[[2251167,3569683],[-74,72231]],[[2251093,3641914],[15121,418]],[[2266214,3642332],[132,-72543]],[[2355070,3696018],[3,-3655]],[[2355073,3692363],[3,-54171]],[[2355076,3638192],[-4,-4820]],[[2342327,3633657],[-363,8216]],[[2341964,3641873],[5,54409]],[[2329962,3764360],[12290,-99]],[[2341967,3707131],[-12187,52]],[[2306704,3854846],[32,40685]],[[2318067,3895547],[-121,-57088]],[[2317946,3838459],[-239,-49259]],[[2317707,3789200],[-11101,321]],[[2309903,4050363],[5656,-22]],[[2315569,3984907],[-97,-16844]],[[2305726,3976710],[-4719,1865],[-114,10979],[-4584,30448],[4043,30381]],[[2339382,4022847],[-10851,-32]],[[2328704,4066581],[6252,22]],[[2342928,4059544],[-1373,-15334]],[[2341555,4044210],[3731,-21426]],[[2345286,4022784],[-5904,63]],[[2215474,4131902],[82,1]],[[2215482,4050591],[-14869,-31]],[[2200092,4050488],[71,81368]],[[2166342,3969671],[74,81094]],[[2166416,4050765],[18059,-61]],[[2184475,4050704],[576,-1]],[[2185021,3969346],[-2523,-4]],[[2342850,3895450],[4,45584]],[[2342854,3941034],[4109,1737]],[[2355313,3895359],[-12463,91]],[[2148220,3708266],[-64,98055]],[[2161445,3806459],[702,12]],[[2162147,3806471],[-13,-81537],[437,-17086]],[[2231649,3969277],[92,81426]],[[2231741,4050703],[15020,-81]],[[2246761,4050622],[499,-21]],[[2247260,4050601],[-77,-65084]],[[2247187,3969218],[-15254,78]],[[2198790,3741111],[13,16284]],[[2198789,3806289],[17912,-12]],[[2217110,3773558],[-10,-32635]],[[2216117,3969178],[373,-24]],[[2216308,3887575],[-15477,154]],[[2200831,3887729],[164,81392]],[[2200995,3969121],[15122,57]],[[2262814,4001731],[-77,48763]],[[2262737,4050494],[11,16256]],[[2278428,4066801],[3,-16289]],[[2278395,4001658],[-15581,73]],[[2322441,4066606],[23,65037]],[[2322464,4131643],[12487,-87]],[[2339382,4022847],[-174,-70210]],[[2339208,3952637],[-8724,2347]],[[2330484,3954984],[-2689,1500],[203,28342]],[[2278346,3936491],[13,32589]],[[2289725,3969143],[-8,-31333],[2040,-17751]],[[2291757,3920059],[-1030,-10838],[-85,-37960]],[[2290642,3871261],[-12304,-1]],[[2278338,3871260],[8,65231]],[[2185948,3888231],[12282,-347]],[[2198230,3887884],[78,-81586]],[[2185953,3806647],[-5,81584]],[[2284451,3740870],[-12,32750]],[[2284439,3773620],[8697,-389]],[[2301995,3773370],[-70,-89723]],[[2301925,3683647],[-11,-24447]],[[2284428,3659038],[23,81832]],[[2165804,4132028],[-80,-81265]],[[2165724,4050763],[-17716,-33]],[[2148008,4050730],[-1,1100]],[[2148007,4051830],[-54,80302]],[[2147953,4132132],[17851,-104]],[[2163761,3888259],[-2305,-93]],[[2148135,3887772],[-38,65412]],[[2148097,3953184],[-16,16118]],[[2148081,3969302],[15852,302]],[[2301937,3626692],[15615,-655]],[[2317556,3569861],[-1018,-46]],[[2316538,3569815],[-14621,-29]],[[2232600,3707222],[27,-49143]],[[2232627,3658079],[30,-16127]],[[2217844,3641366],[-360,16209]],[[2217387,3707582],[15213,-360]],[[2175364,3642611],[-606,-10]],[[2174758,3642601],[0,65252]],[[2186944,3707842],[-10,-48933]],[[2186934,3658909],[-3,-16327]],[[2247470,3806018],[-15,48863]],[[2247455,3854881],[15494,171]],[[2262949,3855052],[59,-65334]],[[2247666,3789540],[-196,16478]],[[2161748,3642744],[38,-73591]],[[2148609,3568738],[-387,-18]],[[2148222,3568720],[13,74156]],[[2216685,3822600],[-8,64979]],[[2231790,3887629],[269,-9]],[[2232059,3887620],[16,-65216]],[[2882093,3862161],[220,-18842],[9818,-1506]],[[2877550,3801812],[-1696,5306]],[[2875854,3807118],[2836,40122],[3403,14921]],[[2849198,4009926],[-7963,706]],[[2836770,3955175],[-4741,10480]],[[2832029,3965655],[0,0]],[[2832029,3965655],[1106,19955]],[[2841215,4010547],[1064,-15927],[3718,-19094],[3027,-6633]],[[2845851,3937983],[-3270,-5892]],[[2842581,3932091],[-5811,23084]],[[2880577,3990438],[229,-19228]],[[2868219,3916456],[-905,17165],[-4017,-17232],[2072,35412],[679,-10698],[3162,3191],[164,17680]],[[2881929,3876126],[164,-13965]],[[2875854,3807118],[-2559,7944],[-745,-12620],[-5965,14353],[-2178,32544],[2017,2100],[-435,19853],[3530,4174]],[[2872431,3779768],[472,5066]],[[2871669,4046023],[-739,-20099],[-4996,-24996],[-1350,10112]],[[2854997,3850722],[1832,-14072],[5646,-19962]],[[2862475,3816688],[2384,-33591],[19,-17786],[-3907,18001],[-1955,-1010],[-1693,14998],[-5762,4250],[-1020,11747]],[[2867183,3736458],[0,3]],[[2867183,3736461],[0,-3]],[[2867162,3736570],[-468,2385]],[[2866694,3738955],[468,-2385]],[[2866669,3739083],[-7,33]],[[2866662,3739116],[7,-33]],[[2866417,3740367],[-1551,4912]],[[2864866,3745279],[1551,-4912]],[[2864223,3747273],[-120,272]],[[2864103,3747545],[120,-272]],[[2863907,3747946],[-47,94]],[[2863860,3748040],[47,-94]],[[2863665,3748388],[-44,61]],[[2863621,3748449],[44,-61]],[[2863583,3748502],[-354,488]],[[2863229,3748990],[354,-488]],[[2860412,3760055],[-146,159]],[[2860266,3760214],[146,-159]],[[2859951,3760735],[-13,32]],[[2859938,3760767],[13,-32]],[[2859863,3760960],[-40,101]],[[2859823,3761061],[40,-101]],[[2859781,3761170],[-201,514]],[[2859580,3761684],[201,-514]],[[2858858,3770081],[150,-2011]],[[2857567,3775279],[42,-201]],[[2857169,3777174],[25,-121]],[[2856322,3785694],[154,-297]],[[2851885,3788829],[369,-230]],[[2851553,3788730],[174,97]],[[2850947,3788017],[4,4]],[[2850819,3787841],[119,164]],[[2850452,3787806],[359,28]],[[2850439,3787805],[8,0]],[[2850389,3787835],[5,-8]],[[2288145,4457799],[15,65063]],[[2293612,4522831],[7471,-86],[18,-13866]],[[2301093,4457620],[-9772,138]],[[2131656,4400912],[6,56918],[-791,59],[-354,49008]],[[2147538,4507629],[-35,-49994],[2295,35]],[[2149823,4392613],[-1968,84],[-7,-32497]],[[2132388,4360213],[-732,40699]],[[2165909,4392744],[3833,-90]],[[2169742,4392654],[-19,-65052],[568,-8131]],[[2170291,4319471],[-22338,-11]],[[2293645,4555377],[2670,2566]],[[2306631,4557661],[-5,-11510]],[[2306626,4546151],[2325,-31416]],[[2265451,4587832],[9728,167]],[[2275179,4587999],[3279,36],[-4,-16268]],[[2278435,4522926],[-12986,-219]],[[2316277,4180498],[12752,80]],[[2329029,4180578],[4344,-25681],[-697,-12548],[3156,-10793]],[[2322464,4131643],[-6201,35]],[[2291110,4262195],[24,-32629]],[[2291134,4229566],[-69,-32548]],[[2291065,4197018],[-12637,122]],[[2278428,4197140],[8,65181]],[[2227195,4327530],[120,64976]],[[2227315,4392506],[12584,-11]],[[2239899,4392495],[202,18]],[[2240101,4392513],[-117,-65051]],[[2239984,4327462],[-12789,68]],[[2147953,4132132],[5,64789]],[[2147958,4196921],[19747,230]],[[2167705,4197151],[542,20]],[[2168187,4132062],[-2383,-34]],[[2281667,4457820],[-3222,23]],[[2278445,4457843],[-10,65083]],[[2110877,4319154],[136,73444]],[[2111253,4400651],[20403,261]],[[2132092,4319218],[-903,-49]],[[2131189,4319169],[-20312,-15]],[[2109149,4587770],[18699,481]],[[2129953,4506814],[-18542,-358]],[[2111411,4506456],[-1067,115]],[[2239632,4522476],[12832,63]],[[2252603,4489989],[-5,-32526]],[[2252598,4457463],[-12717,-152]],[[2239881,4457311],[-193,3]],[[2291065,4197018],[-37,-65180]],[[2291028,4131838],[-12615,86]],[[2303643,4229452],[-3,48843]],[[2303640,4278295],[17542,-33]],[[2321182,4278262],[-1367,-12392],[3275,-24777]],[[2323090,4241093],[1551,-11494]],[[2324641,4229599],[-9948,-123]],[[2314693,4229476],[-11050,-24]],[[2185245,4392388],[12876,-40]],[[2198121,4392348],[748,-64894]],[[2198895,4262627],[-15449,-22]],[[2183446,4262605],[-13099,-437]],[[2170347,4262168],[-56,57303]],[[2169742,4392654],[15503,-266]],[[2181645,4457317],[-15714,524]],[[2165389,4457814],[-17,65350]],[[2165372,4523164],[16171,-754]],[[2184532,4131952],[-557,35]],[[2183986,4196975],[15620,97]],[[2199723,4131868],[-15191,84]],[[2149222,4523939],[16150,-775]],[[2307394,4392318],[-3948,18]],[[2291322,4403595],[-1,571]],[[2304168,4446692],[25,-29892],[3201,-24482]],[[2167634,4262221],[71,-65070]],[[2147958,4196921],[3,16993]],[[2147961,4213914],[0,48204]],[[2147961,4262118],[19673,103]],[[2319918,4328708],[-4925,2256],[-4218,-13050],[-3108,9241]],[[2307439,4354294],[11251,161]],[[2318690,4354455],[1199,-5798]],[[2319889,4348657],[29,-19949]],[[2111411,4506456],[-196,-56849]],[[2316666,4413623],[1628,-21752]],[[2318294,4391871],[-10900,447]],[[2313145,4446581],[855,-27888],[2666,-5070]],[[2252598,4457463],[123,-48750]],[[2252721,4408713],[-2,-16253]],[[2252719,4392460],[-12618,53]],[[2239899,4392495],[-18,64816]],[[2240589,4197142],[80,-2]],[[2240669,4197140],[12422,-7]],[[2253217,4197134],[-13,-65079]],[[2253204,4132055],[-6420,-70]],[[2246784,4131985],[-6183,20]],[[2240601,4132005],[-12,65137]],[[2318294,4391871],[1455,-13600],[-1059,-23816]],[[2319918,4328708],[1839,-28377]],[[2321757,4300331],[-575,-22069]],[[2303640,4278295],[-3,43445]],[[2147095,4692963],[2,0]],[[2147097,4692963],[23804,-230]],[[2170901,4692733],[0,1]],[[2170901,4692734],[28688,101]],[[2199589,4692835],[0,1]],[[2199589,4692836],[-2,-28558]],[[2200447,4521977],[-2786,56]],[[2265579,4417219],[-7513,-8497],[-5345,-9]],[[2265483,4490239],[78,-32578]],[[2265561,4457661],[18,-40442]],[[2303642,4180628],[1,48824]],[[2314693,4229476],[8,-48873]],[[2107461,4693228],[14048,-5]],[[2121509,4693223],[5817,-143]],[[2205625,4262580],[16,-48987],[-3174,68],[9,-16360]],[[2183458,4196968],[-12,65637]],[[2265739,4197169],[92,0]],[[2262738,4131943],[-9534,112]],[[2240657,4260665],[12,-63525]],[[2240589,4197142],[-12610,53]],[[2227979,4197195],[5,57999]],[[2227984,4255194],[7610,-1464],[5063,6935]],[[2288204,4571672],[54,76740]],[[2288258,4648412],[5841,-10703]],[[2294099,4637709],[3263,-11245],[1604,-22417]],[[2252719,4392460],[135,0]],[[2252838,4327410],[-12114,58]],[[2240724,4327468],[-740,-6]],[[2199589,4692835],[18510,-119]],[[2218099,4692716],[7789,7]],[[2225816,4656453],[-7813,-16223],[-3906,2485]],[[2185245,4392388],[43,64810]],[[2197720,4457214],[397,-6]],[[2198117,4457208],[4,-64860]],[[2275179,4587999],[10,77076]],[[2275189,4665075],[4966,3228],[4077,-12710]],[[2284232,4655593],[4026,-7181]],[[2213842,4457302],[-4,64717]],[[2214523,4522007],[11918,372]],[[2226441,4522379],[331,-15]],[[2226797,4457391],[-12955,-89]],[[2272032,4381084],[6409,11848]],[[2278441,4392932],[2,-65413]],[[2278443,4327519],[-12765,-68]],[[2265678,4327451],[-54,23803]],[[2213842,4457302],[-15725,-94]],[[2105527,4319054],[-13338,-59]],[[2110877,4319154],[-5350,-100]],[[2215050,4259755],[35,-62463]],[[2215413,4197277],[12566,-82]],[[2227979,4197195],[8,-65242]],[[2221351,4257118],[6633,-1924]],[[2253090,4262259],[-132,-1]],[[2252958,4262258],[8,32571]],[[2265678,4327451],[16,-65142]],[[2278441,4392932],[3195,-2285]],[[2291249,4327358],[-68,6]],[[2495007,3748840],[11632,-936]],[[2507375,3731374],[-70,-48953]],[[2497056,3677121],[266,21220],[-4343,13680],[-179,8336]],[[2504239,4192453],[3203,-8106]],[[2505517,4116019],[-7399,3022],[-2643,8046]],[[2494826,4154473],[-39,37004]],[[2494787,4191477],[9452,976]],[[2444179,4202358],[1296,3894],[364,37948],[4863,6738]],[[2450702,4250938],[7832,261]],[[2458318,4167698],[-16532,1384]],[[2441786,4169082],[225,9037]],[[2442011,4178119],[2168,24239]],[[2513297,4436337],[-74,49310]],[[2513223,4485647],[43,48772]],[[2513266,4534419],[6522,232]],[[2523047,4534656],[-370,-81239]],[[2522677,4453417],[-8,-16504]],[[2479090,3901826],[1356,6195]],[[2480446,3908021],[122,8153],[-4527,13896]],[[2494945,3896320],[62,-16338],[-3119,-150]],[[2491888,3879832],[-13222,978]],[[2483882,4107758],[269,-28971],[1636,-36681]],[[2479442,4041771],[-4125,-23]],[[2467468,4108487],[16414,-729]],[[2507067,4338213],[-5471,-77],[-3004,8403]],[[2498427,4303984],[11830,850]],[[2513498,4305207],[58,-32645]],[[2513556,4272562],[-1543,-16542],[-4153,-12770],[-3779,-450]],[[2504081,4242800],[-1614,3975],[-79,24837],[-6264,-116]],[[2535772,4318328],[391,-95414],[5087,-406]],[[2541250,4222508],[68,-16194]],[[2526633,4206211],[13,40897]],[[2526646,4247108],[6256,154],[-344,70452]],[[2552452,4109657],[29,-51604]],[[2552481,4058053],[16,-24370]],[[2540557,4034470],[-179,38299]],[[2541185,4109058],[11267,599]],[[2529013,3739924],[-22,-57672]],[[2527966,3682317],[-8259,-118]],[[2519707,3682199],[50,49426]],[[2523431,4184246],[3189,82]],[[2471532,4347043],[12624,-353]],[[2484156,4346690],[-26,-32732]],[[2484114,4264874],[-12768,450]],[[2491993,3798271],[-32,36736]],[[2491961,3835007],[2485,10558],[3724,-675],[3380,8994],[6028,-2514]],[[2507564,3845902],[-84,-48849]],[[2507480,3797053],[-12409,1194]],[[2523114,4339002],[9313,1111]],[[2526646,4247108],[-3204,-148],[-273,26402],[-9613,-800]],[[2532243,3915839],[-2874,829],[0,11024]],[[2540954,3916324],[-8711,-485]],[[1863444,4276327],[7158,27776],[1819,-18642],[5648,7264]],[[1878069,4292725],[2718,-11599]],[[1880787,4281126],[2450,-35512]],[[1883237,4245614],[-1138,-6044]],[[1882099,4239570],[-8554,-21269],[-1274,-7264],[-6311,7915]],[[1865960,4218952],[-965,46572],[-1551,10803]],[[1813602,3683227],[12941,0],[3148,2528],[16,-16714],[6164,-20],[-14,-8728],[6040,-1435],[3786,4710]],[[1845683,3663568],[46,-93467]],[[1845729,3570101],[-32075,2]],[[1866218,4505292],[1515,166]],[[1867733,4505458],[16781,360]],[[1884514,4505818],[2239,-60207],[-447,-27420],[-1892,-20265]],[[1884414,4397926],[-4348,1068],[-1660,-9920],[-4429,9476]],[[1813751,4113969],[47510,-335],[4517,20087]],[[1865778,4133721],[3521,-22157],[-1015,-20857],[3282,4660],[1744,16446],[3215,6739],[770,-22454],[3505,460]],[[1880800,4096558],[1546,-13642],[-3721,-8520],[151,-43896],[-943,-14463],[-4888,-258],[-2597,-12541]],[[1870348,4003238],[-5011,2835],[-691,42012],[-50912,-2116]],[[1549451,3901032],[-5345,27895],[875,26189],[-3688,58277],[1668,34458],[-2375,52266],[-4798,31679]],[[1535788,4131796],[13359,119]],[[1549147,4131915],[-4,-4662],[17010,209]],[[1566053,4093776],[1457,-40813]],[[1567510,4052963],[-138,-9565],[-4816,-4768],[-333,-17942],[2237,-32148],[-2313,-11630],[-423,-19054],[2964,-13984],[1053,-18168],[3545,-9374]],[[1619283,3813404],[-8830,-13475],[-3537,5922],[-3038,-30975]],[[1603878,3774876],[-6500,-13828],[-1369,8516]],[[1596009,3769564],[4138,3465],[2745,20804],[617,21974]],[[1603241,3894935],[3301,-232]],[[1616109,3890470],[3162,-38125]],[[1645193,3602186],[0,0]],[[1645193,3602186],[1255,2116]],[[1646448,3604302],[8086,43800],[3083,135],[1882,26672],[7652,40739]],[[1667151,3715648],[1115,-7253]],[[1675136,3679664],[-8074,-43615],[-514,-27501],[-3908,-17827],[-2476,6174],[-5035,-32442],[-2180,-22863]],[[1652949,3541590],[0,0]],[[1652949,3541590],[-7264,-4253],[-5858,-10432],[-4640,17454],[-2381,34000]],[[1632806,3578359],[1812,9712],[5588,10448],[4987,3667]],[[1608479,3943712],[-4620,-13464],[-1200,69466]],[[1602659,3999714],[6025,8259],[2853,33660],[4324,1285],[2040,13256]],[[1617901,4056174],[1873,7898]],[[1619774,4064072],[-352,-46401]],[[1619422,4017671],[-2936,-2119],[-3886,-20333],[-350,-44359]],[[1659790,3474350],[686,3737]],[[1660476,3478087],[0,0]],[[1660476,3478087],[2291,12435],[4491,-282],[14,16262],[8912,-647],[65,15815],[16533,585]],[[1692782,3522255],[0,0]],[[1692782,3522255],[792,0]],[[1693574,3522255],[4061,-57975],[3265,-19447],[856,-44678],[1764,-20350],[-124,-36416]],[[1660766,3343465],[245,89897],[1526,-154],[-8,24693],[-2739,16449]],[[2699158,2871374],[2601,5499],[2398,-12452],[6577,3190]],[[2710734,2867611],[-1,48]],[[2710733,2867659],[2649,-9245]],[[2713382,2858414],[1460,-15292],[2525,-3969]],[[2717367,2839153],[2011,-9283]],[[2719378,2829870],[-6289,-25501]],[[2713089,2804369],[-2519,8323],[-6223,-6947],[-1773,-19470]],[[2643055,2942505],[2706,-236]],[[2649652,2919737],[3359,-15269]],[[2653011,2904468],[-4978,-27330]],[[2648033,2877138],[-1337,7010],[-5679,3159]],[[2720772,2577917],[-4178,12330],[-3444,20418],[426,18435],[-2071,7835]],[[2711505,2636935],[1746,6180]],[[2728947,2582876],[1873,-5670],[-1762,-23898]],[[2729058,2553308],[-1880,15356],[-4845,-1513],[-1561,10766]],[[2675594,3059699],[985,-9344]],[[2679413,3016590],[-4112,813],[-3748,-9072]],[[2668721,3016095],[-1181,29372]],[[2667540,3045467],[1314,4911]],[[2668854,3050378],[6740,9321]],[[2695214,2700360],[1,18]],[[2700127,2693828],[1395,-29631],[-1179,-46318]],[[2694590,2627819],[-1437,520]],[[2693153,2628339],[2061,72021]],[[2649735,2859252],[6108,-4191]],[[2655843,2855061],[173,-9064]],[[2658952,2812489],[-5050,-19549]],[[2653902,2792940],[-6473,227]],[[2647429,2793167],[26,15465]],[[2647455,2808632],[2207,2937],[73,47683]],[[2679553,2481412],[8347,-47]],[[2694942,2368690],[-1139,468]],[[2693803,2369158],[-3461,1363]],[[2664657,2974390],[-3932,16554]],[[2660725,2990944],[3055,11177]],[[2671064,2980045],[-122,-16134]],[[2670942,2963911],[-3507,-11880]],[[2666647,2512553],[2668,23515]],[[2674696,2535372],[142,-9712]],[[2674838,2525660],[2980,-27275],[-372,-17032]],[[2673237,2451729],[-2705,350]],[[2670532,2452079],[-1133,40614],[-2752,19860]],[[2709264,2414843],[-3278,-7546],[-739,-24845],[1194,-14602],[-1220,-40206]],[[2705221,2327644],[-3337,-668],[-1146,12441],[-106,26801]],[[2664471,2508255],[2176,4298]],[[2670532,2452079],[-5031,876]],[[2665501,2452955],[-2765,8643]],[[2662736,2461598],[1812,23968],[-77,22689]],[[2702913,2535182],[2228,-3191],[326,-15066]],[[2694988,2525048],[2017,2434],[3295,18826]],[[2633128,2528194],[-114,-32748]],[[2633014,2495446],[-7683,-557],[-139,-34328]],[[2622235,2461110],[-1981,16737],[334,26902]],[[2620588,2504749],[1175,39019]],[[2621763,2543768],[453,-5815],[5835,2832]],[[2628051,2540785],[857,-12136],[4220,-455]],[[2688567,2730078],[-580,18654],[-5411,19390],[-2628,-1393]],[[2679948,2766729],[282,9554]],[[2680230,2776283],[4026,9432],[950,-7608],[6890,9968]],[[2649406,2731859],[1249,-47]],[[2650386,2728936],[-980,2923]],[[2639961,2711649],[-1450,27709]],[[2642916,2774087],[2330,-10783]],[[2645246,2763304],[2721,-3113],[2831,-26852]],[[2650798,2733339],[-1392,-1480]],[[2649406,2731859],[-1923,-3013],[-3685,-25058]],[[2650115,2666172],[1748,14398],[3253,8041]],[[2655116,2688611],[6486,-451]],[[2661602,2688160],[196,-31848]],[[2661766,2639379],[-9796,497]],[[2651970,2639876],[-1855,26296]],[[2645410,3124162],[228,-2852]],[[2645638,3121310],[-69,-11887],[5861,-22611]],[[2651430,3086812],[657,-15792]],[[2643701,3071234],[14,8580]],[[2643715,3079814],[-2451,34016]],[[2642388,2576323],[0,0]],[[2642388,2576323],[1270,25420],[-2191,8746]],[[2641467,2610489],[3,7973],[11581,-1223]],[[2653051,2617239],[-472,-11555]],[[2652579,2605684],[-2589,-24548],[389,-12447]],[[2650379,2568689],[-692,-4998],[-7093,-303]],[[2642594,2563388],[-206,12935]],[[2622869,3081956],[9823,3771]],[[2632692,3085727],[-168,-62626]],[[2630335,3023363],[-5152,580]],[[2621725,3026546],[1144,55410]],[[2680172,2958587],[-1065,8863],[3139,26407],[2649,9238]],[[2688630,3005542],[1447,-29362],[3176,-35149]],[[2693253,2941031],[-4741,-5759]],[[2687668,2933592],[-3697,10481],[-2171,-4288],[-1628,18802]],[[2643977,2856705],[3466,2584]],[[2647443,2859289],[2292,-37]],[[2647455,2808632],[27,10741],[-4117,270]],[[2643365,2819643],[612,37062]],[[2621629,2990623],[345,-17322]],[[2613607,2943572],[-1347,46532]],[[2689135,2572881],[831,-38068]],[[2689089,2515092],[-5253,103],[-740,7272],[-8258,3193]],[[2678798,2572973],[74,20182]],[[2678872,2593155],[4439,6583]],[[2683311,2599738],[-7,-27096],[5831,239]],[[2688172,2844971],[-2408,20967]],[[2685764,2865938],[-209,2825]],[[2696764,2879783],[1653,7921]],[[2705826,2923324],[441,-2403]],[[2706267,2920921],[2847,-21999],[-1017,-8840],[2636,-22423]],[[2710733,2867659],[1,-48]],[[2667413,2802274],[5028,-58776]],[[2664880,2718790],[-1221,31399],[-1558,8308]],[[2662101,2758497],[2671,25678],[-327,8112]],[[2657010,3156911],[2752,1441]],[[2659762,3158352],[1625,-12803],[-1102,-13549],[1318,-20017],[-1418,-9221]],[[2660185,3102762],[-4931,355]],[[2655254,3103117],[0,0]],[[2655254,3103117],[-944,23228],[579,17332]],[[2633014,2495446],[2913,-568],[-155,-33112]],[[2635772,2461766],[-5243,-1843]],[[2626865,2857108],[279,6068],[9751,-475]],[[2636895,2862701],[155,-6961]],[[2637050,2855740],[-842,-39927]],[[2636208,2815813],[561,-16614]],[[2631374,2792246],[-4492,5212]],[[2626882,2797458],[-17,59650]],[[2659746,2919821],[210,-7300],[-4187,-9352],[-1062,-12912]],[[2654707,2890257],[-1696,14211]],[[2653264,2960622],[6518,-27568]],[[2640399,2461738],[-3663,-90]],[[2636736,2461648],[689,14412],[3258,15813],[717,12235],[3901,9411],[1658,15844]],[[2646959,2529363],[3994,669]],[[2650953,2530032],[-46,-20361]],[[2650907,2509671],[-117,-48231]],[[2650790,2461440],[-3149,127]],[[2647641,2461567],[-7242,171]],[[2649140,3039923],[5428,-13027],[1403,5469]],[[2655971,3032365],[-1387,-22527],[1904,-14468]],[[2656488,2995370],[-5096,-26915]],[[2650231,2962233],[-6579,31090],[-473,7260]],[[2643179,3000583],[4990,17398]],[[2670942,2963911],[4502,-11785],[3431,-979]],[[2678875,2951147],[1238,-6657],[-1752,-14532],[33,-20815]],[[2678394,2909143],[-4217,-21365]],[[2674177,2887778],[-3224,24035]],[[2645830,2677143],[4285,-10971]],[[2651970,2639876],[1081,-22637]],[[2641467,2610489],[-2941,17569]],[[2638526,2628058],[351,31184]],[[2638877,2659242],[28,6027]],[[2635655,2563246],[-7550,-266]],[[2628105,2562980],[-3469,-207],[-453,29796]],[[2625621,2620011],[6999,-778]],[[2632620,2619233],[1561,-26]],[[2634181,2619207],[-92,-27734],[1566,-28227]],[[2667653,3094767],[6144,3019],[2067,11156]],[[2675864,3108942],[1450,-8033]],[[2677314,3100909],[-1720,-41210]],[[2668854,3050378],[-1201,44389]],[[2661602,2688160],[3274,21181]],[[2669098,2685152],[1544,-17531],[-1288,-13653]],[[2669256,2378904],[880,-361]],[[2670136,2378543],[-880,361]],[[2658031,2383033],[211,70993]],[[2658242,2454026],[4519,-712],[-25,8284]],[[2665501,2452955],[1616,-26685],[1982,-6773],[-3789,-18021],[3476,-22380]],[[2668786,2379096],[-7077,2600]],[[2661709,2381696],[-3678,1337]],[[2608721,3106548],[-381,12140]],[[2620028,3118463],[-2028,-28355],[-4300,-12399],[-1462,-15657],[-2085,54]],[[2610153,3062106],[-1432,44442]],[[2922164,4655000],[-5338,-4409],[-5388,10590]],[[2594069,4780578],[45,65169]],[[2594114,4845747],[13246,3]],[[2607360,4845750],[2,-65022]],[[2607362,4780728],[-4,-32564]],[[2607358,4748164],[-6350,-237]],[[2601008,4747927],[-6924,97],[-15,32554]],[[2659283,4782733],[-13,22056]],[[2659270,4804789],[6459,24731]],[[2665729,4829520],[24,-11474],[9716,1474]],[[2675469,4819520],[-71,-65220]],[[2675398,4754300],[-6520,-897],[75,-16297],[-3037,-2257]],[[2665916,4734849],[-6544,-320]],[[2659372,4734529],[-89,48204]],[[2645202,5184817],[2646,-22826],[5565,-3628],[2866,-12471],[5777,-12465],[2858,931],[3202,-16575],[-162,-11582]],[[2667954,5106201],[-13753,-944]],[[2654201,5105257],[-10181,-627]],[[2644020,5104630],[-150,79976],[1332,211]],[[2614850,4519301],[-147,65193]],[[2614703,4584494],[6332,294]],[[2621035,4584788],[9838,18]],[[2630873,4584806],[249,-65727]],[[2631122,4519079],[-3257,393]],[[2627865,4519472],[-13015,-171]],[[2646207,4799568],[-68,-16271],[-5553,-2981]],[[2640586,4780316],[-6621,-7]],[[2633965,4780309],[42,65364]],[[2634007,4845673],[12223,2000]],[[2646230,4847673],[-23,-48105]],[[2593134,5025955],[7186,-724]],[[2600320,5025231],[-74,-48957]],[[2600246,4976274],[-11582,994]],[[2588664,4977268],[28,35147],[4442,13540]],[[2654124,4910542],[-74,64985]],[[2654050,4975527],[15836,517]],[[2669886,4976044],[-398,-32059],[-4913,-12493],[-1570,-20626]],[[2663005,4910866],[-8881,-324]],[[2669806,5040949],[1329,-27065],[-1249,-37840]],[[2654050,4975527],[-52,65040]],[[2653998,5040567],[15808,382]],[[2634098,4650010],[66,-65117]],[[2634164,4584893],[-3291,-87]],[[2621035,4584788],[-73,65392]],[[2620962,4650180],[6607,-58]],[[2627569,4650122],[6529,-112]],[[2942593,4417410],[-408,-30101]],[[2930019,4379506],[-3,21379]],[[2472070,5360560],[10865,20280],[3892,17115]],[[2486827,5397955],[675,-32392],[3460,-116],[-33,-16265],[10479,74],[-2,-32322],[10443,54]],[[2511849,5316988],[-8,-44149]],[[2866379,4622629],[-253,27640]],[[2646256,4879680],[7,30863]],[[2646263,4910543],[7861,-1]],[[2663005,4910866],[-526,-19985],[-2675,-11708],[-4151,-954],[-2286,-14708]],[[2653367,4863511],[-3725,116],[-16,16065],[-3370,-12]],[[2689723,4822317],[-14254,-2797]],[[2665729,4829520],[3345,34298],[2392,11486],[9627,18152],[4931,-15161],[2670,-25650],[1029,-30328]],[[2627284,5040864],[-282,48416]],[[2627002,5089280],[3417,-337],[14,16290]],[[2630433,5105233],[10238,-594]],[[2640671,5104639],[-137,-64338]],[[2640534,5040301],[-13250,563]],[[2578018,5284314],[6,32676],[6969,-249],[9,32554],[13931,-205]],[[2598933,5349090],[-3,-48690]],[[2598930,5300400],[-10,-51731]],[[2598920,5248669],[-1538,-8847],[-7690,7899],[-3556,-10689],[-1103,-21717],[-2676,-5992]],[[2582357,5209323],[-846,25884],[3,48994],[-3496,113]],[[2601002,4731486],[6,16441]],[[2607358,4748164],[6969,-12],[-4,-32833]],[[2614323,4715319],[81,-65309]],[[2614404,4650010],[-6574,-325]],[[2607830,4649685],[-6601,10]],[[2601229,4649695],[-227,81791]],[[2633949,4910298],[6688,11]],[[2640637,4910309],[5626,234]],[[2646256,4879680],[-26,-32007]],[[2634007,4845673],[-58,64625]],[[2601774,4518883],[77,-50632],[-868,-7438]],[[2600983,4460813],[-7557,269]],[[2593426,4461082],[-4556,-21]],[[2588870,4461061],[88,58227]],[[2588958,4519288],[12816,-405]],[[2511849,5316988],[-18,16182]],[[2511831,5333170],[8688,81]],[[2520519,5333251],[15681,-35]],[[2536200,5333216],[-23,-32444]],[[2536177,5300772],[15,-60830]],[[2616404,5300547],[-1,95514]],[[2616403,5396061],[7976,2580],[-2115,-13484],[-798,-31994],[7134,-15030],[4711,7234],[2215,-12419],[3656,15453],[8117,5436],[300,-55432],[-3713,-10873],[3522,809],[1485,-16427],[5669,-18224],[2869,4359],[-1637,15961],[6762,-2625],[3012,-19689],[-2469,-13451],[-8894,10411],[-6498,1898]],[[2647707,5250554],[-3483,1227],[13,16205],[-3462,24],[-11,16172],[-20866,38],[-19,16374],[-3475,-47]],[[2617548,4460919],[-2658,45]],[[2614890,4460964],[-40,58337]],[[2627865,4519472],[37,-58486]],[[2627902,4460986],[-10354,-67]],[[2536200,5333216],[20,48371],[3463,138],[-1481,16142],[4,27536]],[[2538206,5425403],[4018,-520],[7440,-18266],[6799,-53837],[7596,-5486]],[[2564059,5347294],[15,-62933]],[[2564074,5284361],[-3495,-7],[-37,-32535],[-3482,43]],[[2557060,5251862],[-6943,130]],[[2550117,5251992],[32,48813],[-13972,-33]],[[2640644,4715159],[-2,1968]],[[2640642,4717127],[12225,810]],[[2652867,4717937],[183,-65878]],[[2653050,4652059],[-6566,-784]],[[2646484,4651275],[-5725,-160]],[[2640759,4651115],[-115,64044]],[[2607830,4649685],[67,-64895]],[[2607897,4584790],[-6162,-143]],[[2601735,4584647],[-14196,-260]],[[2587539,4584387],[1811,65185]],[[2589350,4649572],[11879,123]],[[2486827,5397955],[2731,9854],[9852,3938],[5235,11944],[3645,17014],[5154,7109]],[[2513444,5447814],[24,-50053],[1895,-16012],[-3485,164],[-47,-48743]],[[2686892,4633845],[-2493,-5518],[357,-16921],[-2505,-7506],[107,-13532]],[[2682358,4590368],[-5929,-764]],[[2676429,4589604],[-543,82636]],[[2675886,4672240],[3322,955]],[[2679208,4673195],[6816,711],[868,-40061]],[[2588958,4519288],[-17,32175],[-3937,-46]],[[2585004,4551417],[2535,32970]],[[2601735,4584647],[39,-65764]],[[2679208,4673195],[-352,48732]],[[2678856,4721927],[13739,2779]],[[2692595,4724706],[2498,-35948],[-1185,-9560],[-325,-30680],[-1551,-28903],[-4385,-9280],[-755,23510]],[[2594000,4911534],[6151,-541]],[[2600151,4910993],[7150,131]],[[2607301,4911124],[59,-65374]],[[2594114,4845747],[-114,65787]],[[2613703,4911166],[22,64984]],[[2613725,4976150],[13459,-230]],[[2627184,4975920],[-22,-65455]],[[2627162,4910465],[-6557,536]],[[2620605,4911001],[-6902,165]],[[2564059,5347294],[2772,7185],[3956,-18019],[2431,7571],[2501,-7320],[-312,19708],[3431,-15084],[3256,16489],[9222,22745],[7627,3227]],[[2598943,5383796],[-10,-34706]],[[2578018,5284314],[-13944,47]],[[2919306,4356709],[-9167,28924]],[[2931345,4296685],[443,6619]],[[2935531,4296466],[-67,-15008]],[[2935815,4292424],[0,0]],[[2633965,4780309],[-6643,28]],[[2627322,4780337],[-6660,6]],[[2620662,4780343],[-106,65041]],[[2620556,4845384],[13451,289]],[[2610709,5041196],[1294,13327],[232,51763]],[[2612235,5106286],[4591,-376],[-28,-16434],[10204,-196]],[[2627284,5040864],[-12381,294],[-1146,-8842]],[[2613757,5032316],[-3048,8880]],[[2853649,4757414],[2936,14122]],[[2620356,5136128],[5019,4889],[-3485,8158],[-2196,24769],[4949,29842],[5843,11131]],[[2630486,5214917],[-8,-93316]],[[2630478,5121601],[-7776,-1997],[-2346,16524]],[[2598943,5383796],[10656,-1824],[6804,14089]],[[2616404,5300547],[-17474,-147]],[[2627184,4975920],[13381,-720]],[[2640565,4975200],[72,-64891]],[[2633949,4910298],[-6787,167]],[[2842931,4596458],[-1020,17426],[-6205,-94]],[[2634164,4584893],[12807,492]],[[2646971,4585385],[267,-9]],[[2647238,4585376],[-23,-66072]],[[2647215,4519304],[-6445,353]],[[2640770,4519657],[-9648,-578]],[[2525171,5495310],[2612,15954],[6599,16186],[10605,2928],[2527,-12561],[-6870,-3544],[524,-8416],[-8060,-26647]],[[2533108,5479210],[-1991,16127],[-5946,-27]],[[2504477,5605772],[2118,11030],[17612,44897],[3467,3010],[-6895,-33604],[-6383,-10883],[-348,-11597],[-5920,-11741],[-3651,8888]],[[2513444,5447814],[1231,12799],[10496,34697]],[[2533108,5479210],[-6221,-48833]],[[2526887,5430377],[-2824,-95],[7,-16235],[-3539,5],[-12,-80801]],[[2557060,5251862],[1174,-16226],[-49,-65160],[1756,-72]],[[2559941,5170404],[-1710,-22475],[-7239,-49349],[-127,-13313]],[[2543721,5202677],[4164,84],[6,32916],[2210,0],[16,16315]],[[2582357,5209323],[-6914,-20373],[2146,24861],[2836,13293],[-7045,1338],[-1579,-25808],[-4063,-3087],[-107,19617],[-1923,349],[-58,-19464],[-3140,-8743],[-2569,-20902]],[[2575879,5182947],[0,0]],[[2614890,4460964],[-10241,-153]],[[2604649,4460811],[-3666,2]],[[2601774,4518883],[13076,418]],[[2630486,5214917],[7542,-25367],[7174,-4733]],[[2644020,5104630],[-3349,9]],[[2630433,5105233],[45,16368]],[[2589350,4649572],[-486,41319],[-1273,24347]],[[2587591,4715238],[10157,103],[-26,16286],[3280,-141]],[[2647215,4519304],[9975,2032]],[[2657190,4521336],[300,-67175]],[[2657490,4454161],[-3266,-647]],[[2654224,4453514],[-13374,-2525]],[[2640850,4450989],[-80,68668]],[[2653998,5040567],[203,64690]],[[2667954,5106201],[3234,-34382],[-3559,8787],[-1239,-22109],[3416,-17548]],[[2652867,4717937],[-83,16396],[6588,196]],[[2665916,4734849],[205,-64145]],[[2666121,4670704],[-6576,-1717],[81,-16471]],[[2659626,4652516],[-6576,-457]],[[2640565,4975200],[13485,327]],[[2663724,4521930],[6802,1615],[3049,-12140]],[[2673575,4511405],[-3906,-19543],[-3555,-35957]],[[2666114,4455905],[-8624,-1744]],[[2657190,4521336],[6534,594]],[[2613703,4911166],[-6402,-42]],[[2600151,4910993],[95,65281]],[[2600246,4976274],[13479,-124]],[[2627569,4650122],[6,65207]],[[2627575,4715329],[13069,-170]],[[2640759,4651115],[-6661,-1105]],[[2614703,4584494],[-6806,296]],[[2614404,4650010],[6558,170]],[[2653998,5040567],[-13464,-266]],[[2607360,4845750],[13196,-366]],[[2620662,4780343],[-13300,385]],[[2526887,5430377],[346,-28513],[5404,26748],[5569,-3209]],[[2600320,5025231],[4873,99]],[[2605193,5025330],[1300,-1173],[3298,41604],[-1449,-45450],[2367,20885]],[[2613757,5032316],[-32,-56166]],[[2653367,4863511],[-1204,-29924],[1250,-14605],[5857,-14193]],[[2659283,4782733],[-3300,8121],[-6512,321],[-3264,8393]],[[2689723,4822317],[1859,-47336],[1013,-50275]],[[2678856,4721927],[-116,24486],[-3342,7887]],[[2582292,4781492],[-2126,27172],[2994,37792]],[[2583160,4846456],[10954,-709]],[[2594069,4780578],[-11777,914]],[[2614323,4715319],[13252,10]],[[2659626,4652516],[604,-65902]],[[2660230,4586614],[-12992,-1238]],[[2646971,4585385],[-487,65890]],[[2663724,4521930],[-348,65431]],[[2663376,4587361],[13053,2243]],[[2682358,4590368],[-1489,-18551],[-3903,-6436],[-1781,-14768],[-153,-28207],[-1457,-11001]],[[2880571,4781128],[6205,-9477],[11794,36589]],[[2588870,4461061],[-8306,-139]],[[2580564,4460922],[-8372,119]],[[2572192,4461041],[5719,24994],[3740,42004],[3353,23378]],[[2950267,4751983],[-548,-69446]],[[2593134,5025955],[176,23827],[3765,11811],[3460,-3552],[5260,44354],[462,-48672],[-1064,-28393]],[[2598429,5150443],[0,0]],[[2593358,5093689],[2458,-356],[-2,-14169],[-2456,14525]],[[2590804,5069406],[0,0]],[[2509123,2921128],[1945,5411]],[[2520807,2875029],[-4012,-93]],[[2516795,2874936],[-7667,-79]],[[2509128,2874857],[-5,46271]],[[2527952,2397482],[490,-68537]],[[2528442,2328945],[24,-3179]],[[2528466,2325766],[5,-534]],[[2528471,2325232],[-3088,-5264],[-4430,7606],[-2316,-2710],[-2749,10790]],[[2515888,2335654],[-1045,2532],[-39,48384]],[[2514804,2386570],[0,10912]],[[2525322,2299918],[0,0]],[[2517939,2305753],[0,0]],[[2519417,3022449],[4892,2719]],[[2524309,3025168],[9459,-464]],[[2533768,3024704],[-94,-5285]],[[2533674,3019419],[-1161,-58652]],[[2519388,2973186],[29,49263]],[[2491490,3112248],[1473,17]],[[2504724,3079505],[23,-40835]],[[2497385,3038839],[8,5404],[-5895,297]],[[2491240,2752862],[8,46895]],[[2502695,2808532],[43,-66484]],[[2502599,2742044],[-11355,152],[-4,10666]],[[2513971,2807586],[2832,-117]],[[2516803,2807469],[12952,582]],[[2529755,2808051],[-1140,-65692]],[[2528615,2742359],[-14647,-218]],[[2513968,2742141],[3,65445]],[[2518929,3103757],[5425,53],[-9,-8221]],[[2524345,3095589],[-36,-70421]],[[2519417,3022449],[-2941,81]],[[2516476,3022530],[-13,54245]],[[2501865,2448914],[227,-18803]],[[2502092,2430111],[-18,-49076]],[[2488119,2384460],[3182,62944]],[[2491301,2447404],[2064,38]],[[2493365,2447442],[8500,1472]],[[2474487,2878007],[4374,5719]],[[2478861,2883726],[11846,-22256]],[[2484676,2798783],[-11092,24526]],[[2475985,2303013],[970,-1204]],[[2480788,2295698],[-923,-51098],[2230,4965],[1406,-9322]],[[2484786,2153645],[-1881,-160]],[[2482905,2153485],[-3010,8450],[-1356,16131],[846,21373],[-2016,2714]],[[2481255,2103052],[699,8777]],[[2481954,2111829],[-437,-7393]],[[2481517,2104436],[-262,-1384]],[[2482712,2140690],[99,-2814]],[[2482739,2141540],[-27,-850]],[[2482790,2142036],[-51,-496]],[[2482811,2137876],[-21,4160]],[[2482866,2142789],[3,32]],[[2482869,2142821],[0,-7]],[[2482869,2142814],[-3,-25]],[[2482891,2144326],[10,669]],[[2482901,2144995],[-10,-669]],[[2410794,2181013],[59,85929],[-3427,-158]],[[2407426,2266784],[3151,10296]],[[2428994,2266708],[-722,-12465],[556,-31074]],[[2428828,2223169],[-4985,-20076],[1047,-14091],[3104,-1615]],[[2427994,2187387],[-1137,-5896]],[[2426857,2181491],[-3272,-6],[-4200,-9094],[-8591,8622]],[[2430426,2728841],[4758,9921],[2917,20297]],[[2443459,2743077],[-344,-8263]],[[2442583,2710107],[-4408,-82],[-3605,-14002],[-298,-16328],[-3335,-17179]],[[2414261,2349735],[2020,10917],[5838,5485],[1081,37400],[-1122,15099]],[[2422078,2418636],[11073,-93]],[[2433151,2418543],[2273,-27398],[-627,-38183]],[[2233964,2432255],[14455,14]],[[2251058,2350782],[-6704,2580]],[[2233974,2353101],[-10,79154]],[[2066375,2377580],[30056,-40630],[2795,63]],[[2099449,2121755],[-6838,10780],[-3956,17345],[-2286,18857],[-2025,1116],[-4813,22491],[-1623,24647],[-2967,26174],[-963,26120],[24,34312],[-4270,29247],[-354,22650],[-3003,22086]],[[2247600,2730178],[13,-40047],[-2130,-7048]],[[2245483,2683083],[-10399,-34332]],[[2311673,2191255],[2410,-6017]],[[2314083,2185238],[3218,-35604],[3504,-27862]],[[2344828,2703557],[9669,-53],[1648,4563]],[[2356145,2708067],[2435,-145]],[[2358580,2707922],[-2471,-36082],[-543,-42708],[2467,148]],[[2346162,2605241],[-1324,118],[-6,54619]],[[2273538,2820235],[4059,-625]],[[2277597,2819610],[10203,-284]],[[2289358,2092096],[-7348,52493]],[[2282010,2144589],[1003,36709],[1712,8889]],[[2205106,3148201],[80,-34774]],[[2205180,3066867],[-11703,318]],[[2380752,3339548],[-392,-73635]],[[2380360,3265913],[-2695,10217],[-92,-21849],[-2982,1114],[-85,-16776],[-3019,-2919]],[[2370196,3279046],[1445,24107],[-1412,16521],[2493,-315],[2044,18524]],[[2442906,3212421],[2824,-7031],[-133,-26047]],[[2386684,2910434],[-6681,1103]],[[2472359,3164413],[-2114,5309],[896,-22315],[-2629,-7494],[2230,-5198],[-3265,-6161]],[[2414590,3264630],[-2040,-47750]],[[2399014,3210074],[4024,17550]],[[2404305,3282329],[10343,-1386],[-58,-16313]],[[2454772,3278917],[-15,-16933]],[[2454757,3261984],[-5901,620],[-38,16524],[-2628,-1261]],[[2439653,3294964],[5915,-765],[1005,39978],[3760,28091]],[[2428278,2895860],[399,57315]],[[2443122,2894131],[-14844,1729]],[[2454676,3223414],[81,38570]],[[2403109,2972927],[-5871,-6165]],[[2386808,3072300],[1964,-248]],[[2388772,3072052],[1429,-11085],[8966,-8168],[-187,-14573],[4331,-549]],[[2360256,3270113],[-1142,45086]],[[2359114,3315199],[-571,22575]],[[2436601,3430265],[255,-47313],[-788,-11001]],[[2436068,3371951],[-3869,-13916]],[[2368366,3214333],[1845,-13681],[10293,-1285]],[[2380504,3199367],[-150,-51365]],[[2380354,3148002],[-6136,-14915]],[[2374218,3133087],[-2442,5028],[-8344,924],[-3814,5906]],[[2386477,2824776],[-849,34]],[[2385628,2824810],[-7911,138]],[[2475676,3382181],[9182,509]],[[2484858,3382690],[6304,277]],[[2491162,3382967],[2459,-18017]],[[2493621,3364950],[-3367,-2444],[1708,-13418],[-3246,-11744],[-3708,-3876],[1231,-37107]],[[2486239,3296361],[-3918,-4121],[247,-22326]],[[2482568,3269914],[-356,-1375]],[[2482212,3268539],[-817,16663],[-1577,-7797]],[[2478427,3420543],[-5230,-38498]],[[2414590,3264630],[6372,-875]],[[2365491,3044533],[-6313,-494]],[[2359178,3044039],[256,59446]],[[2374218,3133087],[-135,-59056]],[[2391893,3476113],[12316,-76]],[[2403188,3404216],[-1503,185]],[[2391812,3256963],[-3312,-121],[-348,18148],[-7792,-9077]],[[2370134,3476203],[5860,0]],[[2356898,3401989],[-294,11167]],[[2355066,3476331],[15068,-128]],[[2409373,3086036],[-462,11019],[-3006,5709]],[[2416394,3343282],[-5938,418],[-38,-13562],[-4975,754]],[[2428278,2895860],[359,-18003],[-3853,-14740],[-612,-11290]],[[2380504,3199367],[-50,21568],[4927,1965],[2029,13166],[4933,-604],[47,19625]],[[2389158,3147646],[-8804,356]],[[2445912,3362380],[-2952,8645],[-6892,926]],[[2443327,3476001],[1195,-107]],[[2299184,3270681],[-33,11603]],[[2299151,3282284],[118,32998]],[[2299269,3315282],[11926,17]],[[2311195,3315299],[-7,-16320],[2926,41],[8,-32801],[2959,-9]],[[2317079,3249939],[-12816,42]],[[2290581,3168434],[52,12532]],[[2290633,3180966],[0,0]],[[2290633,3180966],[0,8040]],[[2290633,3189006],[4316,-12055]],[[2302887,3178941],[2357,-412],[-9,-26354]],[[2302244,3103098],[-8733,112]],[[2290585,3127697],[-4,40737]],[[2205106,3360569],[3123,20009],[2197,2283],[224,-16733],[2349,-9524],[4419,1165],[1746,21103],[3198,6400]],[[2222507,3347698],[325,-56787]],[[2222832,3290911],[-5891,12],[-6,-16322],[-11809,132]],[[2205106,3311559],[0,49010]],[[2221574,3217109],[1367,418]],[[2222941,3217527],[16992,-73],[3602,-3555]],[[2243570,3168528],[-5748,95],[3,-48863]],[[2230104,3127909],[1411,11907],[-2692,147],[52,27710],[-2764,-5292]],[[2308261,3413228],[825,-56]],[[2309086,3413172],[7445,-129],[-3,49114]],[[2316528,3462157],[5251,-24]],[[2321779,3462133],[-75,-48840],[1497,23]],[[2323201,3413316],[-1,-49029],[-1624,-8406]],[[2321576,3355881],[-5938,173]],[[2315638,3356054],[98,40906],[-7472,77],[-3,16191]],[[2222832,3290911],[-2,-8136]],[[2222830,3282775],[111,-65248]],[[2208221,3201341],[-3115,23]],[[2313996,3135884],[5849,-15],[3,-16275],[5851,62]],[[2325699,3119656],[8,-16294],[-3001,-47],[1,-65484]],[[2316795,3037852],[-11592,94]],[[2305203,3037946],[9,48868]],[[2359114,3315199],[-9324,9]],[[2349790,3315208],[279,97853]],[[2287100,3493969],[4030,993],[-2703,-17223]],[[2288427,3477739],[-622,-32490],[2986,-2],[-4,-16260]],[[2278833,3412626],[-2972,1009]],[[2275861,3413635],[-22,80331]],[[2275839,3493966],[11261,3]],[[2214399,3144119],[9,-40698],[-4961,-38]],[[2245972,3469557],[11957,-22]],[[2257929,3469535],[15,-55821]],[[2257944,3413714],[-2971,2]],[[2254973,3413716],[-11879,1]],[[2234208,3413096],[-125,64639]],[[2234083,3477735],[9332,-21399],[2558,935],[-1,12286]],[[2245664,3569795],[5503,-112]],[[2257933,3493956],[-4,-24421]],[[2245972,3469557],[-308,100238]],[[2333065,3569900],[9308,45]],[[2344209,3569938],[229,-61559]],[[2344262,3478292],[-8984,64]],[[2335278,3478356],[-5,16359],[-2876,-17]],[[2273076,3021807],[16470,-14]],[[2290243,2998995],[-2141,-19248],[-1913,-453],[112,-18569],[-2978,3001],[338,25160],[-3532,-1347],[-1869,-13001],[-2467,4389],[-583,13759]],[[2187472,3570048],[15152,403]],[[2202624,3570451],[2421,-103]],[[2205029,3493895],[-17,-17483]],[[2205012,3476412],[-15111,-94]],[[2189901,3476318],[-11368,107]],[[2325699,3119656],[4393,56],[-6,16281]],[[2330086,3135993],[4390,-10]],[[2334476,3135983],[0,0]],[[2334476,3135983],[8284,-65]],[[2346160,3103368],[-3041,74],[4,-49332],[-2915,44],[-148,-16273]],[[2273033,3103406],[-7,-40777]],[[2256960,3062740],[-82,40658]],[[2256878,3103398],[10,32599],[1468,-7]],[[2258356,3135990],[11721,41]],[[2270077,3136031],[2944,-36],[12,-32589]],[[2344106,3413141],[-2986,-35],[3,-16301],[-2495,31]],[[2338628,3396836],[-6465,92]],[[2332163,3396928],[122,81414],[2993,14]],[[2300252,3029925],[3664,-10],[1287,8031]],[[2320836,2978526],[-2171,8397],[-6262,-8915],[-573,-12716],[-5841,-8121]],[[2275818,3569786],[8766,62]],[[2295669,3569839],[-71,-40598],[-3819,-5777],[-1183,-12191],[-3683,-353],[187,-16951]],[[2275839,3493966],[-24,-1]],[[2324558,3298961],[-4,32569],[-1482,-10],[3,24455]],[[2323075,3355975],[3225,66],[337,-12946],[10382,4806]],[[2337019,3347901],[3859,-97],[-8,-32542]],[[2340870,3315262],[-139,-21095],[2299,-12597]],[[2343030,3281570],[-5401,-36922],[-2810,5889]],[[2227213,3071818],[-4698,22556],[-646,-15527],[-2128,3762]],[[2148494,3476548],[-3625,-47]],[[2121473,3570048],[26749,-1328]],[[2216106,3493802],[264,-80241],[5963,45]],[[2205106,3360569],[0,32704]],[[2205106,3393273],[-94,83139]],[[2355065,3569823],[-9,-43489]],[[2355056,3526334],[6,-18464]],[[2269988,3258556],[2,293]],[[2269990,3258849],[3191,-9184],[433,-13902],[5260,-26342],[311,-20483],[5549,-6706]],[[2284734,3182232],[3522,-3897],[2377,10671]],[[2290581,3168434],[-20495,133]],[[2270086,3168567],[-98,89989]],[[2767636,3987529],[3412,7650],[5575,-14318]],[[2780231,3937736],[-4210,1997],[-7715,11648],[-1098,14674]],[[2698610,3866287],[1902,1665]],[[2705077,3846027],[223,-18738]],[[2699234,3800105],[-6782,34066]],[[2692452,3834171],[5134,7125],[1024,24991]],[[2799750,4044545],[-5395,-38192],[-3599,-17495]],[[2808387,4031606],[217,-21975],[-2233,-17058],[438,-16850],[-2909,-14754]],[[2708976,3818148],[417,13659],[4860,12738],[-690,23283],[1510,6629]],[[2715073,3874457],[1770,-13488],[3083,10927]],[[2719926,3871896],[1582,-11765],[7558,-4167]],[[2728020,3806527],[-2782,-17956],[-1374,-37149]],[[2723864,3751422],[-2112,3407]],[[2753971,3963819],[-482,-27180],[-1936,-15692],[-169,-27560]],[[2751384,3893387],[-1791,2172]],[[2749593,3895559],[-1852,23144],[-2284,7739]],[[2742043,3962289],[3683,13363]],[[2729948,3950109],[3589,-3935]],[[2734893,3891578],[-1302,-9370]],[[2732142,3871752],[-2093,6086],[-281,16106],[-3051,34501]],[[2713655,3962233],[-246,15944]],[[2713409,3978177],[849,6616]],[[2714258,3984793],[1544,11241],[2924,39],[3039,24914],[2365,-12608]],[[2724130,4008379],[3672,-13774]],[[2727802,3994605],[-1631,-15491]],[[2718274,3949280],[-4619,12953]],[[2734256,4010065],[-6454,-15460]],[[2724130,4008379],[4289,8549],[2669,13136]],[[2745099,4028680],[2065,-3980]],[[2739685,3964858],[-2810,30611],[699,3997]],[[2723864,3751422],[2388,-14936],[6181,-2517],[3571,-10621]],[[2736004,3723348],[1746,-25904],[-1800,6498],[-4112,-23731]],[[2728286,3665565],[-2777,16373],[-3964,35212],[-1398,974]],[[2765269,4025911],[-24,-25456]],[[2064277,4180557],[-16667,-250]],[[2047610,4180307],[-5617,42263]],[[2041993,4222570],[-5378,59596],[-3827,24206],[-146,11906]],[[2067389,4318398],[-61,-121499],[-3096,34],[45,-16376]],[[2091970,3707548],[82,-16969],[18217,-88]],[[2110269,3690491],[9149,-30]],[[2119418,3690461],[-283,-120384]],[[2061492,3569142],[24,55753]],[[2061516,3624895],[5780,18403],[5511,2916],[1761,16651],[3818,14734],[2612,31096],[2893,14348]],[[2083891,3723043],[8079,-15495]],[[2737756,3776569],[3130,-22123],[-1016,-21777]],[[2739870,3732669],[-3866,-9321]],[[2755495,3829913],[1715,25620],[-2678,31734]],[[2754532,3887267],[4290,9539],[1143,37698]],[[2780448,3936427],[-2959,-5279],[-2312,-16452],[808,-11361],[-3252,-21806]],[[2043610,3806815],[-5958,33975]],[[2037652,3840790],[2842,11056],[824,19033],[-2524,16141]],[[2038794,3887020],[17848,683]],[[2056642,3887703],[2474,-9284],[8300,428]],[[2067416,3878847],[25,-24392]],[[2067441,3854455],[33,-48908],[-3033,-56]],[[2064441,3805491],[-20831,1324]],[[2690078,3836159],[2374,-1988]],[[2695058,3730159],[-2314,16842]],[[2692744,3747001],[-1489,23455],[-2346,12438],[859,20667]],[[2689768,3803561],[310,32598]],[[2817132,3993908],[-5449,23701]],[[2717548,3717656],[-4380,-6852],[1755,-9488],[-2820,-7656]],[[2720470,3929017],[-1226,-45958],[682,-11163]],[[2715073,3874457],[-2131,10184]],[[2709158,3921630],[4029,25404],[468,15199]],[[2750173,3807242],[2131,-7765]],[[2763454,3769126],[-2681,-20915]],[[2760773,3748211],[-5358,-34384],[-1331,-14314]],[[2743853,3706985],[-3983,25684]],[[2021257,3944004],[3738,-16403],[3871,122],[-2254,-15287],[-1257,-24437],[2011,-11286],[1387,-27102],[2317,-13274]],[[2031070,3836337],[-20997,532],[-14,-52136]],[[2010059,3784733],[-15811,35]],[[1994248,3784768],[-1850,28944]],[[1992398,3813712],[3761,6],[-17,68623]],[[1996142,3882341],[0,102828]],[[1996142,3985169],[2958,7183]],[[1999100,3992352],[3120,-25750],[6022,16],[4406,-23627],[2961,-2672],[1465,12021],[4183,-8336]],[[2725804,3649487],[-9563,18493],[-2090,-5377],[-3524,10168]],[[2036856,3645058],[11,-8216],[8235,-29]],[[2045102,3636813],[648,-13282],[-1398,-42037],[1443,-12244]],[[2024683,3568859],[-5631,43952],[-2,32761]],[[2019050,3645572],[17806,-514]],[[2744203,3855769],[3960,22266],[1430,17524]],[[2751384,3893387],[3148,-6120]],[[2788601,3899723],[-4656,-53078]],[[2783945,3846645],[-2449,-12347]],[[2781496,3834298],[-4580,8489],[-1678,17536],[-3126,7599]],[[2736040,4057982],[3072,21317]],[[2009143,4116379],[11352,1099]],[[2020495,4117478],[5351,24]],[[2025846,4117502],[1366,-29527],[5833,-28627],[-2105,-27924],[1251,-15986]],[[2032191,4015438],[-6123,-3324]],[[2026068,4012114],[-19138,785]],[[2006930,4012899],[-7,103517],[2220,-37]],[[2713853,3614530],[-3160,9350],[-3985,35376],[1920,6628]],[[2738417,3650197],[-27,222]],[[2291028,4131838],[3083,-3]],[[2294089,4050401],[-4243,-4]],[[2262949,3855052],[-15,16306]],[[2262934,3871358],[15404,-98]],[[2278338,3871260],[4,-81548]],[[2278342,3789712],[-9196,26]],[[2198230,3887884],[2601,-155]],[[2162571,3707848],[12187,5]],[[2174758,3642601],[-12152,125]],[[2330471,3920012],[-1,-24521]],[[2330261,3838425],[-12315,34]],[[2318049,3920042],[12422,-30]],[[2329902,3641902],[12062,-29]],[[2232361,3757249],[246,-32737]],[[2232607,3724512],[-7,-17290]],[[2345286,4022784],[2229,-4950],[-266,-17591],[3426,-18314]],[[2342854,3941034],[-3005,-92],[-641,11695]],[[2342252,3764261],[335,65932]],[[2342587,3830193],[12610,-230]],[[2355197,3829963],[-23,-61517]],[[2355174,3768446],[-1,-4305]],[[2293722,3854996],[-3071,-9],[-9,16274]],[[2291757,3920059],[10830,-67]],[[2231133,4050713],[608,-10]],[[2216117,3969178],[81,81393]],[[2232627,3658079],[15266,112]],[[2247893,3658191],[-8,-16271],[3208,-6]],[[2245664,3569795],[-12695,134]],[[2329962,3764360],[297,65894]],[[2184475,4050704],[57,81248]],[[2165724,4050763],[692,2]],[[2148081,3969302],[-73,81428]],[[2199092,3658973],[-12158,-64]],[[2232059,3887620],[15236,23]],[[2247295,3887643],[160,-32762]],[[2247470,3806018],[-12057,56]],[[2202624,3570451],[-57,71995],[-438,16460]],[[2262934,3871358],[-106,48896]],[[2262829,3936592],[15517,-101]],[[2266193,3707389],[6,-48605]],[[2266199,3658784],[15,-16452]],[[2247893,3658191],[-4,48977]],[[2284451,3740870],[-15309,-263]],[[2278342,3789712],[6092,179],[5,-16271]],[[2289775,3985573],[3107,-200],[-34,-24449],[9749,-2921],[0,-5449]],[[2182307,3888202],[3641,29]],[[2174379,3806723],[-618,-9]],[[2173761,3806714],[-82,81627]],[[2262737,4050494],[-15477,107]],[[2246761,4050622],[23,81363]],[[2317647,3683038],[3,24434]],[[2329780,3707183],[-1,-65283]],[[2317630,3642398],[17,40640]],[[2858926,3983243],[2909,-14210],[964,-22535],[-4619,-45663],[854,-10069]],[[2859034,3890766],[-4378,6534]],[[2850365,3963686],[3992,20766]],[[2859052,3985090],[-30,-150]],[[2252208,4671110],[4365,-8164]],[[2256573,4662946],[3901,-14369],[3832,18051],[6690,-1335]],[[2270996,4665293],[4193,-218]],[[2252474,4587688],[-137,60700]],[[2324641,4229599],[2293,-35824],[2030,-12719]],[[2328964,4181056],[65,-478]],[[2240739,4262374],[-15,65094]],[[2252958,4262258],[-12219,116]],[[2227315,4392506],[-244,64851]],[[2278445,4457843],[-12884,-182]],[[2240601,4132005],[-9491,-9]],[[2265579,4417219],[3517,117],[-4,-24694]],[[2167634,4262221],[2713,-53]],[[2291134,4229566],[12509,-114]],[[2278436,4262321],[-12716,-15]],[[2147961,4262118],[1,9743]],[[2147962,4271861],[-8,47313]],[[2225816,4656453],[313,-4081],[312,-129993]],[[2240657,4260665],[82,1709]],[[2541250,4222508],[11394,996]],[[2552644,4223504],[-7,-2688]],[[2552637,4220816],[-135,-61534]],[[2552502,4159282],[-50,-49625]],[[2500548,4543702],[-8143,-525]],[[2542008,3916324],[-117,-52410]],[[2532375,3869417],[-1213,6591],[1081,39831]],[[2507975,3780553],[-495,16500]],[[2504081,4242800],[158,-50347]],[[2494787,4191477],[-3119,-171],[-60,21793],[-5784,50]],[[2485824,4213149],[1455,14452]],[[2526339,4028056],[-9,-13575]],[[2519707,3682199],[-59,-49076]],[[2510433,3681692],[9274,507]],[[2484156,4346690],[3237,-77],[295,16009]],[[2493800,4346545],[-9,-32734]],[[2536880,3736792],[-7867,3272]],[[2539784,3805301],[117,-4981]],[[2539901,3800320],[2025,-12758],[-1565,-17797],[-2040,-3493],[755,-28748],[-2196,-732]],[[2483882,4107758],[-3,5441]],[[2466910,3966390],[-282,52069]],[[2513223,4485647],[-11685,-691],[-7485,2537]],[[2532424,4405413],[-9580,-1135]],[[2522677,4453417],[9472,952]],[[1870348,4003238],[42,-50369]],[[1870390,3952869],[-5868,-33739],[172,-25722],[-2541,-9630],[-3843,924],[-1878,-20373]],[[1884414,4397926],[2516,-11555]],[[1886930,4386371],[-2120,-25174],[-2764,2296],[-2294,-10877],[-5021,3060],[57,-10904]],[[1874788,4344772],[-9284,2550],[-8465,-14227]],[[1953019,4255579],[-66,-82346]],[[1952953,4173233],[-11,-105229]],[[1952942,4068004],[-4,-30471]],[[1952938,4037533],[-1550,-6681],[-25553,-53]],[[1925835,4030799],[1,1357]],[[1927410,4095240],[-276,187896]],[[1870390,3952869],[4478,-2315],[15437,-135]],[[1890305,3950419],[-179,-97721]],[[1890126,3852698],[-12841,-1535]],[[1877285,3851163],[-20945,1473]],[[1901379,4258493],[279,-145814]],[[1901658,4112679],[-5309,188],[-3436,27554],[-563,22558],[-2475,22402],[-3110,-124],[-3588,14186],[-1831,16277],[753,23850]],[[1883237,4245614],[1770,-1910],[2681,17008],[515,-10730],[6227,-15787],[3337,5152],[3612,19146]],[[1925800,3850789],[-305,28512],[-3516,39608],[257,28597],[3599,83293]],[[1952938,4037533],[16,-24521]],[[1952954,4013012],[-257,-162222]],[[1952697,3850790],[-26897,-1]],[[1845683,3663568],[-6,8172],[6074,-40]],[[1851751,3671700],[8968,-1266],[47779,868]],[[1908498,3671302],[-3662,-40817],[-2562,4810],[-812,-32136],[-1743,-10050],[-6041,-3874],[-1926,-15164],[-4607,-3761]],[[1887145,3570310],[-31365,-159]],[[1855780,3570151],[-10051,-50]],[[1857449,3784782],[293,-48080],[-3351,-9],[275,-16075],[-3082,239],[167,-49157]],[[1880787,4281126],[3155,-2481],[1341,13577],[-3159,25208],[2351,13050],[6794,15252]],[[1891269,4345732],[6081,20115]],[[1926488,4283871],[-7239,4065],[-3313,-9035],[-7746,-8725],[-2598,1312],[-4213,-12995]],[[1902606,4096446],[-948,16233]],[[1877285,3851163],[-2289,-14409],[170,-51233]],[[1875166,3785521],[-16746,-251]],[[1890126,3852698],[-1,-1911],[35675,2]],[[1925800,3850789],[688,-24215],[2611,-18820],[-582,-22120]],[[1928517,3785634],[-41417,-338],[-11934,225]],[[1863444,4276327],[-6405,56768]],[[1874788,4344772],[1147,-33989],[2134,-18058]],[[1880800,4096558],[10950,47]],[[1891754,4076266],[2,-44446],[-1502,28],[51,-81429]],[[1865778,4133721],[843,37580],[-1179,9661],[-569,36552],[1087,1438]],[[1717279,2915852],[3868,-2709],[3612,-10959],[32210,-1135]],[[1756383,2749944],[-28381,-15814],[-406,17389],[-2970,7916],[-157,38370],[-2137,46326],[-4939,39723],[-2514,9839]],[[1606173,4214960],[4730,-42]],[[1610903,4214918],[7424,219],[-3,-35586],[3703,-12071],[4575,23226],[7065,-12553],[4720,-25026],[3671,-5472],[233,-13577],[2577,-13844],[-1069,-43397]],[[1643799,4076837],[-17980,400],[-2260,12368],[-3785,-25533]],[[1617901,4056174],[-3740,24031],[-5600,27283],[-211,27018],[1468,13158],[-1953,12325]],[[1602095,3550187],[1746,965]],[[1614036,3562774],[2059,-23319],[6207,-18021]],[[1622302,3521434],[8777,-47195],[199,-29901],[-2285,-11450]],[[1607597,4353076],[3196,75]],[[1610793,4353151],[330,-52035],[-220,-86198]],[[1562493,4185269],[1860,24553],[8355,28292],[-1483,22572],[2617,18272],[1587,34541],[4011,23315],[-1149,16109]],[[1637099,3688642],[-1,-63]],[[1637098,3688579],[-16625,-43800],[561,-10028],[-7315,-39497]],[[1606868,3660279],[21,-73]],[[1606889,3660206],[8807,44560],[4460,7544],[2092,-4072],[-161,63458]],[[1629715,3725651],[7384,-37009]],[[2689135,2572881],[2951,7136]],[[2665374,2605570],[740,-16743]],[[2664802,2558154],[-4142,-4870]],[[2660660,2553284],[-4109,10287],[-149,33797]],[[2656402,2597368],[5281,119],[11,9350]],[[2669256,2378904],[-470,192]],[[2674946,2376589],[-4810,1954]],[[2660581,3162546],[-819,-4194]],[[2652663,3193334],[10783,938]],[[2711043,2755644],[-749,6019],[2795,42706]],[[2719378,2829870],[3811,-56283]],[[2723189,2773587],[441,-27990]],[[2723630,2745597],[-4424,-19866]],[[2719206,2725731],[-3946,10671],[-4217,19242]],[[2624729,2863382],[2136,-6274]],[[2626882,2797458],[-8982,-368]],[[2617900,2797090],[-1344,44465]],[[2616556,2841555],[-115,4021]],[[2616441,2845576],[8288,17806]],[[2672441,2743498],[7507,23231]],[[2688567,2730078],[-2068,-38039]],[[2686499,2692039],[-4537,-21190]],[[2681962,2670849],[-2958,-9134],[-4124,51623]],[[2633576,3193491],[8348,15]],[[2641924,3193506],[5361,-160]],[[2646488,3129837],[-850,-8527]],[[2658031,2383033],[-7347,2571]],[[2650684,2385604],[-2126,688]],[[2648558,2386292],[189,44891],[-1106,30384]],[[2650790,2461440],[-7,-6683],[7459,-731]],[[2633909,2915383],[-6719,1675]],[[2628354,2928779],[4248,15972],[2182,15740]],[[2639220,3022221],[2526,21122],[1936,-45]],[[2643179,3000583],[-1970,1891],[-75,-59877]],[[2705771,2734993],[3109,-23152],[-1405,-27383]],[[2705907,2686349],[-5780,7479]],[[2628051,2540785],[54,22195]],[[2635655,2563246],[2688,125]],[[2638343,2563371],[572,-34665]],[[2638915,2528706],[-5787,-512]],[[2638915,2528706],[8044,657]],[[2636736,2461648],[-964,118]],[[2690886,3000215],[6082,-22817],[3553,-27614]],[[2694763,2943107],[-1510,-2076]],[[2656402,2597368],[-3823,8316]],[[2659219,2763600],[-2,107]],[[2659217,2763707],[2884,-5210]],[[2655116,2688611],[47,33233]],[[2643715,3079814],[-9056,92],[-1967,5821]],[[2632692,3085727],[-32,25524]],[[2632801,2677752],[3404,-18417],[2672,-93]],[[2638526,2628058],[-264,-9028],[-4081,177]],[[2632620,2619233],[181,58519]],[[2705260,2601781],[2215,-7065]],[[2707475,2594716],[8521,-46917]],[[2715996,2547799],[1085,-16039]],[[2722331,2679313],[-2760,28504],[-365,17914]],[[2723630,2745597],[3008,-7291]],[[2726638,2738306],[2624,-17506],[1630,-23534],[-446,-20792]],[[2661611,3089314],[-1514,-12203],[1378,-13341]],[[2661475,3063770],[-5504,-31405]],[[2651430,3086812],[3824,16305]],[[2660185,3102762],[1426,-13448]],[[2673020,2615493],[7742,43976]],[[2680762,2659469],[1120,-10366],[4423,-13683],[2319,-16454]],[[2688624,2618966],[-5313,-19228]],[[2678872,2593155],[-5064,12517]],[[2664258,4225907],[2838,216]],[[2667096,4226123],[4742,338],[-12,-11801]],[[2671826,4214660],[5,-37347],[2120,-38],[65,-18936]],[[2673005,4151720],[-8287,700]],[[2664718,4152420],[257,21337],[-1584,732]],[[2663391,4174489],[867,51418]],[[2714717,4214807],[-88,-13845],[2682,-503],[-185,-27479]],[[2717126,4172980],[-2608,-12942]],[[2714518,4160038],[-13118,2754]],[[2701400,4162792],[-245,13512]],[[2701155,4176304],[315,40657]],[[2701470,4216961],[13247,-2154]],[[2675886,4672240],[-9765,-1536]],[[2647707,5250554],[-7303,-8679],[-5223,18812],[-3590,-1018],[-1511,-35830],[-7150,31920],[-9258,16184],[-5173,-250],[-3967,-23256],[-5612,232]],[[2632744,5228939],[8228,-17024],[-4036,-6482],[-4192,23506]],[[2638782,4197865],[7,51]],[[2638789,4197916],[2661,4530],[-6,19194],[9381,344]],[[2650825,4221984],[-345,-39243]],[[2650480,4182741],[-227,-16755]],[[2650253,4165986],[-11414,2450]],[[2638839,4168436],[-57,29429]],[[2654634,3990675],[-3551,1291]],[[2651083,3991966],[-381,157]],[[2651532,4050915],[8548,-3541]],[[2660080,4047374],[2616,-1068],[-406,-31035]],[[2662290,4015271],[-6826,-29093],[-830,4497]],[[2638782,4197865],[-10288,-281]],[[2628494,4197584],[40,41077]],[[2628534,4238661],[5,29187]],[[2628539,4267848],[9643,29],[0,-8131]],[[2638182,4259746],[21,-61071],[586,-759]],[[2701470,4216961],[-989,20950]],[[2700481,4237911],[-16,18600],[2632,122]],[[2703097,4256633],[13266,-21]],[[2716363,4256612],[24,-6180]],[[2716387,4250432],[-570,-35795],[-1100,170]],[[2667200,4412363],[2130,-7996],[10753,136]],[[2680083,4404503],[2912,-5194],[174,-26292]],[[2683169,4373017],[39,-6492]],[[2683208,4366525],[-16153,-250]],[[2667055,4366275],[145,46088]],[[2697618,3949559],[451,33284],[1061,-324]],[[2699130,3982519],[14279,-4342]],[[2703856,3936589],[97,8311],[-6335,4659]],[[2734387,4412635],[-14,39954]],[[2734373,4452589],[42,26161]],[[2734415,4478750],[13448,22951]],[[2747869,4412306],[-13482,329]],[[2627184,4975920],[100,64944]],[[2640534,5040301],[31,-65101]],[[2726587,4057771],[-1004,19010],[154,30342],[2125,-306]],[[2727862,4106817],[11591,-3341]],[[2733395,4045433],[54,6033],[-6862,6305]],[[2654634,3990675],[-182,-42307],[5549,-164]],[[2660001,3948204],[-899,-71235]],[[2659102,3876969],[-5533,24021]],[[2653569,3900990],[-4146,569]],[[2649423,3901559],[1660,90407]],[[2649469,4109058],[-75,-5492]],[[2649394,4103566],[-1092,-2268],[-592,-48733]],[[2640716,4054719],[-3176,287]],[[2637540,4055006],[-171,61294]],[[2637369,4116300],[1656,211]],[[2639025,4116511],[7473,627],[2971,-8080]],[[2736092,4211049],[2129,-331],[-484,-49308]],[[2737737,4161410],[-9557,1979]],[[2728180,4163389],[-3125,8270]],[[2725055,4171659],[1748,16693],[150,24341]],[[2726953,4212693],[9139,-1644]],[[2641404,4292359],[6434,354],[2,8187],[6383,2938]],[[2654223,4303838],[10,-18813]],[[2654233,4285025],[-4,-32798]],[[2654229,4252227],[-6341,-304],[-3204,8027],[-4847,-192]],[[2639837,4259758],[-17,24522],[1584,8079]],[[2698610,3866287],[-2073,449],[200,17013],[-3288,1162],[-309,16845],[-2761,1273],[198,12241]],[[2690577,3915270],[3354,19],[554,35657]],[[2694485,3950946],[3133,-1387]],[[2686354,4264676],[66,53240]],[[2686420,4317916],[8133,-505]],[[2694553,4317411],[458,-30572],[2151,-19265],[63,-32136]],[[2697225,4235438],[-7986,-959]],[[2689239,4234479],[-100,29863],[-2785,334]],[[2697076,4371806],[-161,27118]],[[2696915,4398924],[10586,14598]],[[2707501,4413522],[-87,-29042],[2627,-109],[-30,-14157]],[[2701835,4330625],[-4597,415]],[[2697238,4331040],[-162,40766]],[[2649469,4109058],[417,30019]],[[2649886,4139077],[14486,-5615]],[[2664372,4133462],[-2003,-45185],[-1648,796]],[[2660721,4089073],[-5022,9288],[-6305,5205]],[[2636789,3962195],[-3276,-3899]],[[2633513,3958296],[-3527,13715],[-1945,-7886]],[[2628041,3964125],[20,37372]],[[2628061,4001497],[12990,-2409]],[[2643663,3995067],[-1589,-8177],[-98,-38480]],[[2641976,3948410],[-5187,13785]],[[2628539,4267848],[-18,36391]],[[2628521,4304239],[-9,12507]],[[2628512,4316746],[11249,173]],[[2639761,4316919],[1643,-24560]],[[2639837,4259758],[-1655,-12]],[[2671719,4074550],[-398,-33540]],[[2671321,4041010],[-2953,-25986]],[[2668368,4015024],[-6078,247]],[[2660080,4047374],[470,31188]],[[2660550,4078562],[11169,-4012]],[[2639760,4450843],[1090,146]],[[2654224,4453514],[-71,-43526]],[[2641366,4409610],[-1082,5320],[-524,35913]],[[2664379,4284691],[2663,32523]],[[2667042,4317214],[8569,292]],[[2675611,4317506],[39,-54382]],[[2675650,4263124],[-8595,-3012]],[[2667055,4260112],[-2116,2770],[-560,21809]],[[2688074,3851875],[-4195,12170]],[[2688502,3916130],[2075,-860]],[[2690078,3836159],[-2004,15716]],[[2628504,4366006],[-1,3502]],[[2628503,4369508],[-14,28971]],[[2628489,4398479],[12883,284]],[[2644533,4349776],[-3159,-62]],[[2641374,4349714],[-3221,16464],[-9649,-172]],[[2734373,4452589],[-2748,-156],[23,-13637],[-5384,-106],[-33,-13277],[-2651,-44]],[[2723580,4425369],[-2720,11536]],[[2720860,4436905],[5620,24126],[7935,17719]],[[2639760,4450843],[-11324,-1814]],[[2628436,4449029],[-534,11957]],[[2587591,4715238],[-5299,66254]],[[2696178,4066972],[-149,-10897],[6150,-7518]],[[2702179,4048557],[-229,-16895],[-3149,1235],[-258,-16606]],[[2698543,4016291],[-6264,2167],[-86,-4923],[-6436,-244]],[[2685757,4013291],[219,18753]],[[2685976,4032044],[256,16115]],[[2686232,4048159],[3178,10136],[3381,-1076],[161,11015],[3226,-1262]],[[2705289,4047482],[649,32542],[-1460,8662]],[[2704478,4088686],[10565,-2881]],[[2715043,4085805],[3044,-31558]],[[2718087,4054247],[-3518,-512],[165,-19365],[-3799,-5720]],[[2710935,4028650],[-5876,1841],[230,16991]],[[2663376,4587361],[-3146,-747]],[[2627575,4715329],[-253,65008]],[[2640586,4780316],[56,-63189]],[[2734410,4343849],[-28,39994]],[[2734382,4383843],[5,28792]],[[2747874,4343700],[-13464,149]],[[2737737,4161410],[5008,-415]],[[2727862,4106817],[91,15617]],[[2727953,4122434],[227,40955]],[[2620605,4911001],[-49,-65617]],[[2641374,4349714],[-9,-32724],[-1604,-71]],[[2628512,4316746],[-8,49260]],[[2650825,4221984],[3411,10404]],[[2654236,4232388],[10022,-6481]],[[2663391,4174489],[-12911,8252]],[[2732055,4316516],[4,-16200]],[[2732059,4300316],[-17,-32530]],[[2732042,4267786],[-4177,-800],[-2243,-13471]],[[2725622,4253515],[-9235,-3083]],[[2716363,4256612],[65,46095]],[[2716428,4302707],[6333,-1475],[752,15352]],[[2723513,4316584],[8542,-68]],[[2683169,4373017],[495,-90]],[[2683664,4372927],[0,0]],[[2683664,4372927],[13412,-1121]],[[2697238,4331040],[-2798,-70],[113,-13559]],[[2686420,4317916],[-2918,184]],[[2683502,4318100],[-294,48425]],[[2612235,5106286],[442,11843],[4512,16117],[3167,1882]],[[2612046,5213158],[0,0]],[[2608419,5222753],[0,0]],[[2605478,5179397],[1771,30333],[1885,-6350],[207,-21830],[-3863,-2153]],[[2603477,5205221],[0,0]],[[2583160,4846456],[-2331,44682],[3562,22567]],[[2584391,4913705],[9609,-2171]],[[2743725,4240585],[-5406,3165]],[[2738319,4243750],[-1537,23871],[-4740,165]],[[2732059,4300316],[15812,-328]],[[2684812,4120262],[8907,-1737]],[[2693719,4118525],[-267,-17437],[2112,-780],[614,-33336]],[[2686232,4048159],[-3104,1317],[521,43708]],[[2689239,4234479],[-638,-38333],[-2742,848]],[[2685859,4196994],[-5145,1593],[-2541,14165]],[[2678173,4212752],[1738,10645],[16,28915],[2773,11206]],[[2682700,4263518],[3654,1158]],[[2628257,4116005],[9112,295]],[[2637540,4055006],[8,-4162],[-9362,-202]],[[2628186,4050642],[16,29744]],[[2628202,4080386],[55,35619]],[[2584391,4913705],[3292,31191],[981,32372]],[[2667200,4412363],[-36,22218]],[[2667164,4434581],[6971,808]],[[2674135,4435389],[6446,-20382],[2793,13706],[3884,-17526]],[[2687258,4411187],[-7175,-6684]],[[2683110,4439837],[0,0]],[[1225088,7683006],[-3015,40929],[-3139,18699],[2830,-38339],[-2266,261],[-466,-21994],[6987,-66472],[-1310,-7509],[2797,-28680],[911,-43637],[-8040,15144],[-2856,24164]],[[1188567,7736771],[342,38012],[4804,-12],[1254,29858],[8664,7516],[6225,12302]],[[1229170,7752542],[1874,-12165],[7233,-6090],[3780,-22380],[2380,-37],[4271,-30817]],[[1220251,7691648],[0,0]],[[609594,7614861],[5279,18400],[2567,33795]],[[593213,7627679],[-4058,-6623]],[[596048,7633977],[-1281,-3057]],[[615078,7666897],[-1289,-3794]],[[613789,7663103],[-2026,-3709]],[[611445,7658888],[-410,-653]],[[611035,7658235],[-716,-744]],[[609370,7657226],[-2164,-3445]],[[607206,7653781],[-2129,-4990]],[[602068,7644573],[-134,-1417]],[[601704,7641949],[-4064,-4593]],[[2471143,2973198],[7496,-387],[-3303,-20614],[4579,4203]],[[2480166,2948035],[735,-40807],[-2044,-7850],[4,-15652]],[[2471098,2882997],[45,90201]],[[2493360,2528171],[1877,-22]],[[2495237,2528149],[3767,64]],[[2499004,2528213],[15,-16405],[2876,59],[-30,-62953]],[[2493365,2447442],[-5,80729]],[[2513165,2601312],[916,390]],[[2526263,2614282],[245,-36669]],[[2526508,2577613],[418,-49061]],[[2526926,2528552],[-10929,-401]],[[2515997,2528151],[-2835,-45]],[[2513162,2528106],[3,73206]],[[2453920,2739492],[732,2520]],[[2463663,2749985],[4633,-20830]],[[2455023,2655553],[-16,1179]],[[2454373,2657436],[-3044,1550],[1080,14677]],[[2530276,3095270],[-5931,319]],[[2518958,3120147],[471,30005]],[[2484870,2520064],[3778,-88],[-25,8249],[4737,-54]],[[2491301,2447404],[-3003,-47]],[[2475241,3169582],[2853,-40],[54,-25447]],[[2478148,3144095],[44,-31819]],[[2478194,3104164],[-2947,-275],[69,-15924],[-2721,-138]],[[2490549,2591969],[2844,1124]],[[2493393,2593093],[7015,3034]],[[2500408,2596127],[57,-67914]],[[2500465,2528213],[-1461,0]],[[2495237,2528149],[-2,14929],[-4700,18026],[14,30865]],[[2513165,2601312],[-10398,-4207]],[[2502767,2597105],[-171,78872]],[[2491246,2642960],[-10,32750]],[[2491236,2675710],[11360,267]],[[2502767,2597105],[-2359,-978]],[[2493393,2593093],[-253,49898],[-1894,-31]],[[2471160,3005822],[-17,-32624]],[[2463770,2871869],[-1324,60],[8,48485]],[[2458252,2822766],[-4,16793],[5924,-210]],[[2465431,2806820],[-2873,-16236],[1743,-3481],[-723,-29020]],[[2422078,2418636],[-1896,21800]],[[2427778,2507955],[448,-18652],[1816,12856],[2579,-5332]],[[2435699,2455257],[-733,-4762]],[[2434966,2450495],[-1556,-8658],[-259,-23294]],[[2396490,2335239],[-1,3849]],[[2396489,2339088],[9907,2628],[44,9477],[4002,-77]],[[2410442,2351116],[-46,-1259]],[[2407426,2266784],[-7182,215]],[[2406351,2719025],[-2844,124],[-43,24550]],[[2407793,2776316],[5751,-7256],[2896,-9492],[0,-16324]],[[2416432,2726891],[-5767,174],[19,-8125],[-4333,85]],[[2434966,2450495],[2558,-4576]],[[2437407,2441426],[32,-21201],[4060,797],[-1042,-24437],[4804,5241],[1386,-18740]],[[2446647,2383086],[-2338,-27545],[-1959,-2691]],[[2467924,2381465],[-1,65459]],[[2468469,2446921],[5582,152]],[[2474051,2447073],[2552,-54024]],[[2394929,2661928],[6911,-87]],[[2400881,2579667],[1817,-15677],[2844,-4983],[2431,-15152]],[[2400660,2511857],[-7095,3343]],[[2387852,2605181],[16,12821],[2372,3461]],[[2777857,3580485],[1654,11478],[4636,315],[629,-11802],[2849,1063]],[[2787625,3581539],[-3521,-97305]],[[2784104,3484234],[-3456,-51]],[[2780648,3484183],[1065,7644],[-2629,11668],[-2849,-4921],[862,-14493]],[[2777097,3484081],[-1137,-7]],[[2775960,3484074],[-5681,216]],[[2770279,3484290],[2068,58810]],[[2772347,3543100],[1298,34835]],[[2773645,3577935],[3056,-6493],[1156,9043]],[[2787821,3643914],[-4791,-7324]],[[2783030,3636590],[-321,14117],[2380,6527]],[[2785089,3657234],[2732,-13320]],[[2772065,3733165],[-648,-20311]],[[2771417,3712854],[-3975,7100],[-5679,-28737]],[[2761763,3691217],[-3447,-9505],[-2138,5820]],[[2760773,3748211],[3363,452],[1338,-11492],[6591,-4006]],[[2762087,3712841],[0,0]],[[2789680,3650499],[4159,20997]],[[2793839,3671496],[1226,1954]],[[2795065,3673450],[6430,-28931]],[[2801495,3644519],[-2428,-27929]],[[2799067,3616590],[-3973,-8124]],[[2795094,3608466],[-2601,7000],[-2813,35033]],[[2685124,3532570],[3808,14714],[6352,-399]],[[2695284,3546885],[2077,-31259]],[[2697361,3515626],[1066,-21274]],[[2698427,3494352],[-8786,-298]],[[2689641,3494054],[-6165,-64]],[[2683476,3493990],[-4309,-6]],[[2679167,3493984],[1047,15370],[4910,23216]],[[2830680,3508631],[0,0]],[[2799580,3809224],[4936,26873]],[[2804516,3836097],[922,10111]],[[2805438,3846208],[638,-20283],[3986,-17896]],[[2810062,3808029],[-2308,-16243]],[[2807754,3791786],[-8174,17438]],[[2851708,3666909],[-1711,10302],[-3554,-1032],[-3971,11186]],[[2842472,3687365],[-6173,30418]],[[2836299,3717783],[4564,19142]],[[2840863,3736925],[4128,-31978],[3175,-4802],[3499,-20384],[43,-12852]],[[2264687,1576261],[1,-52079]],[[2264688,1524182],[-7934,-3840],[-2847,4434],[-5473,28352],[-3942,6171]],[[2302101,2786439],[6174,106],[2,5154]],[[2314446,2701066],[-10483,210]],[[2159904,3311762],[-15043,-30]],[[2144859,3313132],[-6,80061]],[[2144853,3393193],[15033,30]],[[2216171,2463313],[-11,-27434],[3312,-23]],[[2219472,2435856],[25,-43020]],[[2219497,2392836],[-17619,-75]],[[2201907,2463444],[14264,-131]],[[2201872,2314134],[10095,75]],[[2211967,2314209],[-97,-40536]],[[2211870,2273673],[-5851,1540],[-1782,-45138],[484,-40750]],[[2185603,2313756],[16269,378]],[[2281433,1899625],[3469,-32075]],[[2284893,1866533],[-218,-861]],[[2284675,1865672],[-297,-2573]],[[2284378,1863099],[-790,-8869]],[[2283498,1852774],[-5,-84]],[[2283437,1852460],[-111,-158]],[[2283303,1852270],[-88,-124]],[[2283215,1852146],[-342,0]],[[2282815,1852202],[-238,288]],[[2282508,1852624],[-20,50]],[[2282419,1852905],[-11,113]],[[2282403,1853080],[-37,397]],[[2282366,1853477],[0,324]],[[2281974,1859045],[-35,1101]],[[2281939,1860146],[-8,70]],[[2281556,1862592],[-53,119]],[[2281114,1863252],[-40,37]],[[2281074,1863289],[-82,-90]],[[2280746,1862923],[-267,-299]],[[2280479,1862624],[-178,-405]],[[2279843,1861176],[-201,-457]],[[2279642,1860719],[-67,-280]],[[2278654,1857438],[-19,-89]],[[2266452,1884632],[-2358,11464]],[[2264094,1896096],[-583,10731],[2406,11721]],[[2265917,1918548],[6968,-8830],[740,6550]],[[2282366,1853862],[0,306]],[[2132822,2894041],[14457,205]],[[2138563,2463287],[2440,-177]],[[2169600,2461831],[8710,583]],[[2178354,2391957],[-2,-78295]],[[2323824,2541321],[2439,7063],[10547,9562]],[[2336810,2557946],[2698,-1507],[4820,-29783]],[[2344328,2526656],[1260,-7259]],[[2327207,2433949],[-1763,10583],[490,18143],[-2810,1932]],[[2321402,2220169],[-5753,-11295]],[[2315649,2208874],[-2490,20864],[1046,31021],[-1714,12183]],[[2312491,2272942],[-1264,12062],[2738,16943]],[[2182226,2650360],[4353,-225]],[[2186579,2650135],[11987,-569]],[[2127136,2568972],[883,-14]],[[2128019,2568958],[-4,-66992]],[[2104514,2568975],[7895,-71]],[[2245160,2490133],[8126,34780]],[[2263427,2459959],[-128,-6451]],[[2248589,2452502],[-2334,11109],[-1095,26522]],[[2205368,2895709],[14447,303]],[[2205428,2813861],[-60,81848]],[[2155633,2650419],[-12124,-24]],[[2143509,2650395],[6,81693]],[[2908986,4081002],[2150,-18492],[6735,-13825]],[[2920795,4037944],[-2793,-26029],[-3587,-11337]],[[2914415,4000578],[-6151,-664],[-2754,5067]],[[2902051,4040739],[3010,17497]],[[2880463,3999938],[4896,2226],[2005,10658]],[[2887364,4012822],[3326,-30162],[-91,-27445],[2350,-20958]],[[2892949,3934257],[-1934,2876],[-4839,-23516],[-4674,-1084]],[[2902561,4336424],[5546,-34196]],[[2908107,4302228],[-3396,-23210]],[[2904711,4279018],[-2193,-14419],[-6161,-22277]],[[2889096,4089396],[5117,-17325]],[[2894213,4072071],[0,0]],[[2894213,4072071],[5700,-21255]],[[2890292,4015873],[-3772,21453]],[[2886520,4037326],[416,429]],[[2886936,4037755],[2,19]],[[2886938,4037774],[12,176]],[[2886950,4037950],[-60,289]],[[2886890,4038239],[-18,623]],[[2886872,4038862],[-3,112]],[[2886869,4038974],[4,727]],[[2886873,4039701],[1,291]],[[2886874,4039992],[0,3]],[[2886874,4039995],[7,241]],[[2886881,4040236],[42,1318]],[[2886923,4041554],[22,702]],[[2886945,4042256],[8,264]],[[2886953,4042520],[11,984]],[[2886964,4043504],[-1,349]],[[2886963,4043853],[-16,453]],[[2886947,4044306],[-9,265]],[[2886938,4044571],[-89,238]],[[2886849,4044809],[136,2235]],[[2886985,4047044],[51,344]],[[2887036,4047388],[3,19]],[[2887039,4047407],[122,811]],[[2887161,4048218],[25,205]],[[2887186,4048423],[26,294]],[[2887212,4048717],[86,971]],[[2887298,4049688],[77,922]],[[2887375,4050610],[-2,353]],[[2887373,4050963],[-12,1058]],[[2887361,4052021],[-7,550]],[[2887354,4052571],[-16,114]],[[2887338,4052685],[-9,69]],[[2887329,4052754],[-4,32]],[[2887325,4052786],[-14,105]],[[2887311,4052891],[-41,250]],[[2887270,4053141],[-16,57]],[[2887254,4053198],[-265,521]],[[2886989,4053719],[-141,687]],[[2886848,4054406],[-49,236]],[[2886799,4054642],[-41,200]],[[2886758,4054842],[-13,65]],[[2886745,4054907],[-73,456]],[[2886672,4055363],[-64,244]],[[2886608,4055607],[-113,300]],[[2886495,4055907],[-264,1097]],[[2886231,4057004],[-13,56]],[[2886218,4057060],[-52,571]],[[2886166,4057631],[0,1]],[[2886166,4057632],[-113,4634]],[[2886053,4062266],[24,264]],[[2886077,4062530],[2,21]],[[2886079,4062551],[10,102]],[[2886089,4062653],[3,38]],[[2886092,4062691],[7,72]],[[2886099,4062763],[867,4399]],[[2886966,4067162],[12,106]],[[2886978,4067268],[440,4439]],[[2887418,4071707],[10,299]],[[2887428,4072006],[20,625]],[[2887448,4072631],[0,32]],[[2887448,4072663],[1648,16733]],[[2443038,2822432],[-16959,421]],[[2892949,3934257],[3382,-26028],[2816,-1808],[1129,-64752]],[[2388797,3082782],[-25,-10730]],[[2890075,4094480],[-979,-5084]],[[2887448,4072663],[-2856,-16463],[625,-25567],[2147,-17811]],[[2886520,4037326],[416,429]],[[2886938,4037774],[12,176]],[[2886890,4038239],[-18,623]],[[2886869,4038974],[4,727]],[[2886874,4039995],[0,0]],[[2886881,4040236],[42,1318]],[[2886945,4042256],[8,264]],[[2886964,4043504],[-1,349]],[[2886947,4044306],[-9,265]],[[2886938,4044571],[-89,238]],[[2886985,4047044],[51,344]],[[2887039,4047407],[122,811]],[[2887186,4048423],[26,294]],[[2887298,4049688],[77,922]],[[2887373,4050963],[-12,1058]],[[2887354,4052571],[-16,114]],[[2887329,4052754],[-4,32]],[[2887311,4052891],[-41,250]],[[2887254,4053198],[-265,521]],[[2886848,4054406],[-49,236]],[[2886758,4054842],[-13,65]],[[2886672,4055363],[-64,244]],[[2886495,4055907],[-264,1097]],[[2886218,4057060],[-52,571]],[[2886166,4057632],[-113,4634]],[[2886077,4062530],[2,21]],[[2886089,4062653],[3,38]],[[2886099,4062763],[867,4399]],[[2886978,4067268],[440,4439]],[[2887428,4072006],[20,625]],[[2885491,4056433],[0,0]],[[2358984,2997445],[194,46594]],[[2258164,3266383],[3924,-5934],[7900,-1893]],[[2270086,3168567],[-9,-32536]],[[2258356,3135990],[-99,32530]],[[1973520,5550995],[6887,2779],[3742,-5471],[618,-22168]],[[1984767,5526135],[-1661,-37554],[2149,-48574],[-20,-26008]],[[1985235,5413999],[1793,-17885]],[[1987028,5396114],[-22378,-1230]],[[1964650,5394884],[624,65214],[-3570,69],[487,32208],[3575,6736],[7689,1620],[65,50264]],[[2254973,3413716],[95,-82310]],[[2255068,3331406],[-2960,11],[3,-32508]],[[2243477,3298923],[-246,48815]],[[1865649,5718357],[5012,-5373],[381,-10221],[5430,-238],[3624,-8144],[-19,-24349],[7177,12]],[[1887254,5670044],[-5,-16333]],[[1887249,5653711],[17,-27173]],[[1887266,5626538],[-16027,-425],[-1770,19113],[-3636,8245],[-23379,285]],[[1842454,5653756],[-5980,7149],[-147,14354],[-3139,11758]],[[1833188,5687017],[21419,-53],[106,32495],[10936,-1102]],[[2331849,3251084],[-103,-25352],[2942,-52],[3,-19051]],[[2334691,3206629],[-4414,-5488],[-191,-65148]],[[2313997,3152155],[88,52854],[2929,19036]],[[2224754,3536256],[4327,-6837],[5012,-34450],[-10,-17234]],[[2321865,3494686],[-86,-32553]],[[2316528,3462157],[10,107658]],[[2257944,3413714],[11932,-41]],[[2269876,3413673],[45,-82112]],[[2269921,3331561],[-14853,-155]],[[2256878,3103398],[-2841,23],[-1443,-10871],[-5824,71],[-4374,-8136]],[[2243472,3282569],[-20642,206]],[[2275861,3413635],[-5985,38]],[[2334691,3206629],[11740,-44]],[[2315638,3356054],[-4440,37],[-3,-40792]],[[2299269,3315282],[-13,56625]],[[2299246,3412788],[9015,440]],[[2349614,3256199],[-694,8770],[-5890,16601]],[[2340870,3315262],[8920,-54]],[[2284783,3371995],[-14,-40721]],[[2309086,3413172],[-5277,31946],[-3226,-3172],[1526,11580],[-5351,11245],[-738,21044],[-3847,-14818],[-3746,6742]],[[2337019,3347901],[-363,28233],[1972,20702]],[[2323075,3355975],[-1499,-94]],[[2323201,3413316],[3988,-46],[1309,-16327],[3665,-15]],[[2278889,3103360],[-5856,46]],[[2299151,3282284],[-14394,238]],[[2269990,3258849],[5,7422]],[[2284740,3266216],[-6,-83984]],[[2290553,3070767],[-6,-29969]],[[2107554,3806809],[2837,79]],[[2110391,3806888],[-122,-116397]],[[2091970,3707548],[80,77076]],[[2092050,3784624],[6203,-6206],[6030,4],[-3,10875],[3063,197],[211,17315]],[[1971665,3569938],[2472,27413],[1,14526],[2385,22555],[4782,22621],[284,23596],[1473,9095]],[[1983062,3689744],[13594,-17]],[[1996656,3689727],[1,-40584]],[[1996657,3649143],[12,-79113]],[[2025846,4117502],[5083,-1911],[4690,-20354],[1670,-22001],[2763,1974]],[[2040052,4075210],[3664,-11724],[-1019,-13377]],[[2042697,4050109],[-5237,-37316],[-3285,2628]],[[2034175,4015421],[-1984,17]],[[2064441,3805491],[-20,-64107]],[[2064421,3741384],[-3309,19367],[-3242,-22373],[-892,7398],[-4350,-8043]],[[2052628,3737733],[-3654,21108],[-2003,25724],[-3361,22250]],[[1999100,3992352],[-1017,20568]],[[1998083,4012920],[8847,-21]],[[2026068,4012114],[-4220,-56896]],[[2021848,3955218],[-591,-11214]],[[2107474,3853864],[80,-47055]],[[2092050,3784624],[120,70360]],[[2092170,3854984],[15304,-1120]],[[2148139,3872349],[-31423,-509]],[[2116716,3871840],[276,79579]],[[2116992,3951419],[31105,1765]],[[2110391,3806888],[18322,286]],[[2128713,3807174],[-147,-116671]],[[2128566,3690503],[-9148,-42]],[[2069026,4082919],[4180,5433],[-776,10070],[3972,683],[542,13632],[-3653,-158],[-1653,-18786],[-7309,-1345]],[[2064329,4092448],[10,22972]],[[2064339,4115420],[2547,16198]],[[2066886,4131618],[22599,97]],[[2089485,4131715],[12388,97]],[[2101873,4131812],[-24,-48941]],[[2101849,4082871],[-32823,48]],[[2101631,4050383],[-147,-130929],[-9358,382]],[[2092126,3919836],[110,48572],[-17032,217]],[[2075204,3968625],[63,81679]],[[2075267,4050304],[26364,79]],[[2127665,4213623],[3208,5]],[[2130873,4213628],[17088,286]],[[2148007,4051830],[-20982,-1164]],[[2127025,4050666],[-24,81368],[664,81589]],[[2034175,4015421],[-1349,-13137],[-196,-47409]],[[2032630,3954875],[-10782,343]],[[1971679,3882256],[-7,30138],[6648,14910],[4265,26974],[3585,5106],[2593,-6900],[7379,32685]],[[1996142,3882341],[-24463,-85]],[[2045102,3636813],[7183,41384]],[[2052285,3678197],[5292,14323],[3011,-6514],[928,-61111]],[[1952942,4068004],[13835,-1929],[-3,8138],[17168,153],[1,24433],[14118,634],[3,16723],[3146,-516],[49,32905],[7790,144]],[[2009049,4148689],[94,-32310]],[[1998083,4012920],[-45129,92]],[[2105325,4229514],[3192,-17],[51,-16267]],[[2108568,4213230],[-184,-81393],[-6511,-25]],[[2089485,4131715],[67,97987],[15773,-188]],[[2128713,3807174],[19443,334]],[[2148236,3690623],[-19670,-120]],[[1953156,3660750],[3523,27555],[26383,1439]],[[1953109,3569857],[47,90893]],[[2018620,3726366],[-472,-80676]],[[2018148,3645690],[-11645,-2212],[2,5715]],[[2006505,3649193],[-458,47272],[193,49293],[3833,3218]],[[2010073,3748976],[3384,949],[5171,-16395],[-8,-7164]],[[2116716,3871840],[2,-16309],[-9244,-1667]],[[2092170,3854984],[-44,64852]],[[2101631,4050383],[203,-6]],[[2101834,4050377],[15399,-120]],[[2117233,4050257],[-241,-98838]],[[2064015,4066668],[0,0]],[[2064042,4066544],[0,0]],[[2063533,4063259],[0,0]],[[2064323,4061251],[3,674]],[[2064326,4061925],[-3,-674]],[[2064323,4062212],[1,386]],[[2064324,4062598],[-1,-386]],[[2061706,4115438],[2633,-18]],[[2064329,4092448],[-6,-31753]],[[2064323,4060695],[131,-10357]],[[2064454,4050338],[-4699,-57219],[-3115,-24464]],[[2056640,3968655],[-35,-1]],[[2056605,3968654],[-1878,-23],[-30,81701]],[[2054697,4050332],[28,33885]],[[2054725,4084217],[3,31033]],[[2054728,4115250],[6978,188]],[[1997849,4173366],[11185,373],[15,-25050]],[[1952953,4173233],[26123,-186],[18773,319]],[[2147962,4271861],[-16713,-35]],[[2131249,4271826],[-60,47343]],[[1953211,3734961],[-3,50885]],[[1953208,3785846],[29975,-129]],[[1983183,3785717],[2070,-6808],[228,-20325],[2447,-3529],[1593,-15551]],[[1989521,3739504],[-3415,-24317]],[[1986106,3715187],[-3583,15205],[-6119,-6705],[-1321,13791],[-15608,174],[-6264,-2691]],[[2036881,3710101],[16191,584]],[[2053072,3710685],[-787,-32488]],[[2036856,3645058],[25,65043]],[[2173761,3806714],[-11614,-243]],[[2200995,3969121],[-453,-20]],[[2247330,3920195],[-35,-32552]],[[2330484,3954984],[-13,-34972]],[[2317701,3764728],[6,24472]],[[2247681,3724355],[-15074,157]],[[2301925,3683647],[15722,-609]],[[2262796,3985423],[18,16308]],[[2284428,3659038],[-18229,-254]],[[1558686,5457678],[-7996,-408],[-428,81401]],[[1550262,5538671],[0,16734],[14612,-160]],[[1564874,5555245],[-1016,-16075]],[[1569848,5517408],[-64,-9160]],[[1569784,5508248],[-1532,-35024]],[[1568252,5473224],[-2173,4173],[-3856,-19793],[-3537,74]],[[1719514,5816207],[11065,-220]],[[1730579,5815987],[-2,-28569]],[[1730577,5787418],[-257,-149927]],[[1730320,5637491],[-11012,308]],[[1719308,5637799],[-1822,16407],[73,97587],[-3610,-71],[1829,33851],[3736,30634]],[[1578559,5749758],[43971,-827],[4417,3107]],[[1626947,5752038],[1406,-23568]],[[1619998,5684283],[-38358,382]],[[1581640,5684665],[-4821,26554],[-2747,-5790],[-968,18830],[5926,-7188],[-471,32687]],[[1573967,5731718],[0,0]],[[1572728,5745589],[0,0]],[[1571563,5738264],[0,0]],[[1566346,5641155],[-614,-37118],[-15511,13],[0,2654],[-30783,-88]],[[1519438,5606616],[-1717,15686],[-884,41181],[2976,36959],[6029,-18190],[3623,-3731],[7518,-18719],[7754,379],[3118,-5959],[9534,-3594],[2346,9387],[3502,-15865],[3109,-2995]],[[1680304,5816197],[17833,-2]],[[1698137,5816195],[36,-29868],[2536,-36169],[-2842,-33168],[1859,-37993],[-2603,-37815],[-4669,-6850],[1667,-25136]],[[1679884,5621043],[420,195154]],[[2859034,3890766],[326,-32646],[3599,-28332],[-484,-13100]],[[1725104,5341145],[832,-7960],[4435,1056]],[[1730371,5334241],[-392,-15141],[3621,-32496],[-1532,-17017],[1754,-15834]],[[1718104,5254202],[2,23244],[1685,-14],[-2,48923],[5319,5240],[-4,9550]],[[1663132,5381749],[2336,10941]],[[1665468,5392690],[32307,233]],[[1697775,5392923],[-164,-28079]],[[1697611,5364844],[-369,875]],[[1697242,5365719],[-6233,631],[-4540,-17300],[-508,-16944],[-3756,-22318],[-7599,-19079]],[[1674606,5290709],[-6339,15929],[296,39588],[-5431,35523]],[[1570292,5226635],[1296,12119],[7298,13623],[3323,-5830],[3124,18158]],[[1585333,5264705],[-93,-94745]],[[1609459,5458028],[2275,11504],[-3750,27208],[201,24102],[5809,27548],[2879,5166]],[[1645267,5490856],[2435,-7881]],[[1647702,5482975],[-998,-27439],[3212,-47985],[-1267,-14959]],[[1651625,5262222],[-53,-38315]],[[1605483,5203077],[-2411,10839],[-100,48901],[2468,38]],[[2948711,4406483],[6838,-32048],[-1196,-24119]],[[2954353,4350316],[-7364,-12114],[-7942,-22246]],[[2942927,4443527],[2135,-32836],[3649,-4208]],[[2975709,4371162],[-2400,26800],[3401,2432],[-498,18337],[-2991,-1813],[-1002,11106]],[[2972219,4428024],[1563,3350]],[[2973782,4431374],[4766,21037]],[[2978548,4452411],[2285,-10587],[10305,-3315]],[[2989108,4378674],[-2372,3285],[-11027,-10797]],[[2227195,4327530],[-6086,-100]],[[2483873,4151841],[-8129,-9986],[-1914,12957]],[[2478166,4165986],[2245,9606],[2395,26680],[3018,10877]],[[2532124,4503330],[682,31450]],[[2533887,4534782],[12266,-357]],[[2546153,4534425],[2144,-14342],[2280,-46589],[2129,-19261]],[[2552706,4454233],[-44,-47476]],[[2491888,3879832],[73,-44825]],[[2476369,3854728],[185,2026]],[[1928517,3785634],[-2357,-8059],[-1809,-20584],[-1653,1222],[-2180,-21120],[-5283,-2365],[-2702,-43036],[-4035,-20390]],[[1884514,4505818],[12832,383]],[[1891269,4345732],[1209,12841],[-3073,27048],[-2475,750]],[[1637099,3688642],[2265,5937],[-1090,11112],[6094,10698],[1315,8773],[4806,-13268],[6682,8104],[2822,18810],[3876,-6550],[3282,-16610]],[[1646448,3604302],[-2558,10497],[-3404,30214],[-3388,43566]],[[1682028,3656700],[-327,-22399],[1971,-2840],[1710,-34886],[6090,-15828],[2095,-31732],[7,-26760]],[[1659790,3474350],[-2597,-13093],[-8159,-3351],[0,-41099],[-9913,-51327]],[[1622302,3521434],[7320,39766],[1823,-36],[1361,17195]],[[1645881,3888746],[5424,30984],[-741,12170]],[[1657950,3818389],[-3184,16823],[-3657,-11338],[-3766,14475]],[[1580435,3732866],[76,-3229]],[[1580511,3729637],[-341,3653]],[[1580170,3733290],[265,-424]],[[1578900,3725910],[-93,-1341]],[[1578807,3724569],[-100,202]],[[1578707,3724771],[-251,-352]],[[1578456,3724419],[-361,-509]],[[1578095,3723910],[-485,486]],[[1577610,3724396],[-21,20]],[[1577589,3724416],[-4989,12914],[-3308,19263],[-3297,6583],[-2000,-5328],[1613,32238],[-1373,22468]],[[1578504,3777747],[1180,-23404],[-967,-22603]],[[1578717,3731740],[183,-5830]],[[1590882,4093681],[2660,-15469],[-1200,-33894],[3832,558],[-933,-28646]],[[1571586,4016118],[95,36948],[-4171,-103]],[[1647869,4079599],[-4070,-2762]],[[1610793,4353151],[37108,16]],[[1545890,4390250],[-3034,-246],[-9,15614],[-8218,102]],[[1534629,4405720],[-2763,51546],[-2543,8027],[1235,40327]],[[2680172,2958587],[-1297,-7440]],[[3015694,4556752],[2274,-1068]],[[3017968,4555684],[1224,-2647]],[[3019192,4553037],[3916,-30539],[-621,-23966],[3052,-5794],[436,-22233]],[[3025975,4470505],[-2943,-17304]],[[3023032,4453201],[-2113,3244],[-1301,-17626],[-2166,-2449]],[[3017452,4436370],[-2190,30464],[-2911,-2314],[1464,15348],[-2111,19143],[-855,24810]],[[3010849,4523821],[4327,11582],[518,21349]],[[3017443,4436403],[0,-1]],[[3017443,4436403],[0,0]],[[2949979,4645530],[6744,-900]],[[2956723,4644630],[2039,-6744],[-715,-27921]],[[2958047,4609965],[-688,-45528]],[[2957359,4564437],[-1481,-51068]],[[2955878,4513369],[-12094,1829]],[[2680230,2776283],[-3530,35040]],[[2677298,2836427],[4550,10841],[3916,18670]],[[2659217,2763707],[-3433,9300],[-1882,19933]],[[2643977,2856705],[-5660,3719],[-1267,-4684]],[[2636895,2862701],[135,6807]],[[2648033,2877138],[-590,-17849]],[[2681962,2670849],[-1200,-11380]],[[3022291,4414816],[-705,2303]],[[3021586,4417119],[1446,36082]],[[3025975,4470505],[1831,-9227],[5032,-5100],[7417,9930],[-162,26539],[-3281,24857],[3199,-8277],[2717,-38992],[80,-26092],[-11904,-7290],[-3702,-14793],[-4911,-7244]],[[2682877,2904346],[-4483,4797]],[[2606774,3657985],[3266,-809]],[[2610040,3657176],[3513,703],[2602,-9198],[2099,8400],[2721,-9623]],[[2620975,3647458],[-2547,-19332]],[[2618428,3628126],[-5226,-22080]],[[2613202,3606046],[-6428,51939]],[[2648332,3561791],[3691,3957],[2454,14559]],[[2654477,3580307],[7851,-18554]],[[2662328,3561753],[175,-9762],[-5523,-18877],[-2676,-21624]],[[2654304,3511490],[-2257,7486],[-2951,23527],[-764,19288]],[[2640399,2461738],[-114,-72790]],[[2640285,2388948],[-13451,4024]],[[2686809,3623434],[-1582,26663],[-4398,10996]],[[2680829,3661093],[1302,10036],[-1728,32981]],[[2680403,3704110],[4959,7456],[3399,-6737]],[[2688761,3704829],[2151,-6614]],[[2690912,3698215],[-1659,-33936],[1070,-6920],[-3514,-33925]],[[2648332,3561791],[-5727,-1883]],[[2642605,3559908],[-1689,2521]],[[2640916,3562429],[1921,36002]],[[2642837,3598431],[2030,24055],[2182,7394]],[[2647049,3629880],[5410,-12955]],[[2652459,3616925],[-704,-14179],[2722,-22439]],[[2525822,3476656],[94,46640]],[[2525916,3523296],[10444,-595]],[[2536360,3522701],[1122,-12896]],[[2537482,3509805],[481,-33916]],[[2537963,3475889],[-12141,767]],[[2623592,3193365],[-2279,-31478],[-2317,-9703]],[[2615646,3192882],[7946,483]],[[3008714,4567711],[-222,-4946]],[[3008492,4562765],[222,4946]],[[3017968,4555684],[1224,-2647]],[[2999201,4509127],[561,26127]],[[2999762,4535254],[3732,8221],[402,21017],[3861,-5602]],[[3007757,4558890],[1682,-10328],[3494,14846]],[[3012933,4563408],[2761,-6656]],[[3010849,4523821],[-8389,-20721]],[[2706579,2747748],[4464,7896]],[[3017452,4436370],[-9,32]],[[3017443,4436403],[-18,60]],[[3017425,4436463],[-2435,-16624],[-5266,-7997]],[[3017763,4432255],[0,0]],[[2556857,3676717],[648,-27017],[1558,-6333]],[[2559063,3643367],[-2545,-25531],[1492,-18386]],[[2558010,3599450],[-5234,-9703],[-4430,8215]],[[2548346,3597962],[-3374,16469],[-326,21229]],[[2544646,3635660],[12211,41057]],[[2626794,3779090],[1911,-27485]],[[2628705,3751605],[-3810,-2976],[-2715,-11727]],[[2622180,3736902],[-3407,1147]],[[2618773,3738049],[-419,13879]],[[2618354,3751928],[1844,12253]],[[2620198,3764181],[2172,17178]],[[2622370,3781359],[4424,-2269]],[[2635362,3849467],[2259,9322]],[[2637621,3858789],[7549,7359]],[[2645170,3866148],[1207,-5225]],[[2646377,3860923],[1670,-17734]],[[2648047,3843189],[-2562,-16402]],[[2645485,3826787],[-4219,-16219],[-2708,-350]],[[2638558,3810218],[-711,20583],[-2485,18666]],[[2618342,3866786],[2610,2131]],[[2620952,3868917],[2018,-8169],[1088,-21624],[2581,-15144]],[[2626639,3823980],[-3544,-3962]],[[2623095,3820018],[-7952,4206]],[[2615143,3824224],[-861,25181]],[[2614282,3849405],[4060,17381]],[[2671115,2856371],[576,13487],[3000,9881],[-514,8039]],[[3007757,4558890],[735,3875]],[[3008714,4567711],[3651,21444]],[[3012365,4589155],[1814,-182]],[[3014179,4588973],[-1246,-25565]],[[2642570,2821263],[0,0]],[[2642570,2821263],[795,-1620]],[[2647429,2793167],[-2183,-29863]],[[2636208,2815813],[6362,5450]],[[2650379,2568689],[574,-38657]],[[2638343,2563371],[4251,17]],[[2623812,2704845],[-810,24792]],[[2623002,2729637],[-2222,18328]],[[2620780,2747965],[10759,-4515]],[[2631542,2731243],[-2049,-17915],[-5681,-8483]],[[2662328,3561753],[2241,-3235]],[[2664569,3558518],[537,-8065]],[[2665106,3550453],[-611,-16483],[1413,-26671]],[[2665908,3507299],[-5973,-11994]],[[2659935,3495305],[-7115,-2451]],[[2652820,3492854],[1484,18636]],[[2627284,3672580],[5267,16212]],[[2632551,3688792],[5894,-27816]],[[2638445,3660976],[-1566,-29404]],[[2636879,3631572],[-1491,5041],[-4576,-21976]],[[2630812,3614637],[-59,22783],[-3566,12559],[97,22601]],[[2619483,2589707],[-385,3350]],[[2621763,2543768],[-2280,45939]],[[2632801,2677752],[-268,-18]],[[2632533,2677734],[602,56527]],[[2625769,2967453],[4947,4768]],[[2624729,2863382],[-2127,37587]],[[2625175,2677359],[7358,375]],[[2621129,2632625],[340,13326]],[[2621469,2645951],[-168,12996],[3874,18412]],[[2616441,2845576],[-1596,55879]],[[2597962,3790979],[2994,20025]],[[2600956,3811004],[1368,-3771],[2935,21148]],[[2605259,3828381],[4727,-17774]],[[2609986,3810607],[1764,-4039],[-534,-21768]],[[2611216,3784800],[-133,-5438]],[[2611083,3779362],[-3579,-8336],[-4327,2521],[-6289,-16575]],[[2596888,3756972],[-245,1183]],[[2596643,3758155],[1319,32824]],[[2686499,2692039],[1852,-2194]],[[2688351,2689845],[1770,-54022],[1345,-9365]],[[2691466,2626458],[-2842,-7492]],[[2956723,4644630],[2581,-344]],[[2972450,4641957],[4888,-992]],[[2977338,4640965],[1491,-11023],[-431,-27909],[-1941,-31825]],[[2976457,4570208],[-1683,14467],[-9176,-2861],[95,8871],[-4742,5847],[-2904,13433]],[[2976457,4570208],[2892,-6018],[-290,-12377]],[[2979059,4551813],[-4856,-11125],[-235,8616],[-5212,-3739],[-1214,11619],[-1456,-16950],[-6281,10434],[755,17496],[-3201,-3727]],[[2715996,2547799],[2708,7075],[2068,23043]],[[2729058,2553308],[478,-9552],[-2830,-28049],[248,-13612]],[[3005973,4643795],[270,1108]],[[3006243,4644903],[5051,11922],[920,9883],[5959,2470]],[[3018173,4669178],[1077,-33442],[5104,-6229],[-2323,-12345],[-5364,-8980],[-2488,-19209]],[[3012365,4589155],[-936,30257],[-5437,9346],[-19,15037]],[[2660660,2553284],[-131,-44420]],[[2660529,2508864],[-9622,807]],[[2654707,2890257],[1136,-35196]],[[2636789,3962195],[1543,-19011],[910,-35004]],[[2639242,3908180],[-3181,-2744]],[[2636061,3905436],[-2325,1919]],[[2633736,3907355],[-223,50941]],[[2663882,2902648],[-338,-49139]],[[2620780,2747965],[-1512,25917]],[[2619268,2773882],[-1368,23208]],[[2578130,3548140],[-1752,21845]],[[2576378,3569985],[1569,34466],[6101,-2623]],[[2584048,3601828],[3272,-16715],[4687,-3653]],[[2592007,3581460],[-1483,-23783]],[[2590524,3557677],[-6660,-29542]],[[2583864,3528135],[147,5811],[-5092,4316],[-789,9878]],[[2626631,3925832],[-191,24390]],[[2626440,3950222],[1601,13903]],[[2633736,3907355],[-1236,-4661]],[[2632500,3902694],[-3759,14971]],[[2628741,3917665],[-2110,8167]],[[2664471,2508255],[-3942,609]],[[2691466,2626458],[1687,1881]],[[2554738,3746152],[4131,-8086]],[[2558869,3738066],[872,-22018],[-3815,-18074]],[[2555926,3697974],[-2418,-6741]],[[2553508,3691233],[-6665,-1716]],[[2546843,3689517],[-5363,49285]],[[2541480,3738802],[6305,-774]],[[2547785,3738028],[761,-12668],[2368,5955],[-366,20517],[2527,-12204],[1663,6524]],[[2680847,3789982],[996,-11892],[-3707,-19567]],[[2678136,3758523],[-4812,728],[-1907,19551]],[[2671417,3778802],[529,14410]],[[2671946,3793212],[2371,13506],[3012,-15997],[3518,-739]],[[2541316,3659882],[5527,29635]],[[2553508,3691233],[3349,-14516]],[[2544646,3635660],[345,5392]],[[2544991,3641052],[-3825,8645],[150,10185]],[[2683838,3827195],[4236,24680]],[[2689768,3803561],[-5282,-728]],[[2684486,3802833],[-648,24362]],[[2669329,3137125],[4615,-14859],[1920,-13324]],[[2667653,3094767],[-1710,3792]],[[2665943,3098559],[3386,38566]],[[2626639,3823980],[3619,-812]],[[2630258,3823168],[429,-29385]],[[2630687,3793783],[-3893,-14693]],[[2622370,3781359],[725,38659]],[[2664072,3618419],[530,-4241]],[[2664602,3614178],[-1260,-29310],[1227,-26350]],[[2652459,3616925],[4423,18374]],[[2656882,3635299],[3651,1750],[3539,-18630]],[[2658634,3704125],[393,8]],[[2659027,3704133],[5173,-14591]],[[2664200,3689542],[-1584,-24757]],[[2662616,3664785],[-1422,5806],[-5572,-9416],[-1534,5752]],[[2654088,3666927],[-566,4711]],[[2653522,3671638],[2270,22441],[2842,10046]],[[2525992,3574251],[3270,7790],[3489,-15399]],[[2532751,3566642],[2313,-21474]],[[2535064,3545168],[1296,-22467]],[[2525916,3523296],[44,35894]],[[2525960,3559190],[32,15061]],[[2682397,3565197],[-260,-15132]],[[2682137,3550065],[-5414,-7278],[-1735,-20932],[-9080,-14556]],[[2665106,3550453],[6402,13764],[2171,9763]],[[2673679,3573980],[1672,-3765]],[[2675351,3570215],[-789,-8766],[5877,11484],[1958,-7736]],[[2617029,3542787],[4210,801]],[[2621239,3543588],[2493,-45536]],[[2623732,3498052],[-8399,2126]],[[2615333,3500178],[-549,-206]],[[2614784,3499972],[2245,42815]],[[2603904,3604175],[-302,22350],[1115,22491]],[[2604717,3649016],[2057,8969]],[[2613202,3606046],[-4851,-15531]],[[2608351,3590515],[-4447,13660]],[[2601056,3499284],[-5230,1208]],[[2595826,3500492],[-13,17637]],[[2595813,3518129],[6621,22227]],[[2602434,3540356],[3985,-4386]],[[2606419,3535970],[4452,-37321]],[[2610871,3498649],[-9815,635]],[[2637621,3858789],[-1560,46647]],[[2639242,3908180],[5188,12778]],[[2644430,3920958],[42,-8878]],[[2644472,3912080],[698,-45932]],[[2582099,3630131],[8680,2723]],[[2590779,3632854],[3022,-22530],[-204,-8999]],[[2593597,3601325],[-1590,-19865]],[[2584048,3601828],[-1949,28303]],[[2677892,3893005],[-1118,-24394],[-2658,-17077]],[[2674116,3851534],[-1972,-14547],[181,-16277],[-3083,-3700]],[[2669242,3817010],[-3107,11658]],[[2666135,3828668],[-3541,9010],[-1724,17864]],[[2660870,3855542],[-86,20771]],[[2660784,3876313],[3459,12493],[7053,-15848]],[[2695214,2700360],[-6863,-10515]],[[2529460,3645788],[3887,-24633],[709,-23564]],[[2534056,3597591],[-1305,-30949]],[[2525992,3574251],[-2315,9853]],[[2525784,3582865],[1834,15569],[-2404,20459],[1025,24483],[1644,6035]],[[2621239,3543588],[6369,25994]],[[2627608,3569582],[4361,-3126],[2814,-21297]],[[2634783,3545159],[-5580,-49385]],[[2629203,3495774],[-195,28]],[[2629008,3495802],[-5276,2250]],[[2602296,3601813],[1608,2362]],[[2608351,3590515],[2091,-32065]],[[2610442,3558450],[-4023,-22480]],[[2602434,3540356],[-138,61457]],[[2632551,3688792],[-2413,14706]],[[2630138,3703498],[779,19152]],[[2630917,3722650],[5329,-8591]],[[2636246,3714059],[4955,-43132]],[[2641201,3670927],[-2756,-9951]],[[2498062,3475971],[-1499,82]],[[2496563,3476053],[1499,-82]],[[2516195,3476928],[-14250,117]],[[2501945,3477045],[-1984,-789]],[[2499961,3476256],[2499,24943]],[[2502460,3501199],[2801,-11743],[1458,15149]],[[2506719,3504605],[7557,-13777],[1919,-13900]],[[2659027,3704133],[2143,20385]],[[2661170,3724518],[3789,6839]],[[2664959,3731357],[6489,-27936]],[[2671448,3703421],[375,-8056]],[[2671823,3695365],[-4725,3944],[-2898,-9767]],[[2645333,3667894],[3041,8118]],[[2648374,3676012],[5148,-4374]],[[2654088,3666927],[2794,-31628]],[[2647049,3629880],[-1716,38014]],[[2661055,3792305],[3567,15334],[1513,21029]],[[2669242,3817010],[2704,-23798]],[[2671417,3778802],[-4755,-15238]],[[2666662,3763564],[-1808,3114]],[[2664854,3766678],[-3799,25627]],[[2679058,3750460],[-922,8063]],[[2680847,3789982],[3639,12851]],[[2692744,3747001],[-2348,1278],[-845,-13672]],[[2689551,3734607],[-9348,22678],[-1145,-6825]],[[2648047,3843189],[3401,-3784]],[[2651448,3839405],[3668,-26620]],[[2655116,3812785],[-3610,-19621]],[[2651506,3793164],[-3963,15610],[-2058,18013]],[[2564528,3647902],[1715,27095]],[[2566243,3674997],[6150,21153],[-165,11968]],[[2572228,3708118],[5140,-14202]],[[2577368,3693916],[1285,-18254]],[[2578653,3675662],[-1985,-3416],[1448,-28261]],[[2578116,3643985],[-4108,-17037],[-1606,4401],[-2287,-21580]],[[2570115,3609769],[-5587,38133]],[[2620952,3868917],[3902,12221]],[[2624854,3881138],[4145,10918]],[[2628999,3892056],[319,-19066],[5399,-27244]],[[2634717,3845746],[-4459,-22578]],[[2610961,3855355],[3321,-5950]],[[2615143,3824224],[-1152,-8974],[-4005,-4643]],[[2605259,3828381],[1444,13070],[4258,13904]],[[2618354,3751928],[-6464,-5962],[-2489,9489]],[[2609401,3755455],[1682,23907]],[[2611216,3784800],[8982,-20619]],[[2678623,3730858],[1780,-26748]],[[2680829,3661093],[-643,3116]],[[2680186,3664209],[-3936,24146],[-4427,7010]],[[2671448,3703421],[-209,9986],[4357,18364],[3027,-913]],[[2513442,3612142],[3272,-50706]],[[2516714,3561436],[-4816,-6477],[-3121,4591]],[[2508777,3559550],[-893,7120]],[[2507884,3566670],[-1092,16145]],[[2689551,3734607],[-1629,-5102],[839,-24676]],[[2678623,3730858],[435,19602]],[[2683838,3827195],[-4268,3694],[-5454,20645]],[[2578130,3548140],[-2205,-7256],[-2022,-36563]],[[2573903,3504321],[-8290,-1122]],[[2565613,3503199],[214,78251]],[[2565827,3581450],[3114,1489]],[[2568941,3582939],[7437,-12954]],[[2641491,3736990],[7162,-7288]],[[2648653,3729702],[-279,-53690]],[[2645333,3667894],[-4132,3033]],[[2636246,3714059],[2506,14545]],[[2638752,3728604],[2739,8386]],[[2621104,3118407],[-491,-34799],[2256,-1652]],[[2611277,3023628],[-1124,38478]],[[2608507,3673788],[1533,-16612]],[[2604717,3649016],[-6561,3428]],[[2598156,3652444],[468,19270],[5447,35381]],[[2604071,3707095],[2463,-7265],[-894,-28609],[2867,2567]],[[2534056,3597591],[2723,6069]],[[2536779,3603660],[1495,-921],[4601,-40177]],[[2542875,3562562],[-7811,-17394]],[[2604071,3707095],[-1596,14880]],[[2602475,3721975],[2409,3220],[4517,30260]],[[2618773,3738049],[-4074,-12437],[-2863,-18823]],[[2611836,3706789],[-3329,-33001]],[[2578653,3675662],[2492,10826],[4305,-11445],[2050,6078]],[[2587500,3681121],[4491,-4939],[1852,-21938]],[[2593843,3654244],[-472,-18963],[-2592,-2427]],[[2582099,3630131],[-3983,13854]],[[2651506,3793164],[-2858,-14412]],[[2648648,3778752],[-5738,-9002]],[[2642910,3769750],[-2632,8711],[-583,17654]],[[2639695,3796115],[-1137,14103]],[[2587500,3681121],[3455,38438]],[[2590955,3719559],[4009,3677],[235,33904]],[[2595199,3757140],[1444,1015]],[[2596888,3756972],[5587,-34997]],[[2598156,3652444],[-4313,1800]],[[2610442,3558450],[6124,-2447]],[[2616566,3556003],[463,-13216]],[[2614784,3499972],[-3913,-1323]],[[2651506,3793164],[2691,-10408],[3397,-25790]],[[2657594,3756966],[-261,-15040]],[[2657333,3741926],[-5503,2319]],[[2651830,3744245],[-3182,34507]],[[2651125,3868331],[2444,32659]],[[2659102,3876969],[1682,-656]],[[2660870,3855542],[-6058,-12921],[-1980,6725]],[[2652832,3849346],[-1707,18985]],[[2711505,2636935],[-4030,-42219]],[[2516800,3560083],[-86,1353]],[[2525960,3559190],[-9160,893]],[[2622180,3736902],[836,-6906],[-683,-32902]],[[2622333,3697094],[-143,-8908]],[[2622190,3688186],[-6328,-68],[-4026,18671]],[[2590524,3557677],[5289,-39548]],[[2595826,3500492],[-6379,2188]],[[2589447,3502680],[-5739,2009]],[[2583708,3504689],[156,23446]],[[2565613,3503199],[-1508,-110]],[[2564105,3503089],[-6157,-134]],[[2557948,3502955],[2134,80625]],[[2560082,3583580],[254,-5960],[5491,3830]],[[2664854,3766678],[-2276,-7284],[-4984,-2428]],[[2655116,3812785],[3426,-816],[2513,-19664]],[[2641491,3736990],[1419,32760]],[[2651830,3744245],[-994,-17439]],[[2650836,3726806],[-2183,2896]],[[2979059,4551813],[-1189,-11486],[3590,-4152],[-19,-24607]],[[2981441,4511568],[-10405,730]],[[2971036,4512298],[-13918,882]],[[2957118,4513180],[-1240,189]],[[3022291,4414816],[-705,2303]],[[3017714,4384877],[1808,-26],[4606,24172],[4248,-25124],[-10662,978]],[[2677314,3100909],[1655,-2703]],[[2678969,3098206],[2526,1406],[3570,-37043]],[[2625175,2677359],[961,5618],[-3183,11522],[859,10346]],[[3033268,4376844],[5389,-2129],[1773,13015],[1621,-16827],[-4413,-6809],[-4370,12750]],[[2988044,4639068],[16842,-2700],[1087,7427]],[[2999762,4535254],[-2919,7258],[-108,11977],[2786,13201],[-3874,3677],[1861,11653],[559,24536],[-3901,-2379],[400,15206],[-5399,4165],[-1123,14520]],[[2516692,3476940],[98,50621]],[[2516790,3527561],[10,32522]],[[2525822,3476656],[-762,81]],[[2525060,3476737],[-8368,203]],[[2508145,3529825],[-1524,4381],[2156,25344]],[[2516790,3527561],[-8645,2264]],[[2567898,3744148],[4572,12813]],[[2572470,3756961],[4443,-29234]],[[2576913,3727727],[455,-33811]],[[2572228,3708118],[-853,19290],[-3477,16740]],[[2656488,2995370],[4237,-4426]],[[2977338,4640965],[9868,-1744]],[[2987206,4639221],[838,-153]],[[2990815,4507418],[-8439,3881]],[[2982376,4511299],[-935,269]],[[2655971,3032365],[1397,-11426],[5691,-6474],[721,-12344]],[[2661611,3089314],[4332,9245]],[[2667540,3045467],[-2171,12081],[-3894,6222]],[[2648558,2386292],[-5539,1784]],[[2643019,2388076],[-2734,872]],[[2613750,3895009],[4592,-28223]],[[2610961,3855355],[137,11594]],[[2611098,3866949],[-158,26866],[2810,1194]],[[2538667,3719616],[3373,1574],[-560,17612]],[[2541316,3659882],[-2302,12571],[-1275,-7838]],[[2535735,3677494],[-734,16389],[3666,25733]],[[2650836,3726806],[2725,-14772],[5073,-7909]],[[2621625,3125015],[3817,2180]],[[2628705,3751605],[-828,-10147],[3235,-10093]],[[2631112,3731365],[-195,-8715]],[[2630138,3703498],[-7805,-6404]],[[2506719,3504605],[-723,12781],[2149,12439]],[[2516692,3476940],[-294,-6]],[[2516398,3476934],[-203,-6]],[[2690861,3606734],[-4347,-14089],[-29,-14203],[-4088,-13245]],[[2675351,3570215],[1778,2694],[-84,18918],[1703,14833]],[[2678748,3606660],[5037,13657],[2415,529]],[[2686200,3620846],[4661,-14112]],[[2675288,3645829],[218,-30754],[3242,-8415]],[[2673679,3573980],[-550,28610],[-3379,9532],[-798,13215],[-3365,-848],[-985,-10311]],[[2664072,3618419],[-577,14204]],[[2663495,3632623],[2791,8044],[1833,-7324],[4650,19704],[2519,-7218]],[[2559063,3643367],[5465,4535]],[[2570115,3609769],[145,-23204],[-1319,-3626]],[[2560082,3583580],[-2072,15870]],[[2632499,3757905],[977,21085]],[[2633476,3778990],[6219,17125]],[[2638752,3728604],[-1214,17383],[-5039,11918]],[[2623592,3193365],[80,3]],[[2623672,3193368],[4639,-12]],[[2668933,3142542],[396,-5417]],[[2627608,3569582],[-1823,22215]],[[2625785,3591797],[5027,22840]],[[2636879,3631572],[5958,-33141]],[[2640916,3562429],[-6133,-17270]],[[2651448,3839405],[1384,9941]],[[2624854,3881138],[-2479,18670]],[[2622375,3899808],[5460,3983],[906,13874]],[[2632500,3902694],[-3501,-10638]],[[2649886,4139077],[367,26909]],[[2664718,4152420],[-346,-18958]],[[2671207,3947336],[-3199,7376]],[[2668008,3954712],[895,26652]],[[2668903,3981364],[15814,-5394]],[[2684717,3975970],[-590,-41310]],[[2736092,4211049],[585,24636],[1642,8065]],[[2687977,2015403],[-1709,29170],[1153,10381],[-1952,16409]],[[2685469,2071363],[1925,7615],[4297,2040]],[[2691691,2081018],[1501,1459],[4737,-17270]],[[2697929,2065207],[3597,-25943],[-2242,-28853]],[[2699284,2010411],[-4327,5095],[-6980,-103]],[[2683502,4318100],[-7891,-594]],[[2667042,4317214],[-21,32735]],[[2667021,4349949],[34,16326]],[[2639025,4116511],[-186,51925]],[[2749879,1859383],[-1727,-7244],[-10025,87]],[[2738127,1852226],[167,98261]],[[2738294,1950487],[-617,30324],[-2848,19373]],[[2734829,2000184],[539,33168],[6566,194]],[[2741934,2033546],[4385,-38572],[1386,-23530],[-1747,-9096],[-565,-18638],[1161,-40364],[3325,-43963]],[[2622322,2254444],[496,7952],[12904,-534]],[[2635722,2261862],[5661,-9406]],[[2641383,2252456],[-59,-11462],[-3018,5530],[-12539,-36194],[-8792,-7630]],[[2616975,2202700],[5483,21042],[-136,30702]],[[2620326,2189647],[0,0]],[[2616892,2199927],[3986,-1737],[-1328,-7941],[-2658,9678]],[[2760250,1571183],[-1197,-64740]],[[2759053,1506443],[-4936,-3441],[-10728,16],[-5375,4227]],[[2738014,1507245],[-191,52413]],[[2737823,1559658],[-40,13917]],[[2737783,1573575],[16279,102],[6188,-2494]],[[2682700,4263518],[-7050,-394]],[[2715292,4316596],[1136,-13889]],[[2703097,4256633],[-87,60566]],[[2668903,3981364],[-535,33660]],[[2671321,4041010],[7889,-1830],[-408,-4944],[7174,-2192]],[[2685757,4013291],[-399,-29984]],[[2685358,3983307],[-641,-7337]],[[2687258,4411187],[5948,-21077],[3709,8814]],[[2686116,4431666],[0,0]],[[2725622,4253515],[1476,-16198],[-145,-24624]],[[2725055,4171659],[-7929,1321]],[[2671826,4214660],[6347,-1908]],[[2685859,4196994],[-162,-13591]],[[2685697,4183403],[-309,-28291]],[[2628061,4001497],[114,40580]],[[2628175,4042077],[11,8565]],[[2687402,2371678],[-1032,-7159],[2260,-28523],[-1015,-12250],[-3140,-866]],[[2684475,2322880],[-5855,17649],[-4631,-8627]],[[2673989,2331902],[-2029,16461],[-803,28921],[-1021,1259]],[[2606316,2415257],[2840,31142]],[[2609156,2446399],[270,25]],[[2609426,2446424],[13535,678]],[[2626800,2392980],[-1890,-19680]],[[2624910,2373300],[-6550,306],[-119,-8178],[-5908,471]],[[2612333,2365899],[-1416,132]],[[2610917,2366031],[70,40785],[-4671,8441]],[[2730513,1818669],[7495,-178]],[[2738008,1818491],[2650,169],[24,-15809],[2712,-49]],[[2743394,1802802],[55,-65976]],[[2743449,1736826],[12,-15792],[-5801,-30454]],[[2737660,1690580],[403,36693],[-2006,10416]],[[2736057,1737689],[-7492,58768],[1948,22212]],[[2724874,1474280],[13136,385]],[[2738010,1474665],[-3,-82616],[424,-35074]],[[2738431,1356975],[-1187,-6915],[-4995,-3906],[-2568,19368],[1213,29619],[-3125,43633],[-2937,20187],[42,15319]],[[2754963,1390239],[391,-2320]],[[2755354,1387919],[-4157,-43685],[-942,-417],[4708,46422]],[[2740967,1293251],[0,0]],[[2738629,1287176],[0,0]],[[2737069,1283439],[0,0]],[[2730981,1269316],[0,0]],[[2726720,1260362],[0,0]],[[2724516,1278403],[0,0]],[[2711783,1242230],[4941,10825],[2067,13383],[4462,10517],[2918,-17280],[-2705,-6685],[-2392,4504],[-3400,-10983],[-5891,-4281]],[[2702032,1242193],[0,0]],[[2681824,1250770],[0,0]],[[2723890,2307137],[-1589,-109],[87,-27477],[-6865,2940]],[[2715523,2282491],[16,12963],[-10303,-667]],[[2705236,2294787],[5,16190]],[[2705241,2310977],[9125,55883],[2709,2665],[5063,-14284]],[[2722138,2355241],[891,-5218],[861,-42886]],[[2699130,3982519],[-587,33772]],[[2702179,4048557],[3110,-1075]],[[2710935,4028650],[-245,-24718],[3674,-9091],[-106,-10048]],[[2671962,4096461],[-243,-21911]],[[2660550,4078562],[171,10511]],[[2685697,4183403],[7619,-5837],[7839,-1262]],[[2701400,4162792],[-327,-40569],[-979,-6903]],[[2700094,4115320],[-6375,3205]],[[2688703,1771219],[-1214,20118],[3675,27689]],[[2691164,1819026],[13935,231]],[[2705099,1819257],[-39,-57672]],[[2705060,1761585],[-21,-24426]],[[2705039,1737159],[-5491,215],[37,33191],[-10882,654]],[[2718087,4054247],[8500,3524]],[[2710908,1572933],[-1835,18115],[-3674,17298],[-1730,-6672],[-897,28734],[2113,24894]],[[2704885,1655302],[13822,-167]],[[2718707,1655135],[60,-47960]],[[2718767,1607175],[44,-16977],[-2711,-288],[44,-19377],[-5236,2400]],[[2699043,1658872],[1050,-1172]],[[2700093,1657700],[-1050,1172]],[[2700144,1657630],[637,-2009]],[[2700781,1655621],[-348,-32]],[[2700433,1655589],[-289,2041]],[[2699248,1641835],[0,0]],[[2681017,2226870],[411,40]],[[2681428,2226910],[-411,-40]],[[2669869,2226597],[11095,284]],[[2680964,2226881],[-811,-13052],[344,-30528]],[[2680497,2183301],[-3456,-44667],[-2916,-11941]],[[2674125,2126693],[-1449,24634],[-5075,18110],[-335,28016]],[[2667266,2197453],[1278,-228],[1325,29372]],[[2654203,4350145],[20,-46307]],[[2716162,1950413],[-8369,-358]],[[2707793,1950055],[96,115089]],[[2707889,2065144],[8233,55],[468,59227]],[[2716590,2124426],[3069,-18637],[827,-14862],[4110,-21230],[-345,-19681]],[[2724251,2050016],[-1324,-17645]],[[2722927,2032371],[-6802,-3386],[37,-78572]],[[2661709,2381696],[210,-12978],[-3700,-13861],[425,-13759],[-2744,-24486]],[[2655900,2316612],[-2657,-10885],[-2118,-30222]],[[2651125,2275505],[-2352,2161]],[[2648773,2277666],[14,33346]],[[2648787,2311012],[958,46473],[1782,16],[-843,28103]],[[2654145,4396317],[4758,14666],[3970,23265],[4291,333]],[[2667021,4349949],[-12818,196]],[[2727953,4122434],[-4233,-108],[-2176,-10507],[-3190,586],[-48,-10965],[-3172,662]],[[2715134,4102102],[-960,16674],[344,41262]],[[2704478,4088686],[-2603,9319],[214,16588],[-1995,727]],[[2715134,4102102],[-91,-16297]],[[2666114,4455905],[8021,-20516]],[[2734382,4383843],[-10821,77]],[[2723561,4383920],[19,41449]],[[2667096,4226123],[-41,33989]],[[2649423,3901559],[-4951,10521]],[[2644430,3920958],[-2454,27452]],[[2668008,3954712],[-8007,-6508]],[[2732055,4316516],[2372,-71],[-17,27404]],[[2654233,4285025],[10146,-334]],[[2654236,4232388],[-7,19839]],[[2715391,4370606],[3338,116],[-759,13734],[5591,-536]],[[2723561,4383920],[-48,-67336]],[[2697225,4235438],[3256,2473]],[[2628489,4398479],[-17,19481]],[[2628472,4417960],[-36,31069]],[[2628301,4132506],[199,57092]],[[2628500,4189598],[-6,7986]],[[2628257,4116005],[44,16501]],[[2685358,3983307],[6313,-5093],[3110,-8009],[-296,-19259]],[[2707501,4413522],[6223,-3607],[7136,26990]],[[2550625,2446496],[12140,299]],[[2562765,2446795],[-3453,-13919],[-436,-38430],[1210,-19950],[3741,-21074],[-276,-15205],[-2601,-6498],[1372,-9293],[7235,6753]],[[2569557,2329179],[-16689,-16892]],[[2552868,2312287],[1837,3700],[724,20384],[1666,5157],[-2258,13804],[1139,30863],[-3505,12712],[-2851,23034],[1005,24555]],[[2535093,3095203],[-483,-26609]],[[2534610,3068594],[-842,-43890]],[[2249490,2094041],[6027,-43445]],[[2258099,2032743],[-6595,-32622]],[[2251504,2000121],[0,6666],[-12978,-181]],[[2238526,2006639],[-113,82910]],[[2511110,3194735],[5407,47]],[[2497465,2948157],[10,-40767],[3494,94]],[[2500969,2907484],[-2032,-5075],[6,-27562]],[[2493609,2874767],[-29,21905],[-3870,2570],[-47,48749]],[[2447009,2587312],[-776,17425],[2718,5050]],[[2463197,2577714],[-14,-16353]],[[2463183,2561361],[-11605,-198]],[[2491236,2675710],[11,24462],[-1507,43829]],[[2489740,2744001],[1500,8861]],[[2454187,2446773],[-3229,28]],[[2450958,2446801],[-12839,63]],[[2451459,2511866],[1748,-4814]],[[2514790,2430275],[-7047,-170]],[[2507743,2430105],[-227,98113]],[[2507516,2528218],[5646,-112]],[[2515997,2528151],[205,-81555]],[[2479952,3038463],[-7,-16317],[-8784,6]],[[2468453,2512405],[8018,131]],[[2476494,2447101],[-2443,-28]],[[2830991,3915830],[5779,39345]],[[2842581,3932091],[-1460,-7677]],[[2841731,3921207],[1102,-6128]],[[2842294,3875988],[-1263,-1968]],[[2840876,3873749],[-107,-185]],[[2840627,3873317],[-100,-173]],[[2840226,3872846],[-503,3794]],[[2839723,3876640],[-8732,39190]],[[2516476,3022530],[-8766,-156]],[[2481895,2708932],[5763,34685],[2082,384]],[[2491246,2642960],[-13937,497]],[[2466081,2512355],[2,49059],[-2900,-53]],[[2431469,2207821],[4583,23164],[2408,18568],[4256,2006]],[[2448464,2161036],[-5063,13549],[-1948,-2809],[-1010,19284],[-2658,162],[764,19054],[-7080,-2455]],[[2447533,2130462],[202,438]],[[2447735,2130900],[39,319]],[[2448071,2133652],[86,704]],[[2448157,2134356],[13,555]],[[2448222,2137175],[104,1972]],[[2448341,2139427],[3,60]],[[2448468,2140336],[389,1290]],[[2448865,2141655],[48,159]],[[2449023,2141984],[197,267]],[[2449778,2148846],[70,987]],[[2449895,2150504],[63,906]],[[2449958,2151410],[-86,1236]],[[2449807,2153583],[-18,122]],[[2449757,2153933],[-54,375]],[[2449133,2155170],[-270,648]],[[2448671,2156280],[-37,2068]],[[2448625,2158832],[-4,228]],[[2448620,2159116],[-43,534]],[[2426079,2822853],[109,-53375]],[[2482905,2153485],[0,-8214]],[[2482905,2145271],[-4,-276]],[[2482891,2144326],[-22,-1505]],[[2482866,2142789],[-76,-753]],[[2482811,2137876],[28,-820]],[[2482839,2137056],[-885,-25227]],[[2481255,2103052],[-11,-57]],[[2481244,2102995],[-2374,-10663],[-1675,4401],[-2741,27727],[-2135,-15126]],[[2431469,2207821],[584,15933],[-3225,-585]],[[2427994,2187387],[4432,3084],[3680,-12842],[-3131,-16300],[-6118,20162]],[[2385628,2824810],[1942,-30505],[281,-83333],[1906,-53]],[[2389757,2710919],[-1544,-32615]],[[2387014,2678545],[-2048,16900],[-3954,14893],[-358,16927],[-3477,55127],[1090,12232],[-1599,16737],[781,13590]],[[2371095,2670837],[2550,-86],[5012,27900],[2918,-5084],[1442,-14959]],[[2371847,2630379],[-752,40458]],[[2844580,3914667],[-431,8700]],[[2844149,3923367],[0,0]],[[2844149,3923367],[-1568,8724]],[[2848018,3515323],[416,-11148]],[[2848434,3504175],[-416,11148]],[[2745283,3487266],[-284,11280],[4403,16962]],[[2749402,3515508],[2153,16651],[4220,13934]],[[2755775,3546093],[4709,-5815],[695,-8740]],[[2761179,3531538],[-1474,-2772],[1140,-44373]],[[2760845,3484393],[-10772,1523]],[[2841588,3590998],[5098,25544]],[[2846686,3616542],[2487,-4762]],[[2849173,3611780],[2552,-2900]],[[2851725,3608880],[3343,-12261]],[[2855068,3596619],[-1120,-16225],[-3842,-11076]],[[2850106,3569318],[-2894,-9688]],[[2804321,3549668],[7007,-15586],[5965,-5633]],[[2817293,3528449],[-524,-43743]],[[2816769,3484706],[-7737,-66]],[[2809032,3484640],[-3707,-250]],[[2805325,3484390],[-7722,-98]],[[2797603,3484292],[2385,29193]],[[2799988,3513485],[4333,36183]],[[2834795,3602007],[20,-33292]],[[2828671,3547164],[-1087,3120]],[[2827584,3550284],[-2916,14457],[-3541,3195]],[[2821127,3567936],[-294,29023],[2909,9118]],[[2823742,3606077],[4049,13574]],[[2827791,3619651],[5658,-7936]],[[2833449,3611715],[1346,-9708]],[[2813822,3951171],[-4519,-5297]],[[2817132,3993908],[-3310,-42737]],[[2812570,3980161],[0,0]],[[2760274,3649073],[2924,22857],[-1435,19287]],[[2771417,3712854],[-267,-18977],[5156,-24106]],[[2776306,3669771],[-2651,-15721],[-1821,6797],[-4322,-15259],[-931,-17690]],[[2766581,3627898],[-6307,21175]],[[2697848,3625392],[9656,45344]],[[2709369,3596709],[-3248,-13805],[-3651,-5072]],[[2702470,3577832],[356,3645],[-4978,43915]],[[2749084,3649194],[1177,-20224]],[[2750261,3628970],[-4834,-13101]],[[2745427,3615869],[-6903,-18235]],[[2738524,3597634],[-4454,23940],[957,3249]],[[2834671,3614454],[-358,-785]],[[2834313,3613669],[358,785]],[[2862788,3589916],[2988,2097]],[[2865776,3592013],[-475,-21727],[-2324,-2191]],[[2862977,3568095],[-1332,19693]],[[2861645,3587788],[1143,2128]],[[2801495,3644519],[3604,-10912]],[[2805099,3633607],[3155,-7041],[3254,12362]],[[2811508,3638928],[106,-13454]],[[2811614,3625474],[-226,-32968]],[[2811388,3592506],[-5683,-7617]],[[2805705,3584889],[-6940,23262],[302,8439]],[[2816044,3693070],[-2425,17065]],[[2813619,3710135],[2674,29307]],[[2816293,3739442],[3197,-10999],[1662,-16009],[2563,-5942]],[[2823715,3706492],[4646,-4133]],[[2828361,3702359],[-664,-27019]],[[2827697,3675340],[-4725,9087],[-2772,15009],[-1686,-12463],[-2470,6097]],[[2859630,3727034],[-3522,23923]],[[2859304,3763720],[276,-2036]],[[2859781,3761170],[42,-109]],[[2859863,3760960],[75,-193]],[[2859951,3760735],[315,-521]],[[2860412,3760055],[2817,-11065]],[[2863583,3748502],[38,-53]],[[2863665,3748388],[195,-348]],[[2863907,3747946],[196,-401]],[[2864223,3747273],[643,-1994]],[[2866417,3740367],[245,-1251]],[[2866669,3739083],[25,-128]],[[2867162,3736570],[21,-109]],[[2867183,3736458],[-1971,-14377],[-355,-24648]],[[2864857,3697433],[-2766,26723],[-2461,2878]],[[2695284,3546885],[3010,5439],[-820,12259]],[[2697474,3564583],[4996,13249]],[[2712727,3562282],[-1568,-5540]],[[2711159,3556742],[-3062,-11999],[-3655,-1855],[-827,-10971],[-6254,-16291]],[[2703217,3503787],[0,0]],[[2703217,3503787],[-674,-9616]],[[2702543,3494171],[-2711,172]],[[2699832,3494343],[3385,9444]],[[2837639,3628198],[21,18]],[[2837660,3628216],[-21,-18]],[[2834795,3602007],[627,13877]],[[2835422,3615884],[1175,12630]],[[2836597,3628514],[1408,103]],[[2838005,3628617],[371,1449]],[[2838376,3630066],[8310,-13524]],[[2807283,3912589],[2837,-13275]],[[2810120,3899314],[-1489,-24698]],[[2808631,3874616],[-3193,-28408]],[[2804516,3836097],[-5720,16569],[1380,17727]],[[2797603,3484292],[-1732,-44]],[[2795871,3484248],[-9518,5]],[[2786353,3484253],[-2249,-19]],[[2787625,3581539],[5229,-7339]],[[2792854,3574200],[6495,-30760],[639,-29955]],[[2794676,3766108],[1671,6717],[832,23054]],[[2797179,3795879],[2401,13345]],[[2807754,3791786],[4505,-9659]],[[2812259,3782127],[-2745,-23725]],[[2809514,3758402],[-5153,-39248]],[[2804361,3719154],[-4248,-11900]],[[2800113,3707254],[-5437,58854]],[[2787821,3643914],[1859,6585]],[[2795094,3608466],[-2240,-34266]],[[2777857,3580485],[5173,56105]],[[2827666,3933642],[3325,-17812]],[[2839723,3876640],[-1437,-16445]],[[2838280,3860148],[-60,-1937]],[[2838219,3858205],[-4,-56]],[[2838143,3857174],[-2,-23]],[[2838041,3855814],[-26,-339]],[[2837920,3854681],[-36,-300]],[[2837830,3853925],[-22,-186]],[[2837807,3853736],[0,-2]],[[2837807,3853734],[-131,-798]],[[2837592,3852425],[-54,-326]],[[2837538,3852099],[-47,-430]],[[2831126,3861261],[-5140,51713],[1680,20668]],[[2833121,3901818],[-457,1611]],[[2841335,3485113],[-3689,-285]],[[2837646,3484828],[-2245,16482],[-3467,7045],[2000,6953]],[[2850106,3569318],[934,-15218],[-3022,-38777]],[[2848434,3504175],[337,-773]],[[2848771,3503402],[-510,-17212]],[[2848261,3486190],[-3,-1548]],[[2848258,3484642],[-6923,471]],[[2840977,3661856],[-1426,8573]],[[2839551,3670429],[2921,16936]],[[2851708,3666909],[1398,-9456]],[[2853106,3657453],[-4285,-7228],[-242,-9508]],[[2848579,3640717],[-7602,21139]],[[2811388,3592506],[4366,-19408],[2201,1190]],[[2817955,3574288],[-662,-45839]],[[2804321,3549668],[1384,35221]],[[2809514,3758402],[6779,-18960]],[[2813619,3710135],[-2242,-10862]],[[2811377,3699273],[-4621,8378],[-2395,11503]],[[2812259,3782127],[2962,3626],[4095,-6568]],[[2819316,3779185],[3206,-2133],[4247,-18348]],[[2826769,3758704],[-3054,-52212]],[[2827666,3933642],[-8549,13329]],[[2819117,3946971],[3723,22196]],[[2736907,3583757],[1617,13877]],[[2745427,3615869],[2151,-20747]],[[2746174,3586800],[1006,-19647]],[[2747180,3567153],[-2509,-9894]],[[2744671,3557259],[-2967,-9878]],[[2741704,3547381],[-4797,36376]],[[2827697,3675340],[1612,-1294]],[[2829309,3674046],[4883,-20335]],[[2834192,3653711],[1642,-13295],[2978,206]],[[2838812,3640622],[0,0]],[[2838812,3640622],[150,907]],[[2838962,3641529],[-586,-11463]],[[2838005,3628617],[-345,-401]],[[2837639,3628198],[-1042,316]],[[2835422,3615884],[-751,-1430]],[[2834313,3613669],[-864,-1954]],[[2827791,3619651],[-3009,674],[-3314,18256],[624,9754]],[[2822092,3648335],[5605,27005]],[[2839422,3819568],[939,1442]],[[2840727,3821136],[194,67]],[[2840922,3821204],[429,706]],[[2841765,3824054],[302,2015]],[[2842067,3826069],[40,15]],[[2842856,3826345],[432,-310]],[[2843529,3826131],[83,258]],[[2843875,3827531],[256,1838]],[[2844231,3830259],[281,1678]],[[2844617,3832068],[654,-2755]],[[2845301,3829125],[11,-74]],[[2845322,3828988],[1,-1]],[[2845332,3828924],[255,-1652]],[[2845507,3823786],[-15,-617]],[[2845485,3822866],[-30,-1315]],[[2845453,3821450],[-390,-5917]],[[2845063,3815533],[60,-821]],[[2845155,3814263],[720,-4393]],[[2844199,3787458],[-1513,-2190]],[[2842686,3785268],[-3028,17271],[-2842,549]],[[2838071,3821176],[133,-663]],[[2838321,3820169],[101,-297]],[[2859630,3727034],[-3746,-8703]],[[2855884,3718331],[-3709,15347]],[[2852175,3733678],[-3485,20183],[-1016,17770]],[[2843964,3750610],[-2785,21483],[1507,13175]],[[2852175,3733678],[2565,-19477]],[[2854740,3714201],[-1887,-7795]],[[2852853,3706406],[-1486,12406],[-3865,-2241],[-2109,11592],[-1429,22447]],[[2738989,3487510],[-2124,17053]],[[2736865,3504563],[-504,3995]],[[2736361,3508558],[-3068,25238]],[[2733293,3533796],[8411,13585]],[[2744671,3557259],[4731,-41751]],[[2758765,3593035],[-1390,-1775]],[[2757375,3591260],[-351,21817],[-1988,20721]],[[2755036,3633798],[5238,15275]],[[2766581,3627898],[14,-15668]],[[2766595,3612230],[-3210,-16540],[-1902,7059],[-2718,-9714]],[[2761402,3619221],[2100,-9370],[2183,16954],[-3975,903]],[[2688217,3554830],[0,0]],[[2819117,3946971],[-1176,-6432]],[[2817941,3940539],[-4119,10632]],[[2833460,3810477],[-2317,4597]],[[2785406,3720356],[404,16445]],[[2785810,3736801],[4243,-1741],[4623,31048]],[[2800113,3707254],[91,-8803],[-5028,-10157],[-111,-14844]],[[2793839,3671496],[-5715,44745],[-2718,4115]],[[2772347,3543100],[-3374,-12690],[-6632,7936],[-1162,-6808]],[[2755775,3546093],[3161,22216],[-171,24726]],[[2766595,3612230],[3589,-6684],[3461,-27611]],[[2690861,3606734],[322,1264]],[[2691183,3607998],[2407,-33825],[3884,-9590]],[[2685124,3532570],[-2987,17495]],[[2190066,3393427],[15040,-154]],[[2234261,2895734],[14857,-251]],[[2308225,2330766],[-9520,-15417]],[[2299251,2396589],[1513,-6579]],[[2369053,2289811],[-2610,5124],[-2314,-13112],[-4242,-872]],[[2351868,2351526],[5427,186],[-217,6723]],[[2271059,2194259],[987,-3582],[7797,28814]],[[2282010,2144589],[-10393,-51422]],[[2268404,2114128],[-3631,24546],[513,4474]],[[2265286,2143148],[5773,51111]],[[2251504,2000121],[20,-103856]],[[2258929,2729912],[3425,-52063]],[[2264604,2650494],[-3918,-12996]],[[2255033,2618709],[-1193,11721],[-2126,-7275],[-6231,59928]],[[2343914,2176429],[0,-3]],[[2343914,2176426],[37,-1175]],[[2343951,2175251],[98,-1962]],[[2344049,2173289],[384,-3131]],[[2344433,2170158],[1146,-3010]],[[2345579,2167148],[657,-736]],[[2346236,2166412],[39,-45]],[[2346275,2166367],[12,-13]],[[2346287,2166354],[645,-723]],[[2346932,2165631],[12,-14]],[[2346944,2165617],[431,-35314],[-4587,-19647]],[[2341026,2090983],[8669,47793],[2219,-4043],[-10816,-47541]],[[2358043,2174253],[3886,10152],[21,-7887]],[[2361950,2176518],[-11033,-30245],[2632,15602],[4494,12378]],[[2357618,2176060],[-158,1077]],[[2357690,2174817],[-72,1243]],[[2357727,2174757],[-37,60]],[[2357460,2177137],[267,-2380]],[[2356401,2179729],[-16,-66]],[[2357167,2179125],[-766,604]],[[2357206,2178856],[-39,269]],[[2356385,2179663],[821,-807]],[[2355283,2176869],[1094,2763]],[[2356377,2179632],[-204,-829]],[[2356173,2178803],[-427,-1116]],[[2355746,2177687],[-463,-818]],[[2354958,2176294],[105,187]],[[2355063,2176481],[-105,-187]],[[2353261,2173664],[1693,2624]],[[2354954,2176288],[-110,-194]],[[2354844,2176094],[-1583,-2430]],[[2351233,2170847],[1843,2532]],[[2353076,2173379],[-63,-97]],[[2353013,2173282],[-1367,-2232]],[[2351646,2171050],[-413,-203]],[[2351167,2170820],[3,-1]],[[2351170,2170819],[-3,1]],[[2350846,2171073],[60,-86]],[[2350906,2170987],[-40,25]],[[2350866,2171012],[-20,61]],[[2350806,2171192],[35,-105]],[[2350841,2171087],[-35,105]],[[2350696,2171520],[6,-19]],[[2350702,2171501],[-6,19]],[[2350559,2171926],[1,-1]],[[2350559,2171926],[0,0]],[[2350459,2172820],[96,-882]],[[2350555,2171938],[-30,91]],[[2350525,2172029],[-66,791]],[[2350369,2173898],[69,-831]],[[2350438,2173067],[-69,831]],[[2350285,2174912],[80,-968]],[[2350365,2173944],[-80,968]],[[2320411,2862377],[2865,14359],[4795,11730],[7753,3459]],[[2280975,2586512],[6686,22009],[2927,-28861]],[[2280951,2499345],[-1820,-6661],[-2094,14224]],[[2271837,2556988],[9138,29524]],[[2216171,2463313],[39,75742]],[[2230453,2533247],[-47,-97317]],[[2230406,2435930],[-10934,-74]],[[2174728,3148555],[124,81214]],[[2190700,2895796],[-49,-81410]],[[2211870,2273673],[1887,-34],[-37,-30954],[2517,-172]],[[2216237,2242513],[-63,-52498]],[[2201878,2392761],[-6,-78627]],[[2141398,2650432],[2111,-37]],[[2141389,2568877],[9,81555]],[[2068089,2634242],[298,-217982],[-267,-32248]],[[2068120,2384012],[-1745,-6432]],[[2066375,2377580],[-802,10568],[-5754,22501],[-4991,8806],[-4546,25690],[-2547,23523],[-3463,9538],[-2679,22853],[-3562,18395]],[[2038031,2519454],[-24,115131]],[[2221447,2089717],[135,-84373]],[[2201931,2006759],[82,82018]],[[2356145,2708067],[-3421,5030],[6,43129]],[[2352730,2756226],[-10,26370]],[[2371080,2763868],[7,-56293]],[[2371087,2707575],[-8685,-11786],[-3822,12133]],[[2247918,2575000],[-809,7415],[-4894,-4323]],[[2186711,2732474],[-132,-82339]],[[2296525,2599500],[-4934,48495]],[[2305887,2695701],[2604,-6606],[3417,-25246],[1429,420],[1697,-27775]],[[2128019,2568958],[12515,-72]],[[2147279,2894246],[-273,81437]],[[2919138,4269921],[2820,29517]],[[2925878,4285033],[-488,-6265]],[[2925692,4257796],[-6554,12125]],[[2909317,4266221],[4699,7215],[824,-19810],[1810,3974]],[[2916650,4257600],[-59,-13880]],[[2916591,4243720],[-1743,-5753],[1839,-14506],[-4449,-21827]],[[2908656,4210948],[-760,14849],[1741,15113],[-320,25311]],[[2916008,4178968],[2529,4918],[4694,32516]],[[2923231,4216402],[27,-70]],[[2923258,4216332],[31,-80]],[[2923289,4216252],[366,-953]],[[2923655,4215299],[5887,-6830],[587,-20877],[-1516,-37122]],[[2914090,4146367],[-968,11063]],[[1754594,5324164],[4395,-27298],[-3364,-1976],[-1576,-11383],[-6642,9018],[-2400,-13239],[-717,-24988],[-4506,-402]],[[1739784,5253896],[-311,61645],[9776,5018],[-195,21448]],[[1749054,5342007],[5540,-17843]],[[1737205,5227667],[2579,26229]],[[1754594,5324164],[4774,-12233],[6091,-7299],[4202,38607],[28834,29954]],[[1798495,5373193],[7294,5096]],[[1805789,5378289],[-992,-41720],[-2737,-30993],[600,-19541],[-839,-32943],[2425,-20504],[-3372,-6890],[-1584,-13601],[1854,-19435],[-1817,-20833]],[[1799327,5171829],[-2749,-16193],[-3615,7005],[-10,-13483],[5198,-29022],[-2426,-15806]],[[1795725,5104330],[-35707,-303],[-4703,-16448]],[[1755315,5087579],[-3904,4188],[-1628,25840],[-9583,-35]],[[1819860,5378339],[4475,-487],[-13,10782],[5235,5410],[-3,10819],[4929,5503]],[[1834483,5410366],[5216,-22188],[2148,4220],[52,-87845]],[[1841899,5304553],[-9,-8187],[-6896,-59],[287,-30562],[-6774,-22383]],[[1828507,5243362],[-2542,1816],[-2194,16068],[-3239,491],[1407,13988],[-1965,16724],[2051,13185],[-3505,44170],[1340,28535]],[[1804619,4730445],[-6123,-245]],[[1798496,4730200],[-13702,26]],[[1784794,4730226],[94,75967],[2065,17427],[545,30175]],[[1787498,4853795],[4472,-13211],[3140,5134],[1390,-14496],[-443,-27624],[4860,-20520],[-746,-27601],[3900,-1410],[548,-23622]],[[1904664,5290626],[13991,-1535]],[[1918655,5289091],[-301,-74718],[1999,-9],[-213,-114581],[4590,-135]],[[1924730,5099648],[7398,-878]],[[1932128,5098770],[-13,-30926]],[[1897413,5067687],[170,65479],[3358,30],[-43,32570],[3460,12157],[306,112703]],[[1859084,4600031],[-2178,35],[11,-16297],[-4352,0],[0,-16305],[-9663,-259]],[[1842902,4567205],[-55,48766],[-6524,6975]],[[1836323,4622946],[1614,9407],[-1613,16250],[-183,65278],[6571,-16]],[[1842712,4713865],[-3,-46415],[5330,37],[1837,16508]],[[1849876,4683995],[372,-8640],[3962,12687],[2200,-11803],[531,-33121],[3269,-16253],[-1126,-26834]],[[1769687,5531565],[-3507,13621],[1867,7906],[-977,18812],[-2840,10665],[-6249,42112]],[[1757981,5624681],[-25,44543]],[[1757956,5669224],[1171,-10518],[6927,19617],[2429,-10770],[853,-23672],[3346,-32188],[6708,-3287],[2656,5411],[853,18459],[4003,-83]],[[1786902,5632193],[590,-27035],[10733,520],[1,-16071]],[[1798226,5589607],[587,-35201],[6492,47],[-857,-22671],[2216,3041],[-1438,-20065],[4174,-6356],[442,-40748]],[[1809842,5467654],[-10103,21229],[-6887,3236]],[[1792852,5492119],[-4785,8183],[-287,15517],[-8445,17104],[-9648,-1358]],[[1905454,5670080],[347,145783]],[[1905801,5815863],[34924,385]],[[1940725,5816248],[-435,-81043],[1144,-21564],[-2436,-29746],[484,-29648]],[[1939482,5654247],[-5370,-462],[3,16621],[-3311,-432],[1,16259],[-21720,96],[-6,-16258],[-3625,9]],[[1833188,5687017],[-214,21355],[-3448,6638],[377,16451],[-7882,12415],[986,24118],[-3527,21026],[-3222,-7015],[-2812,13345],[-281,20586]],[[1813165,5815936],[25748,-103],[26479,88]],[[1865392,5815921],[257,-97564]],[[1881969,4583740],[-151,32743],[10652,-3434],[-363,-17600],[5238,6501]],[[1884514,4505818],[-2429,17600],[-884,21537],[2060,26747],[-1292,12038]],[[1939482,5654247],[-116,-74158]],[[1939366,5580089],[-8109,-4292],[-443,-31827],[-8808,-24341],[-1441,147]],[[1920565,5519776],[-11876,-75]],[[1908689,5519701],[-3612,5566],[12,14757],[-2652,41],[-5179,13714],[2047,18769],[-12057,-60]],[[1887248,5572488],[18,54050]],[[1887249,5653711],[16213,179],[1992,16190]],[[1884773,5397326],[-4107,14876],[-355,13369]],[[1880311,5425571],[3309,12],[6,16277],[10604,2079],[2164,14346],[266,-15489],[4403,-4593],[7255,-29430]],[[1908318,5408773],[5452,-27122],[5121,5975]],[[1918891,5387626],[-236,-91739]],[[1918655,5295887],[0,-6796]],[[1904664,5290626],[-7760,91]],[[1896904,5290717],[-1799,15135],[1776,25478],[-4581,3509],[-3264,21939],[402,16402],[-2293,2510],[-2372,21636]],[[1750160,5429528],[8,-57389],[-3527,224]],[[1746641,5372363],[-4739,-197],[-2597,-15959],[-8930,-186]],[[1730375,5356021],[-2,109586]],[[1730373,5465607],[5693,-17722],[14094,-1897]],[[1750160,5445988],[0,-16460]],[[1734275,5037601],[7660,-344],[14,-32927],[2671,-8979],[35,-23245],[6335,-8720]],[[1750990,4963386],[-1344,-22775],[-293,-32075],[-2604,65]],[[1746749,4908601],[-12422,212]],[[1745085,4747412],[-7493,34995],[-968,18692],[-5882,19426]],[[1731932,4857807],[3638,-16368],[3917,2726]],[[1739487,4844165],[5575,10]],[[1745062,4844175],[-16,-32387],[1104,-15],[-6,-32736],[-1106,20],[47,-31645]],[[2026290,5620992],[680,20086],[4593,-7170],[10740,-3014]],[[2042303,5630894],[9633,16394],[7517,-1032],[934,-5001]],[[2060387,5641255],[-6,-36965],[-1106,-14491]],[[2059275,5589799],[-3576,-64],[-13,-48857],[-1200,-35],[7,-65071]],[[2054493,5475772],[-11890,-112],[4,-16438],[-3546,-33],[1,16473],[-3528,-8]],[[2035534,5475654],[-2332,-1],[-7,32527],[-3552,-60],[1048,32683],[-14,63511],[-2708,19],[-1679,16659]],[[1958751,5181800],[-1742,13371],[109,51866],[-637,32321]],[[1956481,5279358],[4013,36]],[[1960494,5279394],[10454,51],[8,19364],[2338,5228],[8113,-46],[2813,24609],[4081,-1],[24,18854]],[[1988325,5347453],[1189,-2676]],[[1989514,5344777],[3504,-32495],[4079,-24441],[-1257,-25133]],[[1995840,5262708],[-4535,69],[-6,-10846],[-3443,0],[-2326,-16230],[-4621,65],[-621,-71327],[-3439,31],[-3434,-10838],[-9155,670]],[[1964260,5154302],[-5509,27498]],[[1975640,5816051],[29439,74]],[[2005079,5816125],[-732,-16348],[368,-75472],[-3031,-5321],[1145,-32979],[-3028,72],[-983,-16253],[-288,-98571]],[[1998530,5571253],[-981,-13029],[-6844,1250],[-5938,-33339]],[[1973520,5550995],[-12790,11619],[-3325,16637]],[[1957405,5579251],[79,35251],[7312,-359],[493,13150],[4850,-2720],[632,87680],[1820,-4246],[747,59895],[1666,-20],[636,48169]],[[2066313,5214745],[1192,-10],[-4,65443],[1492,19]],[[2068993,5280197],[10308,-65],[-11,-15299],[3509,66],[-16,-15846],[7137,-254],[1,-16268],[2525,-12]],[[2092446,5232519],[114,-125236]],[[2092560,5107283],[-494,-40339]],[[2064742,5067500],[5,65831],[1423,-6],[143,81420]],[[1834483,5410366],[4,65006],[-4549,-91],[-11,78809]],[[1829927,5554090],[8959,-678]],[[1838886,5553412],[2382,-20265],[17,-57787],[7307,-401],[36,-64660],[7235,489],[9,-25430],[3469,220],[3253,-17569],[-463,-34595]],[[1862131,5333414],[-6904,-29029]],[[1855227,5304385],[-13328,168]],[[1739487,4844165],[2,32586],[3910,-172],[1116,16046],[2218,-134],[16,16110]],[[1750990,4963386],[3975,10268]],[[1754965,4973654],[134,-32678],[-1666,-19],[-1,-32367]],[[1753432,4908590],[-1698,-24],[-240,-64443]],[[1751494,4844123],[-6432,52]],[[1882220,4696837],[15197,0]],[[1881969,4583740],[-7716,95]],[[1874253,4583835],[-1153,37598],[-1463,18874],[-3790,-3527],[-1234,36763],[2416,23727]],[[1869029,4697270],[13191,-433]],[[1854714,5288090],[2007,918],[2948,-66038],[5816,-15434]],[[1865485,5207536],[-8960,388],[-1051,-12401],[-3830,-11130]],[[1851644,5184393],[-2014,23089],[-9086,21035]],[[1840544,5228517],[4509,14026],[-411,10800],[4493,10321],[-17,16367],[5596,8059]],[[1825261,5554067],[4666,23]],[[1819860,5378339],[-14071,-50]],[[1798495,5373193],[-2237,19342]],[[1796258,5392535],[3511,1964],[-474,40504],[3196,5526],[-903,13860],[-6362,21488],[-2374,16242]],[[1809842,5467654],[7067,14],[3114,8115],[-1363,39399],[-2236,15702],[460,23266],[8377,-83]],[[1881447,4983362],[-12,-27935],[-4844,-18],[-1691,-15824],[-157,-24174],[-4895,-8189],[-17,-16228],[-3390,60]],[[1866441,4891054],[-15009,147],[-11,-16194]],[[1851421,4875007],[-8334,87],[-33,48957]],[[1843054,4924051],[5056,-659],[2,27405]],[[1848112,4950797],[906,20221],[8584,-909],[2404,-6063],[2805,22618],[5292,-8472],[6413,7412],[1243,-10018],[5688,7776]],[[2035537,5415632],[-3,60022]],[[2054493,5475772],[2270,3],[-3,-38263],[3571,2],[-6,-10855],[3551,-9],[1169,-10788],[11807,-115]],[[2076852,5415747],[-91,-32934]],[[2076761,5382813],[-3506,-13524]],[[2073255,5369289],[-7018,-13489],[-7097,75],[-5837,5597],[-1198,16298],[-2333,-18],[-1167,32607],[-5995,5320],[-7073,-47]],[[2005079,5816125],[29749,-163]],[[2034828,5815962],[-1110,-32785],[3638,14],[2,-48806],[6042,17]],[[2043400,5734402],[2,-64414],[-1089,-29],[-10,-39065]],[[2026290,5620992],[-2292,356],[-1813,-27048],[-8604,-24315],[-10392,-4400],[-4659,5668]],[[1964260,5154302],[-1035,-5803],[-486,-40268],[15925,-8],[-3381,-40889]],[[1932128,5098770],[2986,-40],[17,17608],[2280,-9],[1299,19040],[5735,19000],[4588,-33],[1764,22946],[7954,4518]],[[1880311,5425571],[-3677,106],[21,40255],[-7121,11925],[-67,60518]],[[1869467,5538375],[3477,-2049],[-12,19869],[7137,2],[-6,16218],[7185,73]],[[1908689,5519701],[8,-10718],[-3562,24],[-143,-49275],[3536,-25],[-210,-50934]],[[1865392,5815921],[25713,-301]],[[1891105,5815620],[-114,-145582],[-3737,6]],[[1954095,5395073],[10555,-189]],[[1987028,5396114],[1297,-48661]],[[1960494,5279394],[28,27012],[-2290,16492],[-1210,39788],[-2336,220],[-591,32167]],[[1798226,5589607],[3543,18],[-413,32208],[12634,119],[-1104,11401],[5361,5179],[1222,-13652],[4868,-16543],[-392,-17809],[2152,-13689],[-836,-22772]],[[1792428,5031524],[2235,13516],[20,50999],[1042,8291]],[[1799327,5171829],[1079,2441],[5046,-20749],[2699,16090],[3145,2168],[5496,25883]],[[1816792,5197662],[3656,-17519],[911,-36591],[2265,-26646],[3802,-27900],[2906,-10481],[-86,-36279],[3171,-15116],[2622,7166],[3232,-9463],[3458,-46144],[97,-14048],[5286,-13844]],[[1843054,4924051],[-9063,-181]],[[1833991,4923870],[-563,16039],[-3112,25612],[-1418,-6183],[-8692,13420],[-5289,26578],[-2213,22377],[-3691,-1665],[546,21730],[-1913,-2895],[-3903,-23872],[549,-9160],[-4887,-17800],[-2797,16137],[-2205,-1296],[-1975,28632]],[[1871431,4866677],[-7,8141],[-4995,85],[12,16151]],[[1881447,4983362],[3015,2314],[1009,27331]],[[1885471,5013007],[2653,7961]],[[1888124,5020968],[4415,-24170],[-244,-8600],[4987,-19203]],[[1897335,4877166],[-3901,-9596],[-5900,-1707]],[[1887534,4865863],[-4457,-7446],[-11646,8260]],[[2030608,5066273],[-450,34834]],[[2030158,5101107],[6,32176],[1224,0],[37,81722],[1181,37]],[[2032606,5215042],[33707,-297]],[[2035537,5415632],[3,-2676]],[[2035540,5412956],[-17656,-134],[7,2686],[-32656,-1509]],[[1816792,5197662],[6696,27665],[4603,6515],[447,11283]],[[1828538,5243125],[3329,-32004],[6049,21967],[2628,-4571]],[[1851644,5184393],[-22,-27630],[5083,-6400],[1328,-17423],[25,-48925],[3428,-21],[-13,-16444],[3986,-32],[670,-32516],[2822,-8043],[7913,-491],[4,-13529],[8603,68]],[[1888124,5020968],[129,112091],[634,-9],[-29,54541],[-5162,36],[-3428,18915],[-4054,10263]],[[1876214,5216805],[4045,6643]],[[1880259,5223448],[6805,31630],[1930,34742],[7910,897]],[[1880259,5223448],[-13,40419],[-3451,104],[-99,97142]],[[1876696,5361113],[4353,21],[-213,31647],[3937,4545]],[[2043400,5734402],[23155,-23]],[[2066555,5734379],[6011,-13],[-9,-16203],[3628,-39],[-10,-16305],[16195,35]],[[2092444,5628235],[-2741,11024],[-2882,-4492],[-8319,17883],[-3820,-4347],[-5842,8866],[-2759,-15768],[-5694,-146]],[[2092417,5516182],[-2409,-8107],[-8045,83]],[[2081963,5508158],[-2591,24],[12,32668],[-2255,-53],[5,16280],[-10723,65],[14,16300],[-7157,49],[7,16308]],[[1924730,5099648],[13,33067],[3653,-37],[5,32577],[3433,-35],[6877,16227],[364,49007],[1176,16509],[2324,200],[167,15774]],[[1942742,5262937],[50,16430],[13689,-9]],[[1730304,5624730],[16,12761]],[[1730577,5787418],[6890,162],[8,-64913],[20497,269]],[[1757972,5722936],[-16,-53712]],[[1757981,5624681],[-5036,16951],[-2771,-9339],[173,-23856]],[[1750347,5608437],[-5075,-28],[22,18958],[-14990,-2637]],[[1891105,5815620],[14696,243]],[[1869467,5538375],[-6438,-1885],[-3993,18146],[-4355,5688],[-5620,-6519],[-3746,18062],[27,24567],[-1992,23915]],[[1843350,5620349],[2957,4078],[-3853,29329]],[[1838886,5553412],[-522,25033],[2306,3703],[-161,31486],[2841,6715]],[[1876696,5361113],[-6727,18],[-7838,-27717]],[[1786137,4505161],[14,144587]],[[1786151,4649748],[14,26851]],[[1786165,4676599],[3786,-9968],[-763,-17541],[3408,-19131],[5291,-2505]],[[1797887,4627454],[10571,-17255],[2976,-11644],[3611,5889]],[[1815045,4604444],[-1850,-2230],[-55,-18230],[-6025,48],[95,-79208]],[[1989514,5344777],[15712,117],[595,-16246],[3479,-27],[583,-48913],[1907,490],[-3,-49903]],[[2011787,5230295],[-6609,16227],[-6926,0],[1,16212],[-2413,-26]],[[2068993,5280197],[-558,64666],[4814,12],[6,24414]],[[2076761,5382813],[5272,-6],[1781,-8132],[8598,-1]],[[2092407,5244375],[39,-11856]],[[1855227,5304385],[-513,-16295]],[[1828538,5243125],[-31,237]],[[1856300,4810361],[24893,35]],[[1881193,4810396],[6312,-886]],[[1887505,4809510],[4347,-61],[1247,-15350],[4280,-7215]],[[1882220,4696837],[50,48961],[-6546,107],[5,15711],[-6165,107],[-1656,10921],[-11610,7],[2,37710]],[[2064210,5815985],[28105,131]],[[2066555,5734379],[-1818,16291],[-527,65315]],[[2035540,5412956],[-957,-2743],[13,-65085],[-972,-24],[57,-64813],[-1063,-33],[-12,-65216]],[[2030158,5101107],[-13604,-40],[-17,32420],[1086,-225],[-1,60141],[-5108,2077],[997,27632],[-1724,7183]],[[1957405,5579251],[-1441,10747],[-9324,114],[-4121,-13529],[-3153,3506]],[[1940725,5816248],[34915,-197]],[[1757972,5722936],[0,93374]],[[1757972,5816310],[36803,-62]],[[1794775,5816248],[1019,-29637],[2020,-18673],[-553,-15634],[-6956,-87],[1086,-15899],[49,-65023],[-4796,-39],[258,-39063]],[[1794775,5816248],[18390,-312]],[[1865485,5207536],[2363,17362],[4885,2974],[3481,-11067]],[[1920565,5519776],[2377,-10798],[1,-16276],[10338,-16180],[41,-54161],[-2078,-17626],[2340,-20271]],[[1933584,5384464],[-6220,11026],[-8473,-7864]],[[1933584,5384464],[9942,-16]],[[1943526,5384448],[-383,-88713],[-7004,-57]],[[1936139,5295678],[-17484,209]],[[1943526,5384448],[6,10734],[10563,-109]],[[1942742,5262937],[-5228,168],[-1375,32573]],[[2081963,5508158],[2192,-20401],[1004,-38050],[-5321,-33954],[-2986,-6]],[[2034828,5815962],[29382,23]],[[1823013,4730524],[8386,-45],[19,-65613],[-1648,-5],[0,-33685]],[[1829770,4631176],[-2381,-2403],[-2722,-22602],[-7703,-72]],[[1816964,4606099],[-31,43005]],[[1816933,4649104],[4709,-100],[1391,15954],[-20,65566]],[[1788337,5429227],[-2468,6857],[-2640,24766],[-4384,16052],[-1135,14069],[-5254,6831],[-615,9505],[-4717,14130],[2563,10128]],[[1796258,5392535],[-6839,17000],[-1082,19692]],[[1730579,5815987],[27393,323]],[[1753432,4908590],[2778,-659],[259,16618],[17995,1181],[4534,18058]],[[1778998,4943788],[3219,-8053],[330,-17533],[3926,-8290],[-565,-19125],[1553,-19939]],[[1787461,4870848],[-4092,6529],[-973,18757],[-3197,-27948],[-6313,-10253],[-3677,-33775],[-6346,-20279],[-2847,-112]],[[1760016,4803767],[-8522,40356]],[[1788004,4868680],[-543,2168]],[[1778998,4943788],[1846,15621],[-1433,35420],[3177,7148],[2210,22662],[3689,-9426],[3941,16311]],[[1833991,4923870],[-2678,60],[11,-32588],[-1158,0],[117,-34715],[2214,-12421],[-5558,-20916],[-5198,-13704],[-1050,-10034]],[[1820691,4799552],[-6540,39319],[-1124,-7527],[-5631,17271],[-495,10534],[-6185,1428],[-368,-9150],[-4265,15309],[-3692,12],[0,12197],[-4387,-10265]],[[2130873,4213628],[376,58198]],[[1994248,3784768],[1609,-16169],[-1616,-17944]],[[1994241,3750655],[-4720,-11151]],[[1983183,3785717],[785,12478],[-4151,6776],[-1276,14295],[13838,109],[19,-5663]],[[1971679,3882256],[-13,-31466],[-18969,0]],[[2010073,3748976],[-14,35757]],[[2031070,3836337],[6582,4453]],[[2052628,3737733],[444,-27048]],[[2036881,3710101],[-15267,-101],[-21,16213],[-2973,153]],[[2075204,3968625],[-10326,53]],[[2064878,3968678],[-8238,-23]],[[2064454,4050338],[10813,-34]],[[1986106,3715187],[-3009,-14793],[-35,-10650]],[[1953156,3660750],[55,74211]],[[2019050,3645572],[-902,118]],[[2067441,3854455],[24729,529]],[[2083891,3723043],[-8227,15543],[-10235,-3605],[-1008,6403]],[[2117233,4050257],[9792,409]],[[2047610,4180307],[404,-41492],[-1030,-19903]],[[2046984,4118912],[-405,-15060]],[[2046579,4103852],[-1284,-8832],[-4207,-1462],[-1036,-18348]],[[2020495,4117478],[-159,78009],[-553,19406]],[[2019783,4214893],[1108,-12325],[3413,6025],[1292,-12174],[5945,-4333],[5891,9342],[1567,-4725],[2994,25867]],[[2127665,4213623],[-19097,-393]],[[2105325,4229514],[202,89540]],[[2046579,4103852],[4047,-14666],[4099,-4969]],[[2054697,4050332],[-12000,-223]],[[2001236,4319278],[102,-75364],[-3195,-10870],[-294,-59678]],[[2064878,3968678],[128,-48836],[-1206,-13012],[3711,-468],[-95,-27515]],[[2056642,3887703],[-37,80951]],[[2064043,4126341],[0,0]],[[2064277,4180557],[64,-48952]],[[2064341,4131605],[-2635,-16167]],[[2054728,4115250],[-4,4114],[-7740,-452]],[[2063193,4123694],[0,0]],[[2032630,3954875],[2229,-21707],[2308,515],[3387,-25436],[-1760,-21227]],[[2006505,3649193],[-9848,-50]],[[1996656,3689727],[-1,24118],[-2414,36810]],[[2019783,4214893],[-1506,32075],[1929,32362],[-6569,33265],[416,6636]],[[2442011,4178119],[-12637,1581]],[[2429374,4179700],[30,8165]],[[2429404,4187865],[185,57087]],[[2429589,4244952],[6306,-1365]],[[2435895,4243587],[8284,-41229]],[[2366544,4083983],[3,8071]],[[2366547,4092054],[12450,-802]],[[2378997,4091252],[18,-32431]],[[2379015,4058821],[-23,-16256]],[[2378992,4042565],[-12517,495]],[[2366475,4043060],[69,40923]],[[2437133,3476339],[396,72860]],[[2437529,3549199],[12128,-909]],[[2449657,3548290],[-56,-10890],[3034,-377]],[[2452635,3537023],[-295,-61011]],[[2404150,4138529],[243,9]],[[2404393,4138538],[-291,-63137]],[[2404102,4075401],[-11397,668]],[[2392705,4076069],[-2726,46],[80,49378]],[[2390059,4137750],[14091,779]],[[2341555,4044210],[13976,-557]],[[2355531,4043653],[12,-13892]],[[2355543,4029761],[-26,-55507]],[[2355207,3846599],[-10,-16636]],[[2435862,4007856],[7793,-3821]],[[2443655,4004035],[814,-32974]],[[2444469,3971061],[-6145,994],[-123,-16621]],[[2438201,3955434],[-13272,964]],[[2424929,3956398],[167,32869],[-5853,1244]],[[2419243,3990511],[123,18968]],[[2484874,3500648],[-5283,248]],[[2479591,3500896],[217,12514],[-3286,42027]],[[2476522,3555437],[4104,22304]],[[2480626,3577741],[4237,2466],[-11,13659],[2590,-212]],[[2487442,3593654],[2825,-29]],[[2490267,3593625],[-602,-7159],[2791,-29898],[-138,-12834]],[[2492318,3543734],[-260,-43438],[-7184,352]],[[2328964,4181056],[10425,-515]],[[2339389,4180541],[3035,-158],[797,-24476]],[[2343221,4155907],[1385,-43460]],[[2386101,3770635],[12226,-1736]],[[2398327,3768899],[-202,-29921]],[[2398125,3738978],[-3071,300],[-146,-18997]],[[2394908,3720281],[-10735,4735]],[[2457020,3920209],[-165,-60517]],[[2445579,3888100],[-1378,1958]],[[2444201,3890058],[78,25366],[4205,-274],[18,27875]],[[2448502,3943025],[4263,-22470],[4255,-346]],[[2370658,3764060],[-15484,4386]],[[2401966,3956462],[-220,11284],[2598,18977]],[[2404344,3986723],[1640,21968],[2312,-4112]],[[2408296,4004579],[7721,-13630]],[[2416017,3990949],[-3562,-52054]],[[2412455,3938895],[-7899,1708],[-2590,15859]],[[2418230,4243352],[23,-46939]],[[2418253,4196413],[-9310,-568]],[[2408943,4195845],[226,29213],[-1074,16824]],[[2408095,4241882],[2137,268]],[[2410232,4242150],[7998,1202]],[[2497104,3545624],[1516,12375],[4255,13709]],[[2502875,3571708],[1470,10313],[3539,-15351]],[[2502460,3501199],[-5356,44425]],[[2465752,3707568],[143,63963]],[[2472135,3765125],[2595,-11340],[-3796,-19243],[7214,-39175],[2498,319]],[[2480646,3695686],[-1010,-5562]],[[2479636,3690124],[-10816,379]],[[2449962,3647759],[25,16215],[-2877,603],[50,16414],[4384,-886]],[[2463235,3620761],[-1228,-41313]],[[2462007,3579448],[-5152,609],[-1485,7879]],[[2455370,3587936],[-462,13789],[-3482,16021],[-448,29924],[-1016,89]],[[2406694,3533735],[-4025,576]],[[2402669,3534311],[169,48942]],[[2402838,3583253],[6057,-674]],[[2425533,3580557],[-659,-49043]],[[2355056,3526334],[15307,-3508]],[[2370363,3522826],[-229,-46623]],[[2386289,3930983],[-384,-69669]],[[2369101,3928901],[7742,-1609],[44,5465],[9402,-1774]],[[2437902,3811207],[395,-25267]],[[2438297,3785940],[-52,-19199],[-7325,47],[-3506,-7592]],[[2427414,3759196],[-4575,1067]],[[2422839,3760263],[-287,51641]],[[2422552,3811904],[15350,-697]],[[2355608,4203940],[10704,-462]],[[2366312,4203478],[-67,-46349]],[[2366245,4157129],[-59,-19043]],[[2366186,4138086],[-10770,811]],[[2355416,4138897],[-16,16267]],[[2355400,4155164],[208,48776]],[[2379015,4058821],[13380,791]],[[2392395,4059612],[-216,-14558],[2014,-20093],[3039,-8770]],[[2397232,4016191],[-2688,2852],[-811,-13293],[-2847,-3419],[-3,-10965],[-4036,7819]],[[2386847,3999185],[-297,-11965],[-4725,3117],[-2813,-7208]],[[2379012,3983129],[-20,59436]],[[2370182,3678885],[52,10883]],[[2370234,3689768],[218,48904]],[[2382635,3725278],[345,-48057]],[[2382980,3677221],[-12798,1664]],[[2484804,3455626],[5690,-772],[4061,4978],[1847,-13937]],[[2496402,3445895],[-1861,-5189],[2149,-10541],[-4752,-3033],[2112,-9580]],[[2494050,3417552],[1013,-10423],[-3901,-24162]],[[2484858,3382690],[-54,72936]],[[2440977,3785765],[-27,10929],[4677,-232]],[[2453197,3795403],[-119,-86862]],[[2451593,3700554],[-4383,506],[65,16311],[-6143,336]],[[2441132,3717707],[-155,68058]],[[2385858,3853128],[6154,-1153],[39,5441],[6217,-1009]],[[2397979,3806448],[348,-37549]],[[2382707,3622814],[472,-34414]],[[2383179,3588400],[-35,-19156]],[[2383144,3569244],[-24,-13661]],[[2383120,3555583],[-12586,1675]],[[2370534,3557258],[99,21778]],[[2370633,3579036],[192,45288]],[[2370825,3624324],[11882,-1510]],[[2389712,4240181],[208,-36938]],[[2389920,4203243],[-8,-21839]],[[2378876,4180968],[-307,58691]],[[2378569,4239659],[6058,503]],[[2384627,4240162],[5085,19]],[[2441786,4169082],[291,-30703],[1654,-17076]],[[2443731,4121303],[-11279,564]],[[2432452,4121867],[-3131,223]],[[2429321,4122090],[53,57610]],[[2408873,3660162],[-4648,453]],[[2404225,3660615],[-53,77074]],[[2404172,3737689],[6553,-603],[1985,-17229],[3892,10989]],[[2416602,3730846],[-123,-27186],[4591,-12259],[-16,-8216]],[[2480626,3577741],[-3120,8485],[156,42757]],[[2477662,3628983],[2005,-538],[-30,53408]],[[2479637,3681853],[7958,348]],[[2487595,3682201],[-153,-88547]],[[2355503,4084236],[11041,-253]],[[2366475,4043060],[-61,-13574]],[[2366414,4029486],[-10871,275]],[[2355531,4043653],[-28,40583]],[[2404605,3885228],[6205,-741],[3309,45308]],[[2414119,3929795],[2884,-34243]],[[2417003,3895552],[-2795,-58268]],[[2414208,3837284],[-3622,552]],[[1558380,5286907],[-133,39791]],[[1558247,5326698],[27196,31]],[[1585443,5326729],[-110,-62024]],[[1533715,5403259],[20271,-321]],[[1553986,5402938],[349,-76409]],[[1554335,5326529],[-10248,262],[-52,-17962]],[[1544035,5308829],[-4112,-9335],[-4460,10679]],[[1535374,5307709],[-858,64945],[1214,-31384],[3670,13860],[-1848,18592],[3043,12392],[-1160,8918],[-3604,-7718],[-2116,15945]],[[1568252,5473224],[4373,-12067]],[[1572625,5461157],[1793,-23657],[4069,-20529],[5228,-7292],[2814,-12322]],[[1586529,5397357],[-26696,319],[9,5438]],[[1559842,5403114],[60,37969],[-1216,16595]],[[1586529,5397357],[10312,-6159],[2052,10110],[8429,0]],[[1605451,5327277],[-20008,-548]],[[1558247,5326698],[-3912,-169]],[[1553986,5402938],[5856,176]],[[1651512,5621538],[-619,17559],[3376,9466],[4357,-19712],[3136,15481],[4497,-6101],[433,9383],[5553,9521],[4754,-23832],[-749,-11449]],[[1676250,5621854],[-3389,-49],[-3012,-13877],[-10,-16278],[-2404,-13547],[-1196,-21699],[-5326,-15870],[-21,-16143],[-9534,-742],[-3592,-21956],[-64,-18718]],[[1562417,5816522],[0,0]],[[1624178,5816191],[2337,-8590],[941,-32098],[2202,-10987],[-2711,-12478]],[[1578559,5749758],[-45,19798],[-6113,6566],[-1343,40458],[28049,-929],[25071,540]],[[1572054,5765906],[0,0]],[[1566346,5641155],[4644,14619],[-173,-18521],[3109,-26061],[-4933,-39222],[-376,15342],[-3743,-32067]],[[1550262,5538671],[-15120,96],[-8540,2898]],[[1526602,5541665],[-2142,39801],[-5022,25150]],[[1651407,5372267],[6908,3070],[3077,15424],[1740,-9012]],[[1674606,5290709],[2075,-12133],[-564,-23992]],[[1707748,5371554],[-8935,-12697],[-1202,5987]],[[1697775,5392923],[5494,9647],[1498,23285],[-36,64682]],[[1708532,5490524],[21834,-207]],[[1730366,5490317],[7,-24710]],[[1730375,5356021],[-4,-21780]],[[1725104,5341145],[-688,15437],[-6178,29114],[-7681,-1928],[-2809,-12214]],[[1698137,5816195],[21377,12]],[[1719308,5637799],[-2733,123],[-18,-47183],[-4553,11288],[-3390,-5784]],[[2957118,4513180],[-580,-13524],[3970,1221],[-1726,-31201],[-1893,-1544],[939,-29683]],[[2957828,4438449],[-4799,-23452],[-4318,-8514]],[[2978548,4452411],[2303,7418],[-1695,15229],[21,23019],[3281,147],[-82,13075]],[[2973782,4431374],[-1822,39532],[-878,-618],[-46,42010]],[[2972219,4428024],[-1079,11810],[-5808,-3612],[-1066,-9135]],[[2964266,4427087],[-5410,-4136],[-1028,15498]],[[1574696,3882146],[4556,7056],[1917,29768]],[[1589299,3853290],[-609,-16712],[1682,-20242],[-3934,-38],[295,-30078],[-5891,115]],[[1641937,3343410],[552,-13]],[[1629820,3190884],[365,27966],[-7273,23224],[770,29086],[-3738,10751],[-4552,32697],[-3294,7245],[-1710,22663]],[[1578179,3702574],[3093,36]],[[1581272,3702610],[869,-21680],[6801,-16305]],[[1588942,3664625],[964,-5157]],[[1587934,3623570],[-14,-13215],[-4594,-5336],[688,-14903]],[[1584014,3590116],[-3123,16559],[118,30592],[-3228,30344],[398,34963]],[[1619422,4017671],[7423,11443],[2162,12147],[2811,1039],[1998,-14417],[13977,-200]],[[1604521,3722992],[-643,51884]],[[1606889,3660206],[-2361,11409],[-7,51377]],[[1713844,3344903],[37773,-723],[15084,43],[2437,2919]],[[1797415,3196025],[-92,-21741],[4601,-32333],[983,-21744],[2695,-27208],[5609,-27741]],[[1802933,3023424],[-24536,-353],[-4,-8185],[-27427,-293],[-17522,293],[6,-5465],[-8248,-112],[-9276,5453],[-3216,-30439]],[[1709658,2998471],[1322,13503],[2493,50652],[-583,99832]],[[2758177,2825367],[-5012,23579],[-912,20566]],[[2752253,2869512],[3010,7850],[879,27016]],[[2756142,2904378],[3360,9952]],[[2759502,2914330],[3820,328],[8012,-36255]],[[2771334,2878403],[6416,-17124]],[[2777750,2861279],[-2087,-12494],[-3390,-4352],[-7941,-56055],[-3542,32856],[-2613,4133]],[[2652820,3492854],[-1584,333]],[[2651236,3493187],[-6677,482]],[[2644559,3493669],[-2238,15865],[-1035,30077],[1319,20297]],[[2678969,3098206],[3815,24330]],[[2682784,3122536],[288,1803]],[[2683072,3124339],[131,812]],[[2683203,3125151],[1437,9135],[8412,27601]],[[2693052,3161887],[600,-30121],[1466,-20607],[2747,-12064]],[[2697865,3099095],[-11897,-51500]],[[2710112,3230138],[2963,-678]],[[2713075,3229460],[11185,-2919]],[[2724260,3226541],[-1197,-22180],[-2197,-3159],[868,-35609]],[[2721734,3165593],[-7088,13720]],[[2714646,3179313],[-1204,3762],[-3330,47063]],[[2739324,3058805],[-1221,-16165],[4191,-21230],[2873,5735]],[[2745167,3027145],[-109,-66705]],[[2745058,2960440],[-5827,6544],[-5101,19071]],[[2734130,2986055],[-996,20817],[-4178,19646],[-2167,209],[-1759,18758]],[[2725030,3045485],[615,7837]],[[2725645,3053322],[3862,-12149],[2296,7359],[7521,10273]],[[2740317,2855174],[8010,28761],[507,-10194],[3419,-4229]],[[2758177,2825367],[1956,-17554],[-2212,-20492],[-2828,4089]],[[2755093,2791410],[0,0]],[[2755093,2791410],[-3940,3423]],[[2751153,2794833],[-24,36457],[-6174,2562],[-4638,21322]],[[2786625,3055979],[-3327,-36760],[-2543,-16241],[2092,-14563],[2048,-34984]],[[2784895,2953431],[-2584,1906],[-948,11962]],[[2781363,2967299],[-203,3603]],[[2781160,2970902],[-4411,25917],[-2485,46064],[666,8839]],[[2774930,3051722],[4671,13039],[7024,-8782]],[[2728270,2903683],[-4186,9436]],[[2724084,2913119],[5172,30419]],[[2729256,2943538],[4024,10144]],[[2733280,2953682],[2872,-18404],[3682,-883],[4140,-24914],[1161,6705]],[[2745135,2916186],[0,0]],[[2745135,2916186],[3373,9672]],[[2748508,2925858],[3949,-23971],[3685,2491]],[[2740317,2855174],[-213,-729]],[[2740104,2854445],[-4050,23891],[-7784,25347]],[[2721734,3165593],[-590,-3326]],[[2721144,3162267],[1553,-46696]],[[2722697,3115571],[-15,-14535]],[[2722682,3101036],[-3265,-9237],[-2873,16589]],[[2716544,3108388],[-5863,11398]],[[2710681,3119786],[1967,45404],[1998,14123]],[[594985,657279],[0,0]],[[581448,683549],[4236,1489],[4374,23578],[3669,-34209],[-114,-13188],[2854,-10329],[2364,-19148],[-4664,-7749],[-4092,12613],[-4031,-4884],[-4596,51827]],[[2611601,2661599],[4248,299],[2025,-16198],[3595,251]],[[2619483,2589707],[-2473,-11260],[-5571,797],[-11,-16321]],[[2611428,2562923],[-9245,-266]],[[2602183,2562657],[2286,28980],[238,20103]],[[2604707,2611740],[1959,21914],[4427,3294],[508,24651]],[[2599296,2914677],[5806,-534]],[[2605102,2914143],[-283,-72859]],[[2604819,2841284],[-9905,-3064]],[[2594914,2838220],[-4603,2645]],[[2590311,2840865],[1565,35924],[3843,-400],[2100,38272],[1477,16]],[[2552696,2724373],[5,-32706],[1427,60]],[[2554128,2691727],[24,-7991]],[[2554152,2683736],[-1426,-1890],[41,-22837],[-2844,-88],[35,-23747],[-1254,-2643]],[[2548704,2632531],[-11304,-220]],[[2537400,2632311],[-1250,11408],[2075,6028],[689,37792],[2466,4742]],[[2541380,2692281],[-3223,12450],[410,10580],[4965,18432]],[[2543532,2733743],[1138,-1409]],[[2544670,2732334],[2335,-8169],[5691,208]],[[2675726,3195800],[2787,5033]],[[2678513,3200833],[3095,5329]],[[2681608,3206162],[-74,-58694],[1669,-22317]],[[2683072,3124339],[-288,-1803]],[[2737839,3094186],[3786,15374],[94,-11224],[6018,5578],[-741,9427],[3961,10228]],[[2750957,3123569],[2171,-19640],[1166,-26883]],[[2754294,3077046],[-2,-387]],[[2754292,3076659],[-3705,-13072],[-1621,-23510]],[[2748966,3040077],[-3799,-12932]],[[2739324,3058805],[1560,20282],[-3045,15099]],[[2759502,2914330],[3547,42058],[-593,8671],[3344,21962]],[[2765800,2987021],[2153,-9300],[8411,-11265],[4796,4446]],[[2781363,2967299],[-2606,-17405],[-705,-21409],[-2848,-14154],[-3870,-35928]],[[643311,339847],[3661,21786],[2721,33036],[-1977,20647],[703,22837],[3538,-6628],[4068,-19796],[3696,-4168],[5514,-16803],[5182,-30845],[-253,-20961],[2424,287],[631,-18275],[4718,-20882],[-239,-9134],[-4398,-24706],[-4258,-13701],[-4543,-1836],[-5811,-24030],[-2691,-31133],[-1954,-10127],[-5837,22306],[-1111,15824],[949,40414],[-983,26489],[-3750,49399]],[[2708145,3046525],[2088,-12689]],[[2710233,3033836],[-3851,-32514]],[[2706382,3001322],[-1078,-1580]],[[2705304,2999742],[52,5650],[-7275,-2210],[-577,17321]],[[2697504,3020503],[1665,8280],[542,20824],[-2410,23025],[2449,12551]],[[2699750,3085183],[2146,-14774],[6249,-23884]],[[2702523,3155537],[-2198,12095],[264,64740]],[[2700589,3232372],[6879,-1624]],[[2707468,3230748],[2644,-610]],[[2710681,3119786],[-4192,12671],[-3966,23080]],[[2609426,2446424],[71,37963],[-6272,-881]],[[2603225,2483506],[1256,13554],[5013,-4023],[1906,12892]],[[2611400,2505929],[9188,-1180]],[[2646377,3860923],[4748,7408]],[[2630687,3793783],[2789,-14793]],[[2632499,3757905],[-1387,-26540]],[[2690912,3698215],[4558,-2077],[1862,12560]],[[2697848,3625392],[-6665,-17394]],[[2686200,3620846],[609,2588]],[[2544991,3641052],[-7298,-27675],[-914,-9717]],[[2675288,3645829],[1729,22697],[3169,-4317]],[[2763043,2998491],[2757,-11470]],[[2748508,2925858],[-1053,15992]],[[2747455,2941850],[3815,23193],[3935,6716],[7838,26732]],[[539287,768226],[1601,20885],[4164,15708],[6414,-1686],[1579,-19439],[-1048,-28586],[-3116,-16743],[-4560,5000],[-5034,24861]],[[526637,734115],[4816,28900],[-195,-20077],[-2300,-5864],[-1231,-15952],[-1090,12993]],[[616639,609937],[2684,-3224]],[[619323,606713],[-2684,3224]],[[2657333,3741926],[3837,-17408]],[[2666662,3763564],[-1703,-32207]],[[2602442,3002597],[-2916,43340]],[[2599526,3045937],[5767,31187],[3428,29424]],[[2611918,3001786],[-3657,-4250]],[[2608261,2997536],[-5819,5061]],[[2552868,2312287],[-8920,-9966],[2311,11985],[-4202,22118],[129,26485],[-975,19943],[-1997,5153]],[[2539214,2388005],[-500,12803],[2279,13819],[564,20256],[-1353,42542]],[[2540204,2477425],[732,5660]],[[2540936,2483085],[5055,19544]],[[2545991,2502629],[4158,-9899]],[[2550149,2492730],[476,-46234]],[[2737870,2649084],[-3848,30790],[273,11587],[3589,7433],[1599,27118],[-1379,31848]],[[2738104,2757860],[1209,8121]],[[2739313,2765981],[3941,-9027],[5794,-31951]],[[2749048,2725003],[1326,-17918],[-1032,-13196],[-5357,-13202],[-1751,-16510],[-4364,-15093]],[[2618428,3628126],[3017,-9986],[379,-13291]],[[2621824,3604849],[-4528,-35408],[-730,-13438]],[[2555399,2495711],[6113,36883],[2034,34624],[2338,14205],[4046,6500]],[[2569930,2587923],[-24,-22529],[1877,-20116],[3841,-234]],[[2575624,2545044],[35,-62092]],[[2575659,2482952],[-1774,12929],[-18486,-170]],[[2614548,2911709],[-9446,2434]],[[2599296,2914677],[1556,10759]],[[2600852,2925436],[4387,17255],[15,23385],[3007,31460]],[[2559872,2917333],[2437,18880],[3390,7968],[2901,29748]],[[2568600,2973929],[5419,4738],[5052,-14093]],[[2579071,2964574],[977,-28],[723,-41042]],[[2580771,2923504],[-4391,-14858],[-4352,-25177],[-5467,-16013]],[[2566561,2867456],[-1084,83]],[[2565477,2867539],[-2682,11171],[-4703,34611],[1780,4012]],[[2611400,2505929],[28,56994]],[[2591105,2562599],[-1339,-33255]],[[2589766,2529344],[-2315,2907],[-87,13647],[-3298,-14447],[-39,14188],[-2766,-336]],[[2581261,2545303],[-9,24317],[1418,69],[12,57840]],[[2582682,2627529],[1168,16116]],[[2583850,2643645],[2860,175],[39,-16210],[3088,260]],[[2589837,2627870],[-222,-32943],[1422,92],[68,-32420]],[[2573158,3111595],[179,82575]],[[2573337,3194170],[12952,-146]],[[2586289,3194024],[208,-13]],[[2586497,3194011],[-1331,-67101],[897,-6215]],[[2586063,3120695],[-316,-16716],[-2388,-5712],[-3518,12425]],[[2579841,3110692],[-4436,7938],[-2247,-7035]],[[2564381,3136910],[-4335,13588]],[[2560046,3150498],[1275,10741],[116,34254]],[[2561437,3195493],[10432,-1332]],[[2571869,3194161],[1468,9]],[[2573158,3111595],[-3713,6721],[-5064,18594]],[[2572465,2697939],[-2602,-21671],[38,-33140]],[[2569901,2643128],[-7554,-86],[-2362,18624],[-5833,22070]],[[2554128,2691727],[1430,90],[-39,32732],[8543,878],[2100,20633],[652,24640]],[[2566814,2770700],[3,-12403],[2787,169]],[[2569604,2758466],[303,-23808],[2558,-36719]],[[2984159,4717193],[813,11056]],[[2984972,4728249],[2667,3628],[1594,-17196],[5244,6963],[740,-18421],[3420,2759],[3519,-11218]],[[3002156,4694764],[-1647,-14654],[675,-19803],[5059,-15404]],[[2987206,4639221],[-2153,43362],[-1569,175],[675,34435]],[[2589766,2529344],[13,-46394]],[[2589779,2482950],[174,-37096]],[[2589953,2445854],[-5612,29]],[[2584341,2445883],[-8349,62]],[[2575992,2445945],[-333,37007]],[[2575624,2545044],[5637,259]],[[2570619,2830665],[-4024,21693],[-34,15098]],[[2580771,2923504],[3861,-8140],[-12,-20857]],[[2584620,2894507],[594,-17606],[-1985,-2653],[-2066,-20349],[326,-13305]],[[2581489,2840594],[-733,-15419]],[[2580756,2825175],[-2582,9253],[-7568,347],[13,-4110]],[[2570619,2830665],[141,-39988],[-3985,144]],[[2566775,2790821],[-8359,-1031],[-2842,8046]],[[2555574,2797836],[-21,24121]],[[2555553,2821957],[2881,525],[1019,23749],[6024,21308]],[[2569930,2587923],[-28,14524]],[[2569902,2602447],[-56,24528],[1430,92]],[[2571276,2627067],[11406,462]],[[2598341,2726437],[2480,221],[-40,16256],[2862,2780]],[[2603643,2745694],[5754,-18530],[1540,-16302]],[[2610937,2710862],[14,-32792]],[[2610951,2678070],[-11715,-483],[-1818,7920]],[[2597418,2685507],[-2890,27252]],[[2594528,2712759],[3583,5166],[230,8512]],[[2583660,2766554],[54,-55675]],[[2583714,2710879],[-2385,-12259]],[[2581329,2698620],[-6161,10926],[-2703,-11607]],[[2569604,2758466],[5690,-456],[-23,8228],[8389,316]],[[2552552,3114645],[-2,-49131]],[[2552550,3065514],[-2925,450]],[[2549625,3065964],[-15015,2630]],[[2535547,3117382],[17005,-2737]],[[2578956,3065532],[885,45160]],[[2586063,3120695],[4970,-63],[-37,-12249]],[[2590996,3108383],[2566,-10788]],[[2593562,3097595],[-1467,-9021],[119,-42496]],[[2592214,3046078],[-5501,-19033]],[[2586713,3027045],[-4165,29993]],[[2582548,3057038],[-3592,8494]],[[2590996,3108383],[0,0]],[[2584620,2894507],[2731,22470],[1262,-3087],[2501,34545]],[[2591114,2948435],[2644,-844],[1553,-16493],[5582,-169],[-41,-5493]],[[2590311,2840865],[-8822,-271]],[[2760306,3024601],[2012,-7139]],[[2762318,3017462],[-5008,-17946],[-3939,24026],[-4446,6038],[41,10497]],[[2754292,3076659],[3105,385],[1797,-31666],[-1277,-6626],[2389,-14151]],[[2620975,3647458],[950,24625]],[[2621925,3672083],[5359,497]],[[2625785,3591797],[-3961,13052]],[[2549591,2992638],[-5,16275]],[[2549586,3008913],[13515,-1680]],[[2563101,3007233],[1649,-19304],[3579,-5966]],[[2568329,2981963],[271,-8034]],[[2559872,2917333],[-1438,13937],[-2930,2753]],[[2555504,2934023],[-4,16287],[-2911,550],[-91,32861],[-2907,8917]],[[2533874,3194859],[5994,1928]],[[2539868,3196787],[10556,-469]],[[2550424,3196318],[10642,-759]],[[2561066,3195559],[371,-66]],[[2560046,3150498],[-4620,7747]],[[2555426,3158245],[-2443,5645],[-8961,-16647],[-3167,23065],[-4135,5192]],[[2999122,5069934],[2730,37799],[3308,16311],[4190,-10906],[1395,11471]],[[3010745,5124609],[2060,-191045]],[[3012805,4933564],[-906,-8794],[-5848,1205],[-2541,-28451],[-2011,22431]],[[3001499,4919955],[-4457,7978],[-5265,28439]],[[2578956,3065532],[-14715,1705]],[[2564241,3067237],[140,69673]],[[2723189,2773587],[3995,17628],[688,18924],[4309,16171]],[[2732181,2826310],[5074,-36279],[2058,-24050]],[[2738104,2757860],[-912,-7369],[-3125,24612],[-7429,-36797]],[[2593597,3601325],[4182,-3524],[4517,4012]],[[2531797,2921279],[9141,-1862]],[[2540938,2919417],[2948,144]],[[2543886,2919561],[88,-69479]],[[2543974,2850082],[-9314,-29532]],[[2534660,2820550],[-4697,-872]],[[2529963,2819678],[1003,55614]],[[2590955,3719559],[-9461,46205]],[[2581494,3765764],[831,14104]],[[2582325,3779868],[3662,11365]],[[2585987,3791233],[1722,-23327],[2475,-8678],[5015,-2088]],[[2663495,3632623],[-879,32162]],[[2586097,2997298],[616,29747]],[[2592214,3046078],[7312,-141]],[[2602442,3002597],[-6414,-10081],[-2677,-13552]],[[2593351,2978964],[-3720,27448],[-3534,-9114]],[[2555553,2821957],[-8185,646]],[[2547368,2822603],[-3246,1952],[-148,25527]],[[2543886,2919561],[4849,-592],[973,16501],[5796,-1447]],[[2546876,3570421],[1470,27541]],[[2557948,3502955],[-8503,-665]],[[2549445,3502290],[-1477,-186]],[[2547968,3502104],[960,61635],[-2052,6682]],[[2576913,3727727],[4129,16360],[452,21677]],[[2737887,3110165],[-48,-15979]],[[2725645,3053322],[-2963,47714]],[[2722697,3115571],[15190,-5406]],[[2737870,2649084],[-206,-8459]],[[2601044,2562641],[1139,16]],[[2603225,2483506],[-2244,219]],[[2600981,2483725],[63,78916]],[[2594969,2775463],[-55,62757]],[[2604819,2841284],[1685,133]],[[2606504,2841417],[1,-70904]],[[2606505,2770513],[-2887,-5822],[25,-18997]],[[2598341,2726437],[176,48941],[-3548,85]],[[2728270,2903683],[-143,-52280],[967,-7866]],[[2729094,2843537],[-4785,-1985],[-4932,9398],[-2010,-11797]],[[2713382,2858414],[10702,54705]],[[2718552,2985520],[2772,37310]],[[2721324,3022830],[3706,22655]],[[2734130,2986055],[-850,-32373]],[[2729256,2943538],[-6353,14830],[-4351,27152]],[[2547968,3502104],[-10486,7701]],[[2542875,3562562],[4001,7859]],[[619323,606713],[5727,-1260],[-2270,-16052],[-2312,-4959],[-5643,10582],[-6510,-14],[1397,21547],[6927,-6620]],[[625405,560357],[958,16177],[2041,4835],[3273,-25893],[4185,10414],[8945,-28944],[454,-13632],[-1843,-12803],[-9033,-14205],[-1857,5525],[-552,32517],[-4673,7407],[-1898,18602]],[[625340,487700],[3494,13874],[748,-16152],[-4242,2278]],[[615303,557318],[4606,2061],[2445,-19883],[-805,-8348],[-3610,-5520],[-2636,31690]],[[2621925,3672083],[265,16103]],[[2609156,2446399],[-14963,-676]],[[2594193,2445723],[-4240,131]],[[2589779,2482950],[11202,775]],[[2527595,2446660],[-183,21707]],[[2527412,2468367],[2848,5526],[8557,84],[1387,3448]],[[2539214,2388005],[-2577,-32795],[-983,-35380],[-3470,11540],[-3742,-2425]],[[2528466,2325766],[5,-534]],[[2530810,2303453],[0,0]],[[2569901,2643128],[1375,-16061]],[[2569902,2602447],[-16550,-258]],[[2553352,2602189],[-3320,-398],[-1328,30740]],[[2777750,2861279],[4345,-19355]],[[2782095,2841924],[-1928,-19351],[-4527,5368],[-2651,-15465],[1159,-8701],[-4190,-18763],[-3910,-9093],[-508,-13666],[-2975,-12732],[-7183,-16247]],[[2755382,2733274],[-2877,-5503],[-1777,8635],[742,19016],[-1774,17219],[1457,22192]],[[2613750,3895009],[3667,-8406]],[[2617417,3886603],[4958,13205]],[[2529755,2808051],[208,11627]],[[2534660,2820550],[-988,-13305],[2995,-24243],[1151,-37569],[3616,7065],[2098,-18755]],[[2541380,2692281],[-13674,-354]],[[2527706,2691927],[909,50432]],[[2564241,3067237],[5,-2714]],[[2564246,3064523],[-11696,991]],[[2552552,3114645],[2883,26676],[-9,16924]],[[2591114,2948435],[2828,15780],[-591,14749]],[[2586497,3194011],[12463,-533]],[[2598960,3193478],[7210,-669]],[[2606783,3169542],[-5637,-44135],[-6084,-27056],[-1500,-756]],[[3006195,4744408],[318,1968]],[[3006513,4746376],[2109,13316],[-98,34348]],[[3008524,4794040],[5613,325]],[[3014137,4794365],[-647,-30367],[4895,-28945],[-287,-19032]],[[3018098,4716021],[-1546,-7878],[-5502,242],[1290,10545],[-6145,25478]],[[2583708,3504689],[-4259,-3246]],[[2579449,3501443],[-5546,2878]],[[2549625,3065964],[-39,-57051]],[[2549591,2992638],[-8800,876]],[[2540791,2993514],[-979,24739],[-6138,1166]],[[2644559,3493669],[-949,-50]],[[2643610,3493619],[-14407,2155]],[[2589837,2627870],[5456,206],[-36,15628]],[[2595257,2643704],[2875,-692],[260,-14992],[2627,0],[-28,-16265],[3716,-15]],[[2601044,2562641],[-9939,-42]],[[2566775,2790821],[39,-20121]],[[2552696,2724373],[-20,32509],[1429,30],[48,32709],[1421,8215]],[[2777657,3124744],[-5109,-60466]],[[2772548,3064278],[-678,1347]],[[2771870,3065625],[-2586,24633],[634,11237],[-2846,6570]],[[2767072,3108065],[1441,15524],[-2611,14782],[-1550,21098]],[[2770890,3159176],[6441,-32673]],[[2583660,2766554],[1062,8646]],[[2584722,2775200],[10247,263]],[[2594528,2712759],[-4877,5878],[-1086,8160],[-4851,-15918]],[[2690046,3011083],[1785,10880],[5673,-1460]],[[2705304,2999742],[-3029,-4476],[1170,-18608],[-1643,-12058],[1598,-31603]],[[2527412,2468367],[-486,60185]],[[2526508,2577613],[10480,253]],[[2536988,2577866],[447,-19617],[4593,-18730],[-19,-32080],[-1436,-1279],[363,-23075]],[[2619268,2773882],[-12763,-3369]],[[2606504,2841417],[10052,138]],[[2553352,2602189],[-423,-24600],[-1413,-132],[-29,-40044],[-6044,-29669],[548,-5115]],[[2536988,2577866],[-2566,21571],[2978,32874]],[[2972621,4723300],[8240,3843],[-611,-9361],[3909,-589]],[[2635362,3849467],[-645,-3721]],[[2579071,2964574],[3903,10231],[3123,22493]],[[2555926,3697974],[10317,-22977]],[[2580756,2825175],[1681,-38683],[2285,-11292]],[[2595257,2643704],[-64,37341],[2225,4462]],[[2610951,2678070],[650,-16471]],[[2547368,2822603],[-3233,-31132],[511,-38676],[2131,-8271],[-2107,-12190]],[[2724260,3226541],[1075,-267]],[[2725335,3226274],[8214,-2767]],[[2737081,3210027],[1054,-23577],[-825,-24325]],[[2737310,3162125],[-16166,142]],[[2716544,3108388],[-3888,-31607],[-3137,-12150],[-1374,-18106]],[[2699750,3085183],[-1885,13912]],[[2697865,3099095],[2116,19270],[2542,37172]],[[2568329,2981963],[4781,17656],[5349,31664],[2234,24343],[1855,1412]],[[2755382,2733274],[-2309,-9636],[-4025,1365]],[[2732181,2826310],[7923,28135]],[[2681608,3206162],[3706,2276]],[[2685314,3208438],[5369,1206],[2369,-47757]],[[2732181,2826310],[-3087,17227]],[[2790137,2928411],[-4051,-36289],[-1124,-38282],[-2867,-11916]],[[2784895,2953431],[2497,-25077],[2745,57]],[[2706382,3001322],[3168,2576],[1604,-20353],[5161,-9763]],[[2716315,2973782],[-10048,-52861]],[[2786625,3055979],[1588,8532]],[[2788213,3064511],[11725,-66446]],[[2799938,2998065],[3044,-17432]],[[2802982,2980633],[-7574,-20149],[-5271,-32073]],[[2710233,3033836],[269,8251],[3589,1530],[5369,-19815],[1864,-972]],[[2718552,2985520],[-2237,-11738]],[[2558869,3738066],[945,-3692]],[[2559814,3734374],[5553,-14321],[2531,24095]],[[2564246,3064523],[-58,-57448],[-1087,158]],[[2610937,2710862],[2895,187],[-103,10818],[7649,798],[1624,6972]],[[2774930,3051722],[-2382,12556]],[[2555399,2495711],[-5250,-2981]],[[2750957,3123569],[-4271,37945]],[[2753408,3160864],[10944,-1395]],[[2767072,3108065],[-1520,-7620],[-4497,253],[-6761,-23652]],[[2745058,2960440],[2397,-18590]],[[2737310,3162125],[1055,-23400],[-478,-28560]],[[2763043,2998491],[2259,7766],[-2984,11205]],[[2760306,3024601],[9563,39153],[2001,1871]],[[2540791,2993514],[147,-74097]],[[2527429,2676763],[277,15164]],[[2583850,2643645],[-69,36232],[-2452,18743]],[[2575992,2445945],[-2713,463]],[[2573279,2446408],[-10514,387]],[[2685314,3208438],[5282,14471]],[[2696761,3231395],[3828,977]],[[2612174,2297415],[7634,-187]],[[2619808,2297228],[-1062,-20342],[3576,-22442]],[[2616975,2202700],[-2838,-2519],[498,21642],[-2434,23816]],[[2612201,2245639],[-27,51776]],[[2684182,1917674],[4289,203]],[[2688471,1917877],[69,-33064]],[[2688540,1884813],[-2102,-9082],[4352,-12054]],[[2690790,1863677],[3,-404]],[[2690793,1863273],[28,-4406]],[[2690821,1858867],[-1861,-27589],[-2229,-2237],[-639,-15223]],[[2686092,1813818],[-21,1083]],[[2686071,1814901],[-13,683]],[[2686058,1815584],[-38,1900]],[[2686020,1817484],[31,13082],[-3151,33598],[1272,13831],[10,39679]],[[2683399,1900829],[0,0]],[[2668520,2308546],[3344,43]],[[2671864,2308589],[582,-27337],[4368,-6247],[5287,-36387]],[[2682101,2238618],[-673,-11708]],[[2681017,2226870],[-53,11]],[[2669869,2226597],[-1450,12225],[101,69724]],[[2693803,2369158],[40,-83820]],[[2693843,2285338],[-3191,-23498],[1203,-13109]],[[2691855,2248731],[-3590,-20727]],[[2688265,2228004],[-3954,19089]],[[2684311,2247093],[164,75787]],[[2648773,2277666],[-5386,411],[-2496,-7381],[492,-18240]],[[2635722,2261862],[-3477,21370],[-1228,32749]],[[2631017,2315981],[12974,623],[4796,-5592]],[[2624910,2373300],[-1601,-15273],[-2545,-55455],[-956,-5344]],[[2612174,2297415],[159,68484]],[[2738010,1474665],[4,32580]],[[2759053,1506443],[-1036,-57961],[-2495,9657],[-2578,-47068],[843,-15208],[-2812,-23876],[-8169,-16221],[-4375,1209]],[[2754963,1390239],[391,-2320]],[[2703664,1917574],[1382,-10],[53,-98307]],[[2691164,1819026],[4489,36007],[-2687,15364],[485,-18164],[-2271,4849],[0,22187],[-2640,5544]],[[2688471,1917877],[15193,-303]],[[2686071,1814901],[-13,683]],[[2690793,1863273],[28,-4406]],[[2734829,2000184],[-9490,-509],[-3667,5616],[1255,27080]],[[2724251,2050016],[5168,-17961],[2109,8474],[3301,-40345]],[[2756783,1747501],[3336,-54753]],[[2760119,1692748],[-1742,-2596],[-20717,428]],[[2743449,1736826],[10931,7],[2403,10668]],[[2691691,2081018],[20,31786],[3668,177],[-95,50430]],[[2695284,2163411],[5438,-184],[1745,-12542],[2589,10140]],[[2705056,2160825],[5931,9316],[1861,-6281],[969,-21787],[1686,-8726]],[[2715503,2133347],[1087,-8921]],[[2707889,2065144],[-9960,63]],[[2705221,2327644],[20,-16667]],[[2705236,2294787],[0,-8198]],[[2705236,2286589],[-2595,-3]],[[2702641,2286586],[-8798,-1248]],[[2631017,2315981],[1865,16493]],[[2632882,2332474],[6295,14155],[1172,20508],[2670,20939]],[[2723890,2307137],[1976,-53059],[2677,-55925]],[[2728543,2198153],[-3098,-8432],[-5561,-596]],[[2719884,2189125],[-43,25655],[-1560,15102]],[[2718281,2229882],[-536,21406],[-2464,13855],[242,17348]],[[2687703,1966578],[11849,256],[4,8174],[5533,-18]],[[2705089,1974990],[-31,-30997]],[[2705058,1943993],[-1394,-26419]],[[2684182,1917674],[3521,48904]],[[2684311,2247093],[-2210,-8475]],[[2671864,2308589],[2125,23313]],[[2705236,2286589],[5,-79450]],[[2705241,2207139],[-178,-82]],[[2705063,2207057],[-2159,22034],[-4143,1591],[-3814,14720]],[[2694947,2245402],[3074,6119],[4620,35065]],[[2705039,1737159],[-27,-32877]],[[2705012,1704282],[-5510,160],[-8,-16418],[-3349,146]],[[2696145,1688170],[-4569,57704],[-2873,25345]],[[2718281,2229882],[-6442,-690],[-3538,-16657],[-3060,-5396]],[[2655900,2316612],[9792,127],[2828,-8193]],[[2667266,2197453],[-3493,10508],[-2796,30512],[-9852,37032]],[[2736057,1737689],[-6295,-190],[24,-16443],[-2770,-120],[15,-16591],[-8220,257]],[[2718811,1704602],[-42,57435]],[[2718769,1762037],[10,57270]],[[2718779,1819307],[11734,-638]],[[2718707,1655135],[17290,-94],[1663,35539]],[[2737660,1690580],[123,-117005]],[[2737823,1559658],[-10831,-1200],[-90,49419],[-8135,-702]],[[2632882,2332474],[-3753,13386],[-20,11024],[-2808,2696],[-1391,13720]],[[2700144,1657630],[-31,220]],[[2700113,1657850],[-20,-150]],[[2699043,1658872],[-2898,29298]],[[2705012,1704282],[13799,320]],[[2718811,1704602],[-104,-49467]],[[2704885,1655302],[-399,35156],[-2755,-7748],[-96,-27013]],[[2701635,1655697],[-854,-76]],[[2594193,2445723],[-71,-54047],[5382,-269]],[[2599504,2391407],[-1975,-12486],[1597,-26115],[-3754,-20137]],[[2595372,2332669],[-93,-22494]],[[2595279,2310175],[-11179,20479]],[[2584100,2330654],[241,115229]],[[2694947,2245402],[-3092,3329]],[[2705060,1761585],[13709,452]],[[2716162,1950413],[22132,74]],[[2738127,1852226],[-119,-33735]],[[2730513,1818669],[-1833,33268],[-5907,33845],[2049,15517],[-3033,126],[-1920,10751],[-926,21816],[-2779,-28],[-2,16449]],[[2606316,2415257],[-532,-16225],[-5645,8780],[-635,-16405]],[[2688265,2228004],[63,-49663]],[[2688328,2178341],[-7831,4960]],[[2699284,2010411],[1529,-17891],[4283,-9487],[-7,-8043]],[[2687703,1966578],[274,48825]],[[2705063,2207057],[-7,-46232]],[[2695284,2163411],[-4183,-935],[-17,10769],[-2756,5096]],[[2728543,2198153],[3091,-45598]],[[2731634,2152555],[-1503,-3013],[162,-27140],[-7445,-898],[-465,25717]],[[2722383,2147221],[-2410,18336],[-89,23568]],[[2595372,2332669],[3879,9603],[10184,-743],[45,24505],[1437,-3]],[[2612201,2245639],[-4248,13370],[-12674,51166]],[[2749879,1859383],[3505,-56785]],[[2753384,1802598],[-9990,204]],[[2685469,2071363],[-1277,28703],[-5332,5887],[-1590,-8842],[-998,25393],[-2147,4189]],[[2705058,1943993],[2735,6062]],[[2718779,1819307],[-13680,-50]],[[2760119,1692748],[1342,-32598],[-209,-42488],[-1002,-46479]],[[2722383,2147221],[-6880,-13874]],[[2753384,1802598],[3399,-55097]],[[2724874,1474280],[-3606,15926],[-4752,1787],[-940,-9855],[-3437,45469],[-1231,45326]],[[2584100,2330654],[-11227,1482]],[[2572873,2332136],[406,114272]],[[2722100,2392639],[38,-37398]],[[2731634,2152555],[3782,-52239],[6518,-66770]],[[2572873,2332136],[-3316,-2957]],[[504639,7657691],[-1399,-3114]],[[495978,7638380],[-750,-12967],[-10578,-21400],[-5215,19424],[4727,22333],[-1634,53864],[-4286,16526],[-1855,19314],[2942,1806],[-377,18333],[7075,24170],[-5811,46951],[-5049,26085],[-233,11899],[-6024,30494],[-3531,41439],[3182,8374],[4376,46853],[-2732,-5344],[-7823,-69657],[2732,-4810],[-1406,-37138],[-7142,-7714],[-11496,-21143],[-10770,-8173],[-10353,461],[-5137,6146],[-2130,35153],[-5402,9863],[-8732,41011],[-4219,1370],[-7776,24350],[4810,17619],[-6509,-5585],[-6406,9862],[4225,5391],[8450,27106],[-2019,12110],[858,24905],[-4728,-14022],[547,13143]],[[326693,7913525],[3033,6181],[10437,-6099],[4888,19461],[5134,2248],[2360,13203],[3537,-6394],[6433,12407],[1419,-18572],[5610,3484],[5508,-12417],[1014,-53481],[2048,-16316],[-12102,-10783],[-1466,-18432],[-10501,20445],[-4935,-1330],[-10556,26726],[-3832,225],[-5734,14125],[-2295,25319]],[[169801,7971516],[2811,16925],[4666,-27614],[6497,-13183],[4747,-534],[4162,-12115],[-10156,-356],[-12727,36877]],[[168740,8005899],[0,0]],[[837243,8040435],[-17919,24989],[-9355,26075],[4207,10267],[6206,32602],[7531,15482]],[[805325,8088049],[0,0]],[[2502695,2808532],[11276,-946]],[[2490549,2591969],[-6115,-2432]],[[2516803,2807469],[-8,67467]],[[2485785,2989401],[-150,49854]],[[2510626,2959729],[-4382,-155]],[[2475109,3194871],[16297,-169]],[[2491426,3153023],[-5254,73],[-3283,-12084],[-3899,9506],[-842,-6423]],[[2502092,2430111],[5651,-6]],[[2514804,2386570],[-9906,-24],[-2824,-5511]],[[2507516,2528218],[-7051,-5]],[[2471187,2741548],[4792,16202],[2378,1023],[4186,14662],[2133,25348]],[[2502731,2841703],[2896,100],[14,16497],[2912,97],[575,16460]],[[2509123,2921128],[-2574,-73],[-5580,-13571]],[[2431077,2628810],[4473,-16652],[2275,16456],[2000,-16447]],[[2439825,2612167],[862,-24488]],[[2450958,2446801],[-3732,-64599]],[[2447226,2382202],[-579,884]],[[2400743,2424171],[-20,-52379],[-4210,-86],[-24,-32618]],[[2384580,2422419],[3831,2681],[12332,-929]],[[2460717,2446854],[-962,-9674],[316,-42745]],[[2460071,2394435],[-11294,-2624],[-1205,-10434]],[[2447572,2381377],[-346,825]],[[2406351,2719025],[63,-40505],[-1109,-16873]],[[2389757,2710919],[3793,-14],[2492,8442],[-879,24285]],[[2439825,2612167],[2395,39281],[-83,20763]],[[2458353,2381346],[1718,13089]],[[2867480,3540071],[-1780,-3351]],[[2865700,3536720],[-1524,18206]],[[2864176,3554926],[2137,8466],[2534,-6598]],[[2827584,3550284],[61,-33874],[-3100,-31467]],[[2824545,3484943],[-3696,-142]],[[2820849,3484801],[-4080,-95]],[[2817955,3574288],[3172,-6352]],[[2811594,3856884],[1760,-1635],[6501,32201]],[[2819855,3887450],[5570,-52920],[2806,-637]],[[2828679,3826053],[-2353,-1353]],[[2826326,3824700],[-5723,3972],[-5181,-13189]],[[2815422,3815483],[-51,17459],[-3777,23942]],[[2828025,3755505],[7576,47853]],[[2843964,3750610],[-2186,1357],[-915,-15042]],[[2836299,3717783],[-1684,-1417],[-2185,19033],[-4405,20106]],[[2855555,3682927],[-2702,23479]],[[2854740,3714201],[1773,-4765],[2578,-24984],[6325,-9281],[-1530,-6433]],[[2863886,3668738],[-2298,-2435]],[[2797179,3795879],[-13234,50766]],[[2822092,3648335],[-1243,10680],[-3194,3119],[-3277,-7000]],[[2814378,3655134],[1666,37936]],[[2722294,3571917],[1609,-10796]],[[2723903,3561121],[3282,-35431]],[[2727185,3525690],[-7882,-11511],[-1708,-11774]],[[2717595,3502405],[-2608,28244],[-3828,26093]],[[2831074,3679011],[0,0]],[[2831074,3679011],[2651,3077],[1457,-11932],[-990,-16445]],[[2829309,3674046],[1765,4965]],[[2857301,3610219],[4344,-22431]],[[2862977,3568095],[-6424,24273],[202,8936]],[[2856755,3601304],[546,8915]],[[2862788,3589916],[-95,10887]],[[2862693,3600803],[3083,-8790]],[[2853165,3621296],[0,0]],[[2853165,3621296],[1683,-1544]],[[2854848,3619752],[2453,-9533]],[[2856755,3601304],[-1082,10073],[-3948,-2497]],[[2849173,3611780],[-594,28937]],[[2853106,3657453],[827,-6694]],[[2855428,3641182],[-1921,-14080]],[[2853507,3627102],[65,-4719]],[[2853572,3622383],[0,0]],[[2853572,3622383],[-407,-1087]],[[2777460,3717956],[0,0]],[[2814419,3919086],[-1811,-15771],[-2488,-4001]],[[2817941,3940539],[-3522,-21453]],[[2755036,3633798],[-1837,4884],[-2938,-9712]],[[2776306,3669771],[1717,15746]],[[2778023,3685517],[2864,-19224],[4202,-9059]],[[2775056,3631076],[0,0]],[[2275129,2902500],[2897,-605]],[[2278026,2901895],[-429,-82285]],[[2312491,2272942],[-4090,4853],[-9170,-9709]],[[2068120,2384012],[22702,82653]],[[2038031,2519454],[-5815,14739],[-4881,49814],[-4102,9553]],[[2344785,2734709],[7945,21517]],[[2279381,2335200],[-977,3130]],[[2265616,2429414],[5673,-6711],[8620,-22080]],[[2924577,4252462],[-128,97]],[[2924432,4252549],[-265,-903]],[[2924035,4250776],[-169,-1129]],[[2923865,4249622],[-9,-522]],[[2923838,4248120],[-97,-5276]],[[2923741,4242844],[-6761,270]],[[2916980,4243114],[0,0]],[[2916980,4243114],[-389,606]],[[2916650,4257600],[2488,12321]],[[2904711,4279018],[4606,-12797]],[[2224292,5048199],[-7270,6]],[[2217022,5048205],[-21,65157]],[[2217001,5113362],[23709,-300]],[[2240710,5113062],[131,-6]],[[2240841,5113056],[35,-64914]],[[2240876,5048142],[-16584,57]],[[2238333,4868135],[-3321,-15]],[[2235012,4868120],[29,48934]],[[2235041,4917054],[6282,28]],[[2241323,4917082],[10265,-21]],[[2251588,4917061],[14,-48461]],[[2251602,4868600],[-13269,-465]],[[2285103,4851803],[6698,77]],[[2291801,4851880],[12139,211]],[[2303940,4852091],[-8,-65346]],[[2303932,4786745],[-4066,12]],[[2299866,4786757],[-9073,-85]],[[2290793,4786672],[-5701,-60]],[[2285092,4786612],[11,65191]],[[2092127,4852833],[38122,397],[-3433,-31345]],[[2126816,4821885],[-5312,-15410],[8,-24138]],[[2121512,4782337],[-29366,182]],[[2197867,5113632],[-1573,13308],[1184,11968],[-1888,17044]],[[2195590,5155952],[-4029,11906],[1573,10914]],[[2193134,5178772],[19854,-261]],[[2212988,5178511],[272,-7]],[[2213260,5178504],[-35,-65048]],[[2213225,5113456],[-15358,176]],[[2285087,4916934],[46,64986]],[[2285133,4981920],[6756,121]],[[2291889,4982041],[12083,-23]],[[2303972,4982018],[-26,-64926]],[[2303946,4917092],[-12160,-202]],[[2291786,4916890],[-6699,44]],[[2235012,4868120],[-11949,-144]],[[2223063,4867976],[56,11425],[-5814,19861],[-391,17014]],[[2216914,4916276],[7700,451]],[[2224614,4916727],[10427,327]],[[1745085,4747412],[2190,1158],[1313,-19278],[3339,-15142]],[[1751927,4714150],[4886,-23342],[3485,-8257],[1090,10818],[4365,-11714],[3588,3073],[5560,-4577],[-356,-30542],[11606,139]],[[1887505,4809510],[29,56353]],[[2291915,5030831],[62,32275]],[[2291977,5063106],[11989,146]],[[2303966,5063252],[16,-32209]],[[2303982,5031043],[-3,-32610]],[[2303979,4998433],[-7,-16415]],[[2291889,4982041],[26,48790]],[[2261355,5112435],[-9,-16306]],[[2261346,5096129],[111,-97649]],[[2261457,4998480],[-20282,479]],[[2241175,4998959],[-299,49183]],[[2240841,5113056],[20514,-621]],[[2294099,4637709],[14,71035]],[[2294113,4708744],[9795,-53]],[[2303908,4708691],[-1568,-6256],[-782,-26427]],[[2301558,4676008],[-2814,-32145],[3464,-20339],[450,-12642]],[[2302658,4610882],[1491,-13141]],[[1787498,4853795],[506,14885]],[[1820691,4799552],[2715,2985],[2584,-17947],[-769,-22709],[7621,-60],[0,-15457],[9880,28]],[[1842722,4746392],[-10,-32527]],[[1836323,4622946],[-3869,11718],[-2684,-3488]],[[1823013,4730524],[-18394,-79]],[[1856300,4810361],[-4946,-665]],[[1851354,4809696],[67,65311]],[[1871431,4866677],[-183,-32437],[1582,2145],[8363,-25989]],[[2261346,5096129],[13583,-312]],[[2274929,5095817],[81,-65062]],[[2275010,5030755],[-25,-48693]],[[2274985,4982062],[-10052,96]],[[2264933,4982158],[-89,16243],[-3387,79]],[[1746641,5372363],[202,-24715],[2211,-5641]],[[2198685,4826700],[-3012,578]],[[2195673,4827278],[-758,24340],[-29,60216]],[[2194886,4911834],[-1,4853],[11953,109]],[[2206838,4916796],[1497,-12282],[7020,-5931],[-863,22391]],[[2214492,4920974],[2422,-4698]],[[2223063,4867976],[1255,-14817],[-2767,-15085],[-1356,-22240],[2324,200],[2159,-29389]],[[2224678,4786645],[-3,-35]],[[2224675,4786610],[-6588,-4]],[[2218087,4786606],[-2483,39],[0,45399],[-1938,3391],[-4031,-13374],[-7727,-680],[-3223,5319]],[[2277578,4724794],[6649,106],[0,-16253]],[[2284227,4708647],[5,-53054]],[[2270996,4665293],[-58,59381]],[[2270938,4724674],[6640,120]],[[2261750,4852312],[63,-65820]],[[2261813,4786492],[-4172,-139]],[[2257641,4786353],[-5734,66]],[[2251907,4786419],[-130,65961]],[[2251777,4852380],[9973,-68]],[[2175471,4879310],[-7,-28795]],[[2175464,4850515],[-4570,-8618],[5,-75967]],[[2170899,4765930],[-24592,133]],[[2146307,4766063],[-789,58221]],[[2145518,4824284],[3351,1436],[322,53516]],[[2149191,4879236],[26280,74]],[[2214226,5048249],[-93,-65396]],[[2214133,4982853],[-23685,-129]],[[2190448,4982724],[-3164,6795],[732,23099],[-2893,11941]],[[2185123,5024559],[1149,9777],[3703,-11619],[3865,25570]],[[2193840,5048287],[20386,-38]],[[1786165,4676599],[-1380,517],[9,53110]],[[1798496,4730200],[8,-65038]],[[1798504,4665162],[-617,-37708]],[[2241175,4786543],[10732,-124]],[[2257641,4786353],[147,-56426]],[[2257788,4729927],[-15914,33003],[-699,23613]],[[2282373,5171909],[-34,70607]],[[2300856,5242491],[-541,-21567],[-2496,-16413],[-4683,-16292],[148,-11075]],[[2293284,5177144],[4318,-32873],[5851,-15714]],[[2303453,5128557],[-14557,62],[-407,-5618],[-6093,147]],[[2282396,5123148],[-23,48761]],[[2147097,4692963],[-736,24315],[-54,48785]],[[2170899,4765930],[2,-73196]],[[2251588,4917061],[13328,-259]],[[2264916,4916802],[116,0]],[[2265032,4916802],[-45,-64646]],[[2264987,4852156],[-3237,156]],[[2251777,4852380],[-175,16220]],[[2278388,4916754],[18,-64848]],[[2278406,4851906],[-6660,100]],[[2271746,4852006],[-6759,150]],[[2265032,4916802],[13356,-48]],[[1798504,4665162],[6381,-7],[549,-7811],[8241,-100],[3258,-8140]],[[1816964,4606099],[-1919,-1655]],[[1755315,5087579],[1537,-8211],[-3390,-52958],[1504,-14511],[-1,-38245]],[[2218099,4692716],[-12,93890]],[[2224675,4786610],[4043,-13619],[2329,-19882],[4806,-13810],[781,-15891],[10315,-30594]],[[1750160,5429528],[38177,-301]],[[1751927,4714150],[8008,164],[81,89453]],[[1842902,4505590],[0,61615]],[[1859084,4600031],[3422,-9127],[-831,-24378],[3798,5118],[1794,-12329]],[[1867267,4559315],[466,-53857]],[[2121512,4782337],[-3,-89114]],[[2108928,4906609],[-15,21682],[-3382,-100],[188,65141]],[[2105719,4993332],[16815,36],[188,81473]],[[2122722,5074841],[26673,-294]],[[2149395,5074547],[-12,-98517]],[[2149383,4976030],[-18,-137]],[[2149365,4975893],[-3105,-14046],[-4746,2385],[-3083,-45983],[153,-11750],[-29656,110]],[[1750347,5608437],[-185,-89200]],[[1750162,5519237],[-7163,165],[-1185,-8041],[-11444,-1048]],[[1730370,5510313],[-66,114417]],[[1730366,5490317],[4,19996]],[[1750162,5519237],[-2,-73249]],[[1867267,4559315],[6382,-5369],[604,29889]],[[1851354,4809696],[-45,-15491],[-3263,-819],[-13,-16252],[-3348,64],[-289,-30821],[-1674,15]],[[1869029,4697270],[-17082,-66],[-2071,-13209]],[[2278388,4916754],[6699,180]],[[2291786,4916890],[15,-65010]],[[2285103,4851803],[-6697,103]],[[2123148,5244316],[-424,-137040]],[[2122724,5107276],[-30164,7]],[[2173443,5020104],[3183,-4300],[2937,8511],[5560,244]],[[2190448,4982724],[-1492,-16019],[5396,-4087],[585,-15813],[7802,-8811],[5384,-12460],[-1285,-8738]],[[2194886,4911834],[-18937,-38]],[[2175949,4911796],[-3339,-75],[341,97680],[492,10703]],[[2066462,4137711],[0,0]],[[2066886,4131618],[-2545,-13]],[[1953208,3785846],[-511,64944]],[[2101834,4050377],[15,32494]],[[2067646,4075431],[0,0]],[[2069026,4082919],[1029,-15604],[-1828,-6097],[-2853,10195],[-1050,-8815]],[[2064323,4062212],[3,-287]],[[2064323,4061251],[0,-556]],[[2068622,4061274],[0,0]],[[2068613,4061260],[0,0]],[[2067814,4075643],[0,0]],[[2068485,4061200],[0,0]],[[2068650,4072181],[0,0]],[[2068370,4072047],[0,0]],[[2067715,4069672],[0,0]],[[2067983,4068534],[0,0]],[[2067615,4077490],[0,0]],[[2355503,4084236],[-16,13554]],[[2355487,4097790],[-71,41107]],[[2366186,4138086],[361,-46032]],[[2370182,3678885],[-187,-43478]],[[2369995,3635407],[-14919,2785]],[[2355073,3692363],[15161,-2595]],[[2462007,3579448],[2813,-23180]],[[2464820,3556268],[445,-21531]],[[2465265,3534737],[-12630,2286]],[[2449657,3548290],[158,37873],[5555,1773]],[[2419665,4057686],[318,64978]],[[2419983,4122664],[9338,-574]],[[2432452,4121867],[-178,-54230]],[[2402838,3583253],[-4513,3377]],[[2398325,3586630],[-226,61075]],[[2398099,3647705],[50,13560],[6076,-650]],[[2457628,4019159],[5987,-32831]],[[2463615,3986328],[-12847,585],[-70,-16506],[-2083,148]],[[2448615,3970555],[-4146,506]],[[2443655,4004035],[-615,24726],[7865,27586]],[[2347861,4097976],[7626,-186]],[[2498045,3632701],[-74,-15606]],[[2497971,3617095],[-3665,-3453],[-4039,-20017]],[[2487595,3682201],[9452,-6192]],[[2437529,3549199],[70,29986]],[[2437849,3649153],[12113,-1394]],[[2465249,3932069],[3242,-11271],[2675,17549]],[[2480446,3908021],[-5043,15350],[-3953,-11250],[-2814,-26651],[-3313,615],[-2000,-9219]],[[2457020,3920209],[3920,955],[4309,10905]],[[2416685,3761169],[6154,-906]],[[2427414,3759196],[-225,-76387]],[[2416602,3730846],[83,30323]],[[2418253,4196413],[61,-8188]],[[2418314,4188225],[76,-49704]],[[2418390,4138521],[-13997,17]],[[2404150,4138529],[15,57179]],[[2404165,4195708],[4778,137]],[[2435938,4067475],[-7,5400],[11389,-304]],[[2392705,4076069],[-310,-16457]],[[2378997,4091252],[-83,32732]],[[2443731,4121303],[48,-19346],[1913,-15562]],[[2477576,3476039],[2015,24857]],[[2484874,3500648],[-70,-45022]],[[2366414,4029486],[-53,-46344]],[[2418230,4243352],[4765,609]],[[2422995,4243961],[6594,991]],[[2429404,4187865],[-11090,360]],[[2379012,3983129],[-2276,1582],[-7374,-13471]],[[2416017,3990949],[3226,-438]],[[2424929,3956398],[-1629,-31116],[725,-14262],[-2169,-33430]],[[2421856,3877590],[-3620,6220],[-1233,11742]],[[2414119,3929795],[-1664,9100]],[[2418390,4138521],[1593,-15857]],[[2419621,4057686],[-10901,921]],[[2408720,4058607],[79,16439],[-4697,355]],[[1580523,5501799],[2604,5223],[-2684,42581],[688,37794]],[[1581131,5587397],[35590,375]],[[1609459,5458028],[-11617,16152],[-3968,-6382],[-5708,22158],[-5319,47],[-2324,11796]],[[1577521,5508966],[1430,28481],[2816,-22901],[-4246,-5580]],[[2502875,3571708],[-4904,45387]],[[2552653,4269483],[-9,-45979]],[[2552648,4320670],[5,-51187]],[[2975709,4371162],[-5470,-4580]],[[2970239,4366582],[-3243,34181],[-2562,-2800],[-168,29124]],[[2545007,4597984],[-956,-35638],[2102,-27921]],[[1594732,4001259],[7927,-1545]],[[1549147,4131915],[11,138036],[-2183,35998],[3927,-3136],[2099,18501],[-1613,11709],[1553,19390]],[[1604521,3722992],[-11252,-18453],[-2359,14879],[-3915,4231],[-3552,14315]],[[1583443,3737964],[-3249,12337],[4553,18146]],[[1584747,3768447],[3976,-4557],[7286,5674]],[[2586289,3194024],[16,25421]],[[2586305,3219445],[1579,38670]],[[2587884,3258115],[2883,5433],[6810,-13742]],[[2597577,3249806],[1130,-12321]],[[2598707,3237485],[253,-44007]],[[2552739,3926110],[7854,1026]],[[2560593,3927136],[3964,-729]],[[2564557,3926407],[-3905,-15786],[-1104,-24015],[1016,-27404]],[[2560564,3859202],[-6152,-2136]],[[2554412,3857066],[-3801,-15497],[-4022,-6801]],[[2549156,3863551],[3676,24152],[-322,29070]],[[2406663,4480147],[-12980,64]],[[2393683,4480211],[4,64795]],[[2393687,4545006],[6409,72]],[[2400096,4545078],[6526,163]],[[2406622,4545241],[41,-65094]],[[2563953,3468104],[3668,-15874],[2105,2240]],[[2569726,3454470],[-2353,-47563],[-1572,-15531]],[[2565801,3391376],[-3579,784]],[[2562222,3392160],[911,23800],[-764,25693],[-3043,1458]],[[2559326,3443111],[4627,24993]],[[2563074,3436953],[0,0]],[[2586569,3886000],[931,14168]],[[2587500,3900168],[5114,3670],[5667,-9163]],[[2598281,3894675],[75,-29767],[1051,-2647]],[[2599407,3862261],[-4051,-13615],[-37,-13137]],[[2595319,3835509],[-1064,-84]],[[2594255,3835425],[-6191,896]],[[2588064,3836321],[-1494,36]],[[2586570,3836357],[-1,49643]],[[2596507,4009400],[-3722,-597]],[[2592785,4008803],[-4628,-471]],[[2588157,4008332],[50,54651]],[[2588207,4062983],[8298,880]],[[2596505,4063863],[2,-54463]],[[2672216,3398779],[1909,17933]],[[2674125,3416712],[7455,-44135]],[[2681580,3372577],[-1759,-28835]],[[2679821,3343742],[-3255,-278],[-4932,-13961]],[[2671634,3329503],[-1540,33854]],[[2670094,3363357],[2122,35422]],[[2611223,3301885],[4729,37095]],[[2615952,3338980],[9417,-686]],[[2625369,3338294],[-5340,-35668],[-765,-21101]],[[2619264,3281525],[-2527,-19536]],[[2616737,3261989],[-4943,25831],[-571,14065]],[[2656623,3361725],[3891,15874],[-520,12456]],[[2659994,3390055],[5527,-21636],[4573,-5062]],[[2671634,3329503],[35,-3588]],[[2671669,3325915],[-6784,-24806],[-4603,1097]],[[2660282,3302206],[-3659,59519]],[[2494050,3417552],[4081,5104]],[[2498131,3422656],[9152,-1492]],[[2507283,3421164],[-958,-38356]],[[2506325,3382808],[-2543,-21201],[-1747,-1041]],[[2502035,3360566],[-1787,12291],[-6627,-7907]],[[2597577,3249806],[1020,43969]],[[2598597,3293775],[7513,1413]],[[2606110,3295188],[3390,-23437],[-2031,-16311]],[[2607469,3255440],[-4204,-5622],[-855,-13843],[-3703,1510]],[[2617426,4237729],[3696,188]],[[2621122,4237917],[7412,744]],[[2628500,4189598],[-11564,-635]],[[2616936,4188963],[-32,13539]],[[2616904,4202502],[522,35227]],[[2522352,3305753],[3016,-14237],[3938,-3599],[89,-13819]],[[2529395,3274098],[-49,-7108]],[[2529346,3266990],[-7755,-3739],[-2197,-21239],[-1727,7]],[[2517667,3242019],[-1667,33736]],[[2516000,3275755],[4617,11480],[1735,18518]],[[2604649,4460811],[140,-44121]],[[2604789,4416690],[34,-16189]],[[2604823,4400501],[-11304,-195]],[[2593519,4400306],[-6,8112]],[[2593513,4408418],[-87,52664]],[[2653520,3461463],[6638,-14151]],[[2660158,3447312],[-1820,-33653]],[[2658338,3413659],[-5823,4079]],[[2652515,3417738],[-1744,15723]],[[2650771,3433461],[2749,28002]],[[2683476,3493990],[-5024,-5628],[-7517,-31633]],[[2670935,3456729],[-2959,3462]],[[2667976,3460191],[-321,22780],[-2056,11678]],[[2665599,3494649],[13568,-665]],[[2516398,3476934],[303,-17202],[-3727,-278],[-268,-34892]],[[2512706,3424562],[-5423,-3398]],[[2498131,3422656],[3422,36804],[392,17585]],[[2642747,3234362],[-823,-40856]],[[2629275,3193409],[2115,34270],[-102,13115]],[[2631288,3240794],[5797,8316]],[[2637085,3249110],[5662,-14748]],[[2419697,4480224],[-18,81374]],[[2419679,4561598],[6521,-50]],[[2426200,4561548],[6510,336]],[[2432710,4561884],[-8,-81834]],[[2432702,4480050],[-13005,174]],[[2346825,4740824],[-5,-64643]],[[2346820,4676181],[-13214,38]],[[2333606,4676219],[3,64636]],[[2333609,4740855],[13216,-31]],[[2341834,4480335],[10,-48913],[1441,-18224]],[[2343285,4413198],[-3174,97]],[[2340111,4413295],[-9564,162]],[[2330547,4413457],[-1676,18027],[24,48865]],[[2328895,4480349],[12939,-14]],[[2438952,4626444],[49,81923]],[[2439001,4708367],[11926,-263]],[[2458736,4632267],[-13,-5497],[-6557,24]],[[2452166,4626794],[-13214,-350]],[[2482212,3268539],[-575,-958]],[[2486239,3296361],[4246,21047],[3726,354],[3386,-13407]],[[2497597,3304355],[779,-33239]],[[2498376,3271116],[-4419,-5094]],[[2493957,3266022],[-11389,3892]],[[2555978,4155423],[-894,7147],[5401,26870],[4256,10737]],[[2564741,4200177],[-11,-28414]],[[2564730,4171763],[43,-49002]],[[2564773,4122761],[-9172,-105]],[[2555601,4122656],[377,32767]],[[2458706,4561169],[6477,-100],[15,16369],[5327,-130]],[[2479429,4512098],[-20733,88]],[[2458696,4512186],[10,48983]],[[2374188,4545233],[-2,49024],[-1112,16121]],[[2373074,4610378],[13153,-82]],[[2386227,4610296],[1027,-16265],[-12,-48947]],[[2387242,4545084],[-6557,7]],[[2380685,4545091],[-6497,142]],[[2359154,4238401],[-4481,101]],[[2354673,4238502],[-7881,692]],[[2346792,4239194],[-377,60943]],[[2346415,4300137],[12751,-216]],[[2359166,4299921],[-12,-61520]],[[2445598,4397941],[57,32792]],[[2445655,4430733],[13000,-232]],[[2458655,4430501],[3233,-114],[-69,-26886]],[[2453858,4381174],[-8283,461],[23,16306]],[[2707063,3477997],[4377,19822]],[[2711440,3497819],[5011,-430]],[[2716451,3497389],[-850,-4449]],[[2715601,3492940],[-1426,-36857]],[[2714175,3456083],[-5280,-19490]],[[2708895,3436593],[-415,-4161]],[[2708480,3432432],[-3509,19210],[3040,19630],[-948,6725]],[[2633621,3316340],[986,-43]],[[2634607,3316297],[1634,-3788]],[[2636241,3312509],[97,-1041]],[[2636338,3311468],[-2,-2030]],[[2636336,3309438],[3154,-39195],[228,-12728],[-2633,-8405]],[[2631288,3240794],[-4362,20408]],[[2626926,3261202],[1271,16265],[5424,38873]],[[2509389,3276430],[6611,-675]],[[2517667,3242019],[-135,-47231]],[[2506062,3194643],[400,75365]],[[2506462,3270008],[2927,6422]],[[2561618,3375213],[-302,-20316]],[[2561316,3354897],[-531,-23576],[-2928,-12275]],[[2557857,3319046],[-3353,-8234],[-3546,7147],[-1987,-8227]],[[2548971,3309732],[-2384,10220],[752,32719]],[[2547339,3352671],[273,12566],[4804,16318]],[[2552416,3381555],[9202,-6342]],[[2373084,4675819],[13167,141]],[[2386251,4675960],[-24,-65664]],[[2373074,4610378],[-4,16204]],[[2373070,4626582],[14,49237]],[[2458696,4463117],[-3,32729]],[[2458693,4495846],[3,16340]],[[2474906,4455170],[-4323,8362],[-5953,-3069],[-5934,2654]],[[2432702,4480050],[60,-65585]],[[2432762,4414465],[-3255,-133]],[[2429507,4414332],[-9791,-179]],[[2419716,4414153],[-19,66071]],[[2333611,4611053],[-5,65166]],[[2346820,4676181],[-16,-65397]],[[2346804,4610784],[-13193,269]],[[2302658,4610882],[17804,-39]],[[2320462,4610843],[3297,124]],[[2323759,4610967],[-6,-16176],[2022,-41],[-43,-49272]],[[2325732,4545478],[-19106,673]],[[2359941,4675877],[-5,64938]],[[2359936,4740815],[8,45936]],[[2359944,4786751],[5430,-55]],[[2365374,4786696],[7723,-46]],[[2373097,4786650],[9,-45770]],[[2373106,4740880],[-22,-65061]],[[2373084,4675819],[-13143,58]],[[2595758,3462603],[-5276,3410],[-1677,8082]],[[2588805,3474095],[642,28585]],[[2601056,3499284],[-701,-22942]],[[2600355,3476342],[-394,-16403]],[[2599961,3459939],[-4203,2664]],[[2635847,3321171],[0,0]],[[2640992,3315641],[0,0]],[[2636338,3311468],[-2,-2030]],[[2634607,3316297],[1240,4874]],[[2635847,3321171],[7706,42391]],[[2643553,3363562],[2706,-17189]],[[2646259,3346373],[925,-27023],[-1539,-9394]],[[2645645,3309956],[-4717,10223],[-4687,-7670]],[[2386279,4740901],[7,45700]],[[2386286,4786601],[12487,16]],[[2398773,4786617],[692,5]],[[2399465,4786622],[5,-45708]],[[2399470,4740914],[-13191,-13]],[[2610770,3980995],[3999,13603]],[[2614769,3994598],[2191,7521],[4243,-232]],[[2621203,4001887],[-1864,-67230]],[[2619339,3934657],[-93,-3459]],[[2619246,3931198],[-1876,-2953]],[[2617370,3928245],[-6735,-150]],[[2610635,3928095],[135,52900]],[[2537963,3475889],[1738,-25628]],[[2539701,3450261],[-2696,-181],[126,-19175],[-3605,-25538]],[[2533526,3405367],[24,4809],[-8878,1047]],[[2524672,3411223],[388,65514]],[[2442380,4398066],[-48,-48937]],[[2442332,4349129],[-6412,79]],[[2435920,4349208],[-6400,142]],[[2429520,4349350],[-13,64982]],[[2432762,4414465],[8546,-79],[1072,-16320]],[[2335408,4545389],[32,49378],[-1829,16286]],[[2346804,4610784],[1610,-16161],[-48,-49466]],[[2348366,4545157],[-6476,134]],[[2341890,4545291],[-6482,98]],[[2538758,3269107],[1203,-18086],[-93,-54234]],[[2528846,3194855],[500,72135]],[[2529395,3274098],[3319,804]],[[2532714,3274902],[1260,-8181],[4784,2386]],[[2569238,4302339],[16,48646]],[[2569254,4350985],[12903,-163]],[[2582157,4350822],[-41,-48956]],[[2582116,4301866],[-3149,193]],[[2578967,4302059],[-9729,280]],[[2561066,3195559],[487,81204]],[[2561553,3276763],[2388,4201],[4460,-7231]],[[2568401,3273733],[3691,-28702]],[[2572092,3245031],[-223,-50870]],[[2698259,3457068],[-1131,-26897]],[[2697128,3430171],[-2697,-18360],[-4397,-10951]],[[2690034,3400860],[-1468,9395],[505,49627],[-2032,-211]],[[2687039,3459671],[610,4003]],[[2687649,3463674],[6754,2603],[3856,-9209]],[[2577927,3376905],[155,-33298],[-2030,-15027]],[[2576052,3328580],[-2670,-647]],[[2573382,3327933],[-12066,26964]],[[2561618,3375213],[604,16947]],[[2565801,3391376],[736,-10504],[2744,11848],[3854,-2995],[4792,-12820]],[[2605071,3385670],[-4536,21812]],[[2600535,3407482],[760,19921]],[[2601295,3427403],[4067,-4618],[3874,16647]],[[2609236,3439432],[2109,-12379],[8354,-17112]],[[2619699,3409941],[539,-1153]],[[2620238,3408788],[-4071,-7087],[-498,-22750]],[[2615669,3378951],[-1258,9815],[-5572,9423],[-3768,-12519]],[[2373070,4626582],[-13132,85]],[[2359938,4626667],[3,49210]],[[2599961,3459939],[-514,-23148],[1848,-9388]],[[2600535,3407482],[-7029,-8528]],[[2593506,3398954],[-2148,39276]],[[2591358,3438230],[4400,24373]],[[2607469,3255440],[4336,-18004],[441,-14213]],[[2612246,3223223],[700,-11117],[-3124,-19607]],[[2550424,3196318],[855,73940]],[[2551279,3270258],[3534,11115],[4290,-2463]],[[2559103,3278910],[2450,-2147]],[[2576161,3942959],[-21,32445]],[[2576140,3975404],[-72,31875],[1526,2042]],[[2577594,4009321],[6949,-1348]],[[2584543,4007973],[316,-54539],[1447,81]],[[2586306,3953515],[18,-10844]],[[2586324,3942671],[-10163,288]],[[2550805,3451670],[-1360,50620]],[[2564105,3503089],[-152,-34985]],[[2559326,3443111],[-6325,2392]],[[2553001,3445503],[-2196,6167]],[[2580805,3401685],[5717,-22845],[4379,-4524]],[[2590901,3374316],[-1503,-46907]],[[2589398,3327409],[-1059,-13453]],[[2588339,3313956],[-2696,6053],[-1710,-8494],[-3895,14738],[-2684,-2192]],[[2577354,3324061],[-1302,4519]],[[2577927,3376905],[2878,24780]],[[2574140,3458751],[1714,326],[3595,42366]],[[2588805,3474095],[-1527,-26200]],[[2587278,3447895],[-424,-6337],[-6825,1303],[-1417,-14130]],[[2578612,3428731],[-4472,30020]],[[2540486,3353077],[-223,-4720]],[[2540263,3348357],[-5771,5640]],[[2534492,3353997],[-1102,139],[136,51231]],[[2539701,3450261],[283,-1278]],[[2539984,3448983],[868,-20618]],[[2540852,3428365],[851,-21170],[-2616,-34329],[2427,-3035],[-1028,-16754]],[[2559861,4269427],[-7208,56]],[[2552637,4349820],[3125,-719],[3860,10546]],[[2559622,4359647],[239,-90220]],[[2599011,4207716],[-10606,-744],[-6,-5476]],[[2588399,4201496],[-3699,10891]],[[2584700,4212387],[38,24242]],[[2584738,4236629],[5834,241]],[[2590572,4236870],[8397,539]],[[2598969,4237409],[42,-29693]],[[2641368,3392020],[-2904,-11792],[-6536,-14510]],[[2631928,3365718],[-1117,16183],[-5211,30206]],[[2625600,3412107],[814,23192],[4953,16963]],[[2631367,3452262],[2500,-18801],[4737,-20009]],[[2638604,3413452],[2764,-21432]],[[2615967,3339226],[-533,3892]],[[2615434,3343118],[533,-3892]],[[2615669,3378951],[1424,-12873],[-1567,-21898]],[[2615526,3344180],[-5708,5477],[-3584,-5177]],[[2606234,3344480],[-2207,6788]],[[2604027,3351268],[1247,9465],[-203,24937]],[[2333611,4611053],[-9852,-86]],[[2320462,4610843],[16,65226]],[[2320478,4676069],[13128,150]],[[2626926,3261202],[-2401,-11658]],[[2624525,3249544],[-1950,22742]],[[2622575,3272286],[3045,7222],[1033,19682],[1833,-1244],[2238,38655]],[[2630724,3336601],[2921,-8427],[-24,-11834]],[[2554412,3857066],[1541,-29577],[2559,989],[-32,-25214]],[[2558480,3803264],[-4,-8296],[-4186,-6804]],[[2554290,3788164],[-6160,565]],[[2548130,3788729],[-3087,11260],[-5142,331]],[[2674125,3416712],[2334,11493]],[[2676459,3428205],[4060,17331],[6520,14135]],[[2690034,3400860],[-218,-10552]],[[2689816,3390308],[-933,4879],[-3886,-12185],[-1282,-14780],[-2135,4355]],[[2574140,3458751],[-1950,-10412],[-2464,6131]],[[2584543,4007973],[3614,359]],[[2592785,4008803],[148,-55013]],[[2592933,3953790],[-6627,-275]],[[2628061,4001497],[-6858,390]],[[2614769,3994598],[-29,34625]],[[2614740,4029223],[-15,13513]],[[2614725,4042736],[7300,138]],[[2622025,4042874],[6150,-797]],[[2582325,3779868],[17,16049],[-3100,132],[43,11005],[-3047,-606]],[[2576238,3806448],[-54,24647]],[[2576184,3831095],[10380,-130],[6,5392]],[[2588064,3836321],[-971,-41177],[-1106,-3911]],[[2501667,3348718],[368,11848]],[[2506325,3382808],[1634,-18610],[5963,-19285]],[[2513922,3344913],[-2880,-23380],[-1393,3797]],[[2509649,3325330],[-5619,11650],[-2363,11738]],[[2651236,3493187],[2284,-31724]],[[2650771,3433461],[-1934,-7955],[-4285,3182],[-398,-12597],[-3647,7337]],[[2640507,3423428],[1192,12904],[-557,33799],[2517,8926],[-49,14562]],[[2539233,3274923],[-475,-5816]],[[2532714,3274902],[-38,19764],[1465,15018],[315,38875]],[[2534456,3348559],[36,5438]],[[2540263,3348357],[-1653,-16324],[-161,-19963],[1713,-20176],[-929,-16971]],[[2551279,3270258],[-978,7112]],[[2550301,3277370],[0,0]],[[2550301,3277370],[-2984,8778]],[[2547317,3286148],[1654,23584]],[[2557857,3319046],[1485,-21891],[-239,-18245]],[[2606234,3344480],[229,-33148],[1034,-15895]],[[2607497,3295437],[-1387,-249]],[[2598597,3293775],[-3011,25458]],[[2595586,3319233],[4,13935],[2779,19673]],[[2598369,3352841],[5658,-1573]],[[2373097,4786650],[8977,-38]],[[2382074,4786612],[4212,-11]],[[2386279,4740901],[-13173,-21]],[[2512706,3424562],[3314,-18595],[4128,-11371]],[[2520148,3394596],[-393,-50849]],[[2519755,3343747],[-5833,1166]],[[2301098,4741739],[829,25480],[-2061,19538]],[[2303932,4786745],[11147,-44]],[[2315079,4786701],[5356,-23]],[[2320435,4786678],[-27,-45384]],[[2320408,4741294],[-19310,445]],[[2599017,4172536],[-11,29841]],[[2599006,4202377],[7904,216]],[[2606910,4202593],[67,-56597]],[[2606977,4145996],[0,-24593]],[[2606977,4121403],[-7976,-400]],[[2599001,4121003],[16,51533]],[[2569182,4451822],[3010,9219]],[[2580564,4460922],[1053,-35398],[-1066,-25766]],[[2580551,4399758],[-4902,-5785],[-2308,-21809],[-4084,-9109]],[[2569257,4363055],[-75,88767]],[[2403725,4413915],[46,-65036]],[[2403771,4348879],[-6392,-36]],[[2397379,4348843],[-6371,-39]],[[2391008,4348804],[-15,61817]],[[2390993,4410621],[-5,3164]],[[2390988,4413785],[12737,130]],[[2416525,4414107],[3191,46]],[[2429520,4349350],[-6530,-171]],[[2422990,4349179],[-6415,-135]],[[2416575,4349044],[-50,65063]],[[2445598,4397941],[-3218,125]],[[2432702,4480050],[12964,-334]],[[2445666,4479716],[-11,-48983]],[[2665738,3415550],[4832,-6831],[1646,-9940]],[[2659994,3390055],[162,7882]],[[2660156,3397937],[3019,18698],[2563,-1085]],[[2607150,3870661],[3948,-3712]],[[2600956,3811004],[-429,21903],[-5208,2602]],[[2599407,3862261],[1513,8149],[6230,251]],[[2586077,4062709],[-3880,-5879],[-5322,117]],[[2576875,4056947],[-857,5436],[-215,43875]],[[2575803,4106258],[1,10842]],[[2575804,4117100],[10275,235]],[[2586079,4117335],[-2,-54626]],[[2617623,4417268],[10849,692]],[[2628503,4369508],[-10825,-1323]],[[2617678,4368185],[-55,49083]],[[2695003,3396475],[-2470,-17800]],[[2692533,3378675],[-2940,-1923],[223,13556]],[[2697128,3430171],[2343,-3668],[956,-14281]],[[2572470,3756961],[1181,-100],[-533,38739]],[[2573118,3795600],[3120,10848]],[[2403771,4348879],[6392,44]],[[2410163,4348923],[35,-49117]],[[2410198,4299806],[-12774,-81]],[[2397424,4299725],[-45,49118]],[[2596505,4063863],[10,11003]],[[2596515,4074866],[8873,250]],[[2605388,4075116],[109,-45992]],[[2605497,4029124],[-1538,-19224]],[[2603959,4009900],[-7452,-500]],[[2580534,3262072],[2261,-6368],[5198,17177]],[[2587993,3272881],[-109,-14766]],[[2586305,3219445],[-2062,20290],[-3764,14254],[55,8083]],[[2493636,3194796],[321,71226]],[[2498376,3271116],[8086,-1108]],[[2582169,4399773],[-14,8140],[11358,505]],[[2593519,4400306],[145,-49165],[-655,-53]],[[2593009,4351088],[-10852,-266]],[[2582157,4350822],[12,48951]],[[2617426,4237729],[-6850,-57]],[[2610576,4237672],[-50,16224]],[[2610526,4253896],[3180,151],[-38,49165]],[[2613668,4303212],[7305,139]],[[2620973,4303351],[149,-65434]],[[2629008,3495802],[1494,-14743]],[[2630502,3481059],[-5888,10594],[-2807,-4208],[-2132,-28381]],[[2619675,3459064],[-4582,23234]],[[2615093,3482298],[240,17880]],[[2665738,3415550],[4035,22518],[1867,-1104]],[[2671640,3436964],[2582,10519],[2237,-19278]],[[2628301,4132506],[-10884,-104]],[[2617417,4132402],[-360,13546]],[[2617057,4145948],[-121,43015]],[[2588417,4165394],[73,-47678]],[[2588490,4117716],[-2411,-381]],[[2575804,4117100],[-20,47897]],[[2575784,4164997],[12633,397]],[[2658338,3413659],[1818,-15722]],[[2656623,3361725],[-1649,-8607],[-2684,6394]],[[2652290,3359512],[0,0]],[[2652290,3359512],[-2145,378],[-3886,-13517]],[[2643553,3363562],[-228,2475]],[[2643325,3366037],[2129,15506],[3805,8105],[-987,6103],[4243,21987]],[[2614725,4042736],[-97,49059]],[[2614628,4091795],[2242,163]],[[2616870,4091958],[1004,-13650],[4193,-142]],[[2622067,4078166],[-42,-35292]],[[2580534,3262072],[-2067,1915]],[[2578467,3263987],[-1768,25542]],[[2576699,3289529],[0,0]],[[2576699,3289529],[655,34532]],[[2588339,3313956],[-346,-41075]],[[2625600,3412107],[-5362,-3319]],[[2619699,3409941],[1033,9629],[-1057,39494]],[[2630502,3481059],[2027,-24230],[-1162,-4567]],[[2550477,3992944],[10134,-74]],[[2560611,3992870],[-10,-16339]],[[2560601,3976531],[-8,-49395]],[[2576145,3926542],[-7,-40830]],[[2576138,3885712],[20,-29982]],[[2576158,3855730],[-6737,-3935]],[[2569421,3851795],[555,74655]],[[2569976,3926450],[6169,92]],[[2596662,4318581],[24,8176]],[[2596686,4326757],[7282,719]],[[2603968,4327476],[1124,-8312]],[[2605092,4319164],[147,-65358]],[[2605239,4253806],[-6302,-269]],[[2598937,4253537],[-2083,-131],[-192,65175]],[[2698427,3494352],[1405,-9]],[[2702543,3494171],[8897,3648]],[[2707063,3477997],[-5689,-20161],[-3115,-768]],[[2687649,3463674],[1992,30380]],[[2606977,4121403],[-577,-29805]],[[2606400,4091598],[-1012,-16482]],[[2596515,4074866],[393,43051]],[[2596908,4117917],[2093,3086]],[[2550805,3451670],[-6393,-7288],[-4428,4601]],[[2625369,3338294],[3738,11803]],[[2629107,3350097],[1617,-13496]],[[2622575,3272286],[-3311,9239]],[[2617623,4417268],[-75,43651]],[[2320478,4676069],[-70,65225]],[[2320408,4741294],[13201,-439]],[[2638604,3413452],[1903,9976]],[[2643325,3366037],[-1957,25983]],[[2458706,4561169],[-6465,98]],[[2452241,4561267],[-75,65527]],[[2422995,4243961],[20,56001]],[[2423015,4299962],[12838,203]],[[2435853,4300165],[-14,-16333]],[[2435839,4283832],[56,-40245]],[[2386251,4675960],[13192,-182]],[[2399443,4675778],[-52,-65649]],[[2399391,4610129],[-13164,167]],[[2351529,4480150],[3236,71]],[[2354765,4480221],[9707,44]],[[2364472,4480265],[8,-48982],[1071,-18274]],[[2365551,4413009],[-12789,86]],[[2352762,4413095],[-1214,18352],[-19,48703]],[[2435920,4349208],[-67,-49043]],[[2423015,4299962],[-25,49217]],[[2346801,4786831],[24,-46007]],[[2333609,4740855],[8,45859]],[[2333617,4786714],[13184,117]],[[2399443,4675778],[29,57139]],[[2399472,4732917],[13086,0]],[[2412558,4732917],[5,-57221]],[[2412563,4675696],[-13120,82]],[[2410198,4299806],[34,-57656]],[[2408095,4241882],[-10663,-1012]],[[2397432,4240870],[-8,58855]],[[2998251,4836279],[7562,-36119],[2711,-6120]],[[3006513,4746376],[-8948,31918],[-1232,-3749],[-3526,24016]],[[2992807,4798561],[2221,22953],[3506,2065],[-283,12700]],[[3002156,4694764],[4039,49644]],[[3018098,4716021],[3241,-11731]],[[3021339,4704290],[-3166,-35112]],[[2410198,4299806],[12817,156]],[[2371887,4348073],[6268,988]],[[2378155,4349061],[6454,-144]],[[2384609,4348917],[28,-49222]],[[2384637,4299695],[-12767,-236]],[[2371870,4299459],[17,48614]],[[2425729,4626085],[471,-64537]],[[2419679,4561598],[-6539,-99]],[[2413140,4561499],[-579,48451]],[[2412561,4609950],[-6,16183]],[[2412555,4626133],[13174,-48]],[[2984972,4728249],[-2258,25212],[1009,22182],[3304,16353]],[[2987027,4791996],[2388,15509],[876,-12485],[2516,3541]],[[2458655,4430501],[41,32616]],[[2301558,4676008],[18920,61]],[[2399472,4732917],[-2,7997]],[[2399465,4786622],[13128,91]],[[2412593,4786713],[-35,-53796]],[[2364472,4480265],[3237,46]],[[2367709,4480311],[9713,32]],[[2377422,4480343],[694,-65793]],[[2378116,4414550],[-12565,-1541]],[[2346825,4740824],[13111,-9]],[[2359941,4675877],[-13121,304]],[[2333696,4300304],[307,-60092]],[[2334003,4240212],[-10913,881]],[[2321757,4300331],[11939,-27]],[[2359166,4299921],[12704,-462]],[[2371870,4299459],[-19,-60480]],[[2371851,4238979],[-6039,-377]],[[2365812,4238602],[-6658,-201]],[[2412563,4675696],[-8,-49563]],[[2412561,4609950],[-13170,179]],[[2333696,4300304],[17,48378]],[[2333713,4348682],[6366,-145]],[[2340079,4348537],[6360,-136]],[[2346439,4348401],[-24,-48264]],[[2346415,4300137],[-12719,167]],[[2378116,4414550],[10246,-88],[2631,-3841]],[[2391008,4348804],[-6399,113]],[[2378155,4349061],[-39,65489]],[[2384637,4299695],[-10,-59533]],[[2378569,4239659],[-6718,-680]],[[2374188,4545233],[-6495,-33]],[[2367693,4545200],[-6486,-142]],[[2361207,4545058],[-4,49439],[-1264,16012]],[[2359939,4610509],[-1,16158]],[[2346804,4610784],[13135,-275]],[[2361207,4545058],[-6444,44]],[[2354763,4545102],[-6397,55]],[[2416575,4349044],[-6412,-121]],[[2403725,4413915],[3202,51]],[[2406927,4413966],[9598,141]],[[2380685,4545091],[10,-64757]],[[2380695,4480334],[-3273,9]],[[2367709,4480311],[-16,64889]],[[2432710,4561884],[6523,-497]],[[2439233,4561387],[6511,8]],[[2445744,4561395],[-70,-65331]],[[2445674,4496064],[-8,-16348]],[[2390988,4413785],[-539,66499]],[[2390449,4480284],[3234,-73]],[[2406663,4480147],[264,-66181]],[[2338786,4239835],[-4783,377]],[[2346792,4239194],[-8006,641]],[[2335408,4545389],[-9676,89]],[[2328895,4480349],[-3218,-58]],[[2325677,4480291],[55,65187]],[[2341890,4545291],[-56,-64956]],[[2352763,4348322],[6408,-97]],[[2359171,4348225],[-5,-48304]],[[2346439,4348401],[6324,-79]],[[2445674,4496064],[13019,-218]],[[3001499,4919955],[1502,-55502],[-5649,-4200],[899,-23974]],[[2987027,4791996],[-10988,13431]],[[2979505,4837388],[2458,41840],[2281,15394],[-112,14727]],[[2351529,4480150],[-9695,185]],[[2354763,4545102],[2,-64881]],[[2352762,4413095],[-9477,103]],[[2452241,4561267],[-6497,128]],[[2439233,4561387],[-281,65057]],[[2399391,4610129],[705,-65051]],[[2393687,4545006],[-6445,78]],[[2303908,4708691],[-628,25935],[-2182,7113]],[[3012805,4933564],[581,-92217]],[[3013386,4841347],[751,-46982]],[[2352763,4348322],[-1,64773]],[[2365551,4413009],[-1,-64865]],[[2365550,4348144],[-6379,81]],[[2365550,4348144],[6337,-71]],[[2319889,4348657],[13824,25]],[[2384637,4299695],[12787,30]],[[2397432,4240870],[-7720,-689]],[[2325677,4480291],[-12989,587]],[[2330547,4413457],[-13881,166]],[[2346801,4786831],[1673,14]],[[2348474,4786845],[11470,-94]],[[2380695,4480334],[9754,-50]],[[2425729,4626085],[13223,359]],[[2425743,4708581],[-12,-32903]],[[2425731,4675678],[-13168,18]],[[2412558,4732917],[13190,25]],[[2425748,4732942],[-5,-24361]],[[2444461,4283671],[1037,-10],[39,48943]],[[2445537,4332604],[11738,-262]],[[2457286,4331881],[-388,-27195],[-3543,-18777],[-623,-24022]],[[2452732,4261887],[-8271,21784]],[[2340079,4348537],[32,64758]],[[2439001,4708367],[-154,78428]],[[2438847,4786795],[10952,-20]],[[2386251,4675960],[28,64941]],[[2425729,4626085],[2,49593]],[[2425743,4708581],[13258,-214]],[[2406622,4545241],[-18,16198],[6536,60]],[[2419697,4480224],[-13034,-77]],[[2320435,4786678],[11325,115]],[[2331760,4786793],[1857,-79]],[[2442332,4349129],[3216,-215],[-11,-16310]],[[2444461,4283671],[-8622,161]],[[2425781,4786787],[9739,35]],[[2435520,4786822],[3327,-27]],[[2425748,4732942],[33,53845]],[[2452732,4261887],[-2030,-10949]],[[2412593,4786713],[2903,45]],[[2415496,4786758],[10285,29]],[[2400743,2424171],[4306,2213]],[[2411350,2427525],[11,-58862],[-919,-17547]],[[2455279,2319973],[3602,4445]],[[2494172,2288007],[-45,-232]],[[2494127,2287775],[-399,-2033]],[[2493728,2285742],[-99,-844]],[[2493464,2283498],[-181,-1542]],[[2493283,2281956],[-45,-192]],[[2492971,2280632],[-13,-56]],[[2492943,2280514],[0,-3]],[[2492943,2280511],[-103,-32]],[[2492805,2280467],[-14,-4]],[[2492791,2280463],[-9,-36]],[[2492759,2280336],[-9,-41]],[[2492693,2280067],[0,-1]],[[2492693,2280066],[-4,-102]],[[2492684,2279836],[-1,-32]],[[2492651,2278902],[-5,-132]],[[2492646,2278758],[-6,-158]],[[2492632,2278360],[-4,-106]],[[2492606,2277646],[-18,-500]],[[2492584,2277028],[-3,-98]],[[2492581,2276930],[0,0]],[[2492578,2276749],[0,-7]],[[2492576,2276646],[-1,-76]],[[2492575,2276529],[-1,-31]],[[2492566,2275963],[-10,-683]],[[2492553,2275058],[-15,-1032]],[[2492538,2274026],[-386,-968]],[[2492127,2272994],[-1,-2]],[[2492126,2272992],[-11,-9]],[[2492108,2272980],[-14,-9]],[[2491754,2272749],[-30,-20]],[[2491724,2272729],[-2,-5]],[[2491692,2272635],[-21,-62]],[[2491652,2272518],[-10,-33]],[[2491632,2272455],[-5,-15]],[[2491617,2272414],[-3,-12]],[[2491471,2271979],[-68,-202]],[[2491351,2271619],[-32,-93]],[[2491319,2271526],[-16,-153]],[[2491260,2270958],[-3,-29]],[[2491254,2270899],[-3,-32]],[[2491221,2270577],[-1,-3]],[[2491220,2270574],[-5,-566]],[[2491208,2269414],[0,-63]],[[2491205,2269099],[0,-1]],[[2491630,2265058],[0,-3]],[[2491629,2264929],[0,-36]],[[2491628,2264793],[0,-87]],[[2491628,2264706],[-231,-707]],[[2491366,2263990],[-210,-64]],[[2491156,2263926],[-29,155]],[[2490997,2264780],[-15,82]],[[2490945,2265058],[-138,740]],[[2490794,2265871],[-6,28]],[[2490788,2265899],[0,0]],[[2490492,2267032],[-169,647]],[[2490323,2267679],[-538,611]],[[2489785,2268290],[-59,-22]],[[2488917,2267959],[-136,-51]],[[2488781,2267908],[-312,-1882]],[[2488450,2265912],[-49,-298]],[[2488380,2265488],[-24,-140]],[[2488333,2265206],[-16,-94]],[[2488186,2264318],[-1,-1]],[[2488185,2264317],[-28,-215]],[[2488135,2263939],[-356,-2677]],[[2447572,2381377],[973,-27011],[1862,-12456],[-1268,-15230],[2767,-6370]],[[2776756,3773320],[1266,14439],[-2095,3215]],[[2775927,3790974],[2063,6705],[3506,36619]],[[2785810,3736801],[-9054,36519]],[[2837646,3484828],[-13101,115]],[[2770279,3484290],[-8704,105]],[[2761575,3484395],[-730,-2]],[[2862067,3545012],[375,5832]],[[2862442,3550844],[539,382]],[[2862981,3551226],[1195,3700]],[[2865700,3536720],[-2388,-6735],[-1245,15027]],[[2855068,3596619],[90,-16284],[5133,-23612]],[[2860291,3556723],[-1377,-2499],[-10143,-50822]],[[2814378,3655134],[-2870,-16206]],[[2805099,3633607],[6020,55381],[258,10285]],[[2819855,3887450],[-5436,31636]],[[2838962,3641529],[2015,20327]],[[2733293,3533796],[-1285,-7300],[-4823,-806]],[[2723903,3561121],[4313,17862],[3073,-4722],[5618,9496]],[[2864857,3697433],[-1173,-13159],[-4120,5982],[-3680,28075]],[[2819316,3779185],[7010,45515]],[[2828025,3755505],[-1256,3199]],[[2747180,3567153],[5532,7920],[4663,16187]],[[2854848,3619752],[-1341,7350]],[[2859879,3615140],[2919,-2969],[-105,-11368]],[[2189885,3393434],[16,82884]],[[2224508,2353354],[-5029,-36],[18,39518]],[[2230406,2435930],[3558,-3675]],[[2331608,2659522],[875,-9562]],[[2332483,2649960],[-17393,-14707]],[[2174883,3476298],[-15,-82669]],[[2159886,3393223],[-13,83128]],[[2359961,2239122],[2348,-388],[106,-61021]],[[2362415,2177713],[-465,-1195]],[[2358043,2174253],[-316,504]],[[2357460,2177137],[-254,1719]],[[2356385,2179663],[-8,-31]],[[2355283,2176869],[-220,-388]],[[2354958,2176294],[-4,-6]],[[2353261,2173664],[-185,-285]],[[2351233,2170847],[-61,-30]],[[2351172,2170817],[-2,2]],[[2351167,2170820],[-261,167]],[[2350846,2171073],[-5,14]],[[2350806,2171192],[-104,309]],[[2350696,2171520],[-136,405]],[[2350559,2171926],[-4,12]],[[2350459,2172820],[-21,247]],[[2350369,2173898],[-4,46]],[[2350285,2174912],[-30,357]],[[2350255,2175269],[2281,14380],[374,18311],[-1270,11984],[-3668,-21680],[-1633,491]],[[2346287,2166354],[645,-723]],[[2346236,2166412],[39,-45]],[[2343999,2173695],[50,-406]],[[2343951,2175251],[48,-1556]],[[2343914,2176432],[0,-6]],[[2343958,2177157],[-1,-19]],[[2343966,2177247],[-8,-90]],[[2344208,2180109],[-237,-2793]],[[2344728,2183272],[-520,-3163]],[[2344897,2185113],[-169,-1841]],[[2344897,2185240],[6,-61]],[[2344903,2185179],[-4,-45]],[[2344447,2188299],[284,-1483]],[[2344731,2186816],[113,-1073]],[[2344409,2188499],[27,-142]],[[2344096,2190125],[304,-1579]],[[2343987,2192280],[55,-1777]],[[2344067,2193741],[-30,-519]],[[2344244,2195759],[-35,-354]],[[2344271,2196039],[-7,-71]],[[2344730,2198442],[-459,-2403]],[[2280975,2586512],[15,16476],[-4515,18714],[1638,7345],[-2953,8398],[275,29171]],[[2159900,3229951],[-15171,23]],[[2254277,1896296],[9817,-200]],[[2320497,2897978],[27,9770]],[[2127132,2650207],[14266,225]],[[2278043,1588084],[1450,-11370],[659,-35768],[2985,-15431],[629,-20907],[-5309,-9296],[-146,-14144],[-6274,21981],[-1094,11720],[-6255,9313]],[[2282466,1588115],[-477,3]],[[2271283,1510064],[0,0]],[[2199206,1922289],[-2289,16386],[-2902,56299],[-2839,14375],[-202,14719],[-3665,32885],[-791,31446]],[[2305845,2895789],[2485,-8591]],[[2308279,2817910],[-6119,104]],[[2293046,2818996],[278,78229]],[[2234285,2977430],[-24,-81696]],[[2219815,2896012],[-57,62672]],[[2219726,2977430],[14559,0]],[[2371087,2707575],[8,-36738]],[[2264314,2233257],[4819,-35492],[1926,-3506]],[[2265286,2143148],[-6807,525],[-1379,11634]],[[2252176,2183893],[6175,16744],[2508,12824]],[[2914415,4000578],[-2929,-16517],[-4072,-41180],[-4994,-9662],[1903,27527],[-314,16868]],[[2915489,4334811],[-4183,-30751],[-3199,-1832]],[[2149365,4975893],[-174,-96657]],[[2145518,4824284],[-1005,-2469],[-17697,70]],[[2092152,4906667],[16776,-58]],[[2173443,5020104],[-2581,-10265],[-6311,-10382],[-2090,-12906],[-5053,2308],[-2753,-10824],[-5272,-2005]],[[2149395,5074547],[6,81313]],[[2149401,5155860],[14755,0]],[[2164156,5155860],[-860,-89586],[10166,52],[-19,-46222]],[[2261407,5177585],[23,65022]],[[2282373,5171909],[-4076,5517],[-16890,159]],[[2199148,4766143],[-28249,-213]],[[2175464,4850515],[3721,-1859],[5454,-23124],[4224,11305],[6810,-9559]],[[2198685,4826700],[463,-60557]],[[2217001,5113362],[-3776,94]],[[2213260,5178504],[27379,-400]],[[2240639,5178104],[71,-65042]],[[2212972,5243546],[16,-65035]],[[2193134,5178772],[3373,21155],[-2173,30191],[-3130,13947]],[[2271746,4852006],[42,-65367]],[[2271788,4786639],[-9975,-147]],[[2274929,5095817],[7466,37]],[[2282395,5095854],[9538,-300],[44,-32448]],[[2291915,5030831],[-16905,-76]],[[2224678,4786645],[14023,-126]],[[2238701,4786519],[2474,24]],[[2257788,4729927],[902,-5336]],[[2258690,4724591],[-436,-36389],[-1681,-25256]],[[2149376,5244234],[25,-88374]],[[2122722,5074841],[2,32435]],[[2175471,4879310],[478,32486]],[[2199148,4766143],[441,-73307]],[[2214226,5048249],[2796,-44]],[[2224292,5048199],[322,-131472]],[[2214492,4920974],[-359,61879]],[[2092115,4987142],[6555,6317],[7049,-127]],[[2270938,4724674],[-12248,-83]],[[2271788,4786639],[5727,-8]],[[2277515,4786631],[63,-61837]],[[2238333,4868135],[368,-81616]],[[1940565,2943494],[4106,23364],[8390,134]],[[1953042,2713957],[-1849,-38]],[[1951193,2713919],[-3123,19264],[552,19973],[-1079,19875],[-6986,62969],[8,107494]],[[2193840,5048287],[360,24016],[3106,-1422],[-1257,15148],[1818,27603]],[[1913922,2583848],[-235,-74577]],[[1913687,2509271],[-17125,-110],[-8128,17574]],[[1887145,3570310],[18448,316]],[[1833614,3294513],[8,51041],[633,17318],[-1199,27536],[3603,9505],[784,11568],[5305,16060],[5850,8441],[4650,20172],[-744,23111],[982,15078],[196,37910],[2098,37898]],[[2284227,4708647],[6586,110]],[[2290813,4708757],[3300,-13]],[[2240657,5243143],[-18,-65039]],[[2241323,4917082],[-148,81877]],[[2264933,4982158],[-17,-65356]],[[2261407,5177585],[-52,-65150]],[[2285133,4981920],[-10148,142]],[[2282395,5095854],[1,27294]],[[2303453,5128557],[488,-10785]],[[2303941,5117772],[25,-54520]],[[2303946,4917092],[-6,-65001]],[[2195590,5155952],[-31434,-92]],[[2285092,4786612],[-7577,19]],[[2290813,4708757],[-20,77915]],[[2370363,3522826],[171,34432]],[[2383120,3555583],[1037,-19240],[-293,-60109]],[[2398099,3647705],[-3040,414]],[[2395059,3648119],[-151,72162]],[[2398125,3738978],[6047,-1289]],[[2468410,3629475],[9252,-492]],[[2476522,3555437],[-11702,831]],[[2397232,4016191],[7112,-29468]],[[2401966,3956462],[-3229,-25514]],[[2398737,3930948],[-12423,2732]],[[2386314,3933680],[533,65505]],[[2366312,4203478],[-500,35124]],[[2378857,4156433],[-12612,696]],[[2438297,3785940],[2680,-175]],[[2441132,3717707],[-7729,430],[-80,-36017]],[[2437902,3811207],[122,77730]],[[2438024,3888937],[2648,-5037],[3529,6158]],[[2485436,3733677],[-4790,-37991]],[[2448615,3970555],[-113,-27530]],[[2438024,3888937],[-190,-74]],[[2437834,3888863],[367,66571]],[[2386314,3933680],[-25,-2697]],[[2422552,3811904],[34,8105]],[[2422586,3820009],[2215,12428],[-1502,12143],[3493,-62],[492,16011],[2274,8405]],[[2429558,3868934],[2082,12544],[6194,7385]],[[2465265,3534737],[1963,-24723],[445,-33845]],[[2391358,3476092],[305,59658]],[[2391663,3535750],[11006,-1439]],[[1697242,5365719],[-353,-55878],[3495,73],[-10,-16386],[3488,-13],[-156,-38756]],[[1714676,5254403],[-240,63567],[-1764,-164],[-1733,25033],[-3509,-80],[318,28795]],[[1665468,5392690],[19,32731],[10759,-228],[84,65579]],[[2970239,4366582],[-10320,5108],[-5566,-21374]],[[2536880,3736792],[1787,-17176]],[[1679064,3156487],[6815,-93367],[-875,-23137],[-3363,4],[-4346,-23000]],[[1677295,3016987],[-7566,18861],[-1496,19990],[-5798,23265]],[[1659630,2873477],[0,0]],[[1953109,3569857],[-26621,-209]],[[1700369,2960500],[-3956,-7451],[-4249,7157],[532,18518],[-3550,34926],[-6281,859],[-1676,-5776],[-3894,8254]],[[1686809,2910814],[6550,-13289],[1200,-20221],[-3904,5050],[-652,17552],[-3194,10908]],[[1686749,2827126],[7022,-39125],[-3979,5542],[-3043,33583]],[[1588942,3664625],[-1309,30425],[-4628,21569]],[[1583005,3716619],[-50,535]],[[1582955,3717154],[488,20810]],[[2631928,3365718],[-2821,-15621]],[[2615952,3338980],[15,246]],[[2615434,3343118],[92,1062]],[[2398584,5446732],[-20040,748]],[[2378544,5447480],[-23,46337],[-6994,13908],[-2532,24046],[-5838,-12148],[-2473,5425]],[[2360684,5525048],[-63,75056]],[[2360621,5600104],[17897,109],[11,9836],[19353,-1325]],[[2397882,5608724],[555,-32135],[-230,-61086],[377,-68771]],[[2659935,3495305],[5664,-656]],[[2667976,3460191],[-4191,-11324],[-3627,-1555]],[[2607497,3295437],[3726,6448]],[[2616737,3261989],[-4491,-38766]],[[2582169,4399773],[-1618,-15]],[[2610635,3928095],[-6657,-18266]],[[2603978,3909829],[-3107,-1479]],[[2600871,3908350],[-96,48859]],[[2600775,3957209],[-29,11298],[3150,367]],[[2603896,3968874],[3356,356],[3518,11765]],[[2552416,3381555],[-899,34588]],[[2551517,3416143],[1484,29360]],[[2617678,4368185],[-3223,-9]],[[2614455,4368176],[-6391,374],[-3197,5356]],[[2604867,4373906],[-44,26595]],[[2604789,4416690],[12834,578]],[[2628202,4080386],[-6135,-2220]],[[2616870,4091958],[547,40444]],[[2564773,4122761],[-15,-16051],[2287,-103]],[[2567045,4106607],[-100,-49025]],[[2566945,4057582],[-5181,440]],[[2561764,4058022],[-5110,150]],[[2556654,4058172],[796,47568],[-1849,16916]],[[2335509,5815909],[4630,25],[11,72148],[5457,-2676],[3675,-14164],[2098,-55104],[1836,-21720],[-279,-19049],[2849,-11804],[4508,-3409]],[[2360294,5760156],[44,-62437]],[[2360338,5697719],[-21794,-256],[-28,32568],[-3638,47]],[[2334878,5730078],[-5,32347],[7045,6],[-45,38849],[-4016,-7331],[-2348,21960]],[[2399598,5144509],[-75,27211],[-3335,180],[5,32297]],[[2396193,5204197],[8379,-120]],[[2407229,5122848],[-7627,148]],[[2399602,5122996],[-4,21513]],[[2327878,5661329],[304,-28518]],[[2328182,5632811],[20,-16209]],[[2328202,5616602],[-3551,344]],[[2324651,5616946],[-6,5341],[-21529,-138]],[[2303116,5622149],[-510,39403]],[[2302606,5661552],[25272,-223]],[[2358285,5047276],[14,16359],[6849,-44]],[[2365148,5063591],[6793,-141]],[[2371941,5063450],[49,-48898]],[[2371990,5014552],[-6787,73],[-17,-16386],[-6774,-73],[-7,16331]],[[2358405,5014497],[-120,32779]],[[2331814,4851800],[-276,-8]],[[2331538,4851792],[-4,65143]],[[2331534,4916935],[9857,-168]],[[2341391,4916767],[238,-16286],[6698,-3]],[[2348327,4900478],[12,-48652]],[[2348339,4851826],[-16525,-26]],[[2415495,4849208],[10300,2429]],[[2425795,4851637],[9720,-28]],[[2435515,4851609],[5,-64787]],[[2415496,4786758],[-1,62450]],[[2595586,3319233],[-4419,307],[-1769,7869]],[[2590901,3374316],[3855,1247]],[[2594756,3375563],[3613,-22722]],[[2311696,5388976],[-559,81103]],[[2311137,5470079],[3555,124]],[[2314692,5470203],[14373,-67]],[[2329065,5470136],[10643,198]],[[2339708,5470334],[172,-65099]],[[2339880,5405235],[-20,-16299]],[[2339860,5388936],[-28164,40]],[[2609227,3458298],[9,-18866]],[[2600355,3476342],[3059,4291],[5813,-22335]],[[2564567,4269418],[-4706,9]],[[2559622,4359647],[1589,4387]],[[2561211,4364034],[2421,8240],[5625,-9219]],[[2569257,4363055],[-3,-12070]],[[2569238,4302339],[-1552,-13944],[-3158,-59],[39,-18918]],[[2399571,5090620],[1001,-20],[12,-43601],[-999,-12]],[[2399585,5046987],[-4416,-452]],[[2395169,5046535],[-1348,27577]],[[2393821,5074112],[-22,16633],[5772,-125]],[[2565292,3853543],[-4728,5659]],[[2564557,3926407],[5419,43]],[[2569421,3851795],[-4129,1748]],[[2314760,4852003],[343,6]],[[2315103,4852009],[-24,-65308]],[[2303940,4852091],[10820,-88]],[[2568981,4032979],[7084,-614]],[[2576065,4032365],[1491,27],[38,-23071]],[[2576140,3975404],[-10352,438]],[[2565788,3975842],[26,32669],[3097,-108],[70,24576]],[[2660282,3302206],[-3031,-1315],[-5041,-18974]],[[2652210,3281917],[-234,561]],[[2651976,3282478],[-912,16145],[-2445,-1641],[-2974,12974]],[[2362002,4851818],[3395,-19]],[[2365397,4851799],[-23,-65103]],[[2348474,4786845],[3,64982]],[[2348477,4851827],[13525,-9]],[[2294707,5372627],[14025,48]],[[2308732,5372675],[435,-97734]],[[2309167,5274941],[-22,-16285]],[[2309145,5258656],[-8648,45]],[[2313300,5144551],[10298,60]],[[2323598,5144611],[13713,38]],[[2337311,5144649],[243,-48691]],[[2337554,5095958],[-22016,-34]],[[2315538,5095924],[-1864,4581]],[[2313674,5100505],[-374,44046]],[[2598969,4237409],[-32,16128]],[[2605239,4253806],[5287,90]],[[2610576,4237672],[75,-35150]],[[2610651,4202522],[-3741,71]],[[2599006,4202377],[5,5339]],[[2524672,3411223],[-4524,-16627]],[[2565788,3975842],[-5187,689]],[[2560611,3992870],[40,48957],[1113,16195]],[[2566945,4057582],[-47,-24521],[2083,-82]],[[2575815,4212445],[8885,-58]],[[2588399,4201496],[7,-29542]],[[2588406,4171954],[11,-6560]],[[2575784,4164997],[4,6684]],[[2575788,4171681],[27,40764]],[[2564730,4171763],[11058,-82]],[[2575803,4106258],[-8758,349]],[[2578962,4269274],[5,32785]],[[2582116,4301866],[8345,-10]],[[2590461,4301856],[111,-64986]],[[2584738,4236629],[25,24539],[-4225,-9],[-1576,8115]],[[2378745,5000109],[4176,12501],[2722,18188]],[[2385643,5030798],[5317,-2467]],[[2390960,5028331],[1340,-46257]],[[2392300,4982074],[-6765,-62]],[[2385535,4982012],[-10757,-85]],[[2374778,4981927],[3967,18182]],[[2623672,3193368],[-1311,30165],[2164,26011]],[[2552637,4220816],[12062,-212]],[[2564699,4220604],[42,-20427]],[[2555978,4155423],[-3476,3859]],[[2615093,3482298],[-4288,-5651],[-1578,-18349]],[[2708480,3432432],[-4108,-30297]],[[2593009,4351088],[45,-16469],[3632,-7862]],[[2596662,4318581],[-6186,-579],[-15,-16146]],[[2594756,3375563],[-1250,23391]],[[2556654,4058172],[-4173,-119]],[[2580639,3408769],[0,0]],[[2578612,3428731],[2193,-27046]],[[2534456,3348559],[-10863,1506],[-1053,-6641]],[[2522540,3343424],[-2785,323]],[[2626440,3950222],[-7101,-15565]],[[2566821,3795309],[6297,291]],[[2559814,3734374],[29,8824],[6979,36149],[-1,15962]],[[2575815,4212445],[-19,24281],[-2115,38]],[[2573681,4236764],[655,32842],[4626,-332]],[[2613679,4319715],[-11,-16503]],[[2605092,4319164],[8587,551]],[[2551517,3416143],[-6456,12522],[-4209,-300]],[[2540486,3353077],[3193,-6897],[3660,6491]],[[2547317,3286148],[-7122,-4376],[-962,-6849]],[[2591358,3438230],[-4080,9665]],[[2614628,4091795],[-8228,-197]],[[2606977,4145996],[10080,-48]],[[2496402,3445895],[161,30158]],[[2498062,3475971],[1899,285]],[[2588406,4171954],[10611,582]],[[2596908,4117917],[-8418,-201]],[[2576065,4032365],[810,24582]],[[2586077,4062709],[2130,274]],[[2378522,5404893],[-52,-39909],[-935,-1018],[423,-63834]],[[2377958,5300132],[-392,-16212]],[[2377566,5283920],[-15720,94],[917,22577]],[[2362763,5306591],[401,2253],[-435,96543],[15793,-494]],[[2398864,4917080],[132,2]],[[2398996,4917082],[10098,-227]],[[2409094,4916855],[-297,-64940]],[[2408797,4851915],[-9935,-19]],[[2398862,4851896],[2,65184]],[[2671640,3436964],[-705,19765]],[[2617370,3928245],[47,-41642]],[[2607150,3870661],[-26,13580],[-3132,10862],[-14,14726]],[[2554290,3788164],[448,-42012]],[[2547785,3738028],[345,50701]],[[2573382,3327933],[-1882,-33892],[-3099,-20308]],[[2576158,3855730],[26,-24635]],[[2566821,3795309],[-1548,5432]],[[2565273,3800741],[19,52802]],[[2578467,3263987],[-4107,-20977],[-2268,2021]],[[2564699,4220604],[-47,16313]],[[2564652,4236917],[9029,-153]],[[2522352,3305753],[188,37671]],[[2605497,4029124],[9243,99]],[[2603896,3968874],[63,41026]],[[2340528,5212200],[2,-2718]],[[2340530,5209482],[-17241,195]],[[2323289,5209677],[-314,65046]],[[2322975,5274723],[17382,-128]],[[2340357,5274595],[171,-62395]],[[2619246,3931198],[-125,-4937],[7510,-429]],[[2368118,5172079],[-3408,40457]],[[2364710,5212536],[-2266,8752],[16415,33]],[[2378859,5221321],[126,-49133]],[[2378985,5172188],[-10867,-109]],[[2564611,4269409],[0,0]],[[2564611,4269409],[-44,9]],[[2564652,4236917],[-41,32492]],[[2597962,3790979],[-3700,28116],[-7,16330]],[[2586324,3942671],[1034,29],[142,-42532]],[[2586569,3886000],[-10431,-288]],[[2576145,3926542],[16,16417]],[[2614455,4368176],[-776,-48461]],[[2603968,4327476],[899,46430]],[[2509649,3325330],[-260,-48900]],[[2497597,3304355],[2795,45302],[1275,-939]],[[2552706,4454233],[2805,-15178],[5595,-3495]],[[2561106,4435560],[105,-71526]],[[2620973,4303351],[7548,888]],[[2610651,4202522],[6253,-20]],[[2598281,3894675],[2590,13675]],[[2558480,3803264],[6793,-2523]],[[2600775,3957209],[-1721,-5172],[-6121,1753]],[[2561106,4435560],[8076,16262]],[[2651976,3282478],[-1734,-9782],[-162,-22330]],[[2650080,3250366],[-1921,-8418],[-3501,4094],[-1911,-11680]],[[2515888,2335654],[-6620,-6958],[-5801,-12129],[-1379,13028]],[[2512082,2299409],[0,0]],[[2507220,2302979],[0,0]],[[2410794,2181013],[-9935,25249],[-7038,11893],[-6919,-1550],[-7430,-6159],[-2676,-8557]],[[2376796,2201889],[-2361,23994],[1903,8655]],[[2371082,2799068],[3,25855]],[[2775927,3790974],[-7906,15935]],[[2808631,3874616],[2963,-17732]],[[2815422,3815483],[-3529,-15229],[-1831,7775]],[[2839551,3670429],[-8362,29507]],[[2831189,3699936],[0,0]],[[2831189,3699936],[-2828,2423]],[[2778023,3685517],[2561,8259],[2246,25005],[2576,1575]],[[2811614,3625474],[12128,-19397]],[[2724634,3490419],[-9033,2521]],[[2716451,3497389],[1144,5016]],[[2736361,3508558],[504,-3995]],[[2737212,3488015],[-12578,2404]],[[2780648,3484183],[-3551,-102]],[[2865052,3485907],[-4967,12]],[[2860085,3485919],[948,49451],[1034,9642]],[[2870370,3485903],[-5318,4]],[[2860291,3556723],[2134,-5890]],[[2862425,3550833],[17,11]],[[2860085,3485919],[-1396,-32]],[[2858689,3485887],[-10428,303]],[[2279900,2219842],[-9295,52657]],[[2315649,2208874],[219,-23408],[-1785,-228]],[[2332483,2649960],[-488,-44264],[2224,-22692],[2132,-8003],[459,-17055]],[[2252547,2266909],[-3243,-18799]],[[2772065,3733165],[4691,40155]],[[2863886,3668738],[2062,-3657],[997,-22646],[-844,-14389],[-3599,16892]],[[2280176,2047173],[-3104,11453],[-4382,-20950]],[[2883098,3657500],[-3704,-32014],[-64,-18529],[-2953,-15554],[-1775,825],[-1541,25980],[2454,54701]],[[2216237,2242513],[11810,-2357],[7223,-21276]],[[2282700,1899778],[2171,-3656],[3113,10318],[-5,-13145],[-3035,-26106]],[[2294518,1945172],[-227,-8680]],[[2294291,1936492],[-299,-10413]],[[2293992,1926079],[-3475,-17447],[-2593,11384]],[[2293752,1917692],[-46,-1645]],[[2293706,1916047],[-71,746]],[[2293635,1916793],[117,899]],[[2293435,1906380],[-653,-9452]],[[2292782,1896928],[-5348,-41907]],[[2287144,1856135],[1927,25709],[4364,24536]],[[2159724,3148443],[176,81508]],[[2267009,2010484],[2273,-23617],[3854,-5168],[131,-11037],[4969,-12465]],[[2265917,1918548],[249,1229],[-7828,89763],[2354,5102]],[[2344328,2526656],[3831,18943]],[[2356626,2458008],[-7829,16401]],[[2376796,2201889],[-4553,-1710],[-9828,-22466]],[[2233211,2537580],[4026,-13738],[4193,-635],[2848,-15149],[882,-17925]],[[2211967,2314209],[12605,-757]],[[2290264,2899266],[-12238,2629]],[[2348617,2352179],[529,8995],[-3770,6547],[-2504,19414],[-2223,2528],[117,16451],[-1922,8021]],[[2190666,2977739],[37,89554]],[[2298297,2017249],[2514,-22792],[4494,-26195],[-7486,-20005],[-2627,14068]],[[2298871,2019015],[-305,-590]],[[2299707,2020625],[-822,-1585]],[[2300284,2020750],[-207,368]],[[2300385,2019605],[-98,1131]],[[2300410,2018800],[-25,805]],[[2300464,2017286],[-8,32]],[[2300456,2017318],[-45,1455]],[[2307564,2005587],[-4598,-13511],[-2430,24924]],[[2305991,1957712],[-70,1346]],[[2305921,1959058],[165,1573]],[[2293435,1906380],[368,8649]],[[2293803,1915029],[-97,1018]],[[2293752,1917692],[62,474]],[[2293814,1918166],[4290,9828],[2269,14018],[5103,7730],[-6232,-21303],[-6462,-31511]],[[2294291,1936492],[-299,-10413]],[[2294445,1950106],[35,-1637]],[[2294441,1950322],[2,-122]],[[2294430,1950830],[8,-388]],[[2294429,1951119],[1,-289]],[[2294416,1953674],[0,-2]],[[2294423,1953894],[-6,-191]],[[2294941,1961403],[-134,-1382]],[[2295046,1961827],[-105,-424]],[[2923741,4242844],[-62,-3354]],[[2923421,4235852],[-790,-6844]],[[2922333,4227029],[898,-10627]],[[2923258,4216332],[31,-80]],[[1929523,2927608],[3468,-17296],[2976,20273],[4598,12909]],[[1951193,2713919],[-37265,221]],[[1952974,2509210],[-39287,61]],[[3042882,4994595],[-3058,-4141],[-60,-19371],[-2425,372]],[[3037339,4971455],[-3051,-5293]],[[3034288,4966162],[-1166,20717],[-6404,10787],[-2909,31517],[-4296,-11868],[-1516,52702],[1220,859],[-1529,48060]],[[3017688,5118936],[1476,29191],[4098,-8890],[-2316,19980],[824,13782],[3772,19438]],[[3025542,5192437],[3742,-98048],[3474,-6383],[3746,3462],[1365,-33895],[-545,-18071],[2693,2579],[1033,-35010],[1832,-12476]],[[3025542,5192437],[4716,12548],[-930,11307],[4397,17871],[-1621,23927],[2252,23656],[-1491,7505],[2300,27375],[4207,15960],[925,29368]],[[3048714,5362060],[-208,-111776],[2285,-21131],[-1608,-3361],[-2256,-28689],[2291,-13509],[-2143,-14566],[4429,-99543],[7392,11702]],[[3061372,5015387],[-3646,4653],[-2063,-10086]],[[3055663,5009954],[-4497,1399],[762,-23043],[-9046,6285]],[[3010745,5124609],[3708,5443],[1458,-16929],[1777,5813]],[[3034288,4966162],[-2652,-46454],[-4067,-33445]],[[3027569,4886263],[-3734,5586],[-285,20425],[-5502,-17585],[2964,-21577],[-1883,-27639]],[[3019129,4845473],[-5743,-4126]],[[2969777,5068984],[18297,-10]],[[3057392,4941653],[-2695,2784]],[[3054697,4944437],[3075,21377],[80,34308],[-2189,9832]],[[3074483,4968501],[-5189,-8468],[656,-20934],[-1942,-12206]],[[3068008,4926893],[-2592,1217],[-4102,20404],[-3922,-6861]],[[3069722,4927422],[1771,23705],[-372,-25410],[-1399,1705]],[[3047681,4906340],[2826,-3171],[184,29430],[2863,-3489],[1143,15327]],[[3057392,4941653],[101,-21960],[1904,-244],[1550,-27112],[-2603,-18706]],[[3058344,4873631],[-6372,-28270],[-2610,2128]],[[3049362,4847489],[-1275,12791],[1213,21230],[-3161,3618],[1542,21212]],[[3059542,4836818],[0,0]],[[3019129,4845473],[3614,-4951],[-177,-14375],[3055,917],[1615,-20409],[3862,-13356]],[[3031098,4793299],[103,-17477],[-3239,-19052],[-1930,-651],[-1130,-21508],[-3563,-30321]],[[3068008,4926893],[-2013,-27068],[664,-24497],[-2623,3214],[-2470,-12989],[-3222,8078]],[[3078233,4894455],[0,0]],[[3071217,4852756],[0,0]],[[3070348,4901381],[3331,13756],[1526,-21856],[-3328,-6935],[-1529,15035]],[[3049362,4847489],[-4380,-22495],[-901,13535]],[[3044081,4838529],[846,31388],[-3331,-5551],[-1606,11338]],[[3039990,4875704],[802,27863]],[[3040792,4903567],[3000,-3156],[1164,11299],[2725,-5370]],[[3039990,4875704],[-2274,-12906],[-5559,24538],[-1351,-9613],[-3237,8540]],[[3037339,4971455],[1495,-52606],[1958,-15282]],[[3044081,4838529],[-4289,-7300],[617,22589],[-3443,-12550],[-3070,-21839],[1562,-20563],[-4360,-5567]],[[3037652,4821557],[0,0]],[[3037156,4834634],[0,0]],[[3037079,4829265],[0,0]],[[3036529,4833768],[0,0]],[[3036170,4821776],[0,0]],[[3035064,4813220],[0,0]],[[3034983,4817773],[0,0]],[[2398737,3930948],[-265,-44017]],[[2355068,3580660],[15565,-1624]],[[2404165,4195708],[9,8078],[-14254,-543]],[[2408720,4058607],[-424,-54028]],[[2463615,3986328],[1634,-54259]],[[2414208,3837284],[2555,-469],[-138,-15720],[5961,-1086]],[[2416685,3761169],[-3057,216],[-2471,27777],[-2541,9600]],[[2479636,3690124],[1,-8271]],[[2338786,4239835],[603,-59294]],[[2391663,3535750],[-1049,81],[127,32792],[-7597,621]],[[2383179,3588400],[15146,-1770]],[[2395059,3648119],[-12222,1913]],[[2382837,3650032],[143,27189]],[[2370825,3624324],[-830,11083]],[[2382837,3650032],[-130,-27218]],[[2343221,4155907],[12179,-743]],[[2497104,3545624],[-4786,-1890]],[[2354673,4238502],[935,-34562]],[[2429558,3868934],[-3371,-7458],[-4331,16114]],[[1562354,5759981],[0,0]],[[1558659,5740552],[4301,4647],[3633,17315],[4881,-9642],[-1656,-42844],[-8830,11134],[-2329,19390]],[[1557725,5757917],[0,0]],[[1581131,5587397],[4589,47158],[-3715,17959],[-847,19228]],[[1581158,5671742],[-286,4426]],[[1580872,5676168],[768,8497]],[[1583029,5632957],[0,0]],[[1676250,5621854],[247,-3453]],[[1581158,5671742],[-3247,-17710],[-528,21692],[3489,444]],[[1570726,5671555],[4464,34443],[2894,-21318],[-2611,118],[-1918,-13914],[3983,-23852],[4156,-11619],[711,-15203],[-2237,-7208],[-4912,21762],[-282,23970],[-4248,12821]],[[1533715,5403259],[252,13768],[6382,15131],[-8109,13581],[-2370,49822],[-2314,12778],[-954,33326]],[[1572625,5461157],[3091,13968],[1762,21230],[3045,5444]],[[1576957,5517246],[-35,-22050],[-4583,-29510],[-3657,24292],[1102,18270]],[[1549057,5303109],[-5022,5720]],[[1624178,5816191],[23695,-160],[32431,166]],[[1578179,3702574],[-337,13607],[2983,5729],[447,-19300]],[[1578095,3723910],[-485,486]],[[1578707,3724771],[-251,-352]],[[1578900,3725910],[1,-55]],[[1578901,3725855],[-74,-1327]],[[1578827,3724528],[-20,41]],[[1580435,3732866],[3,-4]],[[1580438,3732862],[73,-3225]],[[1583005,3716619],[-50,535]],[[1581649,3725506],[0,0]],[[1597455,3542073],[-3330,23866],[-4901,-4156],[-5210,28333]],[[1535788,4131796],[-2414,19183],[-7044,29425],[-1287,33150],[2233,33383],[4768,48598],[1286,28470],[-1292,21497],[1436,16220],[1155,43998]],[[1584747,3768447],[-3812,16950]],[[2813500,3231122],[3342,637],[4195,-8650],[1638,5850]],[[2825557,3197223],[1544,-6523]],[[2827101,3190700],[681,-9344],[-825,-37969]],[[2826957,3143387],[-12054,249]],[[2836150,3349013],[4919,-16131]],[[2840612,3274095],[-1839,-12846],[-3748,-1924]],[[2826401,3317764],[1092,4691]],[[2827493,3322455],[7554,29121],[1103,-2563]],[[2374245,4965732],[-87,-20918],[-2205,-19783]],[[2371953,4925031],[-1213,-15944],[-8815,20671]],[[2361925,4929758],[-3342,16435],[-8050,19541]],[[2350533,4965734],[4358,-116]],[[2354891,4965618],[19354,114]],[[2328979,5535355],[-14303,-141]],[[2314676,5535214],[-21767,-29]],[[2284612,5661386],[17994,166]],[[2303116,5622149],[13,-21744],[3605,-18],[27,-16290],[14336,110],[10,16346],[3557,71],[-13,16322]],[[2328202,5616602],[777,-81247]],[[2816257,3305253],[6718,20]],[[2435515,4851609],[12434,25]],[[2315103,4852009],[16435,-217]],[[2331814,4851800],[-54,-65007]],[[2378985,5172188],[6929,-165]],[[2385914,5172023],[18,-26947]],[[2385932,5145076],[-59,-31654]],[[2385873,5113422],[-264,175]],[[2385609,5113597],[-1608,8516],[-4938,487],[-8099,23984]],[[2370964,5146584],[-2846,25495]],[[2809503,3432671],[823,7503],[-1294,44466]],[[2820849,3484801],[51,-7079]],[[2305265,5816136],[490,-85291]],[[2305755,5730845],[-21607,-64]],[[2282327,5816244],[22938,-108]],[[2362006,4900605],[-13679,-127]],[[2341391,4916767],[36,16233],[6720,113],[13,40401]],[[2348160,4973514],[2373,-7780]],[[2361925,4929758],[81,-29153]],[[2681993,3322618],[-2172,21124]],[[2692533,3378675],[2693,-29877]],[[2695226,3348798],[-2948,-2783],[-8146,-21994],[-2139,-1403]],[[2293284,5177144],[16227,-112]],[[2309511,5177032],[326,-32355],[3463,-126]],[[2313674,5100505],[-5011,13158],[-4722,4109]],[[2392300,4982074],[-5,-13468],[6748,-23]],[[2399043,4968583],[-47,-51501]],[[2398864,4917080],[-10048,-63]],[[2388816,4917017],[-3306,-75]],[[2385510,4916942],[25,65070]],[[2378753,4851801],[-13356,-2]],[[2362002,4851818],[4,48787]],[[2371953,4925031],[6792,36],[2,-8151]],[[2378747,4916916],[6,-65115]],[[2665302,3194415],[-4931,31256],[-2183,-811]],[[2658188,3224860],[991,17311]],[[2659179,3242171],[627,5806]],[[2659806,3247977],[9482,9656]],[[2669288,3257633],[6438,-61833]],[[2680958,3250307],[2475,4973],[2418,19557]],[[2678513,3200833],[2445,49474]],[[2804225,3415649],[-412,52234],[1512,16507]],[[2749549,3334712],[-4809,19259],[-2121,1351]],[[2743022,3392420],[5483,-857]],[[2351022,5128474],[136,-81235]],[[2351158,5047239],[-13661,-148]],[[2337497,5047091],[57,48867]],[[2337311,5144649],[3440,-22]],[[2340751,5144627],[10275,86],[-4,-16239]],[[2822836,3357997],[2142,-7365],[2515,-28177]],[[2378747,4916916],[6763,26]],[[2388816,4917017],[-2,-65187]],[[2388814,4851830],[-6733,5]],[[2382081,4851835],[-3328,-34]],[[2783037,3428499],[208,-68709]],[[2775082,3353541],[14,10524]],[[2775364,3428026],[7,1356]],[[2775371,3429382],[7666,-883]],[[2861138,3453612],[-1052,24801]],[[2860086,3478413],[7251,-25986],[1261,-14750]],[[2868598,3437677],[3529,-26883],[-3334,-4839],[-2629,12286]],[[2783037,3428499],[2876,-328]],[[2785913,3428171],[5654,-553]],[[2841335,3485113],[1251,-13513],[-2485,-42538]],[[2840101,3429062],[-2313,-14672]],[[2348339,4851826],[138,1]],[[2397882,5608724],[-427,32935],[224,104775]],[[2397679,5746434],[10041,-16529],[2594,671],[-2163,-14948],[5720,-2833],[3826,-42624],[2792,5256],[208,19971],[5768,800],[1356,-17554],[5804,-11711]],[[2433625,5666933],[288,-122795],[-171,-113642]],[[2433742,5430496],[-8359,-28420],[2195,-15231]],[[2419862,5378767],[-263,18872],[-21170,452]],[[2398429,5398091],[155,48641]],[[2348160,4973514],[-6475,13816],[-7299,23680]],[[2334386,5011010],[-3417,10101]],[[2330969,5021111],[-1,25868],[6529,112]],[[2351158,5047239],[7127,37]],[[2358405,5014497],[-3661,-95],[147,-48784]],[[2399571,5090620],[31,32376]],[[2405659,5019831],[-5682,4870],[-392,22286]],[[2398862,4851896],[-99,-4]],[[2398763,4851892],[-9949,-62]],[[2351022,5128474],[10574,113],[3420,-8005]],[[2365016,5120582],[132,-56991]],[[2334878,5730078],[-7238,-248]],[[2327640,5729830],[-21885,1015]],[[2305265,5816136],[30244,-227]],[[2748256,3230126],[5853,59690]],[[2754109,3289816],[3136,260]],[[2760234,3222458],[-5618,9931]],[[2309511,5177032],[-28,32624]],[[2309483,5209656],[13806,21]],[[2323289,5209677],[309,-65066]],[[2877483,3485940],[2611,-59752]],[[2880094,3426188],[-586,-783]],[[2879508,3425405],[-2941,47690],[-3325,4002],[2673,-26512],[3425,-46633],[-1878,2721],[-2552,24032]],[[2874910,3430705],[-2624,19560],[-7234,35642]],[[2315538,5095924],[8349,-40434]],[[2323887,5055490],[-3076,-8308],[-44,-16181],[-16785,42]],[[2309145,5258656],[338,-49000]],[[2293154,5469953],[17983,126]],[[2311696,5388976],[65,-16311],[-3029,10]],[[2725161,3344754],[5348,5775],[917,-9484]],[[2735588,3298214],[-16002,3930]],[[2650741,3193284],[4130,28049],[3317,3527]],[[2385831,5204882],[-122,46321],[2385,-73],[18,32305]],[[2388112,5283435],[10530,773]],[[2398642,5284208],[-33,-33109],[-2446,-43],[30,-46859]],[[2396193,5204197],[-10362,685]],[[2721176,3427826],[-1899,-23000]],[[2711864,3403731],[-2719,19603],[-250,13259]],[[2714175,3456083],[7001,-28257]],[[2313971,4998271],[-9992,162]],[[2323887,5055490],[7082,-34379]],[[2334386,5011010],[-6,-29345],[-6531,101]],[[2327849,4981766],[-256,16403],[-13622,102]],[[2327640,5729830],[238,-68501]],[[2431953,4916385],[-6161,-33],[-3,-16068]],[[2425789,4900284],[-6672,141],[0,16158],[-6461,160]],[[2412656,4916743],[4,32495],[3346,-44],[10,16259],[5245,-168]],[[2314676,5535214],[16,-65011]],[[2707468,3230748],[15,13176],[-5092,28042],[-3062,-2732]],[[2699179,3282873],[2725,11603]],[[2701904,3294476],[4631,4490]],[[2706535,3298966],[0,0]],[[2706535,3298966],[4977,4328]],[[2715185,3304199],[-293,-41665],[-1817,-33074]],[[2799938,2998065],[2570,21668],[368,16101],[3408,-1276],[1346,12318],[3337,2115],[2567,26333]],[[2813534,3075324],[3689,-4724]],[[2817223,3070600],[2181,-18605],[399,-56850]],[[2819803,2995145],[-637,-14100],[-6061,11409],[-5746,-2306],[-4377,-9515]],[[2768763,3291408],[5945,680]],[[2780444,3292632],[572,-17639],[4073,-21859]],[[2785089,3253134],[-1108,-7269],[3537,-14217]],[[2787475,3228277],[-3684,6833],[-2937,-9162],[-3451,-22205]],[[2810916,3083327],[2618,-8003]],[[2793775,3098845],[5407,-2478],[6452,-17361],[5282,4321]],[[2378764,5063311],[153,19332],[6692,30954]],[[2385873,5113422],[2484,-6256],[5464,-33054]],[[2395169,5046535],[-4209,-18204]],[[2385643,5030798],[-7,16328],[-6863,-118],[-9,16303]],[[2735392,3458023],[-3560,7268],[-4420,-14053]],[[2727412,3451238],[-2778,39181]],[[2854529,3434671],[-158,3625]],[[2854371,3438296],[3815,10421]],[[2862304,3396961],[-4572,-12954],[-2801,7009],[-1253,19509],[851,24146]],[[2398773,4786617],[-10,65275]],[[2408797,4851915],[6698,-2707]],[[2340751,5144627],[-221,64855]],[[2340528,5212200],[13812,100]],[[2354340,5212300],[10370,236]],[[2370964,5146584],[-1176,-14271],[-4772,-11731]],[[2398642,5284208],[-27,48880]],[[2398615,5333088],[21230,-383]],[[2834698,3383775],[1678,-18639],[-226,-16123]],[[2351904,5323605],[2172,-3729]],[[2354076,5319876],[264,-107576]],[[2340357,5274595],[-270,49062]],[[2340087,5323657],[11817,-52]],[[2455221,5528817],[-241,135425]],[[2454980,5664242],[4076,10726],[3450,-27609],[17524,2523],[7283,-23550],[1433,5457],[9210,-107],[-13514,-34442],[-15680,-23858],[-5540,-14733],[-8001,-29832]],[[2754109,3289816],[-12309,789]],[[2360294,5760156],[4619,-383],[560,-8506],[11155,-4498],[1381,-21226],[9109,5555],[89,8632],[7157,9478],[3315,-2774]],[[2360621,5600104],[-283,97615]],[[2795871,3484248],[-159,-57233]],[[2785913,3428171],[440,56082]],[[2309167,5274941],[13808,-218]],[[2836788,3396799],[3386,-13060],[783,-14168],[3754,2563],[1087,-15727],[2389,6912],[1036,-15704],[1426,13885],[1932,-3950]],[[2852581,3357550],[-2348,-29839]],[[2848258,3484642],[-441,-26719],[4727,-9056],[1827,-10571]],[[2854529,3434671],[-815,-6181]],[[2853714,3428490],[-13613,572]],[[2880094,3426188],[6695,-83134],[-4065,38662],[-1246,1724],[-1970,41965]],[[2880760,3230342],[-121,2697]],[[2880639,3233039],[6074,13709],[2148,60598],[-1874,-67901],[-6227,-9103]],[[2877404,3304752],[-872,16145],[-3138,20]],[[2873394,3320917],[1853,54417],[4591,-4533],[1923,-45225],[-1723,-21462],[-2634,638]],[[2872542,3320194],[-45,164]],[[2872497,3320358],[74,454]],[[2872571,3320812],[-29,-618]],[[2881390,3370843],[2276,-5624],[582,-18045],[-2858,23669]],[[2780468,3165443],[-143,20059],[-2922,18241]],[[2853714,3428490],[-890,-18061],[1664,-37808]],[[2854488,3372621],[-1907,-15071]],[[2329065,5470136],[-86,65219]],[[2328182,5632811],[9855,-112],[-1356,-17709],[2344,-9883],[292,-86059]],[[2339317,5519048],[391,-48714]],[[2817223,3070600],[5765,10780],[2984,-18089]],[[2825972,3063291],[-3157,-24352],[-3012,-43794]],[[2863603,3372502],[8446,9041],[1330,-13525],[-1361,-12599],[747,-30526]],[[2872765,3324893],[-194,-4081]],[[2872497,3320358],[-2719,6854],[-1970,-19606],[-2328,2070],[795,15286],[-3509,1264]],[[2862766,3326226],[837,46276]],[[2378859,5221321],[-138,30019],[-1154,106],[-1,32474]],[[2377958,5300132],[10187,602],[-33,-17299]],[[2385831,5204882],[83,-32859]],[[2848828,3243131],[-1846,-9849],[93,-28688]],[[2847075,3204594],[-528,-7995],[5976,-15827],[2151,7772]],[[2843401,3158757],[-547,49754],[-2175,2398],[-7960,27627]],[[2761575,3484395],[-230,-53372]],[[2650080,3250366],[1959,-14085],[3179,7202],[3961,-1312]],[[2671669,3325915],[2724,-26922],[-824,-7000]],[[2673569,3291993],[-4606,-8648],[325,-25712]],[[2659806,3247977],[2632,29096],[-10228,4844]],[[2360684,5525048],[-3,-6176],[-7072,-314]],[[2353609,5518558],[-14292,490]],[[2371990,5014552],[3395,-80],[3360,-14363]],[[2374778,4981927],[-533,-16195]],[[2872542,3320194],[852,723]],[[2877404,3304752],[-2111,-9055],[-2223,-23564],[-3273,-14940],[-9552,7996],[-2803,25752],[3304,8772]],[[2856002,3327680],[6764,-1454]],[[2880760,3230342],[-5441,-14995],[-1093,2798],[6413,14894]],[[2810916,3083327],[2223,12259],[-2174,16603]],[[2826957,3143387],[2908,-45454],[1622,-6984]],[[2831487,3090949],[-5515,-27658]],[[2858689,3485887],[1397,-7474]],[[2854488,3372621],[4565,-243],[3630,7538],[920,-7414]],[[2708182,3375262],[-1060,-8972]],[[2856874,3258781],[3465,-4322],[407,-9890],[-3696,-36189],[-5600,-19372],[-4375,15586]],[[2727412,3451238],[-2814,-1811],[-678,-14542],[-2744,-7059]],[[2737757,3393284],[248,33813]],[[2331534,4916935],[-3650,-77]],[[2327884,4916858],[-35,64908]],[[2339860,5388936],[227,-65279]],[[2313971,4998271],[400,-81210]],[[2314371,4917061],[-10425,31]],[[2398615,5333088],[-186,65003]],[[2378522,5404893],[22,42587]],[[2399598,5144509],[-13666,567]],[[2378764,5063311],[-6823,139]],[[2791038,3293276],[-5949,-40142]],[[2797189,3396187],[5642,-9253]],[[2798314,3292835],[-5703,11977]],[[2874910,3430705],[-1605,-12970],[-4707,19942]],[[2425789,4900284],[6,-48647]],[[2409094,4916855],[3562,-112]],[[2382081,4851835],[-7,-65223]],[[2681993,3322618],[3257,-20862],[-933,-18007],[1557,-8833]],[[2680958,3250307],[-7389,41686]],[[2399043,4968583],[4,8138],[6874,5170],[1688,32077]],[[2695226,3348798],[1687,-1400],[2027,-19871]],[[2698940,3327527],[-429,-21175],[3393,-11876]],[[2354076,5319876],[3308,-8588],[3063,5421],[2316,-10118]],[[2719492,3301331],[2263,-27112]],[[2721755,3274219],[3767,-29835],[-187,-18110]],[[2841298,3155424],[-1554,19119],[-4063,3658],[-3770,11786],[-4810,713]],[[2735717,3270702],[-13962,3517]],[[2433625,5666933],[2321,-697],[4123,-29093],[8828,7559],[6083,19540]],[[2455221,5528817],[-9325,-48333],[-12154,-49988]],[[2314371,4917061],[412,-35]],[[2314783,4917026],[-23,-65023]],[[2339880,5405235],[10472,-145]],[[2350352,5405090],[223,-76691],[1329,-4794]],[[2702903,3349992],[-1132,-12263]],[[2701771,3337729],[0,0]],[[2701771,3337729],[-2831,-10202]],[[2314783,4917026],[13101,-168]],[[2842775,3128172],[-11288,-37223]],[[2775371,3429382],[589,54692]],[[2725325,3382207],[8344,9210]],[[2350352,5405090],[3544,-42],[-287,113510]],[[2859052,3985090],[-159,-802]],[[3007477,4446360],[-657,5360]],[[3148377,99743],[125,492]],[[3148502,100235],[26,-1700]],[[2943839,4308699],[195,-768]],[[2944034,4307931],[408,-860]],[[2944442,4307071],[753,-525]],[[2945385,4305592],[29,-1552]],[[615078,7666900],[-1289,-3797]],[[611763,7659394],[-728,-1159]],[[596935,7636090],[-2168,-5170]],[[593213,7627679],[-5048,-8242]],[[1299633,7239527],[-1956,5456]],[[2923231,4216402],[424,-1103]],[[1578717,3731740],[184,-5885]],[[1578827,3724528],[-120,243]],[[1578707,3724771],[-612,-861]],[[1578095,3723910],[-506,506]],[[1580170,3733290],[268,-428]],[[3017452,4436370],[-27,93]],[[2701635,1655697],[-1202,-108]],[[2700433,1655589],[-320,2261]],[[2690790,1863677],[31,-4810]],[[2686092,1813818],[-72,3666]],[[2494233,2288317],[-106,-542]],[[2493728,2285742],[-445,-3786]],[[2493283,2281956],[-340,-1445]],[[2492943,2280511],[-152,-48]],[[2492791,2280463],[-98,-397]],[[2492693,2280066],[-112,-3136]],[[2492581,2276930],[-43,-2904]],[[2492538,2274026],[-412,-1034]],[[2492126,2272992],[-402,-263]],[[2491724,2272729],[-405,-1203]],[[2491319,2271526],[-99,-952]],[[2491220,2270574],[-15,-1475]],[[2491205,2269099],[425,-4040]],[[2491630,2265059],[-2,-353]],[[2491397,2263999],[-241,-73]],[[2491156,2263926],[-368,1973]],[[2490788,2265899],[-465,1780]],[[2489785,2268290],[-1004,-382]],[[2488781,2267908],[-596,-3591]],[[2488185,2264317],[-406,-3055]],[[2482905,2145271],[-36,-2457]],[[2482869,2142814],[-130,-1274]],[[2482712,2140690],[127,-3634]],[[2481517,2104436],[-273,-1441]],[[2447247,2129841],[488,1059]],[[2447735,2130900],[422,3456]],[[2448157,2134356],[65,2819]],[[2448222,2137175],[122,2312]],[[2448438,2140233],[487,1618]],[[2448925,2141851],[295,400]],[[2449778,2148846],[117,1658]],[[2449958,2151410],[-151,2173]],[[2449807,2153583],[-104,725]],[[2449133,2155170],[-462,1110]],[[2448671,2156280],[-51,2836]],[[2448620,2159116],[-156,1920]],[[2862425,3550833],[556,393]],[[2837807,3853734],[-269,-1635]],[[2358043,2174253],[-353,564]],[[2357618,2176060],[-451,3065]],[[2356401,2179729],[-228,-926]],[[2355746,2177687],[-902,-1593]],[[2354844,2176094],[-1831,-2812]],[[2351646,2171050],[-474,-233]],[[2351172,2170817],[-306,195]],[[2350866,2171012],[-341,1017]],[[2350525,2172029],[-270,3240]],[[2345183,2200812],[-912,-4773]],[[2344271,2196039],[-175,-1790]],[[2344096,2194249],[-110,-1936]],[[2343986,2192313],[59,-1921]],[[2344045,2190392],[686,-3576]],[[2344731,2186816],[172,-1637]],[[2344903,2185179],[-175,-1907]],[[2344208,2180109],[-250,-2952]],[[2343958,2177157],[-45,-675]],[[2343913,2176482],[1,-56]],[[2343914,2176426],[85,-2731]],[[2343999,2173695],[434,-3537]],[[2345579,2167148],[1365,-1531]],[[2306012,1957303],[-91,1755]],[[2305921,1959058],[216,2057]],[[2300536,2017000],[-80,318]],[[2300456,2017318],[-71,2287]],[[2300385,2019605],[-99,1143]],[[2300286,2020748],[-269,476]],[[2300017,2021224],[-1451,-2799]],[[2295153,1962261],[-212,-858]],[[2294941,1961403],[-397,-4095]],[[2294544,1957308],[-128,-3620]],[[2294416,1953688],[14,-2858]],[[2294430,1950830],[100,-4764]],[[2284916,1866623],[-241,-951]],[[2284378,1863099],[-823,-9239]],[[2283555,1853860],[-71,-1333]],[[2283484,1852527],[-269,-381]],[[2283215,1852146],[-354,0]],[[2282861,1852146],[-312,381]],[[2282549,1852527],[-123,297]],[[2282426,1852824],[-60,653]],[[2282366,1853477],[0,702]],[[2281981,1858813],[-42,1333]],[[2281939,1860146],[-227,2096]],[[2281712,1862242],[-340,763]],[[2281372,1863005],[-298,284]],[[2281074,1863289],[-595,-665]],[[2280479,1862624],[-837,-1905]],[[2279642,1860719],[-822,-3430]],[[2278664,1857480],[-29,-131]],[[2293803,1915029],[-168,1764]],[[2293635,1916793],[179,1373]],[[2872765,3324893],[-223,-4699]]],"transform":{"scale":[0.00003589258458925845,0.000005342569134256913],"translate":[-179.14733999999999,17.926875]}};
/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 */

(function($, undefined){

	"use strict";

	$.widget("ui.rangeSliderMouseTouch", $.ui.mouse, {
		enabled: true,

		_mouseInit: function(){
			var that = this;
			$.ui.mouse.prototype._mouseInit.apply(this);
			this._mouseDownEvent = false;

			this.element.bind('touchstart.' + this.widgetName, function(event) {
				return that._touchStart(event);
			});
		},

		_mouseDestroy: function(){
			$(document)
				.unbind('touchmove.' + this.widgetName, this._touchMoveDelegate)
				.unbind('touchend.' + this.widgetName, this._touchEndDelegate);

			$.ui.mouse.prototype._mouseDestroy.apply(this);
		},

		enable: function(){
			this.enabled = true;
		},

		disable: function(){
			this.enabled = false;
		},

		destroy: function(){
			this._mouseDestroy();

			$.ui.mouse.prototype.destroy.apply(this);

			this._mouseInit = null;
		},

		_touchStart: function(event){
			if (!this.enabled) return false;

			event.which = 1;
			event.preventDefault();

			this._fillTouchEvent(event);

			var that = this,
				downEvent = this._mouseDownEvent;

			this._mouseDown(event);

			if (downEvent !== this._mouseDownEvent){

				this._touchEndDelegate = function(event){
					that._touchEnd(event);
				}

				this._touchMoveDelegate = function(event){
					that._touchMove(event);
				}

				$(document)
				.bind('touchmove.' + this.widgetName, this._touchMoveDelegate)
				.bind('touchend.' + this.widgetName, this._touchEndDelegate);
			}
		},

		_mouseDown: function(event){
			if (!this.enabled) return false;

			return $.ui.mouse.prototype._mouseDown.apply(this, [event]);
		},

		_touchEnd: function(event){
			this._fillTouchEvent(event);
			this._mouseUp(event);

			$(document)
			.unbind('touchmove.' + this.widgetName, this._touchMoveDelegate)
			.unbind('touchend.' + this.widgetName, this._touchEndDelegate);

		this._mouseDownEvent = false;

		// No other choice to reinitialize mouseHandled
		$(document).trigger("mouseup");
		},

		_touchMove: function(event){
			event.preventDefault();
			this._fillTouchEvent(event);

			return this._mouseMove(event);
		},

		_fillTouchEvent: function(event){
			var touch;

			if (typeof event.targetTouches === "undefined" && typeof event.changedTouches === "undefined"){
				touch = event.originalEvent.targetTouches[0] || event.originalEvent.changedTouches[0];
			} else {
				touch = event.targetTouches[0] || event.changedTouches[0];
			}

			event.pageX = touch.pageX;
			event.pageY = touch.pageY;

			event.which = 1; // [~] fixes touch events for jquery-ui.1.11.x.mouse
		}
	});
}(jQuery));

/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 */

(function($, undefined){
	"use strict";

	$.widget("ui.rangeSliderDraggable", $.ui.rangeSliderMouseTouch, {
		cache: null,

		options: {
			containment: null
		},

		_create: function(){
			$.ui.rangeSliderMouseTouch.prototype._create.apply(this);

			setTimeout($.proxy(this._initElementIfNotDestroyed, this), 10);
		},

		destroy: function(){
			this.cache = null;
			
			$.ui.rangeSliderMouseTouch.prototype.destroy.apply(this);
		},

		_initElementIfNotDestroyed: function(){
			if (this._mouseInit){
				this._initElement();
			}
		},

		_initElement: function(){
			this._mouseInit();
			this._cache();
		},

		_setOption: function(key, value){
			if (key === "containment"){
				if (value === null || $(value).length === 0){
					this.options.containment = null
				}else{
					this.options.containment = $(value);
				}
			}
		},

		/*
		 * UI mouse widget
		 */

		_mouseStart: function(event){
			this._cache();
			this.cache.click = {
					left: event.pageX,
					top: event.pageY
			};

			this.cache.initialOffset = this.element.offset();

			this._triggerMouseEvent("mousestart");

			return true;
		},

		_mouseDrag: function(event){
			var position = event.pageX - this.cache.click.left;

			position = this._constraintPosition(position + this.cache.initialOffset.left);

			this._applyPosition(position);

			this._triggerMouseEvent("sliderDrag");

			return false;
		},

		_mouseStop: function(){
			this._triggerMouseEvent("stop");
		},

		/*
		 * To be overriden
		 */

		_constraintPosition: function(position){
			if (this.element.parent().length !== 0 && this.cache.parent.offset !== null){
				position = Math.min(position, 
					this.cache.parent.offset.left + this.cache.parent.width - this.cache.width.outer);
				position = Math.max(position, this.cache.parent.offset.left);
			}

			return position;
		},

		_applyPosition: function(position){
			var offset = {
				top: this.cache.offset.top,
				left: position
			}

			this.element.offset({left:position});

			this.cache.offset = offset;
		},

		/*
		 * Private utils
		 */

		_cacheIfNecessary: function(){
			if (this.cache === null){
				this._cache();
			}
		},

		_cache: function(){
			this.cache = {};

			this._cacheMargins();
			this._cacheParent();
			this._cacheDimensions();

			this.cache.offset = this.element.offset();
		},

		_cacheMargins: function(){
			this.cache.margin = {
				left: this._parsePixels(this.element, "marginLeft"),
				right: this._parsePixels(this.element, "marginRight"),
				top: this._parsePixels(this.element, "marginTop"),
				bottom: this._parsePixels(this.element, "marginBottom")
			};
		},

		_cacheParent: function(){
			if (this.options.parent !== null){
				var container = this.element.parent();

				this.cache.parent = {
					offset: container.offset(),
					width: container.width()
				}
			}else{
				this.cache.parent = null;
			}
		},

		_cacheDimensions: function(){
			this.cache.width = {
				outer: this.element.outerWidth(),
				inner: this.element.width()
			}
		},

		_parsePixels: function(element, string){
			return parseInt(element.css(string), 10) || 0;
		},

		_triggerMouseEvent: function(event){
			var data = this._prepareEventData();

			this.element.trigger(event, data);
		},

		_prepareEventData: function(){
			return {
				element: this.element,
				offset: this.cache.offset || null
			};
		}
	});

}(jQuery));
/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */


 (function($, undefined){
	"use strict";

	$.widget("ui.rangeSliderHandle", $.ui.rangeSliderDraggable, {
		currentMove: null,
		margin: 0,
		parentElement: null,

		options: {
			isLeft: true,
			bounds: {min:0, max:100},
			range: false,
			value: 0,
			step: false
		},

		_value: 0,
		_left: 0,

		_create: function(){
			$.ui.rangeSliderDraggable.prototype._create.apply(this);

			this.element
				.css("position", "absolute")
				.css("top", 0)
				.addClass("ui-rangeSlider-handle")
				.toggleClass("ui-rangeSlider-leftHandle", this.options.isLeft)
				.toggleClass("ui-rangeSlider-rightHandle", !this.options.isLeft);

			this.element.append("<div class='ui-rangeSlider-handle-inner' />");

			this._value = this._constraintValue(this.options.value);
		},

		destroy: function(){
			this.element.empty();	

			$.ui.rangeSliderDraggable.prototype.destroy.apply(this);			
		},

		_setOption: function(key, value){
			if (key === "isLeft" && (value === true || value === false) && value !== this.options.isLeft){
				this.options.isLeft = value;

				this.element
					.toggleClass("ui-rangeSlider-leftHandle", this.options.isLeft)
					.toggleClass("ui-rangeSlider-rightHandle", !this.options.isLeft);

				this._position(this._value);

				this.element.trigger("switch", this.options.isLeft);
			} else if (key === "step" && this._checkStep(value)){
				this.options.step = value;
				this.update();
			} else if (key === "bounds"){
				this.options.bounds = value;
				this.update();
			}else if (key === "range" && this._checkRange(value)){
				this.options.range = value;
				this.update();
			}else if (key === "symmetricPositionning"){
				this.options.symmetricPositionning = value === true;
				this.update();
			}

			$.ui.rangeSliderDraggable.prototype._setOption.apply(this, [key, value]);
		},

		_checkRange: function(range){
			return range === false || (!this._isValidValue(range.min) && !this._isValidValue(range.max));
		},

		_isValidValue: function(value){
			return typeof value !== "undefined" && value !== false && parseFloat(value) !== value;
		},

		_checkStep: function(step){
			return (step === false || parseFloat(step) === step);
		},

		_initElement: function(){
			$.ui.rangeSliderDraggable.prototype._initElement.apply(this);
			
			if (this.cache.parent.width === 0 || this.cache.parent.width === null){
				setTimeout($.proxy(this._initElementIfNotDestroyed, this), 500);
			}else{
				this._position(this._value);
				this._triggerMouseEvent("initialize");
			}
		},

		_bounds: function(){
			return this.options.bounds;
		},

		/*
		 * From draggable
		 */

		_cache: function(){
			$.ui.rangeSliderDraggable.prototype._cache.apply(this);

			this._cacheParent();
		},

		_cacheParent: function(){
			var parent = this.element.parent();

			this.cache.parent = {
				element: parent,
				offset: parent.offset(),
				padding: {
					left: this._parsePixels(parent, "paddingLeft")
				},
				width: parent.width()
			}
		},

		_position: function(value){
			var left = this._getPositionForValue(value);

			this._applyPosition(left);
		},

		_constraintPosition: function(position){
			var value = this._getValueForPosition(position);

			return this._getPositionForValue(value);
		},

		_applyPosition: function(left){
			$.ui.rangeSliderDraggable.prototype._applyPosition.apply(this, [left]);

			this._left = left;
			this._setValue(this._getValueForPosition(left));
			this._triggerMouseEvent("moving");
		},

		_prepareEventData: function(){
			var data = $.ui.rangeSliderDraggable.prototype._prepareEventData.apply(this);

			data.value = this._value;

			return data;
		},

		/*
		 * Value
		 */
		_setValue: function(value){
			if (value !== this._value){
				this._value = value;
			}
		},

		_constraintValue: function(value){
			value = Math.min(value, this._bounds().max);
			value = Math.max(value, this._bounds().min);
		
			value = this._round(value);

			if (this.options.range !== false){
				var min = this.options.range.min || false,
					max = this.options.range.max || false;

				if (min !== false){
					value = Math.max(value, this._round(min));
				}

				if (max !== false){
					value = Math.min(value, this._round(max));
				}

				value = Math.min(value, this._bounds().max);
				value = Math.max(value, this._bounds().min);
			}

			return value;
		},

		_round: function(value){
			if (this.options.step !== false && this.options.step > 0){
				return Math.round(value / this.options.step) * this.options.step;
			}

			return value;
		},

		_getPositionForValue: function(value){
			if (!this.cache || !this.cache.parent || this.cache.parent.offset === null){
				return 0;
			}

			value = this._constraintValue(value);

			var ratio = (value - this.options.bounds.min) / (this.options.bounds.max - this.options.bounds.min),
				availableWidth = this.cache.parent.width,
				parentPosition = this.cache.parent.offset.left,
				shift = this.options.isLeft ? 0 : this.cache.width.outer;


			if (!this.options.symmetricPositionning){
				return ratio * availableWidth + parentPosition - shift;
			}

			return ratio * (availableWidth - 2 * this.cache.width.outer) + parentPosition + shift;
		},

		_getValueForPosition: function(position){
			var raw = this._getRawValueForPositionAndBounds(position, this.options.bounds.min, this.options.bounds.max);

			return this._constraintValue(raw);
		},

		_getRawValueForPositionAndBounds: function(position, min, max){

			var parentPosition =  this.cache.parent.offset === null ? 0 : this.cache.parent.offset.left,
					availableWidth,
					ratio;

			if (this.options.symmetricPositionning){
				position -= this.options.isLeft ? 0 : this.cache.width.outer;	
				availableWidth = this.cache.parent.width - 2 * this.cache.width.outer;
			}else{
				position += this.options.isLeft ? 0 : this.cache.width.outer;	
				availableWidth = this.cache.parent.width;
			}

			if (availableWidth === 0){
				return this._value;
			}

			ratio = (position - parentPosition) / availableWidth;

			return	ratio * (max - min) + min;
		},

		/*
		 * Public
		 */

		value: function(value){
			if (typeof value !== "undefined"){
				this._cache();

				value = this._constraintValue(value);

				this._position(value);
			}

			return this._value;
		},

		update: function(){
			this._cache();
			var value = this._constraintValue(this._value),
				position = this._getPositionForValue(value);

			if (value !== this._value){
				this._triggerMouseEvent("updating");
				this._position(value);
				this._triggerMouseEvent("update");
			}else if (position !== this.cache.offset.left){
				this._triggerMouseEvent("updating");
				this._position(value);
				this._triggerMouseEvent("update");
			}
		},

		position: function(position){
			if (typeof position !== "undefined"){
				this._cache();
				
				position = this._constraintPosition(position);
				this._applyPosition(position);
			}

			return this._left;
		},

		add: function(value, step){
			return value + step;
		},

		substract: function(value, step){
			return value - step;
		},

		stepsBetween: function(val1, val2){
			if (this.options.step === false){
				return val2 - val1;
			}

			return (val2 - val1) / this.options.step;
		},

		multiplyStep: function(step, factor){
			return step * factor;
		},

		moveRight: function(quantity){
			var previous;

			if (this.options.step === false){
				previous = this._left;
				this.position(this._left + quantity);

				return this._left - previous;
			}
			
			previous = this._value;
			this.value(this.add(previous, this.multiplyStep(this.options.step, quantity)));

			return this.stepsBetween(previous, this._value);
		},

		moveLeft: function(quantity){
			return -this.moveRight(-quantity);
		},

		stepRatio: function(){
			if (this.options.step === false){
				return 1;
			}else{
				var steps = (this.options.bounds.max - this.options.bounds.min) / this.options.step;
				return this.cache.parent.width / steps;
			}
		}
	});
 }(jQuery));

/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */

(function($, undefined){
	"use strict";

	$.widget("ui.rangeSliderBar", $.ui.rangeSliderDraggable, {
		options: {
			leftHandle: null,
			rightHandle: null,
			bounds: {min: 0, max: 100},
			type: "rangeSliderHandle",
			range: false,
			drag: function() {},
			stop: function() {},
			values: {min: 0, max:20},
			wheelSpeed: 4,
			wheelMode: null
		},

		_values: {min: 0, max: 20},
		_waitingToInit: 2,
		_wheelTimeout: false,

		_create: function(){
			$.ui.rangeSliderDraggable.prototype._create.apply(this);

			this.element
				.css("position", "absolute")
				.css("top", 0)
				.addClass("ui-rangeSlider-bar");

			this.options.leftHandle
				.bind("initialize", $.proxy(this._onInitialized, this))
				.bind("mousestart", $.proxy(this._cache, this))
				.bind("stop", $.proxy(this._onHandleStop, this));

			this.options.rightHandle
				.bind("initialize", $.proxy(this._onInitialized, this))
				.bind("mousestart", $.proxy(this._cache, this))
				.bind("stop", $.proxy(this._onHandleStop, this));

			this._bindHandles();

			this._values = this.options.values;
			this._setWheelModeOption(this.options.wheelMode);
		},

		destroy: function(){
			this.options.leftHandle.unbind(".bar");
			this.options.rightHandle.unbind(".bar");
			this.options = null;

			$.ui.rangeSliderDraggable.prototype.destroy.apply(this);
		},

		_setOption: function(key, value){
			if (key === "range"){
				this._setRangeOption(value);
			} else if (key === "wheelSpeed"){
				this._setWheelSpeedOption(value);
			} else if (key === "wheelMode"){
				this._setWheelModeOption(value);
			}
		},

		_setRangeOption: function(value){
			if (typeof value !== "object" || value === null){
				value = false;
			}

			if (value === false && this.options.range === false){
				return;
			}

			if (value !== false){
				var min = valueOrFalse(value.min, this.options.range.min),
					max = valueOrFalse(value.max, this.options.range.max);

				this.options.range = {
					min: min,
					max: max
				};
			}else{
				this.options.range = false;
			}

			this._setLeftRange();
			this._setRightRange();
		},

		_setWheelSpeedOption: function(value){
			if (typeof value === "number" && value > 0){
				this.options.wheelSpeed = value;
			}
		},

		_setWheelModeOption: function(value){
			if (value === null || value === false || value === "zoom" || value === "scroll"){
				if (this.options.wheelMode !== value){
					this.element.parent().unbind("mousewheel.bar");
				}

				this._bindMouseWheel(value);
				this.options.wheelMode = value;
			}
		},

		_bindMouseWheel: function(mode){
			if (mode === "zoom"){
				this.element.parent().bind("mousewheel.bar", $.proxy(this._mouseWheelZoom, this));
			}else if (mode === "scroll"){
				this.element.parent().bind("mousewheel.bar", $.proxy(this._mouseWheelScroll, this));
			}
		},

		_setLeftRange: function(){
			if (this.options.range === false){
				return false;
			}

			var rightValue = this._values.max,
				leftRange = {min: false, max: false};

			if (typeof this.options.range.min !== "undefined" && this.options.range.min !== false){
				leftRange.max = this._leftHandle("substract", rightValue, this.options.range.min);
			}else{
				leftRange.max = false;
			}

			if (typeof this.options.range.max !== "undefined" && this.options.range.max !== false){
				leftRange.min = this._leftHandle("substract", rightValue, this.options.range.max);
			}else{
				leftRange.min = false;
			}

			this._leftHandle("option", "range", leftRange);
		},

		_setRightRange: function(){
			var leftValue = this._values.min,
				rightRange = {min: false, max:false};

			if (typeof this.options.range.min !== "undefined" && this.options.range.min !== false){
				rightRange.min = this._rightHandle("add", leftValue, this.options.range.min);
			}else {
				rightRange.min = false;
			}

			if (typeof this.options.range.max !== "undefined" && this.options.range.max !== false){
				rightRange.max = this._rightHandle("add", leftValue, this.options.range.max);
			}else{
				rightRange.max = false;
			}

			this._rightHandle("option", "range", rightRange);
		},

		_deactivateRange: function(){
			this._leftHandle("option", "range", false);
			this._rightHandle("option", "range", false);
		},

		_reactivateRange: function(){
			this._setRangeOption(this.options.range);
		},

		_onInitialized: function(){
			this._waitingToInit--;

			if (this._waitingToInit === 0){
				this._initMe();
			}
		},

		_initMe: function(){
			this._cache();
			this.min(this._values.min);
			this.max(this._values.max);

			var left = this._leftHandle("position"),
				right = this._rightHandle("position") + this.options.rightHandle.width();

			this.element.offset({
				left: left
			});

			this.element.css("width", right - left);
		},

		_leftHandle: function(){
			return this._handleProxy(this.options.leftHandle, arguments);
		},

		_rightHandle: function(){
			return this._handleProxy(this.options.rightHandle, arguments);
		},

		_handleProxy: function(element, args){
			var array = Array.prototype.slice.call(args);

			return element[this.options.type].apply(element, array);
		},

		/*
		 * Draggable
		 */

		_cache: function(){
			$.ui.rangeSliderDraggable.prototype._cache.apply(this);

			this._cacheHandles();
		},

		_cacheHandles: function(){
			this.cache.rightHandle = {};
			this.cache.rightHandle.width = this.options.rightHandle.width();
			this.cache.rightHandle.offset = this.options.rightHandle.offset();

			this.cache.leftHandle = {};
			this.cache.leftHandle.offset = this.options.leftHandle.offset();
		},

		_mouseStart: function(event){
			$.ui.rangeSliderDraggable.prototype._mouseStart.apply(this, [event]);

			this._deactivateRange();
		},

		_mouseStop: function(event){
			$.ui.rangeSliderDraggable.prototype._mouseStop.apply(this, [event]);

			this._cacheHandles();

			this._values.min = this._leftHandle("value");
			this._values.max = this._rightHandle("value");
			this._reactivateRange();

			this._leftHandle().trigger("stop");
			this._rightHandle().trigger("stop");
		},

		/*
		 * Event binding
		 */

		_onDragLeftHandle: function(event, ui){
			this._cacheIfNecessary();

			if (ui.element[0] !== this.options.leftHandle[0]){
				return;
			}

			if (this._switchedValues()){
				this._switchHandles();
				this._onDragRightHandle(event, ui);
				return;
			}

			this._values.min = ui.value;
			this.cache.offset.left = ui.offset.left;
			this.cache.leftHandle.offset = ui.offset;

			this._positionBar();
		},

		_onDragRightHandle: function(event, ui){
			this._cacheIfNecessary();

			if (ui.element[0] !== this.options.rightHandle[0]){
				return;
			}

			if (this._switchedValues()){
				this._switchHandles();
				this._onDragLeftHandle(event, ui);
				return;
			}

			this._values.max = ui.value;
			this.cache.rightHandle.offset = ui.offset;

			this._positionBar();
		},

		_positionBar: function(){
			var width = this.cache.rightHandle.offset.left + this.cache.rightHandle.width - this.cache.leftHandle.offset.left;
			this.cache.width.inner = width;

			this.element
				.css("width", width)
				.offset({left: this.cache.leftHandle.offset.left});
		},

		_onHandleStop: function(){
			this._setLeftRange();
			this._setRightRange();
		},

		_switchedValues: function(){
			if (this.min() > this.max()){
				var temp = this._values.min;
				this._values.min = this._values.max;
				this._values.max = temp;

				return true;
			}

			return false;
		},

		_switchHandles: function(){
			var temp = this.options.leftHandle;

			this.options.leftHandle = this.options.rightHandle;
			this.options.rightHandle = temp;

			this._leftHandle("option", "isLeft", true);
			this._rightHandle("option", "isLeft", false);

			this._bindHandles();
			this._cacheHandles();
		},

		_bindHandles: function(){
			this.options.leftHandle
				.unbind(".bar")
				.bind("sliderDrag.bar update.bar moving.bar", $.proxy(this._onDragLeftHandle, this));

			this.options.rightHandle
				.unbind(".bar")
				.bind("sliderDrag.bar update.bar moving.bar", $.proxy(this._onDragRightHandle, this));
		},

		_constraintPosition: function(left){
			var position = {},
				right;

			position.left = $.ui.rangeSliderDraggable.prototype._constraintPosition.apply(this, [left]);

			position.left = this._leftHandle("position", position.left);

			right = this._rightHandle("position", position.left + this.cache.width.outer - this.cache.rightHandle.width);
			position.width = right - position.left + this.cache.rightHandle.width;

			return position;
		},

		_applyPosition: function(position){
			$.ui.rangeSliderDraggable.prototype._applyPosition.apply(this, [position.left]);
			this.element.width(position.width);
		},

		/*
		 * Mouse wheel
		 */

		_mouseWheelZoom: function(event, delta, deltaX, deltaY){
			/*jshint maxstatements:17*/
			if (!this.enabled){
				return false;
			}

			var middle = this._values.min + (this._values.max - this._values.min) / 2,
				leftRange = {},
				rightRange = {};

			if (this.options.range === false || this.options.range.min === false){
				leftRange.max = middle;
				rightRange.min = middle;
			} else {
				leftRange.max = middle - this.options.range.min / 2;
				rightRange.min = middle + this.options.range.min / 2;
			}

			if (this.options.range !== false && this.options.range.max !== false){
				leftRange.min = middle - this.options.range.max / 2;
				rightRange.max = middle + this.options.range.max / 2;
			}

			this._leftHandle("option", "range", leftRange);
			this._rightHandle("option", "range", rightRange);

			clearTimeout(this._wheelTimeout);
			this._wheelTimeout = setTimeout($.proxy(this._wheelStop, this), 200);

			this.zoomIn(deltaY * this.options.wheelSpeed);

			return false;
		},

		_mouseWheelScroll: function(event, delta, deltaX, deltaY){
			if (!this.enabled){
				return false;
			}

			if (this._wheelTimeout === false){
				this.startScroll();
			} else {
				clearTimeout(this._wheelTimeout);
			}

			this._wheelTimeout = setTimeout($.proxy(this._wheelStop, this), 200);

			this.scrollLeft(deltaY * this.options.wheelSpeed);
			return false;
		},

		_wheelStop: function(){
			this.stopScroll();
			this._wheelTimeout = false;
		},

		/*
		 * Public
		 */

		min: function(value){
			return this._leftHandle("value", value);
		},

		max: function(value){
			return this._rightHandle("value", value);
		},

		startScroll: function(){
			this._deactivateRange();
		},

		stopScroll: function(){
			this._reactivateRange();
			this._triggerMouseEvent("stop");
			this._leftHandle().trigger("stop");
			this._rightHandle().trigger("stop");
		},

		scrollLeft: function(quantity){
			quantity = quantity || 1;

			if (quantity < 0){
				return this.scrollRight(-quantity);
			}

			quantity = this._leftHandle("moveLeft", quantity);
			this._rightHandle("moveLeft", quantity);

			this.update();
			this._triggerMouseEvent("scroll");
		},

		scrollRight: function(quantity){
			quantity = quantity || 1;

			if (quantity < 0){
				return this.scrollLeft(-quantity);
			}

			quantity = this._rightHandle("moveRight", quantity);
			this._leftHandle("moveRight", quantity);

			this.update();
			this._triggerMouseEvent("scroll");
		},

		zoomIn: function(quantity){
			quantity = quantity || 1;

			if (quantity < 0){
				return this.zoomOut(-quantity);
			}

			var newQuantity = this._rightHandle("moveLeft", quantity);

			if (quantity > newQuantity){
				newQuantity = newQuantity / 2;
				this._rightHandle("moveRight", newQuantity);
			}

			this._leftHandle("moveRight", newQuantity);

			this.update();
			this._triggerMouseEvent("zoom");
		},

		zoomOut: function(quantity){
			quantity = quantity || 1;

			if (quantity < 0){
				return this.zoomIn(-quantity);
			}

			var newQuantity = this._rightHandle("moveRight", quantity);

			if (quantity > newQuantity){
				newQuantity = newQuantity / 2;
				this._rightHandle("moveLeft", newQuantity);
			}

			this._leftHandle("moveLeft", newQuantity);

			this.update();
			this._triggerMouseEvent("zoom");
		},

		values: function(min, max){
			if (typeof min !== "undefined" && typeof max !== "undefined")
			{
				var minValue = Math.min(min, max),
					maxValue = Math.max(min, max);

				this._deactivateRange();
				this.options.leftHandle.unbind(".bar");
				this.options.rightHandle.unbind(".bar");

				this._values.min = this._leftHandle("value", minValue);
				this._values.max = this._rightHandle("value", maxValue);

				this._bindHandles();
				this._reactivateRange();

				this.update();
			}

			return {
				min: this._values.min,
				max: this._values.max
			};
		},

		update: function(){
			this._values.min = this.min();
			this._values.max = this.max();

			this._cache();
			this._positionBar();
		}
	});

	function valueOrFalse(value, defaultValue){
		if (typeof value === "undefined"){
			return defaultValue || false;
		}

		return value;
	}

}(jQuery));

/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */

(function($, undefined){
	
	"use strict";

	$.widget("ui.rangeSliderLabel", $.ui.rangeSliderMouseTouch, {
		options: {
			handle: null,
			formatter: false,
			handleType: "rangeSliderHandle",
			show: "show",
			durationIn: 0,
			durationOut: 500,
			delayOut: 500,
			isLeft: false
		},

		cache: null,
		_positionner: null,
		_valueContainer:null,
		_innerElement:null,
		_value: null,

		_create: function(){
			this.options.isLeft = this._handle("option", "isLeft");

			this.element
				.addClass("ui-rangeSlider-label")
				.css("position", "absolute")
				.css("display", "block");

			this._createElements();

			this._toggleClass();

			this.options.handle
				.bind("moving.label", $.proxy(this._onMoving, this))
				.bind("update.label", $.proxy(this._onUpdate, this))
				.bind("switch.label", $.proxy(this._onSwitch, this));

			if (this.options.show !== "show"){
				this.element.hide();
			}

			this._mouseInit();
		},

		destroy: function(){
			this.options.handle.unbind(".label");
			this.options.handle = null;

			this._valueContainer = null;
			this._innerElement = null;
			this.element.empty();

			if (this._positionner) {
				this._positionner.Destroy();
				this._positionner = null;
			}

			$.ui.rangeSliderMouseTouch.prototype.destroy.apply(this);
		},

		_createElements: function(){
			this._valueContainer = $("<div class='ui-rangeSlider-label-value' />")
				.appendTo(this.element);

			this._innerElement = $("<div class='ui-rangeSlider-label-inner' />")
				.appendTo(this.element);
		},

		_handle: function(){
			var args = Array.prototype.slice.apply(arguments);

			return this.options.handle[this.options.handleType].apply(this.options.handle, args);
		},

		_setOption: function(key, value){
			if (key === "show"){
				this._updateShowOption(value);
			} else if (key === "durationIn" || key === "durationOut" || key === "delayOut"){
				this._updateDurations(key, value);
			}

			this._setFormatterOption(key, value);
		},

		_setFormatterOption: function(key, value){
			if (key === "formatter"){
				if (typeof value === "function" || value === false){
					this.options.formatter = value;
					this._display(this._value);
				}
			}
		},

		_updateShowOption: function(value){
			this.options.show = value;

			if (this.options.show !== "show"){
				this.element.hide();
				this._positionner.moving = false;
			}else{
				this.element.show();
				this._display(this.options.handle[this.options.handleType]("value"));
				this._positionner.PositionLabels();
			}
			
			this._positionner.options.show = this.options.show;
		},

		_updateDurations: function(key, value){
			if (parseInt(value, 10) !== value) return;

			this._positionner.options[key] = value;
			this.options[key] = value;
		},

		_display: function(value){
			if (this.options.formatter === false){
				this._displayText(Math.round(value));
			}else{
				this._displayText(this.options.formatter(value));
			}

			this._value = value;
		},

		_displayText: function(text){
			this._valueContainer.text(text);
		},

		_toggleClass: function(){
			this.element.toggleClass("ui-rangeSlider-leftLabel", this.options.isLeft)
				.toggleClass("ui-rangeSlider-rightLabel", !this.options.isLeft);
		},

		_positionLabels: function(){
			this._positionner.PositionLabels();
		},

		/*
		 * Mouse touch redirection
		 */
		_mouseDown: function(event){
			this.options.handle.trigger(event);
		},

		_mouseUp: function(event){
			this.options.handle.trigger(event);
		},

		_mouseMove: function(event){
			this.options.handle.trigger(event);
		},

		/*
		 * Event binding
		 */
		_onMoving: function(event, ui){
			this._display(ui.value);
		},

		_onUpdate: function(){
			if (this.options.show === "show"){
				this.update();
			}
		},

		_onSwitch: function(event, isLeft){
			this.options.isLeft = isLeft;
			
			this._toggleClass();
			this._positionLabels();
		},

		/*
		 * Label pair
		 */
		pair: function(label){
			if (this._positionner !== null) return;

			this._positionner = new LabelPositioner(this.element, label, this.widgetName, {
				show: this.options.show,
				durationIn: this.options.durationIn,
				durationOut: this.options.durationOut,
				delayOut: this.options.delayOut
			});

			label[this.widgetName]("positionner", this._positionner);
		},

		positionner: function(pos){
			if (typeof pos !== "undefined"){
				this._positionner = pos;
			}

			return this._positionner;
		},

		update: function(){
			this._positionner.cache = null;
			this._display(this._handle("value"));

			if (this.options.show === "show"){
				this._positionLabels();
			}
		}
	});

	function LabelPositioner(label1, label2, type, options){
		/*jshint maxstatements:40 */

		this.label1 = label1;
		this.label2 = label2;
		this.type = type;
		this.options = options;
		this.handle1 = this.label1[this.type]("option", "handle");
		this.handle2 = this.label2[this.type]("option", "handle");
		this.cache = null;
		this.left = label1;
		this.right = label2;
		this.moving = false;
		this.initialized = false;
		this.updating = false;

		this.Init = function(){
			this.BindHandle(this.handle1);
			this.BindHandle(this.handle2);

			if (this.options.show === "show"){
				setTimeout($.proxy(this.PositionLabels, this), 1);
				this.initialized = true;
			}else{
				setTimeout($.proxy(this.AfterInit, this), 1000);
			}

			this._resizeProxy = $.proxy(this.onWindowResize, this);

			$(window).resize(this._resizeProxy);
		}

		this.Destroy = function(){
			if (this._resizeProxy){
				$(window).unbind("resize", this._resizeProxy);
				this._resizeProxy = null;

				this.handle1.unbind(".positionner");
				this.handle1 = null;

				this.handle2.unbind(".positionner");
				this.handle2 = null;

				this.label1 = null;
				this.label2 = null;
				this.left = null;
				this.right = null;
			}
			
			this.cache = null;			
		}

		this.AfterInit = function () {
			this.initialized = true;
		}

		this.Cache = function(){
			if (this.label1.css("display") === "none"){
				return;
			}

			this.cache = {};
			this.cache.label1 = {};
			this.cache.label2 = {};
			this.cache.handle1 = {};
			this.cache.handle2 = {};
			this.cache.offsetParent = {};

			this.CacheElement(this.label1, this.cache.label1);
			this.CacheElement(this.label2, this.cache.label2);
			this.CacheElement(this.handle1, this.cache.handle1);
			this.CacheElement(this.handle2, this.cache.handle2);
			this.CacheElement(this.label1.offsetParent(), this.cache.offsetParent);
		}

		this.CacheIfNecessary = function(){
			if (this.cache === null){
				this.Cache();
			}else{
				this.CacheWidth(this.label1, this.cache.label1);
				this.CacheWidth(this.label2, this.cache.label2);
				this.CacheHeight(this.label1, this.cache.label1);
				this.CacheHeight(this.label2, this.cache.label2);
				this.CacheWidth(this.label1.offsetParent(), this.cache.offsetParent);
			}
		}

		this.CacheElement = function(label, cache){
			this.CacheWidth(label, cache);
			this.CacheHeight(label, cache);

			cache.offset = label.offset();
			cache.margin = {
				left: this.ParsePixels("marginLeft", label),
				right: this.ParsePixels("marginRight", label)
			};

			cache.border = {
				left: this.ParsePixels("borderLeftWidth", label),
				right: this.ParsePixels("borderRightWidth", label)
			};
		}

		this.CacheWidth = function(label, cache){
			cache.width = label.width();
			cache.outerWidth = label.outerWidth();
		}

		this.CacheHeight = function(label, cache){
			cache.outerHeightMargin = label.outerHeight(true);
		}

		this.ParsePixels = function(name, element){
			return parseInt(element.css(name), 10) || 0;
		}

		this.BindHandle = function(handle){
			handle.bind("updating.positionner", $.proxy(this.onHandleUpdating, this));
			handle.bind("update.positionner", $.proxy(this.onHandleUpdated, this));
			handle.bind("moving.positionner", $.proxy(this.onHandleMoving, this));
			handle.bind("stop.positionner", $.proxy(this.onHandleStop, this));
		}

		this.PositionLabels = function(){
			this.CacheIfNecessary();

			if (this.cache === null){
				return;
			}

			var label1Pos = this.GetRawPosition(this.cache.label1, this.cache.handle1),
				label2Pos = this.GetRawPosition(this.cache.label2, this.cache.handle2);

			if (this.label1[type]("option", "isLeft")){
				this.ConstraintPositions(label1Pos, label2Pos);
			}else{
				this.ConstraintPositions(label2Pos, label1Pos);
			}

			this.PositionLabel(this.label1, label1Pos.left, this.cache.label1);
			this.PositionLabel(this.label2, label2Pos.left, this.cache.label2);
		}

		this.PositionLabel = function(label, leftOffset, cache){
			var parentShift = this.cache.offsetParent.offset.left + this.cache.offsetParent.border.left,
					parentRightPosition,
					labelRightPosition,
					rightPosition;

			if ((parentShift - leftOffset) >= 0){
				label.css("right", "");
				label.offset({left: leftOffset});
			}else{
				parentRightPosition = parentShift + this.cache.offsetParent.width;
				labelRightPosition = leftOffset + cache.margin.left + cache.outerWidth + cache.margin.right;
				rightPosition = parentRightPosition - labelRightPosition;

				label.css("left", "");
				label.css("right", rightPosition);
			}
		}

		this.ConstraintPositions = function(pos1, pos2){
			if ((pos1.center < pos2.center && pos1.outerRight > pos2.outerLeft) || (pos1.center > pos2.center && pos2.outerRight > pos1.outerLeft)){
				pos1 = this.getLeftPosition(pos1, pos2);
				pos2 = this.getRightPosition(pos1, pos2);
			}
		}

		this.getLeftPosition = function(left, right){
			var center = (right.center + left.center) / 2,
				leftPos = center - left.cache.outerWidth - left.cache.margin.right + left.cache.border.left;

			left.left = leftPos;

			return left;
		}

		this.getRightPosition = function(left, right){
			var center = (right.center + left.center) / 2;

			right.left = center + right.cache.margin.left + right.cache.border.left;

			return right;
		}

		this.ShowIfNecessary = function(){
			if (this.options.show === "show" || this.moving || !this.initialized || this.updating) return;

			this.label1.stop(true, true).fadeIn(this.options.durationIn || 0);
			this.label2.stop(true, true).fadeIn(this.options.durationIn || 0);
			this.moving = true;
		}

		this.HideIfNeeded = function(){
			if (this.moving === true){
				this.label1.stop(true, true).delay(this.options.delayOut || 0).fadeOut(this.options.durationOut || 0);
				this.label2.stop(true, true).delay(this.options.delayOut || 0).fadeOut(this.options.durationOut || 0);
				this.moving = false;
			}
		}

		this.onHandleMoving = function(event, ui){
			this.ShowIfNecessary();
			this.CacheIfNecessary();
			this.UpdateHandlePosition(ui);

			this.PositionLabels();
		}

		this.onHandleUpdating = function(){
			this.updating = true;
		}

		this.onHandleUpdated = function(){
			this.updating = false;
			this.cache = null;
		}

		this.onHandleStop = function(){
			this.HideIfNeeded();
		}

		this.onWindowResize = function(){
				this.cache = null;
		}

		this.UpdateHandlePosition = function(ui){
			if (this.cache === null) return;
			
			if (ui.element[0] === this.handle1[0]){
				this.UpdatePosition(ui, this.cache.handle1);
			}else{
				this.UpdatePosition(ui, this.cache.handle2);
			}
		}

		this.UpdatePosition = function(element, cache){
			cache.offset = element.offset;
			cache.value = element.value;
		}

		this.GetRawPosition = function(labelCache, handleCache){
			var handleCenter = handleCache.offset.left + handleCache.outerWidth / 2,
				labelLeft = handleCenter - labelCache.outerWidth / 2,
				labelRight = labelLeft + labelCache.outerWidth - labelCache.border.left - labelCache.border.right,
				outerLeft = labelLeft - labelCache.margin.left - labelCache.border.left,
				top = handleCache.offset.top - labelCache.outerHeightMargin;

			return {
				left: labelLeft,
				outerLeft: outerLeft,
				top: top,
				right: labelRight,
				outerRight: outerLeft + labelCache.outerWidth + labelCache.margin.left + labelCache.margin.right,
				cache: labelCache,
				center: handleCenter
			}
		}

		this.Init();
	}

}(jQuery));



/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */

(function ($, undefined) {
	"use strict";

	$.widget("ui.rangeSlider", {
		options: {
			bounds: {min:0, max:100},
			defaultValues: {min:20, max:50},
			wheelMode: null,
			wheelSpeed: 4,
			arrows: true,
			valueLabels: "show",
			formatter: null,
			durationIn: 0,
			durationOut: 400,
			delayOut: 200,
			range: {min: false, max: false},
			step: false,
			scales: false,
			enabled: true,
			symmetricPositionning: false
		},

		_values: null,
		_valuesChanged: false,
		_initialized: false,

		// Created elements
		bar: null,
		leftHandle: null,
		rightHandle: null,
		innerBar: null,
		container: null,
		arrows: null,
		labels: null,
		changing: {min:false, max:false},
		changed: {min:false, max:false},
		ruler: null,

		_create: function(){
			this._setDefaultValues();

			this.labels = {left: null, right:null, leftDisplayed:true, rightDisplayed:true};
			this.arrows = {left:null, right:null};
			this.changing = {min:false, max:false};
			this.changed = {min:false, max:false};

			this._createElements();

			this._bindResize();

			setTimeout($.proxy(this.resize, this), 1);
			setTimeout($.proxy(this._initValues, this), 1);
		},

		_setDefaultValues: function(){
			this._values = {
				min: this.options.defaultValues.min,
				max: this.options.defaultValues.max
			};
		},

		_bindResize: function(){
			var that = this;

			this._resizeProxy = function(e){
				that.resize(e);
			};

			$(window).resize(this._resizeProxy);
		},

		_initWidth: function(){
			this.container.css("width", this.element.width() - this.container.outerWidth(true) + this.container.width());
			this.innerBar.css("width", this.container.width() - this.innerBar.outerWidth(true) + this.innerBar.width());
		},

		_initValues: function(){
			this._initialized = true;
			this.values(this._values.min, this._values.max);
		},

		_setOption: function(key, value) {
			this._setWheelOption(key, value);		
			this._setArrowsOption(key, value);
			this._setLabelsOption(key, value);
			this._setLabelsDurations(key, value);
			this._setFormatterOption(key, value);
			this._setBoundsOption(key, value);
			this._setRangeOption(key, value);
			this._setStepOption(key, value);
			this._setScalesOption(key, value);
			this._setEnabledOption(key, value);
			this._setPositionningOption(key, value);
		},

		_validProperty: function(object, name, defaultValue){
			if (object === null || typeof object[name] === "undefined"){
				return defaultValue;
			}

			return object[name];
		},

		_setStepOption: function(key, value){
			if (key === "step"){
				this.options.step = value;
				this._leftHandle("option", "step", value);
				this._rightHandle("option", "step", value);
				this._changed(true);
			}
		},

		_setScalesOption: function(key, value){
			if (key === "scales"){
				if (value === false || value === null){
					this.options.scales = false;
					this._destroyRuler();
				}else if (value instanceof Array){
					this.options.scales = value;
					this._updateRuler();
				}
			}
		},

		_setRangeOption: function(key, value){
			if (key === "range"){
				this._bar("option", "range", value);
				this.options.range = this._bar("option", "range");
				this._changed(true);
			}
		},

		_setBoundsOption: function(key, value){
			if (key === "bounds" && typeof value.min !== "undefined" && typeof value.max !== "undefined"){
				this.bounds(value.min, value.max);
			}
		},

		_setWheelOption: function(key, value){
			if (key === "wheelMode" || key === "wheelSpeed"){
				this._bar("option", key, value);
				this.options[key] = this._bar("option", key);
			}
		},

		_setLabelsOption: function(key, value){
			if (key === "valueLabels"){
				if (value !== "hide" && value !== "show" && value !== "change"){
					return;
				}

				this.options.valueLabels = value;

				if (value !== "hide"){
					this._createLabels();
					this._leftLabel("update");
					this._rightLabel("update");
				}else{
					this._destroyLabels();
				}
			}
		},

		_setFormatterOption: function(key, value){
			if (key === "formatter" && value !== null && typeof value === "function"){
				if (this.options.valueLabels !== "hide"){
					this._leftLabel("option", "formatter", value);
					this.options.formatter = this._rightLabel("option", "formatter", value);
				}
			}
		},

		_setArrowsOption: function(key, value){
			if (key === "arrows" && (value === true || value === false) && value !== this.options.arrows){
				if (value === true){
					this.element
						.removeClass("ui-rangeSlider-noArrow")
						.addClass("ui-rangeSlider-withArrows");
					this.arrows.left.css("display", "block");
					this.arrows.right.css("display", "block");
					this.options.arrows = true;
				}else if (value === false){
					this.element
						.addClass("ui-rangeSlider-noArrow")
						.removeClass("ui-rangeSlider-withArrows");
					this.arrows.left.css("display", "none");
					this.arrows.right.css("display", "none");
					this.options.arrows = false;
				}

				this._initWidth();
			}
		},

		_setLabelsDurations: function(key, value){
			if (key === "durationIn" || key === "durationOut" || key === "delayOut"){
				if (parseInt(value, 10) !== value) return;

				if (this.labels.left !== null){
					this._leftLabel("option", key, value);
				}

				if (this.labels.right !== null){
					this._rightLabel("option", key, value);
				}

				this.options[key] = value;
			}
		},

		_setEnabledOption: function(key, value){
			if (key === "enabled"){
				this.toggle(value);
			}
		},

		_setPositionningOption: function(key, value){
			if (key === "symmetricPositionning"){
				this._rightHandle("option", key, value);
				this.options[key] = this._leftHandle("option", key, value);
			}
		},

		_createElements: function(){
			if (this.element.css("position") !== "absolute"){
				this.element.css("position", "relative");
			}

			this.element.addClass("ui-rangeSlider");

			this.container = $("<div class='ui-rangeSlider-container' />")
				.css("position", "absolute")
				.appendTo(this.element);
			
			this.innerBar = $("<div class='ui-rangeSlider-innerBar' />")
				.css("position", "absolute")
				.css("top", 0)
				.css("left", 0);

			this._createHandles();
			this._createBar();
			this.container.prepend(this.innerBar);
			this._createArrows();

			if (this.options.valueLabels !== "hide"){
				this._createLabels();
			}else{
				this._destroyLabels();
			}

			this._updateRuler();

			if (!this.options.enabled) this._toggle(this.options.enabled);
		},

		_createHandle: function(options){
			return $("<div />")[this._handleType()](options)
				.bind("sliderDrag", $.proxy(this._changing, this))
				.bind("stop", $.proxy(this._changed, this));
		},

		_createHandles: function(){
			this.leftHandle = this._createHandle({
					isLeft: true,
					bounds: this.options.bounds,
					value: this._values.min,
					step: this.options.step,
					symmetricPositionning: this.options.symmetricPositionning
			}).appendTo(this.container);
	
			this.rightHandle = this._createHandle({
				isLeft: false,
				bounds: this.options.bounds,
				value: this._values.max,
				step: this.options.step,
				symmetricPositionning: this.options.symmetricPositionning
			}).appendTo(this.container);
		},
		
		_createBar: function(){
			this.bar = $("<div />")
				.prependTo(this.container)
				.bind("sliderDrag scroll zoom", $.proxy(this._changing, this))
				.bind("stop", $.proxy(this._changed, this));
			
			this._bar({
					leftHandle: this.leftHandle,
					rightHandle: this.rightHandle,
					values: {min: this._values.min, max: this._values.max},
					type: this._handleType(),
					range: this.options.range,
					wheelMode: this.options.wheelMode,
					wheelSpeed: this.options.wheelSpeed
				});

			this.options.range = this._bar("option", "range");
			this.options.wheelMode = this._bar("option", "wheelMode");
			this.options.wheelSpeed = this._bar("option", "wheelSpeed");
		},

		_createArrows: function(){
			this.arrows.left = this._createArrow("left");
			this.arrows.right = this._createArrow("right");

			if (!this.options.arrows){
				this.arrows.left.css("display", "none");
				this.arrows.right.css("display", "none");
				this.element.addClass("ui-rangeSlider-noArrow");
			}else{
				this.element.addClass("ui-rangeSlider-withArrows");
			}
		},

		_createArrow: function(whichOne){
			var arrow = $("<div class='ui-rangeSlider-arrow' />")
				.append("<div class='ui-rangeSlider-arrow-inner' />")
				.addClass("ui-rangeSlider-" + whichOne + "Arrow")
				.css("position", "absolute")
				.css(whichOne, 0)
				.appendTo(this.element),
				target;

			if (whichOne === "right"){
				target = $.proxy(this._scrollRightClick, this);
			}else{
				target = $.proxy(this._scrollLeftClick, this);
			}

			arrow.bind("mousedown touchstart", target);

			return arrow;
		},

		_proxy: function(element, type, args){
			var array = Array.prototype.slice.call(args);

			if (element && element[type]){
				return element[type].apply(element, array);	
			}

			return null;
		},

		_handleType: function(){
			return "rangeSliderHandle";
		},

		_barType: function(){
			return "rangeSliderBar";
		},

		_bar: function(){
			return this._proxy(this.bar, this._barType(), arguments);
		},

		_labelType: function(){
			return "rangeSliderLabel";
		},

		_leftLabel: function(){
			return this._proxy(this.labels.left, this._labelType(), arguments);
		},

		_rightLabel: function(){
			return this._proxy(this.labels.right, this._labelType(), arguments);
		},

		_leftHandle: function(){
			return this._proxy(this.leftHandle, this._handleType(), arguments);
		},

		_rightHandle: function(){
			return this._proxy(this.rightHandle, this._handleType(), arguments);
		},

		_getValue: function(position, handle){
			if (handle === this.rightHandle){	
				position = position - handle.outerWidth();
			}
			
			return position * (this.options.bounds.max - this.options.bounds.min) / (this.container.innerWidth() - handle.outerWidth(true)) + this.options.bounds.min;
		},

		_trigger: function(eventName){
			var that = this;

			setTimeout(function(){
				that.element.trigger(eventName, {
						label: that.element,
						values: that.values()
					});
			}, 1);
		},

		_changing: function(){
			if(this._updateValues()){
				this._trigger("valuesChanging");
				this._valuesChanged = true;
			}
		},

		_deactivateLabels: function(){
			if (this.options.valueLabels === "change"){
				this._leftLabel("option", "show", "hide");
				this._rightLabel("option", "show", "hide");
			}
		},

		_reactivateLabels: function(){
			if (this.options.valueLabels === "change"){
				this._leftLabel("option", "show", "change");
				this._rightLabel("option", "show", "change");
			}
		},

		_changed: function(isAutomatic){
			if (isAutomatic === true){
				this._deactivateLabels();
			}

			if (this._updateValues() || this._valuesChanged){
				this._trigger("valuesChanged");

				if (isAutomatic !== true){
					this._trigger("userValuesChanged");					
				}

				this._valuesChanged = false;
			}

			if (isAutomatic === true){
				this._reactivateLabels();
			}
		},

		_updateValues: function(){
			var left = this._leftHandle("value"),
				right = this._rightHandle("value"),
				min = this._min(left, right),
				max = this._max(left, right),
				changing = (min !== this._values.min || max !== this._values.max);

			this._values.min = this._min(left, right);
			this._values.max = this._max(left, right);

			return changing;
		},

		_min: function(value1, value2){
			return Math.min(value1, value2);
		},

		_max: function(value1, value2){
			return Math.max(value1, value2);
		},

		/*
		 * Value labels
		 */
		_createLabel: function(label, handle){
			var params;

			if (label === null){
				params = this._getLabelConstructorParameters(label, handle);
				label = $("<div />")
					.appendTo(this.element)[this._labelType()](params);
			}else{
				params = this._getLabelRefreshParameters(label, handle);

				label[this._labelType()](params);
			}

			return label;
		},

		_getLabelConstructorParameters: function(label, handle){
			return {
				handle: handle,
				handleType: this._handleType(),
				formatter: this._getFormatter(),
				show: this.options.valueLabels,
				durationIn: this.options.durationIn,
				durationOut: this.options.durationOut,
				delayOut: this.options.delayOut
			};
		},

		_getLabelRefreshParameters: function(){
			return {
				formatter: this._getFormatter(),
				show: this.options.valueLabels,
				durationIn: this.options.durationIn,
				durationOut: this.options.durationOut,
				delayOut: this.options.delayOut
			};
		},

		_getFormatter: function(){
			if (this.options.formatter === false || this.options.formatter === null){
				return this._defaultFormatter;
			}

			return this.options.formatter;
		},

		_defaultFormatter: function(value){
			return Math.round(value);
		},

		_destroyLabel: function(label){
			if (label !== null){
				label[this._labelType()]("destroy");
				label.remove();
				label = null;
			}

			return label;
		},

		_createLabels: function(){
			this.labels.left = this._createLabel(this.labels.left, this.leftHandle);
			this.labels.right = this._createLabel(this.labels.right, this.rightHandle);

			this._leftLabel("pair", this.labels.right);
		},

		_destroyLabels: function(){
			this.labels.left = this._destroyLabel(this.labels.left);
			this.labels.right = this._destroyLabel(this.labels.right);
		},

		/*
		 * Scrolling
		 */
		_stepRatio: function(){
			return this._leftHandle("stepRatio");
		},

		_scrollRightClick: function(e){
			if (!this.options.enabled) return false;

			e.preventDefault();
			this._bar("startScroll");
			this._bindStopScroll();

			this._continueScrolling("scrollRight", 4 * this._stepRatio(), 1);
		},

		_continueScrolling: function(action, timeout, quantity, timesBeforeSpeedingUp){
			if (!this.options.enabled) return false;

			this._bar(action, quantity);
			timesBeforeSpeedingUp = timesBeforeSpeedingUp || 5;
			timesBeforeSpeedingUp--;

			var that = this,
				minTimeout = 16,
				maxQuantity = Math.max(1, 4 / this._stepRatio());

			this._scrollTimeout = setTimeout(function(){
				if (timesBeforeSpeedingUp === 0){
					if (timeout > minTimeout){
						timeout = Math.max(minTimeout, timeout / 1.5);	
					} else {
						quantity = Math.min(maxQuantity, quantity * 2);
					}
					
					timesBeforeSpeedingUp = 5;
				}

				that._continueScrolling(action, timeout, quantity, timesBeforeSpeedingUp);
			}, timeout);
		},

		_scrollLeftClick: function(e){
			if (!this.options.enabled) return false;

			e.preventDefault();

			this._bar("startScroll");
			this._bindStopScroll();

			this._continueScrolling("scrollLeft", 4 * this._stepRatio(), 1);
		},

		_bindStopScroll: function(){
			var that = this;
			this._stopScrollHandle = function(e){
				e.preventDefault();
				that._stopScroll();
			};

			$(document).bind("mouseup touchend", this._stopScrollHandle);
		},

		_stopScroll: function(){
			$(document).unbind("mouseup touchend", this._stopScrollHandle);
			this._stopScrollHandle = null;
			this._bar("stopScroll");
			clearTimeout(this._scrollTimeout);
		},

		/*
		 * Ruler
		 */
		_createRuler: function(){
			this.ruler = $("<div class='ui-rangeSlider-ruler' />").appendTo(this.innerBar);
		},

		_setRulerParameters: function(){
			this.ruler.ruler({
				min: this.options.bounds.min,
				max: this.options.bounds.max,
				scales: this.options.scales
			});
		},

		_destroyRuler: function(){
			if (this.ruler !== null && $.fn.ruler){
				this.ruler.ruler("destroy");
				this.ruler.remove();
				this.ruler = null;
			}
		},

		_updateRuler: function(){
			this._destroyRuler();

			if (this.options.scales === false || !$.fn.ruler){
				return;
			}

			this._createRuler();
			this._setRulerParameters();			
		},

		/*
		 * Public methods
		 */
		values: function(min, max){
			var val;

			if (typeof min !== "undefined" && typeof max !== "undefined"){
				if (!this._initialized){
					this._values.min = min;
					this._values.max = max;
					return this._values;
				}

				this._deactivateLabels();
				val = this._bar("values", min, max);
				this._changed(true);
				this._reactivateLabels();
			}else{
				val = this._bar("values", min, max);
			}

			return val;
		},

		min: function(min){
			this._values.min = this.values(min, this._values.max).min;

			return this._values.min;
		},

		max: function(max){
			this._values.max = this.values(this._values.min, max).max;

			return this._values.max;
		},
		
		bounds: function(min, max){
			if (this._isValidValue(min) && this._isValidValue(max) && min < max){
				
				this._setBounds(min, max);
				this._updateRuler();
				this._changed(true);
			}
			
			return this.options.bounds;
		},

		_isValidValue: function(value){
			return typeof value !== "undefined" && parseFloat(value) === value;
		},

		_setBounds: function(min, max){
			this.options.bounds = {min: min, max: max};
			this._leftHandle("option", "bounds", this.options.bounds);
			this._rightHandle("option", "bounds", this.options.bounds);
			this._bar("option", "bounds", this.options.bounds);
		},

		zoomIn: function(quantity){
			this._bar("zoomIn", quantity)
		},

		zoomOut: function(quantity){
			this._bar("zoomOut", quantity);
		},

		scrollLeft: function(quantity){
			this._bar("startScroll");
			this._bar("scrollLeft", quantity);
			this._bar("stopScroll");
		},

		scrollRight: function(quantity){
			this._bar("startScroll");
			this._bar("scrollRight", quantity);
			this._bar("stopScroll");
		},
		
		/**
		 * Resize
		 */
		resize: function(){
			this._initWidth();
			this._leftHandle("update");
			this._rightHandle("update");
			this._bar("update");
		},

		/*
		 * Enable / disable
		 */
		enable: function(){
			this.toggle(true);
		},

		disable: function(){
			this.toggle(false);
		},

		toggle: function(enabled){
			if (enabled === undefined) enabled = !this.options.enabled;

			if (this.options.enabled !== enabled){
				this._toggle(enabled);
			}
		},

		_toggle: function(enabled){
			this.options.enabled = enabled;
			this.element.toggleClass("ui-rangeSlider-disabled", !enabled);

			var action = enabled ? "enable" : "disable";

			this._bar(action);
			this._leftHandle(action);
			this._rightHandle(action);
			this._leftLabel(action);
			this._rightLabel(action);
		},

		/*
		 * Destroy
		 */
		destroy: function(){
			this.element.removeClass("ui-rangeSlider-withArrows ui-rangeSlider-noArrow ui-rangeSlider-disabled");

			this._destroyWidgets();
			this._destroyElements();
			
			this.element.removeClass("ui-rangeSlider");
			this.options = null;

			$(window).unbind("resize", this._resizeProxy);
			this._resizeProxy = null;
			this._bindResize = null;

			$.Widget.prototype.destroy.apply(this, arguments);
		},

		_destroyWidget: function(name){
			this["_" + name]("destroy");
			this[name].remove();
			this[name] = null;
		},

		_destroyWidgets: function(){
			this._destroyWidget("bar");
			this._destroyWidget("leftHandle");
			this._destroyWidget("rightHandle");

			this._destroyRuler();
			this._destroyLabels();
		},

		_destroyElements: function(){
			this.container.remove();
			this.container = null;

			this.innerBar.remove();
			this.innerBar = null;

			this.arrows.left.remove();
			this.arrows.right.remove();
			this.arrows = null;
		}
	});
}(jQuery));

/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */

(function($, undefined){
	"use strict";

	$.widget("ui.dateRangeSliderHandle", $.ui.rangeSliderHandle, {
		_steps: false,
		_boundsValues: {},

		_create: function(){
			this._createBoundsValues();
			$.ui.rangeSliderHandle.prototype._create.apply(this);
		},

		_getValueForPosition: function(position){
			
			var raw = this._getRawValueForPositionAndBounds(position, this.options.bounds.min.valueOf(), this.options.bounds.max.valueOf());

			return this._constraintValue(new Date(raw));
		},

		_setOption: function(key, value){
			if (key === "step"){
				this.options.step = value;
				this._createSteps();
				this.update();
				return;
			}

			$.ui.rangeSliderHandle.prototype._setOption.apply(this, [key, value]);

			if (key === "bounds"){
				this._createBoundsValues();
			}
		},

		_createBoundsValues: function(){
			this._boundsValues = {
					min: this.options.bounds.min.valueOf(),
					max: this.options.bounds.max.valueOf()
			};
		},

		_bounds: function(){
			return this._boundsValues;
		},

		_createSteps: function(){
			if (this.options.step === false || !this._isValidStep()){
				this._steps = false;
				return;
			}

			var minDate = new Date(this.options.bounds.min.valueOf()),
				maxDate = new Date(this.options.bounds.max.valueOf()),
				stepDate = minDate,
				i = 0,
				previous = new Date();

			this._steps = [];

			while (stepDate <= maxDate && (i === 1 || previous.valueOf() !== stepDate.valueOf())){
				previous = stepDate;
				this._steps.push(stepDate.valueOf());

				stepDate = this._addStep(minDate, i, this.options.step);
				i++;
			}

			if (previous.valueOf() === stepDate.valueOf()){
				this._steps = false;
			}
		},

		_isValidStep: function(){
			return typeof this.options.step === "object";
		},

		_addStep: function(reference, factor, step){
			var result = new Date(reference.valueOf());

			result = this._addThing(result, "FullYear", factor, step.years);
			result = this._addThing(result, "Month", factor, step.months);
			result = this._addThing(result, "Date", factor, step.weeks * 7);
			result = this._addThing(result, "Date", factor, step.days);
			result = this._addThing(result, "Hours", factor, step.hours);
			result = this._addThing(result, "Minutes", factor, step.minutes);
			result = this._addThing(result, "Seconds", factor, step.seconds);

			return result;
		},

		_addThing: function(date, thing, factor, base){
			if (factor === 0 || (base || 0) === 0){
				return date;
			}

			date["set" + thing](
				date["get" + thing]() + factor * (base || 0)
				);

			return date;
		},

		_round: function(value){
			if (this._steps === false){
				return value;
			}

			var max = this.options.bounds.max.valueOf(),
				min = this.options.bounds.min.valueOf(),
				ratio = Math.max(0, (value - min) / (max - min)),
				index = Math.floor(this._steps.length * ratio),
				before, after;

			while (this._steps[index] > value){
				index--;
			}

			while (index + 1 < this._steps.length && this._steps[index + 1] <= value){
				index++;
			}

			if (index >= this._steps.length - 1){
				return this._steps[this._steps.length - 1];
			} else if (index === 0){
				return this._steps[0];
			}

			before = this._steps[index];
			after = this._steps[index + 1];

			if (value - before < after - value){
				return before;
			}

			return after;
		},

		update: function(){
			this._createBoundsValues();
			this._createSteps();
			$.ui.rangeSliderHandle.prototype.update.apply(this);
		},

		add: function(date, step){
			return this._addStep(new Date(date), 1, step).valueOf();
		},

		substract: function(date, step){
			return this._addStep(new Date(date), -1, step).valueOf();
		},

		stepsBetween: function(date1, date2){
			if (this.options.step === false){
				return date2 - date1;
			}

			var min = Math.min(date1, date2),
				max = Math.max(date1, date2),
				steps = 0,
				negative = false,
				negativeResult = date1 > date2;

			if (this.add(min, this.options.step) - min < 0){
				negative = true;
			}

			while (min < max){
				if (negative){
					max = this.add(max, this.options.step);
				}else{
					min = this.add(min, this.options.step);	
				}
				
				steps++;
			}

			return negativeResult ? -steps : steps;
		},

		multiplyStep: function(step, factor){
			var result = {};

			for (var name in step){
				if (step.hasOwnProperty(name)){
					result[name] = step[name] * factor;
				}
			}

			return result;
		},

		stepRatio: function(){
			if (this.options.step === false){
				return 1;
			}else{
				var steps = this._steps.length;
				return this.cache.parent.width / steps;
			}
		}
	});
}(jQuery));

/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */

(function ($, undefined) {
	"use strict";

	$.widget("ui.dateRangeSlider", $.ui.rangeSlider, {
		options: {
			bounds: {min: new Date(2010,0,1).valueOf(), max: new Date(2012,0,1).valueOf()},
			defaultValues: {min: new Date(2010,1,11).valueOf(), max: new Date(2011,1,11).valueOf()}
		},

		_create: function(){
			$.ui.rangeSlider.prototype._create.apply(this);

			this.element.addClass("ui-dateRangeSlider");
		},

		destroy: function(){
			this.element.removeClass("ui-dateRangeSlider");
			$.ui.rangeSlider.prototype.destroy.apply(this);
		},

		_setDefaultValues: function(){
			this._values = {
				min: this.options.defaultValues.min.valueOf(),
				max: this.options.defaultValues.max.valueOf()
			};
		},

		_setRulerParameters: function(){
			this.ruler.ruler({
				min: new Date(this.options.bounds.min.valueOf()),
				max: new Date(this.options.bounds.max.valueOf()),
				scales: this.options.scales
			});
		},

		_setOption: function(key, value){
			if ((key === "defaultValues" || key === "bounds") && typeof value !== "undefined" && value !== null && this._isValidDate(value.min) && this._isValidDate(value.max)){
				$.ui.rangeSlider.prototype._setOption.apply(this, [key, {min:value.min.valueOf(), max:value.max.valueOf()}]);
			}else{
				$.ui.rangeSlider.prototype._setOption.apply(this, this._toArray(arguments));
			}
		},

		_handleType: function(){
			return "dateRangeSliderHandle";
		},

		option: function(key){
			if (key === "bounds" || key === "defaultValues"){
				var result = $.ui.rangeSlider.prototype.option.apply(this, arguments);

				return {min:new Date(result.min), max:new Date(result.max)};
			}

			return $.ui.rangeSlider.prototype.option.apply(this, this._toArray(arguments));
		},

		_defaultFormatter: function(value){
			var month = value.getMonth() + 1,
				day = value.getDate();

			return "" + value.getFullYear() + "-" + (month < 10 ? "0" + month : month) + "-" + (day < 10 ? "0" + day : day);
		},

		_getFormatter: function(){
			var formatter = this.options.formatter;

			if (this.options.formatter === false || this.options.formatter === null){
				formatter = this._defaultFormatter;
			}

			return (function(formatter){
				return function(value){
					return formatter(new Date(value));
				};
			}(formatter));
		},

		values: function(min, max){
			var values = null;

			if (this._isValidDate(min) && this._isValidDate(max))
			{
				values = $.ui.rangeSlider.prototype.values.apply(this, [min.valueOf(), max.valueOf()]);
			}else{
				values = $.ui.rangeSlider.prototype.values.apply(this, this._toArray(arguments));
			}

			return {min: new Date(values.min), max: new Date(values.max)};
		},

		min: function(min){
			if (this._isValidDate(min)){
				return new Date($.ui.rangeSlider.prototype.min.apply(this, [min.valueOf()]));
			}

			return new Date($.ui.rangeSlider.prototype.min.apply(this));
		},

		max: function(max){
			if (this._isValidDate(max)){
				return new Date($.ui.rangeSlider.prototype.max.apply(this, [max.valueOf()]));
			}

			return new Date($.ui.rangeSlider.prototype.max.apply(this));
		},

		bounds: function(min, max){
			var result;

			if (this._isValidDate(min) && this._isValidDate(max)) {
				result = $.ui.rangeSlider.prototype.bounds.apply(this, [min.valueOf(), max.valueOf()]);
			} else {
				result = $.ui.rangeSlider.prototype.bounds.apply(this, this._toArray(arguments));
			}

			return {min: new Date(result.min), max: new Date(result.max)};
		},

		_isValidDate: function(value){
			return typeof value !== "undefined" && value instanceof Date;
		},

		_toArray: function(argsObject){
			return Array.prototype.slice.call(argsObject);
		}
	});
}(jQuery));

/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */

(function($){
	"use strict";

	$.widget("ui.editRangeSliderLabel", $.ui.rangeSliderLabel, {
		options: {
			type: "text",
			step: false,
			id: ""
		},

		_input: null,
		_text: "",

		_create: function(){
			$.ui.rangeSliderLabel.prototype._create.apply(this);

			this._createInput();
		},

		_setOption: function(key, value){
			if (key === "type"){
				this._setTypeOption(value);
			} else if (key === "step") {
				this._setStepOption(value);
			}

			$.ui.rangeSliderLabel.prototype._setOption.apply(this, [key, value]);
		},

		_createInput: function(){
			this._input = $("<input type='" + this.options.type + "' />")
				.addClass("ui-editRangeSlider-inputValue")
				.appendTo(this._valueContainer);

			this._setInputName();

			this._input.bind("keyup", $.proxy(this._onKeyUp, this));
			this._input.blur($.proxy(this._onChange, this));

			if (this.options.type === "number"){
				if (this.options.step !== false){
					this._input.attr("step", this.options.step);
				}

				this._input.click($.proxy(this._onChange, this));
			}

			this._input.val(this._text);
		},

		_setInputName: function(){
			var name = this.options.isLeft ? "left" : "right";

			this._input.attr("name", this.options.id + name);
		},

		_onSwitch: function(event, isLeft){
			$.ui.rangeSliderLabel.prototype._onSwitch.apply(this, [event, isLeft]);

			this._setInputName();
		},

		_destroyInput: function(){
			this._input.remove();
			this._input = null;
		},

		_onKeyUp: function(e){
			if (e.which === 13){
				this._onChange(e);
				return false;
			}
		},

		_onChange: function(){
			var value = this._returnCheckedValue(this._input.val());

			if (value !== false){
				this._triggerValue(value);
			}
		},

		_triggerValue: function(value){
			var isLeft = this.options.handle[this.options.handleType]("option", "isLeft");

			this.element.trigger("valueChange", [{
					isLeft: isLeft,
					value: value
				}]);
		},

	_returnCheckedValue: function(val){
		var floatValue = parseFloat(val);

		if (isNaN(floatValue) || isNaN(Number(val))){
			return false;
		}

		return floatValue;
	},

	_setTypeOption: function(value){
		if ((value === "text" || value === "number") && this.options.type !== value){
			this._destroyInput();
			this.options.type = value;
			this._createInput();
		}
	},

	_setStepOption: function(value){
		this.options.step = value;

		if (this.options.type === "number"){
			this._input.attr("step", value !== false ? value : "any");
		}
	},

	_displayText: function(text){
		this._input.val(text);
		this._text = text;
	},

	enable: function(){
		$.ui.rangeSliderLabel.prototype.enable.apply(this);

		this._input.attr("disabled", null);
	},

	disable: function(){
		$.ui.rangeSliderLabel.prototype.disable.apply(this);

		this._input.attr("disabled", "disabled");
	}

});

}(jQuery));

/**
 * jQRangeSlider
 * A javascript slider selector that supports dates
 *
 * Copyright (C) Guillaume Gautreau 2012
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 */

 (function ($, undefined) {
	"use strict";
	
	$.widget("ui.editRangeSlider", $.ui.rangeSlider, {
		options:{
			type: "text",
			round: 1
		},

		_create: function(){
			$.ui.rangeSlider.prototype._create.apply(this);

			this.element.addClass("ui-editRangeSlider");
		},

		destroy: function(){
			this.element.removeClass("ui-editRangeSlider");

			$.ui.rangeSlider.prototype.destroy.apply(this);
		},

		_setOption: function(key, value){
			if (key === "type" || key === "step"){
				this._setLabelOption(key, value);
			}	

			if (key === "type"){
				this.options[key] = this.labels.left === null ? value : this._leftLabel("option", key);
			}

			$.ui.rangeSlider.prototype._setOption.apply(this, [key, value]);
		},

		_setLabelOption: function(key, value){
			if (this.labels.left !== null){
				this._leftLabel("option", key, value);
				this._rightLabel("option", key, value);
			}
		},

		_labelType: function(){
			return "editRangeSliderLabel";
		},

		_createLabel: function(label, handle){
			var result = $.ui.rangeSlider.prototype._createLabel.apply(this, [label, handle]);
			
			if (label === null){
				result.bind("valueChange", $.proxy(this._onValueChange, this));
			}

			return result;
		},

		_addPropertiesToParameter: function(parameters){
			parameters.type = this.options.type;
			parameters.step = this.options.step;
			parameters.id = this.element.attr("id");

			return parameters;
		},

		_getLabelConstructorParameters: function(label, handle){
			var parameters = $.ui.rangeSlider.prototype._getLabelConstructorParameters.apply(this, [label, handle]);

			return this._addPropertiesToParameter(parameters);
		},

		_getLabelRefreshParameters: function(label, handle){
			var parameters = $.ui.rangeSlider.prototype._getLabelRefreshParameters.apply(this, [label, handle]);

			return this._addPropertiesToParameter(parameters);
		},

		_onValueChange: function(event, data){
			var changed = false;

			if (data.isLeft){
				changed = this._values.min !== this.min(data.value);
			}else{
				changed = this._values.max !== this.max(data.value);
			}

			if (changed){
				this._trigger("userValuesChanged");
			}
		}
	});

}(jQuery));